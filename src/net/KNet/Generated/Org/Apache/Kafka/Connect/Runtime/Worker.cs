/*
*  Copyright 2023 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 1.5.5.0)
*  using connect-runtime-3.4.0.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Org.Apache.Kafka.Connect.Runtime
{
    #region Worker
    public partial class Worker
    {
        #region Constructors
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/connect-runtime/3.4.0/org/apache/kafka/connect/runtime/Worker.html#%3Cinit%3E(java.lang.String,org.apache.kafka.common.utils.Time,org.apache.kafka.connect.runtime.isolation.Plugins,org.apache.kafka.connect.runtime.WorkerConfig,org.apache.kafka.connect.storage.OffsetBackingStore,org.apache.kafka.connect.connector.policy.ConnectorClientConfigOverridePolicy)"/>
        /// </summary>
        /// <param name="arg0"><see cref="string"/></param>
        /// <param name="arg1"><see cref="Org.Apache.Kafka.Common.Utils.Time"/></param>
        /// <param name="arg2"><see cref="Org.Apache.Kafka.Connect.Runtime.Isolation.Plugins"/></param>
        /// <param name="arg3"><see cref="Org.Apache.Kafka.Connect.Runtime.WorkerConfig"/></param>
        /// <param name="arg4"><see cref="Org.Apache.Kafka.Connect.Storage.OffsetBackingStore"/></param>
        /// <param name="arg5"><see cref="Org.Apache.Kafka.Connect.Connector.Policy.ConnectorClientConfigOverridePolicy"/></param>
        public Worker(string arg0, Org.Apache.Kafka.Common.Utils.Time arg1, Org.Apache.Kafka.Connect.Runtime.Isolation.Plugins arg2, Org.Apache.Kafka.Connect.Runtime.WorkerConfig arg3, Org.Apache.Kafka.Connect.Storage.OffsetBackingStore arg4, Org.Apache.Kafka.Connect.Connector.Policy.ConnectorClientConfigOverridePolicy arg5)
            : base(arg0, arg1, arg2, arg3, arg4, arg5)
        {
        }

        #endregion

        #region Class/Interface conversion operators

        #endregion

        #region Fields
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/connect-runtime/3.4.0/org/apache/kafka/connect/runtime/Worker.html#CONNECTOR_GRACEFUL_SHUTDOWN_TIMEOUT_MS"/>
        /// </summary>
        public static long CONNECTOR_GRACEFUL_SHUTDOWN_TIMEOUT_MS { get { return SGetField<long>(LocalBridgeClazz, "CONNECTOR_GRACEFUL_SHUTDOWN_TIMEOUT_MS"); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/connect-runtime/3.4.0/org/apache/kafka/connect/runtime/Worker.html#EXECUTOR_SHUTDOWN_TERMINATION_TIMEOUT_MS"/>
        /// </summary>
        public static long EXECUTOR_SHUTDOWN_TERMINATION_TIMEOUT_MS { get { return SGetField<long>(LocalBridgeClazz, "EXECUTOR_SHUTDOWN_TERMINATION_TIMEOUT_MS"); } }

        #endregion

        #region Static methods
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/connect-runtime/3.4.0/org/apache/kafka/connect/runtime/Worker.html#taskTransactionalId(java.lang.String,java.lang.String,int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="string"/></param>
        /// <param name="arg1"><see cref="string"/></param>
        /// <param name="arg2"><see cref="int"/></param>
        /// <returns><see cref="string"/></returns>
        public static string TaskTransactionalId(string arg0, string arg1, int arg2)
        {
            return SExecute<string>(LocalBridgeClazz, "taskTransactionalId", arg0, arg1, arg2);
        }

        #endregion

        #region Instance methods
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/connect-runtime/3.4.0/org/apache/kafka/connect/runtime/Worker.html#configTransformer()"/> 
        /// </summary>
        public Org.Apache.Kafka.Connect.Runtime.WorkerConfigTransformer ConfigTransformer
        {
            get { return IExecute<Org.Apache.Kafka.Connect.Runtime.WorkerConfigTransformer>("configTransformer"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/connect-runtime/3.4.0/org/apache/kafka/connect/runtime/Worker.html#connectorNames()"/> 
        /// </summary>
        public Java.Util.Set<string> ConnectorNames
        {
            get { return IExecute<Java.Util.Set<string>>("connectorNames"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/connect-runtime/3.4.0/org/apache/kafka/connect/runtime/Worker.html#getInternalKeyConverter()"/> 
        /// </summary>
        public Org.Apache.Kafka.Connect.Storage.Converter InternalKeyConverter
        {
            get { return IExecute<Org.Apache.Kafka.Connect.Storage.Converter>("getInternalKeyConverter"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/connect-runtime/3.4.0/org/apache/kafka/connect/runtime/Worker.html#getInternalValueConverter()"/> 
        /// </summary>
        public Org.Apache.Kafka.Connect.Storage.Converter InternalValueConverter
        {
            get { return IExecute<Org.Apache.Kafka.Connect.Storage.Converter>("getInternalValueConverter"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/connect-runtime/3.4.0/org/apache/kafka/connect/runtime/Worker.html#isTopicCreationEnabled()"/> 
        /// </summary>
        public bool IsTopicCreationEnabled
        {
            get { return IExecute<bool>("isTopicCreationEnabled"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/connect-runtime/3.4.0/org/apache/kafka/connect/runtime/Worker.html#metrics()"/> 
        /// </summary>
        public Org.Apache.Kafka.Connect.Runtime.ConnectMetrics Metrics
        {
            get { return IExecute<Org.Apache.Kafka.Connect.Runtime.ConnectMetrics>("metrics"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/connect-runtime/3.4.0/org/apache/kafka/connect/runtime/Worker.html#getPlugins()"/> 
        /// </summary>
        public Org.Apache.Kafka.Connect.Runtime.Isolation.Plugins Plugins
        {
            get { return IExecute<Org.Apache.Kafka.Connect.Runtime.Isolation.Plugins>("getPlugins"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/connect-runtime/3.4.0/org/apache/kafka/connect/runtime/Worker.html#taskIds()"/> 
        /// </summary>
        public Java.Util.Set<Org.Apache.Kafka.Connect.Util.ConnectorTaskId> TaskIds
        {
            get { return IExecute<Java.Util.Set<Org.Apache.Kafka.Connect.Util.ConnectorTaskId>>("taskIds"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/connect-runtime/3.4.0/org/apache/kafka/connect/runtime/Worker.html#workerId()"/> 
        /// </summary>
        public string WorkerId
        {
            get { return IExecute<string>("workerId"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/connect-runtime/3.4.0/org/apache/kafka/connect/runtime/Worker.html#isRunning(java.lang.String)"/>
        /// </summary>
        /// <param name="arg0"><see cref="string"/></param>
        /// <returns><see cref="bool"/></returns>
        public bool IsRunning(string arg0)
        {
            return IExecute<bool>("isRunning", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/connect-runtime/3.4.0/org/apache/kafka/connect/runtime/Worker.html#isSinkConnector(java.lang.String)"/>
        /// </summary>
        /// <param name="arg0"><see cref="string"/></param>
        /// <returns><see cref="bool"/></returns>
        public bool IsSinkConnector(string arg0)
        {
            return IExecute<bool>("isSinkConnector", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/connect-runtime/3.4.0/org/apache/kafka/connect/runtime/Worker.html#startExactlyOnceSourceTask(org.apache.kafka.connect.util.ConnectorTaskId,org.apache.kafka.connect.storage.ClusterConfigState,java.util.Map,java.util.Map,org.apache.kafka.connect.runtime.TaskStatus.Listener,org.apache.kafka.connect.runtime.TargetState,java.lang.Runnable,java.lang.Runnable)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Connect.Util.ConnectorTaskId"/></param>
        /// <param name="arg1"><see cref="Org.Apache.Kafka.Connect.Storage.ClusterConfigState"/></param>
        /// <param name="arg2"><see cref="Java.Util.Map"/></param>
        /// <param name="arg3"><see cref="Java.Util.Map"/></param>
        /// <param name="arg4"><see cref="Org.Apache.Kafka.Connect.Runtime.TaskStatus.Listener"/></param>
        /// <param name="arg5"><see cref="Org.Apache.Kafka.Connect.Runtime.TargetState"/></param>
        /// <param name="arg6"><see cref="Java.Lang.Runnable"/></param>
        /// <param name="arg7"><see cref="Java.Lang.Runnable"/></param>
        /// <returns><see cref="bool"/></returns>
        public bool StartExactlyOnceSourceTask(Org.Apache.Kafka.Connect.Util.ConnectorTaskId arg0, Org.Apache.Kafka.Connect.Storage.ClusterConfigState arg1, Java.Util.Map<string, string> arg2, Java.Util.Map<string, string> arg3, Org.Apache.Kafka.Connect.Runtime.TaskStatus.Listener arg4, Org.Apache.Kafka.Connect.Runtime.TargetState arg5, Java.Lang.Runnable arg6, Java.Lang.Runnable arg7)
        {
            return IExecute<bool>("startExactlyOnceSourceTask", arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/connect-runtime/3.4.0/org/apache/kafka/connect/runtime/Worker.html#startSinkTask(org.apache.kafka.connect.util.ConnectorTaskId,org.apache.kafka.connect.storage.ClusterConfigState,java.util.Map,java.util.Map,org.apache.kafka.connect.runtime.TaskStatus.Listener,org.apache.kafka.connect.runtime.TargetState)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Connect.Util.ConnectorTaskId"/></param>
        /// <param name="arg1"><see cref="Org.Apache.Kafka.Connect.Storage.ClusterConfigState"/></param>
        /// <param name="arg2"><see cref="Java.Util.Map"/></param>
        /// <param name="arg3"><see cref="Java.Util.Map"/></param>
        /// <param name="arg4"><see cref="Org.Apache.Kafka.Connect.Runtime.TaskStatus.Listener"/></param>
        /// <param name="arg5"><see cref="Org.Apache.Kafka.Connect.Runtime.TargetState"/></param>
        /// <returns><see cref="bool"/></returns>
        public bool StartSinkTask(Org.Apache.Kafka.Connect.Util.ConnectorTaskId arg0, Org.Apache.Kafka.Connect.Storage.ClusterConfigState arg1, Java.Util.Map<string, string> arg2, Java.Util.Map<string, string> arg3, Org.Apache.Kafka.Connect.Runtime.TaskStatus.Listener arg4, Org.Apache.Kafka.Connect.Runtime.TargetState arg5)
        {
            return IExecute<bool>("startSinkTask", arg0, arg1, arg2, arg3, arg4, arg5);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/connect-runtime/3.4.0/org/apache/kafka/connect/runtime/Worker.html#startSourceTask(org.apache.kafka.connect.util.ConnectorTaskId,org.apache.kafka.connect.storage.ClusterConfigState,java.util.Map,java.util.Map,org.apache.kafka.connect.runtime.TaskStatus.Listener,org.apache.kafka.connect.runtime.TargetState)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Connect.Util.ConnectorTaskId"/></param>
        /// <param name="arg1"><see cref="Org.Apache.Kafka.Connect.Storage.ClusterConfigState"/></param>
        /// <param name="arg2"><see cref="Java.Util.Map"/></param>
        /// <param name="arg3"><see cref="Java.Util.Map"/></param>
        /// <param name="arg4"><see cref="Org.Apache.Kafka.Connect.Runtime.TaskStatus.Listener"/></param>
        /// <param name="arg5"><see cref="Org.Apache.Kafka.Connect.Runtime.TargetState"/></param>
        /// <returns><see cref="bool"/></returns>
        public bool StartSourceTask(Org.Apache.Kafka.Connect.Util.ConnectorTaskId arg0, Org.Apache.Kafka.Connect.Storage.ClusterConfigState arg1, Java.Util.Map<string, string> arg2, Java.Util.Map<string, string> arg3, Org.Apache.Kafka.Connect.Runtime.TaskStatus.Listener arg4, Org.Apache.Kafka.Connect.Runtime.TargetState arg5)
        {
            return IExecute<bool>("startSourceTask", arg0, arg1, arg2, arg3, arg4, arg5);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/connect-runtime/3.4.0/org/apache/kafka/connect/runtime/Worker.html#connectorTaskConfigs(java.lang.String,org.apache.kafka.connect.runtime.ConnectorConfig)"/>
        /// </summary>
        /// <param name="arg0"><see cref="string"/></param>
        /// <param name="arg1"><see cref="Org.Apache.Kafka.Connect.Runtime.ConnectorConfig"/></param>
        /// <returns><see cref="Java.Util.List"/></returns>
        public Java.Util.List<Java.Util.Map<string, string>> ConnectorTaskConfigs(string arg0, Org.Apache.Kafka.Connect.Runtime.ConnectorConfig arg1)
        {
            return IExecute<Java.Util.List<Java.Util.Map<string, string>>>("connectorTaskConfigs", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/connect-runtime/3.4.0/org/apache/kafka/connect/runtime/Worker.html#fenceZombies(java.lang.String,int,java.util.Map)"/>
        /// </summary>
        /// <param name="arg0"><see cref="string"/></param>
        /// <param name="arg1"><see cref="int"/></param>
        /// <param name="arg2"><see cref="Java.Util.Map"/></param>
        /// <returns><see cref="Org.Apache.Kafka.Common.KafkaFuture"/></returns>
        public Org.Apache.Kafka.Common.KafkaFuture<Java.Lang.Void> FenceZombies(string arg0, int arg1, Java.Util.Map<string, string> arg2)
        {
            return IExecute<Org.Apache.Kafka.Common.KafkaFuture<Java.Lang.Void>>("fenceZombies", arg0, arg1, arg2);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/connect-runtime/3.4.0/org/apache/kafka/connect/runtime/Worker.html#setTargetState(java.lang.String,org.apache.kafka.connect.runtime.TargetState,org.apache.kafka.connect.util.Callback)"/>
        /// </summary>
        /// <param name="arg0"><see cref="string"/></param>
        /// <param name="arg1"><see cref="Org.Apache.Kafka.Connect.Runtime.TargetState"/></param>
        /// <param name="arg2"><see cref="Org.Apache.Kafka.Connect.Util.Callback"/></param>
        public void SetTargetState(string arg0, Org.Apache.Kafka.Connect.Runtime.TargetState arg1, Org.Apache.Kafka.Connect.Util.Callback<Org.Apache.Kafka.Connect.Runtime.TargetState> arg2)
        {
            IExecute("setTargetState", arg0, arg1, arg2);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/connect-runtime/3.4.0/org/apache/kafka/connect/runtime/Worker.html#start()"/>
        /// </summary>
        public void Start()
        {
            IExecute("start");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/connect-runtime/3.4.0/org/apache/kafka/connect/runtime/Worker.html#startConnector(java.lang.String,java.util.Map,org.apache.kafka.connect.runtime.CloseableConnectorContext,org.apache.kafka.connect.runtime.ConnectorStatus.Listener,org.apache.kafka.connect.runtime.TargetState,org.apache.kafka.connect.util.Callback)"/>
        /// </summary>
        /// <param name="arg0"><see cref="string"/></param>
        /// <param name="arg1"><see cref="Java.Util.Map"/></param>
        /// <param name="arg2"><see cref="Org.Apache.Kafka.Connect.Runtime.CloseableConnectorContext"/></param>
        /// <param name="arg3"><see cref="Org.Apache.Kafka.Connect.Runtime.ConnectorStatus.Listener"/></param>
        /// <param name="arg4"><see cref="Org.Apache.Kafka.Connect.Runtime.TargetState"/></param>
        /// <param name="arg5"><see cref="Org.Apache.Kafka.Connect.Util.Callback"/></param>
        public void StartConnector(string arg0, Java.Util.Map<string, string> arg1, Org.Apache.Kafka.Connect.Runtime.CloseableConnectorContext arg2, Org.Apache.Kafka.Connect.Runtime.ConnectorStatus.Listener arg3, Org.Apache.Kafka.Connect.Runtime.TargetState arg4, Org.Apache.Kafka.Connect.Util.Callback<Org.Apache.Kafka.Connect.Runtime.TargetState> arg5)
        {
            IExecute("startConnector", arg0, arg1, arg2, arg3, arg4, arg5);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/connect-runtime/3.4.0/org/apache/kafka/connect/runtime/Worker.html#stop()"/>
        /// </summary>
        public void Stop()
        {
            IExecute("stop");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/connect-runtime/3.4.0/org/apache/kafka/connect/runtime/Worker.html#stopAndAwaitConnector(java.lang.String)"/>
        /// </summary>
        /// <param name="arg0"><see cref="string"/></param>
        public void StopAndAwaitConnector(string arg0)
        {
            IExecute("stopAndAwaitConnector", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/connect-runtime/3.4.0/org/apache/kafka/connect/runtime/Worker.html#stopAndAwaitConnectors()"/>
        /// </summary>
        public void StopAndAwaitConnectors()
        {
            IExecute("stopAndAwaitConnectors");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/connect-runtime/3.4.0/org/apache/kafka/connect/runtime/Worker.html#stopAndAwaitConnectors(java.util.Collection)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Util.Collection"/></param>
        public void StopAndAwaitConnectors(Java.Util.Collection<string> arg0)
        {
            IExecute("stopAndAwaitConnectors", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/connect-runtime/3.4.0/org/apache/kafka/connect/runtime/Worker.html#stopAndAwaitTask(org.apache.kafka.connect.util.ConnectorTaskId)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Connect.Util.ConnectorTaskId"/></param>
        public void StopAndAwaitTask(Org.Apache.Kafka.Connect.Util.ConnectorTaskId arg0)
        {
            IExecute("stopAndAwaitTask", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/connect-runtime/3.4.0/org/apache/kafka/connect/runtime/Worker.html#stopAndAwaitTasks()"/>
        /// </summary>
        public void StopAndAwaitTasks()
        {
            IExecute("stopAndAwaitTasks");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/connect-runtime/3.4.0/org/apache/kafka/connect/runtime/Worker.html#stopAndAwaitTasks(java.util.Collection)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Util.Collection"/></param>
        public void StopAndAwaitTasks(Java.Util.Collection<Org.Apache.Kafka.Connect.Util.ConnectorTaskId> arg0)
        {
            IExecute("stopAndAwaitTasks", arg0);
        }

        #endregion

        #region Nested classes

        #endregion

        // TODO: complete the class
    }
    #endregion
}