/*
*  Copyright 2023 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 1.5.5.0)
*  using connect-runtime-3.4.0.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Org.Apache.Kafka.Connect.Storage
{
    #region KafkaConfigBackingStore
    public partial class KafkaConfigBackingStore
    {
        #region Constructors
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/connect-runtime/3.4.0/org/apache/kafka/connect/storage/KafkaConfigBackingStore.html#%3Cinit%3E(org.apache.kafka.connect.storage.Converter,org.apache.kafka.connect.runtime.distributed.DistributedConfig,org.apache.kafka.connect.runtime.WorkerConfigTransformer,java.util.function.Supplier,java.lang.String)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Connect.Storage.Converter"/></param>
        /// <param name="arg1"><see cref="Org.Apache.Kafka.Connect.Runtime.Distributed.DistributedConfig"/></param>
        /// <param name="arg2"><see cref="Org.Apache.Kafka.Connect.Runtime.WorkerConfigTransformer"/></param>
        /// <param name="arg3"><see cref="Java.Util.Function.Supplier"/></param>
        /// <param name="arg4"><see cref="string"/></param>
        public KafkaConfigBackingStore(Org.Apache.Kafka.Connect.Storage.Converter arg0, Org.Apache.Kafka.Connect.Runtime.Distributed.DistributedConfig arg1, Org.Apache.Kafka.Connect.Runtime.WorkerConfigTransformer arg2, Java.Util.Function.Supplier<Org.Apache.Kafka.Connect.Util.TopicAdmin> arg3, string arg4)
            : base(arg0, arg1, arg2, arg3, arg4)
        {
        }

        #endregion

        #region Class/Interface conversion operators
        /// <summary>
        /// Converter from <see cref="Org.Apache.Kafka.Connect.Storage.KafkaConfigBackingStore"/> to <see cref="Org.Apache.Kafka.Connect.Storage.ConfigBackingStore"/>
        /// </summary>
        public static implicit operator Org.Apache.Kafka.Connect.Storage.ConfigBackingStore(Org.Apache.Kafka.Connect.Storage.KafkaConfigBackingStore t) => t.Cast<Org.Apache.Kafka.Connect.Storage.ConfigBackingStore>();

        #endregion

        #region Fields
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/connect-runtime/3.4.0/org/apache/kafka/connect/storage/KafkaConfigBackingStore.html#INCLUDE_TASKS_DEFAULT"/>
        /// </summary>
        public static bool INCLUDE_TASKS_DEFAULT { get { return SGetField<bool>(LocalBridgeClazz, "INCLUDE_TASKS_DEFAULT"); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/connect-runtime/3.4.0/org/apache/kafka/connect/storage/KafkaConfigBackingStore.html#ONLY_FAILED_DEFAULT"/>
        /// </summary>
        public static bool ONLY_FAILED_DEFAULT { get { return SGetField<bool>(LocalBridgeClazz, "ONLY_FAILED_DEFAULT"); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/connect-runtime/3.4.0/org/apache/kafka/connect/storage/KafkaConfigBackingStore.html#COMMIT_TASKS_PREFIX"/>
        /// </summary>
        public static string COMMIT_TASKS_PREFIX { get { return SGetField<string>(LocalBridgeClazz, "COMMIT_TASKS_PREFIX"); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/connect-runtime/3.4.0/org/apache/kafka/connect/storage/KafkaConfigBackingStore.html#CONNECTOR_PREFIX"/>
        /// </summary>
        public static string CONNECTOR_PREFIX { get { return SGetField<string>(LocalBridgeClazz, "CONNECTOR_PREFIX"); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/connect-runtime/3.4.0/org/apache/kafka/connect/storage/KafkaConfigBackingStore.html#INCLUDE_TASKS_FIELD_NAME"/>
        /// </summary>
        public static string INCLUDE_TASKS_FIELD_NAME { get { return SGetField<string>(LocalBridgeClazz, "INCLUDE_TASKS_FIELD_NAME"); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/connect-runtime/3.4.0/org/apache/kafka/connect/storage/KafkaConfigBackingStore.html#ONLY_FAILED_FIELD_NAME"/>
        /// </summary>
        public static string ONLY_FAILED_FIELD_NAME { get { return SGetField<string>(LocalBridgeClazz, "ONLY_FAILED_FIELD_NAME"); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/connect-runtime/3.4.0/org/apache/kafka/connect/storage/KafkaConfigBackingStore.html#RESTART_PREFIX"/>
        /// </summary>
        public static string RESTART_PREFIX { get { return SGetField<string>(LocalBridgeClazz, "RESTART_PREFIX"); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/connect-runtime/3.4.0/org/apache/kafka/connect/storage/KafkaConfigBackingStore.html#SESSION_KEY_KEY"/>
        /// </summary>
        public static string SESSION_KEY_KEY { get { return SGetField<string>(LocalBridgeClazz, "SESSION_KEY_KEY"); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/connect-runtime/3.4.0/org/apache/kafka/connect/storage/KafkaConfigBackingStore.html#TARGET_STATE_PREFIX"/>
        /// </summary>
        public static string TARGET_STATE_PREFIX { get { return SGetField<string>(LocalBridgeClazz, "TARGET_STATE_PREFIX"); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/connect-runtime/3.4.0/org/apache/kafka/connect/storage/KafkaConfigBackingStore.html#TASK_COUNT_RECORD_PREFIX"/>
        /// </summary>
        public static string TASK_COUNT_RECORD_PREFIX { get { return SGetField<string>(LocalBridgeClazz, "TASK_COUNT_RECORD_PREFIX"); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/connect-runtime/3.4.0/org/apache/kafka/connect/storage/KafkaConfigBackingStore.html#TASK_PREFIX"/>
        /// </summary>
        public static string TASK_PREFIX { get { return SGetField<string>(LocalBridgeClazz, "TASK_PREFIX"); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/connect-runtime/3.4.0/org/apache/kafka/connect/storage/KafkaConfigBackingStore.html#CONNECTOR_CONFIGURATION_V0"/>
        /// </summary>
        public static Org.Apache.Kafka.Connect.Data.Schema CONNECTOR_CONFIGURATION_V0 { get { return SGetField<Org.Apache.Kafka.Connect.Data.Schema>(LocalBridgeClazz, "CONNECTOR_CONFIGURATION_V0"); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/connect-runtime/3.4.0/org/apache/kafka/connect/storage/KafkaConfigBackingStore.html#CONNECTOR_TASKS_COMMIT_V0"/>
        /// </summary>
        public static Org.Apache.Kafka.Connect.Data.Schema CONNECTOR_TASKS_COMMIT_V0 { get { return SGetField<Org.Apache.Kafka.Connect.Data.Schema>(LocalBridgeClazz, "CONNECTOR_TASKS_COMMIT_V0"); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/connect-runtime/3.4.0/org/apache/kafka/connect/storage/KafkaConfigBackingStore.html#RESTART_REQUEST_V0"/>
        /// </summary>
        public static Org.Apache.Kafka.Connect.Data.Schema RESTART_REQUEST_V0 { get { return SGetField<Org.Apache.Kafka.Connect.Data.Schema>(LocalBridgeClazz, "RESTART_REQUEST_V0"); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/connect-runtime/3.4.0/org/apache/kafka/connect/storage/KafkaConfigBackingStore.html#SESSION_KEY_V0"/>
        /// </summary>
        public static Org.Apache.Kafka.Connect.Data.Schema SESSION_KEY_V0 { get { return SGetField<Org.Apache.Kafka.Connect.Data.Schema>(LocalBridgeClazz, "SESSION_KEY_V0"); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/connect-runtime/3.4.0/org/apache/kafka/connect/storage/KafkaConfigBackingStore.html#TARGET_STATE_V0"/>
        /// </summary>
        public static Org.Apache.Kafka.Connect.Data.Schema TARGET_STATE_V0 { get { return SGetField<Org.Apache.Kafka.Connect.Data.Schema>(LocalBridgeClazz, "TARGET_STATE_V0"); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/connect-runtime/3.4.0/org/apache/kafka/connect/storage/KafkaConfigBackingStore.html#TASK_CONFIGURATION_V0"/>
        /// </summary>
        public static Org.Apache.Kafka.Connect.Data.Schema TASK_CONFIGURATION_V0 { get { return SGetField<Org.Apache.Kafka.Connect.Data.Schema>(LocalBridgeClazz, "TASK_CONFIGURATION_V0"); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/connect-runtime/3.4.0/org/apache/kafka/connect/storage/KafkaConfigBackingStore.html#TASK_COUNT_RECORD_V0"/>
        /// </summary>
        public static Org.Apache.Kafka.Connect.Data.Schema TASK_COUNT_RECORD_V0 { get { return SGetField<Org.Apache.Kafka.Connect.Data.Schema>(LocalBridgeClazz, "TASK_COUNT_RECORD_V0"); } }

        #endregion

        #region Static methods
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/connect-runtime/3.4.0/org/apache/kafka/connect/storage/KafkaConfigBackingStore.html#COMMIT_TASKS_KEY(java.lang.String)"/>
        /// </summary>
        /// <param name="arg0"><see cref="string"/></param>
        /// <returns><see cref="string"/></returns>
        public static string COMMIT_TASKS_KEY(string arg0)
        {
            return SExecute<string>(LocalBridgeClazz, "COMMIT_TASKS_KEY", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/connect-runtime/3.4.0/org/apache/kafka/connect/storage/KafkaConfigBackingStore.html#CONNECTOR_KEY(java.lang.String)"/>
        /// </summary>
        /// <param name="arg0"><see cref="string"/></param>
        /// <returns><see cref="string"/></returns>
        public static string CONNECTOR_KEY(string arg0)
        {
            return SExecute<string>(LocalBridgeClazz, "CONNECTOR_KEY", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/connect-runtime/3.4.0/org/apache/kafka/connect/storage/KafkaConfigBackingStore.html#RESTART_KEY(java.lang.String)"/>
        /// </summary>
        /// <param name="arg0"><see cref="string"/></param>
        /// <returns><see cref="string"/></returns>
        public static string RESTART_KEY(string arg0)
        {
            return SExecute<string>(LocalBridgeClazz, "RESTART_KEY", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/connect-runtime/3.4.0/org/apache/kafka/connect/storage/KafkaConfigBackingStore.html#TARGET_STATE_KEY(java.lang.String)"/>
        /// </summary>
        /// <param name="arg0"><see cref="string"/></param>
        /// <returns><see cref="string"/></returns>
        public static string TARGET_STATE_KEY(string arg0)
        {
            return SExecute<string>(LocalBridgeClazz, "TARGET_STATE_KEY", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/connect-runtime/3.4.0/org/apache/kafka/connect/storage/KafkaConfigBackingStore.html#TASK_COUNT_RECORD_KEY(java.lang.String)"/>
        /// </summary>
        /// <param name="arg0"><see cref="string"/></param>
        /// <returns><see cref="string"/></returns>
        public static string TASK_COUNT_RECORD_KEY(string arg0)
        {
            return SExecute<string>(LocalBridgeClazz, "TASK_COUNT_RECORD_KEY", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/connect-runtime/3.4.0/org/apache/kafka/connect/storage/KafkaConfigBackingStore.html#TASK_KEY(org.apache.kafka.connect.util.ConnectorTaskId)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Connect.Util.ConnectorTaskId"/></param>
        /// <returns><see cref="string"/></returns>
        public static string TASK_KEY(Org.Apache.Kafka.Connect.Util.ConnectorTaskId arg0)
        {
            return SExecute<string>(LocalBridgeClazz, "TASK_KEY", arg0);
        }

        #endregion

        #region Instance methods
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/connect-runtime/3.4.0/org/apache/kafka/connect/storage/KafkaConfigBackingStore.html#contains(java.lang.String)"/>
        /// </summary>
        /// <param name="arg0"><see cref="string"/></param>
        /// <returns><see cref="bool"/></returns>
        public bool Contains(string arg0)
        {
            return IExecute<bool>("contains", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/connect-runtime/3.4.0/org/apache/kafka/connect/storage/KafkaConfigBackingStore.html#snapshot()"/>
        /// </summary>

        /// <returns><see cref="Org.Apache.Kafka.Connect.Storage.ClusterConfigState"/></returns>
        public Org.Apache.Kafka.Connect.Storage.ClusterConfigState Snapshot()
        {
            return IExecute<Org.Apache.Kafka.Connect.Storage.ClusterConfigState>("snapshot");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/connect-runtime/3.4.0/org/apache/kafka/connect/storage/KafkaConfigBackingStore.html#claimWritePrivileges()"/>
        /// </summary>
        public void ClaimWritePrivileges()
        {
            IExecute("claimWritePrivileges");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/connect-runtime/3.4.0/org/apache/kafka/connect/storage/KafkaConfigBackingStore.html#putConnectorConfig(java.lang.String,java.util.Map)"/>
        /// </summary>
        /// <param name="arg0"><see cref="string"/></param>
        /// <param name="arg1"><see cref="Java.Util.Map"/></param>
        public void PutConnectorConfig(string arg0, Java.Util.Map<string, string> arg1)
        {
            IExecute("putConnectorConfig", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/connect-runtime/3.4.0/org/apache/kafka/connect/storage/KafkaConfigBackingStore.html#putRestartRequest(org.apache.kafka.connect.runtime.RestartRequest)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Connect.Runtime.RestartRequest"/></param>
        public void PutRestartRequest(Org.Apache.Kafka.Connect.Runtime.RestartRequest arg0)
        {
            IExecute("putRestartRequest", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/connect-runtime/3.4.0/org/apache/kafka/connect/storage/KafkaConfigBackingStore.html#putSessionKey(org.apache.kafka.connect.runtime.SessionKey)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Connect.Runtime.SessionKey"/></param>
        public void PutSessionKey(Org.Apache.Kafka.Connect.Runtime.SessionKey arg0)
        {
            IExecute("putSessionKey", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/connect-runtime/3.4.0/org/apache/kafka/connect/storage/KafkaConfigBackingStore.html#putTargetState(java.lang.String,org.apache.kafka.connect.runtime.TargetState)"/>
        /// </summary>
        /// <param name="arg0"><see cref="string"/></param>
        /// <param name="arg1"><see cref="Org.Apache.Kafka.Connect.Runtime.TargetState"/></param>
        public void PutTargetState(string arg0, Org.Apache.Kafka.Connect.Runtime.TargetState arg1)
        {
            IExecute("putTargetState", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/connect-runtime/3.4.0/org/apache/kafka/connect/storage/KafkaConfigBackingStore.html#putTaskConfigs(java.lang.String,java.util.List)"/>
        /// </summary>
        /// <param name="arg0"><see cref="string"/></param>
        /// <param name="arg1"><see cref="Java.Util.List"/></param>
        public void PutTaskConfigs(string arg0, Java.Util.List<Java.Util.Map<string, string>> arg1)
        {
            IExecute("putTaskConfigs", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/connect-runtime/3.4.0/org/apache/kafka/connect/storage/KafkaConfigBackingStore.html#putTaskCountRecord(java.lang.String,int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="string"/></param>
        /// <param name="arg1"><see cref="int"/></param>
        public void PutTaskCountRecord(string arg0, int arg1)
        {
            IExecute("putTaskCountRecord", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/connect-runtime/3.4.0/org/apache/kafka/connect/storage/KafkaConfigBackingStore.html#refresh(long,java.util.concurrent.TimeUnit)"/>
        /// </summary>
        /// <param name="arg0"><see cref="long"/></param>
        /// <param name="arg1"><see cref="Java.Util.Concurrent.TimeUnit"/></param>
        /// <exception cref="Java.Util.Concurrent.TimeoutException"/>
        public void Refresh(long arg0, Java.Util.Concurrent.TimeUnit arg1)
        {
            IExecute("refresh", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/connect-runtime/3.4.0/org/apache/kafka/connect/storage/KafkaConfigBackingStore.html#removeConnectorConfig(java.lang.String)"/>
        /// </summary>
        /// <param name="arg0"><see cref="string"/></param>
        public void RemoveConnectorConfig(string arg0)
        {
            IExecute("removeConnectorConfig", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/connect-runtime/3.4.0/org/apache/kafka/connect/storage/KafkaConfigBackingStore.html#removeTaskConfigs(java.lang.String)"/>
        /// </summary>
        /// <param name="arg0"><see cref="string"/></param>
        public void RemoveTaskConfigs(string arg0)
        {
            IExecute("removeTaskConfigs", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/connect-runtime/3.4.0/org/apache/kafka/connect/storage/KafkaConfigBackingStore.html#setUpdateListener(org.apache.kafka.connect.storage.ConfigBackingStore.UpdateListener)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Connect.Storage.ConfigBackingStore.UpdateListener"/></param>
        public void SetUpdateListener(Org.Apache.Kafka.Connect.Storage.ConfigBackingStore.UpdateListener arg0)
        {
            IExecute("setUpdateListener", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/connect-runtime/3.4.0/org/apache/kafka/connect/storage/KafkaConfigBackingStore.html#start()"/>
        /// </summary>
        public void Start()
        {
            IExecute("start");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/connect-runtime/3.4.0/org/apache/kafka/connect/storage/KafkaConfigBackingStore.html#stop()"/>
        /// </summary>
        public void Stop()
        {
            IExecute("stop");
        }

        #endregion

        #region Nested classes

        #endregion

        // TODO: complete the class
    }
    #endregion
}