/*
*  Copyright 2023 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 2.0.0.0)
*  using connect-api-3.5.0.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Org.Apache.Kafka.Connect.Sink
{
    #region ISinkTaskContext
    /// <summary>
    /// .NET interface for TO BE DEFINED FROM USER
    /// </summary>
    public partial interface ISinkTaskContext
    {
        #region Instance methods

        #endregion

        #region Nested classes

        #endregion

        // TODO: complete the class
    }
    #endregion

    #region SinkTaskContext
    public partial class SinkTaskContext : Org.Apache.Kafka.Connect.Sink.ISinkTaskContext
    {
        #region Constructors

        #endregion

        #region Class/Interface conversion operators

        #endregion

        #region Fields

        #endregion

        #region Static methods

        #endregion

        #region Instance methods
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/connect-api/3.5.0/org/apache/kafka/connect/sink/SinkTaskContext.html#configs--"/>
        /// </summary>

        /// <returns><see cref="Java.Util.Map"/></returns>
        public Java.Util.Map<string, string> Configs()
        {
            return IExecute<Java.Util.Map<string, string>>("configs");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/connect-api/3.5.0/org/apache/kafka/connect/sink/SinkTaskContext.html#assignment--"/>
        /// </summary>

        /// <returns><see cref="Java.Util.Set"/></returns>
        public Java.Util.Set<Org.Apache.Kafka.Common.TopicPartition> Assignment()
        {
            return IExecute<Java.Util.Set<Org.Apache.Kafka.Common.TopicPartition>>("assignment");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/connect-api/3.5.0/org/apache/kafka/connect/sink/SinkTaskContext.html#offset-java.util.Map-"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Util.Map"/></param>
        public void Offset(Java.Util.Map<Org.Apache.Kafka.Common.TopicPartition, Java.Lang.Long> arg0)
        {
            IExecute("offset", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/connect-api/3.5.0/org/apache/kafka/connect/sink/SinkTaskContext.html#offset-org.apache.kafka.common.TopicPartition-long-"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Common.TopicPartition"/></param>
        /// <param name="arg1"><see cref="long"/></param>
        public void Offset(Org.Apache.Kafka.Common.TopicPartition arg0, long arg1)
        {
            IExecute("offset", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/connect-api/3.5.0/org/apache/kafka/connect/sink/SinkTaskContext.html#pause-org.apache.kafka.common.TopicPartition[]-"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Common.TopicPartition"/></param>
        public void Pause(params Org.Apache.Kafka.Common.TopicPartition[] arg0)
        {
            if (arg0.Length == 0) IExecute("pause"); else IExecute("pause", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/connect-api/3.5.0/org/apache/kafka/connect/sink/SinkTaskContext.html#requestCommit--"/>
        /// </summary>
        public void RequestCommit()
        {
            IExecute("requestCommit");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/connect-api/3.5.0/org/apache/kafka/connect/sink/SinkTaskContext.html#resume-org.apache.kafka.common.TopicPartition[]-"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Common.TopicPartition"/></param>
        public void Resume(params Org.Apache.Kafka.Common.TopicPartition[] arg0)
        {
            if (arg0.Length == 0) IExecute("resume"); else IExecute("resume", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/connect-api/3.5.0/org/apache/kafka/connect/sink/SinkTaskContext.html#timeout-long-"/>
        /// </summary>
        /// <param name="arg0"><see cref="long"/></param>
        public void Timeout(long arg0)
        {
            IExecute("timeout", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/connect-api/3.5.0/org/apache/kafka/connect/sink/SinkTaskContext.html#errantRecordReporter--"/>
        /// </summary>

        /// <returns><see cref="Org.Apache.Kafka.Connect.Sink.ErrantRecordReporter"/></returns>
        public Org.Apache.Kafka.Connect.Sink.ErrantRecordReporter ErrantRecordReporter()
        {
            return IExecute<Org.Apache.Kafka.Connect.Sink.ErrantRecordReporter>("errantRecordReporter");
        }

        #endregion

        #region Nested classes

        #endregion

        // TODO: complete the class
    }
    #endregion
}