/*
*  Copyright 2023 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 1.5.5.0)
*  using connect-runtime-3.4.0.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Org.Apache.Kafka.Connect.Runtime
{
    #region WorkerTransactionContext
    public partial class WorkerTransactionContext
    {
        #region Constructors

        #endregion

        #region Class/Interface conversion operators
        /// <summary>
        /// Converter from <see cref="Org.Apache.Kafka.Connect.Runtime.WorkerTransactionContext"/> to <see cref="Org.Apache.Kafka.Connect.Source.TransactionContext"/>
        /// </summary>
        public static implicit operator Org.Apache.Kafka.Connect.Source.TransactionContext(Org.Apache.Kafka.Connect.Runtime.WorkerTransactionContext t) => t.Cast<Org.Apache.Kafka.Connect.Source.TransactionContext>();

        #endregion

        #region Fields

        #endregion

        #region Static methods

        #endregion

        #region Instance methods
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/connect-runtime/3.4.0/org/apache/kafka/connect/runtime/WorkerTransactionContext.html#shouldAbortBatch()"/> 
        /// </summary>
        public bool ShouldAbortBatch
        {
            get { return IExecute<bool>("shouldAbortBatch"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/connect-runtime/3.4.0/org/apache/kafka/connect/runtime/WorkerTransactionContext.html#shouldCommitBatch()"/> 
        /// </summary>
        public bool ShouldCommitBatch
        {
            get { return IExecute<bool>("shouldCommitBatch"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/connect-runtime/3.4.0/org/apache/kafka/connect/runtime/WorkerTransactionContext.html#shouldAbortOn(org.apache.kafka.connect.source.SourceRecord)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Connect.Source.SourceRecord"/></param>
        /// <returns><see cref="bool"/></returns>
        public bool ShouldAbortOn(Org.Apache.Kafka.Connect.Source.SourceRecord arg0)
        {
            return IExecute<bool>("shouldAbortOn", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/connect-runtime/3.4.0/org/apache/kafka/connect/runtime/WorkerTransactionContext.html#shouldCommitOn(org.apache.kafka.connect.source.SourceRecord)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Connect.Source.SourceRecord"/></param>
        /// <returns><see cref="bool"/></returns>
        public bool ShouldCommitOn(Org.Apache.Kafka.Connect.Source.SourceRecord arg0)
        {
            return IExecute<bool>("shouldCommitOn", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/connect-runtime/3.4.0/org/apache/kafka/connect/runtime/WorkerTransactionContext.html#abortTransaction()"/>
        /// </summary>
        public void AbortTransaction()
        {
            IExecute("abortTransaction");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/connect-runtime/3.4.0/org/apache/kafka/connect/runtime/WorkerTransactionContext.html#abortTransaction(org.apache.kafka.connect.source.SourceRecord)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Connect.Source.SourceRecord"/></param>
        public void AbortTransaction(Org.Apache.Kafka.Connect.Source.SourceRecord arg0)
        {
            IExecute("abortTransaction", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/connect-runtime/3.4.0/org/apache/kafka/connect/runtime/WorkerTransactionContext.html#commitTransaction()"/>
        /// </summary>
        public void CommitTransaction()
        {
            IExecute("commitTransaction");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/connect-runtime/3.4.0/org/apache/kafka/connect/runtime/WorkerTransactionContext.html#commitTransaction(org.apache.kafka.connect.source.SourceRecord)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Connect.Source.SourceRecord"/></param>
        public void CommitTransaction(Org.Apache.Kafka.Connect.Source.SourceRecord arg0)
        {
            IExecute("commitTransaction", arg0);
        }

        #endregion

        #region Nested classes

        #endregion

        // TODO: complete the class
    }
    #endregion
}