/*
*  Copyright 2024 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 2.5.3.0)
*  using connect-api-3.7.0.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Org.Apache.Kafka.Connect.Sink
{
    #region SinkConnector
    public partial class SinkConnector
    {
        #region Constructors

        #endregion

        #region Class/Interface conversion operators

        #endregion

        #region Fields
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/connect-api/3.7.0/org/apache/kafka/connect/sink/SinkConnector.html#TOPICS_CONFIG"/>
        /// </summary>
        public static Java.Lang.String TOPICS_CONFIG { get { if (!_TOPICS_CONFIGReady) { _TOPICS_CONFIGContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "TOPICS_CONFIG"); _TOPICS_CONFIGReady = true; } return _TOPICS_CONFIGContent; } }
        private static Java.Lang.String _TOPICS_CONFIGContent = default;
        private static bool _TOPICS_CONFIGReady = false; // this is used because in case of generics 

        #endregion

        #region Static methods

        #endregion

        #region Instance methods
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/connect-api/3.7.0/org/apache/kafka/connect/sink/SinkConnector.html#alterOffsets-java.util.Map-java.util.Map-"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Util.Map"/></param>
        /// <param name="arg1"><see cref="Java.Util.Map"/></param>
        /// <returns><see cref="bool"/></returns>
        public bool AlterOffsets(Java.Util.Map<Java.Lang.String, Java.Lang.String> arg0, Java.Util.Map<Org.Apache.Kafka.Common.TopicPartition, Java.Lang.Long> arg1)
        {
            return IExecute<bool>("alterOffsets", arg0, arg1);
        }

        #endregion

        #region Nested classes

        #endregion

        // TODO: complete the class
    }
    #endregion
}