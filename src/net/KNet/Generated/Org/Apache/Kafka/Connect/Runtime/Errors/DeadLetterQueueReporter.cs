/*
*  Copyright 2023 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 1.5.5.0)
*  using connect-runtime-3.4.0.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Org.Apache.Kafka.Connect.Runtime.Errors
{
    #region DeadLetterQueueReporter
    public partial class DeadLetterQueueReporter
    {
        #region Constructors

        #endregion

        #region Class/Interface conversion operators
        /// <summary>
        /// Converter from <see cref="Org.Apache.Kafka.Connect.Runtime.Errors.DeadLetterQueueReporter"/> to <see cref="Org.Apache.Kafka.Connect.Runtime.Errors.ErrorReporter"/>
        /// </summary>
        public static implicit operator Org.Apache.Kafka.Connect.Runtime.Errors.ErrorReporter(Org.Apache.Kafka.Connect.Runtime.Errors.DeadLetterQueueReporter t) => t.Cast<Org.Apache.Kafka.Connect.Runtime.Errors.ErrorReporter>();

        #endregion

        #region Fields
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/connect-runtime/3.4.0/org/apache/kafka/connect/runtime/errors/DeadLetterQueueReporter.html#ERROR_HEADER_CONNECTOR_NAME"/>
        /// </summary>
        public static string ERROR_HEADER_CONNECTOR_NAME { get { return SGetField<string>(LocalBridgeClazz, "ERROR_HEADER_CONNECTOR_NAME"); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/connect-runtime/3.4.0/org/apache/kafka/connect/runtime/errors/DeadLetterQueueReporter.html#ERROR_HEADER_EXCEPTION"/>
        /// </summary>
        public static string ERROR_HEADER_EXCEPTION { get { return SGetField<string>(LocalBridgeClazz, "ERROR_HEADER_EXCEPTION"); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/connect-runtime/3.4.0/org/apache/kafka/connect/runtime/errors/DeadLetterQueueReporter.html#ERROR_HEADER_EXCEPTION_MESSAGE"/>
        /// </summary>
        public static string ERROR_HEADER_EXCEPTION_MESSAGE { get { return SGetField<string>(LocalBridgeClazz, "ERROR_HEADER_EXCEPTION_MESSAGE"); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/connect-runtime/3.4.0/org/apache/kafka/connect/runtime/errors/DeadLetterQueueReporter.html#ERROR_HEADER_EXCEPTION_STACK_TRACE"/>
        /// </summary>
        public static string ERROR_HEADER_EXCEPTION_STACK_TRACE { get { return SGetField<string>(LocalBridgeClazz, "ERROR_HEADER_EXCEPTION_STACK_TRACE"); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/connect-runtime/3.4.0/org/apache/kafka/connect/runtime/errors/DeadLetterQueueReporter.html#ERROR_HEADER_EXECUTING_CLASS"/>
        /// </summary>
        public static string ERROR_HEADER_EXECUTING_CLASS { get { return SGetField<string>(LocalBridgeClazz, "ERROR_HEADER_EXECUTING_CLASS"); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/connect-runtime/3.4.0/org/apache/kafka/connect/runtime/errors/DeadLetterQueueReporter.html#ERROR_HEADER_ORIG_OFFSET"/>
        /// </summary>
        public static string ERROR_HEADER_ORIG_OFFSET { get { return SGetField<string>(LocalBridgeClazz, "ERROR_HEADER_ORIG_OFFSET"); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/connect-runtime/3.4.0/org/apache/kafka/connect/runtime/errors/DeadLetterQueueReporter.html#ERROR_HEADER_ORIG_PARTITION"/>
        /// </summary>
        public static string ERROR_HEADER_ORIG_PARTITION { get { return SGetField<string>(LocalBridgeClazz, "ERROR_HEADER_ORIG_PARTITION"); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/connect-runtime/3.4.0/org/apache/kafka/connect/runtime/errors/DeadLetterQueueReporter.html#ERROR_HEADER_ORIG_TOPIC"/>
        /// </summary>
        public static string ERROR_HEADER_ORIG_TOPIC { get { return SGetField<string>(LocalBridgeClazz, "ERROR_HEADER_ORIG_TOPIC"); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/connect-runtime/3.4.0/org/apache/kafka/connect/runtime/errors/DeadLetterQueueReporter.html#ERROR_HEADER_STAGE"/>
        /// </summary>
        public static string ERROR_HEADER_STAGE { get { return SGetField<string>(LocalBridgeClazz, "ERROR_HEADER_STAGE"); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/connect-runtime/3.4.0/org/apache/kafka/connect/runtime/errors/DeadLetterQueueReporter.html#ERROR_HEADER_TASK_ID"/>
        /// </summary>
        public static string ERROR_HEADER_TASK_ID { get { return SGetField<string>(LocalBridgeClazz, "ERROR_HEADER_TASK_ID"); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/connect-runtime/3.4.0/org/apache/kafka/connect/runtime/errors/DeadLetterQueueReporter.html#HEADER_PREFIX"/>
        /// </summary>
        public static string HEADER_PREFIX { get { return SGetField<string>(LocalBridgeClazz, "HEADER_PREFIX"); } }

        #endregion

        #region Static methods
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/connect-runtime/3.4.0/org/apache/kafka/connect/runtime/errors/DeadLetterQueueReporter.html#createAndSetup(java.util.Map,org.apache.kafka.connect.util.ConnectorTaskId,org.apache.kafka.connect.runtime.SinkConnectorConfig,java.util.Map,org.apache.kafka.connect.runtime.errors.ErrorHandlingMetrics)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Util.Map"/></param>
        /// <param name="arg1"><see cref="Org.Apache.Kafka.Connect.Util.ConnectorTaskId"/></param>
        /// <param name="arg2"><see cref="Org.Apache.Kafka.Connect.Runtime.SinkConnectorConfig"/></param>
        /// <param name="arg3"><see cref="Java.Util.Map"/></param>
        /// <param name="arg4"><see cref="Org.Apache.Kafka.Connect.Runtime.Errors.ErrorHandlingMetrics"/></param>
        /// <returns><see cref="Org.Apache.Kafka.Connect.Runtime.Errors.DeadLetterQueueReporter"/></returns>
        public static Org.Apache.Kafka.Connect.Runtime.Errors.DeadLetterQueueReporter CreateAndSetup(Java.Util.Map<string, object> arg0, Org.Apache.Kafka.Connect.Util.ConnectorTaskId arg1, Org.Apache.Kafka.Connect.Runtime.SinkConnectorConfig arg2, Java.Util.Map<string, object> arg3, Org.Apache.Kafka.Connect.Runtime.Errors.ErrorHandlingMetrics arg4)
        {
            return SExecute<Org.Apache.Kafka.Connect.Runtime.Errors.DeadLetterQueueReporter>(LocalBridgeClazz, "createAndSetup", arg0, arg1, arg2, arg3, arg4);
        }

        #endregion

        #region Instance methods
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/connect-runtime/3.4.0/org/apache/kafka/connect/runtime/errors/DeadLetterQueueReporter.html#close()"/>
        /// </summary>
        public void Close()
        {
            IExecute("close");
        }

        #endregion

        #region Nested classes

        #endregion

        // TODO: complete the class
    }
    #endregion
}