/*
*  Copyright 2023 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 1.5.5.0)
*  using connect-api-3.4.0.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Org.Apache.Kafka.Connect.Storage
{
    #region ConverterType
    public partial class ConverterType
    {
        #region Constructors

        #endregion

        #region Class/Interface conversion operators

        #endregion

        #region Fields
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/connect-api/3.4.0/org/apache/kafka/connect/storage/ConverterType.html#HEADER"/>
        /// </summary>
        public static Org.Apache.Kafka.Connect.Storage.ConverterType HEADER { get { return SGetField<Org.Apache.Kafka.Connect.Storage.ConverterType>(LocalBridgeClazz, "HEADER"); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/connect-api/3.4.0/org/apache/kafka/connect/storage/ConverterType.html#KEY"/>
        /// </summary>
        public static Org.Apache.Kafka.Connect.Storage.ConverterType KEY { get { return SGetField<Org.Apache.Kafka.Connect.Storage.ConverterType>(LocalBridgeClazz, "KEY"); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/connect-api/3.4.0/org/apache/kafka/connect/storage/ConverterType.html#VALUE"/>
        /// </summary>
        public static Org.Apache.Kafka.Connect.Storage.ConverterType VALUE { get { return SGetField<Org.Apache.Kafka.Connect.Storage.ConverterType>(LocalBridgeClazz, "VALUE"); } }

        #endregion

        #region Static methods
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/connect-api/3.4.0/org/apache/kafka/connect/storage/ConverterType.html#valueOf(java.lang.String)"/>
        /// </summary>
        /// <param name="arg0"><see cref="string"/></param>
        /// <returns><see cref="Org.Apache.Kafka.Connect.Storage.ConverterType"/></returns>
        public static Org.Apache.Kafka.Connect.Storage.ConverterType ValueOf(string arg0)
        {
            return SExecute<Org.Apache.Kafka.Connect.Storage.ConverterType>(LocalBridgeClazz, "valueOf", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/connect-api/3.4.0/org/apache/kafka/connect/storage/ConverterType.html#withName(java.lang.String)"/>
        /// </summary>
        /// <param name="arg0"><see cref="string"/></param>
        /// <returns><see cref="Org.Apache.Kafka.Connect.Storage.ConverterType"/></returns>
        public static Org.Apache.Kafka.Connect.Storage.ConverterType WithName(string arg0)
        {
            return SExecute<Org.Apache.Kafka.Connect.Storage.ConverterType>(LocalBridgeClazz, "withName", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/connect-api/3.4.0/org/apache/kafka/connect/storage/ConverterType.html#values()"/>
        /// </summary>

        /// <returns><see cref="Org.Apache.Kafka.Connect.Storage.ConverterType"/></returns>
        public static Org.Apache.Kafka.Connect.Storage.ConverterType[] Values()
        {
            return SExecuteArray<Org.Apache.Kafka.Connect.Storage.ConverterType>(LocalBridgeClazz, "values");
        }

        #endregion

        #region Instance methods
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/connect-api/3.4.0/org/apache/kafka/connect/storage/ConverterType.html#getName()"/> 
        /// </summary>
        public string Name
        {
            get { return IExecute<string>("getName"); }
        }

        #endregion

        #region Nested classes

        #endregion

        // TODO: complete the class
    }
    #endregion
}