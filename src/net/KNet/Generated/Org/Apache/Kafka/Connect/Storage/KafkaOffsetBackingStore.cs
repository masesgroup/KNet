/*
*  Copyright 2023 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 1.5.5.0)
*  using connect-runtime-3.4.0.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Org.Apache.Kafka.Connect.Storage
{
    #region KafkaOffsetBackingStore
    public partial class KafkaOffsetBackingStore
    {
        #region Constructors
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/connect-runtime/3.4.0/org/apache/kafka/connect/storage/KafkaOffsetBackingStore.html#%3Cinit%3E(java.util.function.Supplier,java.util.function.Supplier)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Util.Function.Supplier"/></param>
        /// <param name="arg1"><see cref="Java.Util.Function.Supplier"/></param>
        public KafkaOffsetBackingStore(Java.Util.Function.Supplier arg0, Java.Util.Function.Supplier arg1)
            : base(arg0, arg1)
        {
        }

        #endregion

        #region Class/Interface conversion operators
        /// <summary>
        /// Converter from <see cref="Org.Apache.Kafka.Connect.Storage.KafkaOffsetBackingStore"/> to <see cref="Org.Apache.Kafka.Connect.Storage.OffsetBackingStore"/>
        /// </summary>
        public static implicit operator Org.Apache.Kafka.Connect.Storage.OffsetBackingStore(Org.Apache.Kafka.Connect.Storage.KafkaOffsetBackingStore t) => t.Cast<Org.Apache.Kafka.Connect.Storage.OffsetBackingStore>();

        #endregion

        #region Fields

        #endregion

        #region Static methods
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/connect-runtime/3.4.0/org/apache/kafka/connect/storage/KafkaOffsetBackingStore.html#forConnector(java.lang.String,org.apache.kafka.clients.consumer.Consumer,org.apache.kafka.connect.util.TopicAdmin)"/>
        /// </summary>
        /// <param name="arg0"><see cref="string"/></param>
        /// <param name="arg1"><see cref="Org.Apache.Kafka.Clients.Consumer.Consumer"/></param>
        /// <param name="arg2"><see cref="Org.Apache.Kafka.Connect.Util.TopicAdmin"/></param>
        /// <returns><see cref="Org.Apache.Kafka.Connect.Storage.KafkaOffsetBackingStore"/></returns>
        public static Org.Apache.Kafka.Connect.Storage.KafkaOffsetBackingStore ForConnector(string arg0, Org.Apache.Kafka.Clients.Consumer.Consumer<byte[], byte[]> arg1, Org.Apache.Kafka.Connect.Util.TopicAdmin arg2)
        {
            return SExecute<Org.Apache.Kafka.Connect.Storage.KafkaOffsetBackingStore>(LocalBridgeClazz, "forConnector", arg0, arg1, arg2);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/connect-runtime/3.4.0/org/apache/kafka/connect/storage/KafkaOffsetBackingStore.html#forTask(java.lang.String,org.apache.kafka.clients.producer.Producer,org.apache.kafka.clients.consumer.Consumer,org.apache.kafka.connect.util.TopicAdmin)"/>
        /// </summary>
        /// <param name="arg0"><see cref="string"/></param>
        /// <param name="arg1"><see cref="Org.Apache.Kafka.Clients.Producer.Producer"/></param>
        /// <param name="arg2"><see cref="Org.Apache.Kafka.Clients.Consumer.Consumer"/></param>
        /// <param name="arg3"><see cref="Org.Apache.Kafka.Connect.Util.TopicAdmin"/></param>
        /// <returns><see cref="Org.Apache.Kafka.Connect.Storage.KafkaOffsetBackingStore"/></returns>
        public static Org.Apache.Kafka.Connect.Storage.KafkaOffsetBackingStore ForTask(string arg0, Org.Apache.Kafka.Clients.Producer.Producer<byte[], byte[]> arg1, Org.Apache.Kafka.Clients.Consumer.Consumer<byte[], byte[]> arg2, Org.Apache.Kafka.Connect.Util.TopicAdmin arg3)
        {
            return SExecute<Org.Apache.Kafka.Connect.Storage.KafkaOffsetBackingStore>(LocalBridgeClazz, "forTask", arg0, arg1, arg2, arg3);
        }

        #endregion

        #region Instance methods
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/connect-runtime/3.4.0/org/apache/kafka/connect/storage/KafkaOffsetBackingStore.html#set(java.util.Map,org.apache.kafka.connect.util.Callback)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Util.Map"/></param>
        /// <param name="arg1"><see cref="Org.Apache.Kafka.Connect.Util.Callback"/></param>
        /// <returns><see cref="Java.Util.Concurrent.Future"/></returns>
        public Java.Util.Concurrent.Future<Java.Lang.Void> Set(Java.Util.Map<Java.Nio.ByteBuffer, Java.Nio.ByteBuffer> arg0, Org.Apache.Kafka.Connect.Util.Callback<Java.Lang.Void> arg1)
        {
            return IExecute<Java.Util.Concurrent.Future<Java.Lang.Void>>("set", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/connect-runtime/3.4.0/org/apache/kafka/connect/storage/KafkaOffsetBackingStore.html#get(java.util.Collection)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Util.Collection"/></param>
        /// <returns><see cref="Java.Util.Concurrent.Future"/></returns>
        public Java.Util.Concurrent.Future<Java.Util.Map<Java.Nio.ByteBuffer, Java.Nio.ByteBuffer>> Get(Java.Util.Collection<Java.Nio.ByteBuffer> arg0)
        {
            return IExecute<Java.Util.Concurrent.Future<Java.Util.Map<Java.Nio.ByteBuffer, Java.Nio.ByteBuffer>>>("get", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/connect-runtime/3.4.0/org/apache/kafka/connect/storage/KafkaOffsetBackingStore.html#configure(org.apache.kafka.connect.runtime.WorkerConfig)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Connect.Runtime.WorkerConfig"/></param>
        public void Configure(Org.Apache.Kafka.Connect.Runtime.WorkerConfig arg0)
        {
            IExecute("configure", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/connect-runtime/3.4.0/org/apache/kafka/connect/storage/KafkaOffsetBackingStore.html#start()"/>
        /// </summary>
        public void Start()
        {
            IExecute("start");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/connect-runtime/3.4.0/org/apache/kafka/connect/storage/KafkaOffsetBackingStore.html#stop()"/>
        /// </summary>
        public void Stop()
        {
            IExecute("stop");
        }

        #endregion

        #region Nested classes

        #endregion

        // TODO: complete the class
    }
    #endregion
}