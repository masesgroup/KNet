/*
*  Copyright 2023 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 2.0.1.0)
*  using connect-mirror-3.6.0.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Org.Apache.Kafka.Connect.Mirror
{
    #region MirrorHeartbeatConfig
    public partial class MirrorHeartbeatConfig
    {
        #region Constructors
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/connect-mirror/3.6.0/org/apache/kafka/connect/mirror/MirrorHeartbeatConfig.html#org.apache.kafka.connect.mirror.MirrorHeartbeatConfig(java.util.Map)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Util.Map"/></param>
        public MirrorHeartbeatConfig(Java.Util.Map<string, string> arg0)
            : base(arg0)
        {
        }

        #endregion

        #region Class/Interface conversion operators

        #endregion

        #region Fields
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/connect-mirror/3.6.0/org/apache/kafka/connect/mirror/MirrorHeartbeatConfig.html#EMIT_HEARTBEATS_ENABLED_DEFAULT"/>
        /// </summary>
        public static bool EMIT_HEARTBEATS_ENABLED_DEFAULT { get { return SGetField<bool>(LocalBridgeClazz, "EMIT_HEARTBEATS_ENABLED_DEFAULT"); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/connect-mirror/3.6.0/org/apache/kafka/connect/mirror/MirrorHeartbeatConfig.html#EMIT_HEARTBEATS_ENABLED"/>
        /// </summary>
        public static string EMIT_HEARTBEATS_ENABLED { get { return SGetField<string>(LocalBridgeClazz, "EMIT_HEARTBEATS_ENABLED"); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/connect-mirror/3.6.0/org/apache/kafka/connect/mirror/MirrorHeartbeatConfig.html#EMIT_HEARTBEATS_INTERVAL_SECONDS"/>
        /// </summary>
        public static string EMIT_HEARTBEATS_INTERVAL_SECONDS { get { return SGetField<string>(LocalBridgeClazz, "EMIT_HEARTBEATS_INTERVAL_SECONDS"); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/connect-mirror/3.6.0/org/apache/kafka/connect/mirror/MirrorHeartbeatConfig.html#HEARTBEATS_TOPIC_REPLICATION_FACTOR"/>
        /// </summary>
        public static string HEARTBEATS_TOPIC_REPLICATION_FACTOR { get { return SGetField<string>(LocalBridgeClazz, "HEARTBEATS_TOPIC_REPLICATION_FACTOR"); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/connect-mirror/3.6.0/org/apache/kafka/connect/mirror/MirrorHeartbeatConfig.html#HEARTBEATS_TOPIC_REPLICATION_FACTOR_DOC"/>
        /// </summary>
        public static string HEARTBEATS_TOPIC_REPLICATION_FACTOR_DOC { get { return SGetField<string>(LocalBridgeClazz, "HEARTBEATS_TOPIC_REPLICATION_FACTOR_DOC"); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/connect-mirror/3.6.0/org/apache/kafka/connect/mirror/MirrorHeartbeatConfig.html#EMIT_HEARTBEATS_INTERVAL_SECONDS_DEFAULT"/>
        /// </summary>
        public static long EMIT_HEARTBEATS_INTERVAL_SECONDS_DEFAULT { get { return SGetField<long>(LocalBridgeClazz, "EMIT_HEARTBEATS_INTERVAL_SECONDS_DEFAULT"); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/connect-mirror/3.6.0/org/apache/kafka/connect/mirror/MirrorHeartbeatConfig.html#HEARTBEATS_TOPIC_REPLICATION_FACTOR_DEFAULT"/>
        /// </summary>
        public static short HEARTBEATS_TOPIC_REPLICATION_FACTOR_DEFAULT { get { return SGetField<short>(LocalBridgeClazz, "HEARTBEATS_TOPIC_REPLICATION_FACTOR_DEFAULT"); } }

        #endregion

        #region Static methods
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/connect-mirror/3.6.0/org/apache/kafka/connect/mirror/MirrorHeartbeatConfig.html#main-java.lang.String[]-"/>
        /// </summary>
        /// <param name="arg0"><see cref="string"/></param>
        public static void Main(string[] arg0)
        {
            SExecute(LocalBridgeClazz, "main", new object[] { arg0 });
        }

        #endregion

        #region Instance methods

        #endregion

        #region Nested classes

        #endregion

        // TODO: complete the class
    }
    #endregion
}