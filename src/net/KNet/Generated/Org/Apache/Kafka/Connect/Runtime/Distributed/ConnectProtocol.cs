/*
*  Copyright 2023 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 1.5.5.0)
*  using connect-runtime-3.4.0.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Org.Apache.Kafka.Connect.Runtime.Distributed
{
    #region ConnectProtocol
    public partial class ConnectProtocol
    {
        #region Constructors

        #endregion

        #region Class/Interface conversion operators

        #endregion

        #region Fields
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/connect-runtime/3.4.0/org/apache/kafka/connect/runtime/distributed/ConnectProtocol.html#CONNECTOR_TASK"/>
        /// </summary>
        public static int CONNECTOR_TASK { get { return SGetField<int>(LocalBridgeClazz, "CONNECTOR_TASK"); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/connect-runtime/3.4.0/org/apache/kafka/connect/runtime/distributed/ConnectProtocol.html#ASSIGNMENT_KEY_NAME"/>
        /// </summary>
        public static string ASSIGNMENT_KEY_NAME { get { return SGetField<string>(LocalBridgeClazz, "ASSIGNMENT_KEY_NAME"); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/connect-runtime/3.4.0/org/apache/kafka/connect/runtime/distributed/ConnectProtocol.html#CONFIG_OFFSET_KEY_NAME"/>
        /// </summary>
        public static string CONFIG_OFFSET_KEY_NAME { get { return SGetField<string>(LocalBridgeClazz, "CONFIG_OFFSET_KEY_NAME"); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/connect-runtime/3.4.0/org/apache/kafka/connect/runtime/distributed/ConnectProtocol.html#CONNECTOR_KEY_NAME"/>
        /// </summary>
        public static string CONNECTOR_KEY_NAME { get { return SGetField<string>(LocalBridgeClazz, "CONNECTOR_KEY_NAME"); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/connect-runtime/3.4.0/org/apache/kafka/connect/runtime/distributed/ConnectProtocol.html#ERROR_KEY_NAME"/>
        /// </summary>
        public static string ERROR_KEY_NAME { get { return SGetField<string>(LocalBridgeClazz, "ERROR_KEY_NAME"); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/connect-runtime/3.4.0/org/apache/kafka/connect/runtime/distributed/ConnectProtocol.html#LEADER_KEY_NAME"/>
        /// </summary>
        public static string LEADER_KEY_NAME { get { return SGetField<string>(LocalBridgeClazz, "LEADER_KEY_NAME"); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/connect-runtime/3.4.0/org/apache/kafka/connect/runtime/distributed/ConnectProtocol.html#LEADER_URL_KEY_NAME"/>
        /// </summary>
        public static string LEADER_URL_KEY_NAME { get { return SGetField<string>(LocalBridgeClazz, "LEADER_URL_KEY_NAME"); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/connect-runtime/3.4.0/org/apache/kafka/connect/runtime/distributed/ConnectProtocol.html#TASKS_KEY_NAME"/>
        /// </summary>
        public static string TASKS_KEY_NAME { get { return SGetField<string>(LocalBridgeClazz, "TASKS_KEY_NAME"); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/connect-runtime/3.4.0/org/apache/kafka/connect/runtime/distributed/ConnectProtocol.html#URL_KEY_NAME"/>
        /// </summary>
        public static string URL_KEY_NAME { get { return SGetField<string>(LocalBridgeClazz, "URL_KEY_NAME"); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/connect-runtime/3.4.0/org/apache/kafka/connect/runtime/distributed/ConnectProtocol.html#VERSION_KEY_NAME"/>
        /// </summary>
        public static string VERSION_KEY_NAME { get { return SGetField<string>(LocalBridgeClazz, "VERSION_KEY_NAME"); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/connect-runtime/3.4.0/org/apache/kafka/connect/runtime/distributed/ConnectProtocol.html#ASSIGNMENT_V0"/>
        /// </summary>
        public static Org.Apache.Kafka.Common.Protocol.Types.Schema ASSIGNMENT_V0 { get { return SGetField<Org.Apache.Kafka.Common.Protocol.Types.Schema>(LocalBridgeClazz, "ASSIGNMENT_V0"); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/connect-runtime/3.4.0/org/apache/kafka/connect/runtime/distributed/ConnectProtocol.html#CONFIG_STATE_V0"/>
        /// </summary>
        public static Org.Apache.Kafka.Common.Protocol.Types.Schema CONFIG_STATE_V0 { get { return SGetField<Org.Apache.Kafka.Common.Protocol.Types.Schema>(LocalBridgeClazz, "CONFIG_STATE_V0"); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/connect-runtime/3.4.0/org/apache/kafka/connect/runtime/distributed/ConnectProtocol.html#CONNECT_PROTOCOL_HEADER_SCHEMA"/>
        /// </summary>
        public static Org.Apache.Kafka.Common.Protocol.Types.Schema CONNECT_PROTOCOL_HEADER_SCHEMA { get { return SGetField<Org.Apache.Kafka.Common.Protocol.Types.Schema>(LocalBridgeClazz, "CONNECT_PROTOCOL_HEADER_SCHEMA"); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/connect-runtime/3.4.0/org/apache/kafka/connect/runtime/distributed/ConnectProtocol.html#CONNECTOR_ASSIGNMENT_V0"/>
        /// </summary>
        public static Org.Apache.Kafka.Common.Protocol.Types.Schema CONNECTOR_ASSIGNMENT_V0 { get { return SGetField<Org.Apache.Kafka.Common.Protocol.Types.Schema>(LocalBridgeClazz, "CONNECTOR_ASSIGNMENT_V0"); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/connect-runtime/3.4.0/org/apache/kafka/connect/runtime/distributed/ConnectProtocol.html#CONNECT_PROTOCOL_V0"/>
        /// </summary>
        public static short CONNECT_PROTOCOL_V0 { get { return SGetField<short>(LocalBridgeClazz, "CONNECT_PROTOCOL_V0"); } }

        #endregion

        #region Static methods
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/connect-runtime/3.4.0/org/apache/kafka/connect/runtime/distributed/ConnectProtocol.html#serializeAssignment(org.apache.kafka.connect.runtime.distributed.ConnectProtocol.Assignment)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Connect.Runtime.Distributed.ConnectProtocol.Assignment"/></param>
        /// <returns><see cref="Java.Nio.ByteBuffer"/></returns>
        public static Java.Nio.ByteBuffer SerializeAssignment(Org.Apache.Kafka.Connect.Runtime.Distributed.ConnectProtocol.Assignment arg0)
        {
            return SExecute<Java.Nio.ByteBuffer>(LocalBridgeClazz, "serializeAssignment", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/connect-runtime/3.4.0/org/apache/kafka/connect/runtime/distributed/ConnectProtocol.html#serializeMetadata(org.apache.kafka.connect.runtime.distributed.ConnectProtocol.WorkerState)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Connect.Runtime.Distributed.ConnectProtocol.WorkerState"/></param>
        /// <returns><see cref="Java.Nio.ByteBuffer"/></returns>
        public static Java.Nio.ByteBuffer SerializeMetadata(Org.Apache.Kafka.Connect.Runtime.Distributed.ConnectProtocol.WorkerState arg0)
        {
            return SExecute<Java.Nio.ByteBuffer>(LocalBridgeClazz, "serializeMetadata", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/connect-runtime/3.4.0/org/apache/kafka/connect/runtime/distributed/ConnectProtocol.html#metadataRequest(org.apache.kafka.connect.runtime.distributed.ConnectProtocol.WorkerState)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Connect.Runtime.Distributed.ConnectProtocol.WorkerState"/></param>
        /// <returns><see cref="Org.Apache.Kafka.Common.Message.JoinGroupRequestData.JoinGroupRequestProtocolCollection"/></returns>
        public static Org.Apache.Kafka.Common.Message.JoinGroupRequestData.JoinGroupRequestProtocolCollection MetadataRequest(Org.Apache.Kafka.Connect.Runtime.Distributed.ConnectProtocol.WorkerState arg0)
        {
            return SExecute<Org.Apache.Kafka.Common.Message.JoinGroupRequestData.JoinGroupRequestProtocolCollection>(LocalBridgeClazz, "metadataRequest", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/connect-runtime/3.4.0/org/apache/kafka/connect/runtime/distributed/ConnectProtocol.html#deserializeAssignment(java.nio.ByteBuffer)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Nio.ByteBuffer"/></param>
        /// <returns><see cref="Org.Apache.Kafka.Connect.Runtime.Distributed.ConnectProtocol.Assignment"/></returns>
        public static Org.Apache.Kafka.Connect.Runtime.Distributed.ConnectProtocol.Assignment DeserializeAssignment(Java.Nio.ByteBuffer arg0)
        {
            return SExecute<Org.Apache.Kafka.Connect.Runtime.Distributed.ConnectProtocol.Assignment>(LocalBridgeClazz, "deserializeAssignment", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/connect-runtime/3.4.0/org/apache/kafka/connect/runtime/distributed/ConnectProtocol.html#deserializeMetadata(java.nio.ByteBuffer)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Nio.ByteBuffer"/></param>
        /// <returns><see cref="Org.Apache.Kafka.Connect.Runtime.Distributed.ConnectProtocol.WorkerState"/></returns>
        public static Org.Apache.Kafka.Connect.Runtime.Distributed.ConnectProtocol.WorkerState DeserializeMetadata(Java.Nio.ByteBuffer arg0)
        {
            return SExecute<Org.Apache.Kafka.Connect.Runtime.Distributed.ConnectProtocol.WorkerState>(LocalBridgeClazz, "deserializeMetadata", arg0);
        }

        #endregion

        #region Instance methods

        #endregion

        #region Nested classes
        #region Assignment
        public partial class Assignment
        {
            #region Constructors
            /// <summary>
            /// <see href="https://www.javadoc.io/static/org.apache.kafka/connect-runtime/3.4.0/org/apache/kafka/connect/runtime/distributed/ConnectProtocol.Assignment.html#%3Cinit%3E(short,java.lang.String,java.lang.String,long,java.util.Collection,java.util.Collection)"/>
            /// </summary>
            /// <param name="arg0"><see cref="short"/></param>
            /// <param name="arg1"><see cref="string"/></param>
            /// <param name="arg2"><see cref="string"/></param>
            /// <param name="arg3"><see cref="long"/></param>
            /// <param name="arg4"><see cref="Java.Util.Collection"/></param>
            /// <param name="arg5"><see cref="Java.Util.Collection"/></param>
            public Assignment(short arg0, string arg1, string arg2, long arg3, Java.Util.Collection<string> arg4, Java.Util.Collection<Org.Apache.Kafka.Connect.Util.ConnectorTaskId> arg5)
                : base(arg0, arg1, arg2, arg3, arg4, arg5)
            {
            }

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields
            /// <summary>
            /// <see href="https://www.javadoc.io/static/org.apache.kafka/connect-runtime/3.4.0/org/apache/kafka/connect/runtime/distributed/ConnectProtocol.Assignment.html#CONFIG_MISMATCH"/>
            /// </summary>
            public static short CONFIG_MISMATCH { get { return SGetField<short>(LocalBridgeClazz, "CONFIG_MISMATCH"); } }
            /// <summary>
            /// <see href="https://www.javadoc.io/static/org.apache.kafka/connect-runtime/3.4.0/org/apache/kafka/connect/runtime/distributed/ConnectProtocol.Assignment.html#NO_ERROR"/>
            /// </summary>
            public static short NO_ERROR { get { return SGetField<short>(LocalBridgeClazz, "NO_ERROR"); } }

            #endregion

            #region Static methods

            #endregion

            #region Instance methods
            /// <summary>
            /// <see href="https://www.javadoc.io/static/org.apache.kafka/connect-runtime/3.4.0/org/apache/kafka/connect/runtime/distributed/ConnectProtocol.Assignment.html#failed()"/>
            /// </summary>

            /// <returns><see cref="bool"/></returns>
            public bool Failed()
            {
                return IExecute<bool>("failed");
            }
            /// <summary>
            /// <see href="https://www.javadoc.io/static/org.apache.kafka/connect-runtime/3.4.0/org/apache/kafka/connect/runtime/distributed/ConnectProtocol.Assignment.html#leader()"/>
            /// </summary>

            /// <returns><see cref="string"/></returns>
            public string Leader()
            {
                return IExecute<string>("leader");
            }
            /// <summary>
            /// <see href="https://www.javadoc.io/static/org.apache.kafka/connect-runtime/3.4.0/org/apache/kafka/connect/runtime/distributed/ConnectProtocol.Assignment.html#leaderUrl()"/>
            /// </summary>

            /// <returns><see cref="string"/></returns>
            public string LeaderUrl()
            {
                return IExecute<string>("leaderUrl");
            }
            /// <summary>
            /// <see href="https://www.javadoc.io/static/org.apache.kafka/connect-runtime/3.4.0/org/apache/kafka/connect/runtime/distributed/ConnectProtocol.Assignment.html#connectors()"/>
            /// </summary>

            /// <returns><see cref="Java.Util.Collection"/></returns>
            public Java.Util.Collection<string> Connectors()
            {
                return IExecute<Java.Util.Collection<string>>("connectors");
            }
            /// <summary>
            /// <see href="https://www.javadoc.io/static/org.apache.kafka/connect-runtime/3.4.0/org/apache/kafka/connect/runtime/distributed/ConnectProtocol.Assignment.html#tasks()"/>
            /// </summary>

            /// <returns><see cref="Java.Util.Collection"/></returns>
            public Java.Util.Collection<Org.Apache.Kafka.Connect.Util.ConnectorTaskId> Tasks()
            {
                return IExecute<Java.Util.Collection<Org.Apache.Kafka.Connect.Util.ConnectorTaskId>>("tasks");
            }
            /// <summary>
            /// <see href="https://www.javadoc.io/static/org.apache.kafka/connect-runtime/3.4.0/org/apache/kafka/connect/runtime/distributed/ConnectProtocol.Assignment.html#offset()"/>
            /// </summary>

            /// <returns><see cref="long"/></returns>
            public long Offset()
            {
                return IExecute<long>("offset");
            }
            /// <summary>
            /// <see href="https://www.javadoc.io/static/org.apache.kafka/connect-runtime/3.4.0/org/apache/kafka/connect/runtime/distributed/ConnectProtocol.Assignment.html#error()"/>
            /// </summary>

            /// <returns><see cref="short"/></returns>
            public short Error()
            {
                return IExecute<short>("error");
            }

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

        #region WorkerState
        public partial class WorkerState
        {
            #region Constructors
            /// <summary>
            /// <see href="https://www.javadoc.io/static/org.apache.kafka/connect-runtime/3.4.0/org/apache/kafka/connect/runtime/distributed/ConnectProtocol.WorkerState.html#%3Cinit%3E(java.lang.String,long)"/>
            /// </summary>
            /// <param name="arg0"><see cref="string"/></param>
            /// <param name="arg1"><see cref="long"/></param>
            public WorkerState(string arg0, long arg1)
                : base(arg0, arg1)
            {
            }

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields

            #endregion

            #region Static methods

            #endregion

            #region Instance methods
            /// <summary>
            /// <see href="https://www.javadoc.io/static/org.apache.kafka/connect-runtime/3.4.0/org/apache/kafka/connect/runtime/distributed/ConnectProtocol.WorkerState.html#url()"/>
            /// </summary>

            /// <returns><see cref="string"/></returns>
            public string Url()
            {
                return IExecute<string>("url");
            }
            /// <summary>
            /// <see href="https://www.javadoc.io/static/org.apache.kafka/connect-runtime/3.4.0/org/apache/kafka/connect/runtime/distributed/ConnectProtocol.WorkerState.html#offset()"/>
            /// </summary>

            /// <returns><see cref="long"/></returns>
            public long Offset()
            {
                return IExecute<long>("offset");
            }

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

    
        #endregion

        // TODO: complete the class
    }
    #endregion
}