/*
*  Copyright 2023 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 1.5.5.0)
*  using connect-runtime-3.4.0.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Org.Apache.Kafka.Connect.Runtime
{
    #region WorkerConfig
    public partial class WorkerConfig
    {
        #region Constructors
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/connect-runtime/3.4.0/org/apache/kafka/connect/runtime/WorkerConfig.html#%3Cinit%3E(org.apache.kafka.common.config.ConfigDef,java.util.Map)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Common.Config.ConfigDef"/></param>
        /// <param name="arg1"><see cref="Java.Util.Map"/></param>
        public WorkerConfig(Org.Apache.Kafka.Common.Config.ConfigDef arg0, Java.Util.Map arg1)
            : base(arg0, arg1)
        {
        }

        #endregion

        #region Class/Interface conversion operators

        #endregion

        #region Fields
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/connect-runtime/3.4.0/org/apache/kafka/connect/runtime/WorkerConfig.html#ACCESS_CONTROL_ALLOW_METHODS_CONFIG"/>
        /// </summary>
        public static string ACCESS_CONTROL_ALLOW_METHODS_CONFIG { get { return SGetField<string>(LocalBridgeClazz, "ACCESS_CONTROL_ALLOW_METHODS_CONFIG"); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/connect-runtime/3.4.0/org/apache/kafka/connect/runtime/WorkerConfig.html#ACCESS_CONTROL_ALLOW_ORIGIN_CONFIG"/>
        /// </summary>
        public static string ACCESS_CONTROL_ALLOW_ORIGIN_CONFIG { get { return SGetField<string>(LocalBridgeClazz, "ACCESS_CONTROL_ALLOW_ORIGIN_CONFIG"); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/connect-runtime/3.4.0/org/apache/kafka/connect/runtime/WorkerConfig.html#ADMIN_LISTENERS_CONFIG"/>
        /// </summary>
        public static string ADMIN_LISTENERS_CONFIG { get { return SGetField<string>(LocalBridgeClazz, "ADMIN_LISTENERS_CONFIG"); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/connect-runtime/3.4.0/org/apache/kafka/connect/runtime/WorkerConfig.html#ADMIN_LISTENERS_HTTPS_CONFIGS_PREFIX"/>
        /// </summary>
        public static string ADMIN_LISTENERS_HTTPS_CONFIGS_PREFIX { get { return SGetField<string>(LocalBridgeClazz, "ADMIN_LISTENERS_HTTPS_CONFIGS_PREFIX"); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/connect-runtime/3.4.0/org/apache/kafka/connect/runtime/WorkerConfig.html#BOOTSTRAP_SERVERS_CONFIG"/>
        /// </summary>
        public static string BOOTSTRAP_SERVERS_CONFIG { get { return SGetField<string>(LocalBridgeClazz, "BOOTSTRAP_SERVERS_CONFIG"); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/connect-runtime/3.4.0/org/apache/kafka/connect/runtime/WorkerConfig.html#BOOTSTRAP_SERVERS_DEFAULT"/>
        /// </summary>
        public static string BOOTSTRAP_SERVERS_DEFAULT { get { return SGetField<string>(LocalBridgeClazz, "BOOTSTRAP_SERVERS_DEFAULT"); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/connect-runtime/3.4.0/org/apache/kafka/connect/runtime/WorkerConfig.html#BOOTSTRAP_SERVERS_DOC"/>
        /// </summary>
        public static string BOOTSTRAP_SERVERS_DOC { get { return SGetField<string>(LocalBridgeClazz, "BOOTSTRAP_SERVERS_DOC"); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/connect-runtime/3.4.0/org/apache/kafka/connect/runtime/WorkerConfig.html#CLIENT_DNS_LOOKUP_CONFIG"/>
        /// </summary>
        public static string CLIENT_DNS_LOOKUP_CONFIG { get { return SGetField<string>(LocalBridgeClazz, "CLIENT_DNS_LOOKUP_CONFIG"); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/connect-runtime/3.4.0/org/apache/kafka/connect/runtime/WorkerConfig.html#CLIENT_DNS_LOOKUP_DOC"/>
        /// </summary>
        public static string CLIENT_DNS_LOOKUP_DOC { get { return SGetField<string>(LocalBridgeClazz, "CLIENT_DNS_LOOKUP_DOC"); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/connect-runtime/3.4.0/org/apache/kafka/connect/runtime/WorkerConfig.html#CONFIG_PROVIDERS_CONFIG"/>
        /// </summary>
        public static string CONFIG_PROVIDERS_CONFIG { get { return SGetField<string>(LocalBridgeClazz, "CONFIG_PROVIDERS_CONFIG"); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/connect-runtime/3.4.0/org/apache/kafka/connect/runtime/WorkerConfig.html#CONNECT_GROUP_ID"/>
        /// </summary>
        public static string CONNECT_GROUP_ID { get { return SGetField<string>(LocalBridgeClazz, "CONNECT_GROUP_ID"); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/connect-runtime/3.4.0/org/apache/kafka/connect/runtime/WorkerConfig.html#CONNECT_KAFKA_CLUSTER_ID"/>
        /// </summary>
        public static string CONNECT_KAFKA_CLUSTER_ID { get { return SGetField<string>(LocalBridgeClazz, "CONNECT_KAFKA_CLUSTER_ID"); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/connect-runtime/3.4.0/org/apache/kafka/connect/runtime/WorkerConfig.html#CONNECTOR_CLIENT_POLICY_CLASS_CONFIG"/>
        /// </summary>
        public static string CONNECTOR_CLIENT_POLICY_CLASS_CONFIG { get { return SGetField<string>(LocalBridgeClazz, "CONNECTOR_CLIENT_POLICY_CLASS_CONFIG"); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/connect-runtime/3.4.0/org/apache/kafka/connect/runtime/WorkerConfig.html#CONNECTOR_CLIENT_POLICY_CLASS_DEFAULT"/>
        /// </summary>
        public static string CONNECTOR_CLIENT_POLICY_CLASS_DEFAULT { get { return SGetField<string>(LocalBridgeClazz, "CONNECTOR_CLIENT_POLICY_CLASS_DEFAULT"); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/connect-runtime/3.4.0/org/apache/kafka/connect/runtime/WorkerConfig.html#CONNECTOR_CLIENT_POLICY_CLASS_DOC"/>
        /// </summary>
        public static string CONNECTOR_CLIENT_POLICY_CLASS_DOC { get { return SGetField<string>(LocalBridgeClazz, "CONNECTOR_CLIENT_POLICY_CLASS_DOC"); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/connect-runtime/3.4.0/org/apache/kafka/connect/runtime/WorkerConfig.html#HEADER_CONVERTER_CLASS_CONFIG"/>
        /// </summary>
        public static string HEADER_CONVERTER_CLASS_CONFIG { get { return SGetField<string>(LocalBridgeClazz, "HEADER_CONVERTER_CLASS_CONFIG"); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/connect-runtime/3.4.0/org/apache/kafka/connect/runtime/WorkerConfig.html#HEADER_CONVERTER_CLASS_DEFAULT"/>
        /// </summary>
        public static string HEADER_CONVERTER_CLASS_DEFAULT { get { return SGetField<string>(LocalBridgeClazz, "HEADER_CONVERTER_CLASS_DEFAULT"); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/connect-runtime/3.4.0/org/apache/kafka/connect/runtime/WorkerConfig.html#HEADER_CONVERTER_CLASS_DOC"/>
        /// </summary>
        public static string HEADER_CONVERTER_CLASS_DOC { get { return SGetField<string>(LocalBridgeClazz, "HEADER_CONVERTER_CLASS_DOC"); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/connect-runtime/3.4.0/org/apache/kafka/connect/runtime/WorkerConfig.html#KEY_CONVERTER_CLASS_CONFIG"/>
        /// </summary>
        public static string KEY_CONVERTER_CLASS_CONFIG { get { return SGetField<string>(LocalBridgeClazz, "KEY_CONVERTER_CLASS_CONFIG"); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/connect-runtime/3.4.0/org/apache/kafka/connect/runtime/WorkerConfig.html#KEY_CONVERTER_CLASS_DOC"/>
        /// </summary>
        public static string KEY_CONVERTER_CLASS_DOC { get { return SGetField<string>(LocalBridgeClazz, "KEY_CONVERTER_CLASS_DOC"); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/connect-runtime/3.4.0/org/apache/kafka/connect/runtime/WorkerConfig.html#LISTENERS_CONFIG"/>
        /// </summary>
        public static string LISTENERS_CONFIG { get { return SGetField<string>(LocalBridgeClazz, "LISTENERS_CONFIG"); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/connect-runtime/3.4.0/org/apache/kafka/connect/runtime/WorkerConfig.html#METRIC_REPORTER_CLASSES_CONFIG"/>
        /// </summary>
        public static string METRIC_REPORTER_CLASSES_CONFIG { get { return SGetField<string>(LocalBridgeClazz, "METRIC_REPORTER_CLASSES_CONFIG"); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/connect-runtime/3.4.0/org/apache/kafka/connect/runtime/WorkerConfig.html#METRICS_NUM_SAMPLES_CONFIG"/>
        /// </summary>
        public static string METRICS_NUM_SAMPLES_CONFIG { get { return SGetField<string>(LocalBridgeClazz, "METRICS_NUM_SAMPLES_CONFIG"); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/connect-runtime/3.4.0/org/apache/kafka/connect/runtime/WorkerConfig.html#METRICS_RECORDING_LEVEL_CONFIG"/>
        /// </summary>
        public static string METRICS_RECORDING_LEVEL_CONFIG { get { return SGetField<string>(LocalBridgeClazz, "METRICS_RECORDING_LEVEL_CONFIG"); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/connect-runtime/3.4.0/org/apache/kafka/connect/runtime/WorkerConfig.html#METRICS_SAMPLE_WINDOW_MS_CONFIG"/>
        /// </summary>
        public static string METRICS_SAMPLE_WINDOW_MS_CONFIG { get { return SGetField<string>(LocalBridgeClazz, "METRICS_SAMPLE_WINDOW_MS_CONFIG"); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/connect-runtime/3.4.0/org/apache/kafka/connect/runtime/WorkerConfig.html#OFFSET_COMMIT_INTERVAL_MS_CONFIG"/>
        /// </summary>
        public static string OFFSET_COMMIT_INTERVAL_MS_CONFIG { get { return SGetField<string>(LocalBridgeClazz, "OFFSET_COMMIT_INTERVAL_MS_CONFIG"); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/connect-runtime/3.4.0/org/apache/kafka/connect/runtime/WorkerConfig.html#OFFSET_COMMIT_TIMEOUT_MS_CONFIG"/>
        /// </summary>
        public static string OFFSET_COMMIT_TIMEOUT_MS_CONFIG { get { return SGetField<string>(LocalBridgeClazz, "OFFSET_COMMIT_TIMEOUT_MS_CONFIG"); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/connect-runtime/3.4.0/org/apache/kafka/connect/runtime/WorkerConfig.html#PLUGIN_PATH_CONFIG"/>
        /// </summary>
        public static string PLUGIN_PATH_CONFIG { get { return SGetField<string>(LocalBridgeClazz, "PLUGIN_PATH_CONFIG"); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/connect-runtime/3.4.0/org/apache/kafka/connect/runtime/WorkerConfig.html#RESPONSE_HTTP_HEADERS_CONFIG"/>
        /// </summary>
        public static string RESPONSE_HTTP_HEADERS_CONFIG { get { return SGetField<string>(LocalBridgeClazz, "RESPONSE_HTTP_HEADERS_CONFIG"); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/connect-runtime/3.4.0/org/apache/kafka/connect/runtime/WorkerConfig.html#REST_ADVERTISED_HOST_NAME_CONFIG"/>
        /// </summary>
        public static string REST_ADVERTISED_HOST_NAME_CONFIG { get { return SGetField<string>(LocalBridgeClazz, "REST_ADVERTISED_HOST_NAME_CONFIG"); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/connect-runtime/3.4.0/org/apache/kafka/connect/runtime/WorkerConfig.html#REST_ADVERTISED_LISTENER_CONFIG"/>
        /// </summary>
        public static string REST_ADVERTISED_LISTENER_CONFIG { get { return SGetField<string>(LocalBridgeClazz, "REST_ADVERTISED_LISTENER_CONFIG"); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/connect-runtime/3.4.0/org/apache/kafka/connect/runtime/WorkerConfig.html#REST_ADVERTISED_PORT_CONFIG"/>
        /// </summary>
        public static string REST_ADVERTISED_PORT_CONFIG { get { return SGetField<string>(LocalBridgeClazz, "REST_ADVERTISED_PORT_CONFIG"); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/connect-runtime/3.4.0/org/apache/kafka/connect/runtime/WorkerConfig.html#REST_EXTENSION_CLASSES_CONFIG"/>
        /// </summary>
        public static string REST_EXTENSION_CLASSES_CONFIG { get { return SGetField<string>(LocalBridgeClazz, "REST_EXTENSION_CLASSES_CONFIG"); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/connect-runtime/3.4.0/org/apache/kafka/connect/runtime/WorkerConfig.html#TASK_SHUTDOWN_GRACEFUL_TIMEOUT_MS_CONFIG"/>
        /// </summary>
        public static string TASK_SHUTDOWN_GRACEFUL_TIMEOUT_MS_CONFIG { get { return SGetField<string>(LocalBridgeClazz, "TASK_SHUTDOWN_GRACEFUL_TIMEOUT_MS_CONFIG"); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/connect-runtime/3.4.0/org/apache/kafka/connect/runtime/WorkerConfig.html#TOPIC_CREATION_ENABLE_CONFIG"/>
        /// </summary>
        public static string TOPIC_CREATION_ENABLE_CONFIG { get { return SGetField<string>(LocalBridgeClazz, "TOPIC_CREATION_ENABLE_CONFIG"); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/connect-runtime/3.4.0/org/apache/kafka/connect/runtime/WorkerConfig.html#TOPIC_TRACKING_ALLOW_RESET_CONFIG"/>
        /// </summary>
        public static string TOPIC_TRACKING_ALLOW_RESET_CONFIG { get { return SGetField<string>(LocalBridgeClazz, "TOPIC_TRACKING_ALLOW_RESET_CONFIG"); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/connect-runtime/3.4.0/org/apache/kafka/connect/runtime/WorkerConfig.html#TOPIC_TRACKING_ENABLE_CONFIG"/>
        /// </summary>
        public static string TOPIC_TRACKING_ENABLE_CONFIG { get { return SGetField<string>(LocalBridgeClazz, "TOPIC_TRACKING_ENABLE_CONFIG"); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/connect-runtime/3.4.0/org/apache/kafka/connect/runtime/WorkerConfig.html#VALUE_CONVERTER_CLASS_CONFIG"/>
        /// </summary>
        public static string VALUE_CONVERTER_CLASS_CONFIG { get { return SGetField<string>(LocalBridgeClazz, "VALUE_CONVERTER_CLASS_CONFIG"); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/connect-runtime/3.4.0/org/apache/kafka/connect/runtime/WorkerConfig.html#VALUE_CONVERTER_CLASS_DOC"/>
        /// </summary>
        public static string VALUE_CONVERTER_CLASS_DOC { get { return SGetField<string>(LocalBridgeClazz, "VALUE_CONVERTER_CLASS_DOC"); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/connect-runtime/3.4.0/org/apache/kafka/connect/runtime/WorkerConfig.html#OFFSET_COMMIT_INTERVAL_MS_DEFAULT"/>
        /// </summary>
        public static long OFFSET_COMMIT_INTERVAL_MS_DEFAULT { get { return SGetField<long>(LocalBridgeClazz, "OFFSET_COMMIT_INTERVAL_MS_DEFAULT"); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/connect-runtime/3.4.0/org/apache/kafka/connect/runtime/WorkerConfig.html#OFFSET_COMMIT_TIMEOUT_MS_DEFAULT"/>
        /// </summary>
        public static long OFFSET_COMMIT_TIMEOUT_MS_DEFAULT { get { return SGetField<long>(LocalBridgeClazz, "OFFSET_COMMIT_TIMEOUT_MS_DEFAULT"); } }

        #endregion

        #region Static methods
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/connect-runtime/3.4.0/org/apache/kafka/connect/runtime/WorkerConfig.html#pluginLocations(java.util.Map)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Util.Map"/></param>
        /// <returns><see cref="Java.Util.List"/></returns>
        public static Java.Util.List<string> PluginLocations(Java.Util.Map<string, string> arg0)
        {
            return SExecute<Java.Util.List<string>>(LocalBridgeClazz, "pluginLocations", arg0);
        }

        #endregion

        #region Instance methods
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/connect-runtime/3.4.0/org/apache/kafka/connect/runtime/WorkerConfig.html#bootstrapServers()"/> 
        /// </summary>
        public string BootstrapServers
        {
            get { return IExecute<string>("bootstrapServers"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/connect-runtime/3.4.0/org/apache/kafka/connect/runtime/WorkerConfig.html#connectorOffsetsTopicsPermitted()"/> 
        /// </summary>
        public bool ConnectorOffsetsTopicsPermitted
        {
            get { return IExecute<bool>("connectorOffsetsTopicsPermitted"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/connect-runtime/3.4.0/org/apache/kafka/connect/runtime/WorkerConfig.html#exactlyOnceSourceEnabled()"/> 
        /// </summary>
        public bool ExactlyOnceSourceEnabled
        {
            get { return IExecute<bool>("exactlyOnceSourceEnabled"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/connect-runtime/3.4.0/org/apache/kafka/connect/runtime/WorkerConfig.html#groupId()"/> 
        /// </summary>
        public string GroupId
        {
            get { return IExecute<string>("groupId"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/connect-runtime/3.4.0/org/apache/kafka/connect/runtime/WorkerConfig.html#kafkaClusterId()"/> 
        /// </summary>
        public string KafkaClusterId
        {
            get { return IExecute<string>("kafkaClusterId"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/connect-runtime/3.4.0/org/apache/kafka/connect/runtime/WorkerConfig.html#offsetCommitInterval()"/> 
        /// </summary>
        public long OffsetCommitInterval
        {
            get { return IExecute<long>("offsetCommitInterval"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/connect-runtime/3.4.0/org/apache/kafka/connect/runtime/WorkerConfig.html#offsetsTopic()"/> 
        /// </summary>
        public string OffsetsTopic
        {
            get { return IExecute<string>("offsetsTopic"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/connect-runtime/3.4.0/org/apache/kafka/connect/runtime/WorkerConfig.html#getRebalanceTimeout()"/> 
        /// </summary>
        public int? RebalanceTimeout
        {
            get { return IExecute<int?>("getRebalanceTimeout"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/connect-runtime/3.4.0/org/apache/kafka/connect/runtime/WorkerConfig.html#topicCreationEnable()"/> 
        /// </summary>
        public bool TopicCreationEnable
        {
            get { return IExecute<bool>("topicCreationEnable"); }
        }

        #endregion

        #region Nested classes

        #endregion

        // TODO: complete the class
    }
    #endregion
}