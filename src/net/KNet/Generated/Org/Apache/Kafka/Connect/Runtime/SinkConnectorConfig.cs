/*
*  Copyright 2023 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 1.5.5.0)
*  using connect-runtime-3.4.0.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Org.Apache.Kafka.Connect.Runtime
{
    #region SinkConnectorConfig
    public partial class SinkConnectorConfig
    {
        #region Constructors
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/connect-runtime/3.4.0/org/apache/kafka/connect/runtime/SinkConnectorConfig.html#%3Cinit%3E(org.apache.kafka.connect.runtime.isolation.Plugins,java.util.Map)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Connect.Runtime.Isolation.Plugins"/></param>
        /// <param name="arg1"><see cref="Java.Util.Map"/></param>
        public SinkConnectorConfig(Org.Apache.Kafka.Connect.Runtime.Isolation.Plugins arg0, Java.Util.Map<string, string> arg1)
            : base(arg0, arg1)
        {
        }

        #endregion

        #region Class/Interface conversion operators

        #endregion

        #region Fields
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/connect-runtime/3.4.0/org/apache/kafka/connect/runtime/SinkConnectorConfig.html#DLQ_CONTEXT_HEADERS_ENABLE_DEFAULT"/>
        /// </summary>
        public static bool DLQ_CONTEXT_HEADERS_ENABLE_DEFAULT { get { return SGetField<bool>(LocalBridgeClazz, "DLQ_CONTEXT_HEADERS_ENABLE_DEFAULT"); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/connect-runtime/3.4.0/org/apache/kafka/connect/runtime/SinkConnectorConfig.html#DLQ_CONTEXT_HEADERS_ENABLE_CONFIG"/>
        /// </summary>
        public static string DLQ_CONTEXT_HEADERS_ENABLE_CONFIG { get { return SGetField<string>(LocalBridgeClazz, "DLQ_CONTEXT_HEADERS_ENABLE_CONFIG"); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/connect-runtime/3.4.0/org/apache/kafka/connect/runtime/SinkConnectorConfig.html#DLQ_CONTEXT_HEADERS_ENABLE_DOC"/>
        /// </summary>
        public static string DLQ_CONTEXT_HEADERS_ENABLE_DOC { get { return SGetField<string>(LocalBridgeClazz, "DLQ_CONTEXT_HEADERS_ENABLE_DOC"); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/connect-runtime/3.4.0/org/apache/kafka/connect/runtime/SinkConnectorConfig.html#DLQ_PREFIX"/>
        /// </summary>
        public static string DLQ_PREFIX { get { return SGetField<string>(LocalBridgeClazz, "DLQ_PREFIX"); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/connect-runtime/3.4.0/org/apache/kafka/connect/runtime/SinkConnectorConfig.html#DLQ_TOPIC_DEFAULT"/>
        /// </summary>
        public static string DLQ_TOPIC_DEFAULT { get { return SGetField<string>(LocalBridgeClazz, "DLQ_TOPIC_DEFAULT"); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/connect-runtime/3.4.0/org/apache/kafka/connect/runtime/SinkConnectorConfig.html#DLQ_TOPIC_NAME_CONFIG"/>
        /// </summary>
        public static string DLQ_TOPIC_NAME_CONFIG { get { return SGetField<string>(LocalBridgeClazz, "DLQ_TOPIC_NAME_CONFIG"); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/connect-runtime/3.4.0/org/apache/kafka/connect/runtime/SinkConnectorConfig.html#DLQ_TOPIC_NAME_DOC"/>
        /// </summary>
        public static string DLQ_TOPIC_NAME_DOC { get { return SGetField<string>(LocalBridgeClazz, "DLQ_TOPIC_NAME_DOC"); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/connect-runtime/3.4.0/org/apache/kafka/connect/runtime/SinkConnectorConfig.html#DLQ_TOPIC_REPLICATION_FACTOR_CONFIG"/>
        /// </summary>
        public static string DLQ_TOPIC_REPLICATION_FACTOR_CONFIG { get { return SGetField<string>(LocalBridgeClazz, "DLQ_TOPIC_REPLICATION_FACTOR_CONFIG"); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/connect-runtime/3.4.0/org/apache/kafka/connect/runtime/SinkConnectorConfig.html#TOPICS_CONFIG"/>
        /// </summary>
        public static string TOPICS_CONFIG { get { return SGetField<string>(LocalBridgeClazz, "TOPICS_CONFIG"); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/connect-runtime/3.4.0/org/apache/kafka/connect/runtime/SinkConnectorConfig.html#TOPICS_DEFAULT"/>
        /// </summary>
        public static string TOPICS_DEFAULT { get { return SGetField<string>(LocalBridgeClazz, "TOPICS_DEFAULT"); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/connect-runtime/3.4.0/org/apache/kafka/connect/runtime/SinkConnectorConfig.html#TOPICS_REGEX_CONFIG"/>
        /// </summary>
        public static string TOPICS_REGEX_CONFIG { get { return SGetField<string>(LocalBridgeClazz, "TOPICS_REGEX_CONFIG"); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/connect-runtime/3.4.0/org/apache/kafka/connect/runtime/SinkConnectorConfig.html#TOPICS_REGEX_DEFAULT"/>
        /// </summary>
        public static string TOPICS_REGEX_DEFAULT { get { return SGetField<string>(LocalBridgeClazz, "TOPICS_REGEX_DEFAULT"); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/connect-runtime/3.4.0/org/apache/kafka/connect/runtime/SinkConnectorConfig.html#DLQ_TOPIC_REPLICATION_FACTOR_CONFIG_DEFAULT"/>
        /// </summary>
        public static short DLQ_TOPIC_REPLICATION_FACTOR_CONFIG_DEFAULT { get { return SGetField<short>(LocalBridgeClazz, "DLQ_TOPIC_REPLICATION_FACTOR_CONFIG_DEFAULT"); } }

        #endregion

        #region Static methods
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/connect-runtime/3.4.0/org/apache/kafka/connect/runtime/SinkConnectorConfig.html#hasDlqTopicConfig(java.util.Map)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Util.Map"/></param>
        /// <returns><see cref="bool"/></returns>
        public static bool HasDlqTopicConfig(Java.Util.Map<string, string> arg0)
        {
            return SExecute<bool>(LocalBridgeClazz, "hasDlqTopicConfig", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/connect-runtime/3.4.0/org/apache/kafka/connect/runtime/SinkConnectorConfig.html#hasTopicsConfig(java.util.Map)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Util.Map"/></param>
        /// <returns><see cref="bool"/></returns>
        public static bool HasTopicsConfig(Java.Util.Map<string, string> arg0)
        {
            return SExecute<bool>(LocalBridgeClazz, "hasTopicsConfig", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/connect-runtime/3.4.0/org/apache/kafka/connect/runtime/SinkConnectorConfig.html#hasTopicsRegexConfig(java.util.Map)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Util.Map"/></param>
        /// <returns><see cref="bool"/></returns>
        public static bool HasTopicsRegexConfig(Java.Util.Map<string, string> arg0)
        {
            return SExecute<bool>(LocalBridgeClazz, "hasTopicsRegexConfig", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/connect-runtime/3.4.0/org/apache/kafka/connect/runtime/SinkConnectorConfig.html#parseTopicsList(java.util.Map)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Util.Map"/></param>
        /// <returns><see cref="Java.Util.List"/></returns>
        public static Java.Util.List<string> ParseTopicsList(Java.Util.Map<string, string> arg0)
        {
            return SExecute<Java.Util.List<string>>(LocalBridgeClazz, "parseTopicsList", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/connect-runtime/3.4.0/org/apache/kafka/connect/runtime/SinkConnectorConfig.html#main(java.lang.String[])"/>
        /// </summary>
        /// <param name="arg0"><see cref="string"/></param>
        public static void Main(string[] arg0)
        {
            SExecute(LocalBridgeClazz, "main", new object[] { arg0 });
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/connect-runtime/3.4.0/org/apache/kafka/connect/runtime/SinkConnectorConfig.html#validate(java.util.Map)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Util.Map"/></param>
        public static void Validate(Java.Util.Map<string, string> arg0)
        {
            SExecute(LocalBridgeClazz, "validate", arg0);
        }

        #endregion

        #region Instance methods
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/connect-runtime/3.4.0/org/apache/kafka/connect/runtime/SinkConnectorConfig.html#enableErrantRecordReporter()"/>
        /// </summary>

        /// <returns><see cref="bool"/></returns>
        public bool EnableErrantRecordReporter()
        {
            return IExecute<bool>("enableErrantRecordReporter");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/connect-runtime/3.4.0/org/apache/kafka/connect/runtime/SinkConnectorConfig.html#isDlqContextHeadersEnabled()"/>
        /// </summary>

        /// <returns><see cref="bool"/></returns>
        public bool IsDlqContextHeadersEnabled()
        {
            return IExecute<bool>("isDlqContextHeadersEnabled");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/connect-runtime/3.4.0/org/apache/kafka/connect/runtime/SinkConnectorConfig.html#dlqTopicName()"/>
        /// </summary>

        /// <returns><see cref="string"/></returns>
        public string DlqTopicName()
        {
            return IExecute<string>("dlqTopicName");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/connect-runtime/3.4.0/org/apache/kafka/connect/runtime/SinkConnectorConfig.html#dlqTopicReplicationFactor()"/>
        /// </summary>

        /// <returns><see cref="short"/></returns>
        public short DlqTopicReplicationFactor()
        {
            return IExecute<short>("dlqTopicReplicationFactor");
        }

        #endregion

        #region Nested classes

        #endregion

        // TODO: complete the class
    }
    #endregion
}