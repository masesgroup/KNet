/*
*  Copyright 2023 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 1.5.5.0)
*  using connect-runtime-3.4.0.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Org.Apache.Kafka.Connect.Runtime.Isolation
{
    #region PluginScanResult
    public partial class PluginScanResult
    {
        #region Constructors
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/connect-runtime/3.4.0/org/apache/kafka/connect/runtime/isolation/PluginScanResult.html#%3Cinit%3E(java.util.Collection,java.util.Collection,java.util.Collection,java.util.Collection,java.util.Collection,java.util.Collection,java.util.Collection,java.util.Collection,java.util.Collection)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Util.Collection"/></param>
        /// <param name="arg1"><see cref="Java.Util.Collection"/></param>
        /// <param name="arg2"><see cref="Java.Util.Collection"/></param>
        /// <param name="arg3"><see cref="Java.Util.Collection"/></param>
        /// <param name="arg4"><see cref="Java.Util.Collection"/></param>
        /// <param name="arg5"><see cref="Java.Util.Collection"/></param>
        /// <param name="arg6"><see cref="Java.Util.Collection"/></param>
        /// <param name="arg7"><see cref="Java.Util.Collection"/></param>
        /// <param name="arg8"><see cref="Java.Util.Collection"/></param>
        public PluginScanResult(Java.Util.Collection arg0, Java.Util.Collection arg1, Java.Util.Collection arg2, Java.Util.Collection arg3, Java.Util.Collection arg4, Java.Util.Collection arg5, Java.Util.Collection arg6, Java.Util.Collection arg7, Java.Util.Collection arg8)
            : base(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8)
        {
        }

        #endregion

        #region Class/Interface conversion operators

        #endregion

        #region Fields

        #endregion

        #region Static methods

        #endregion

        #region Instance methods
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/connect-runtime/3.4.0/org/apache/kafka/connect/runtime/isolation/PluginScanResult.html#configProviders()"/> 
        /// </summary>
        public Java.Util.Collection<Org.Apache.Kafka.Connect.Runtime.Isolation.PluginDesc<Org.Apache.Kafka.Common.Config.Provider.ConfigProvider>> ConfigProviders
        {
            get { return IExecute<Java.Util.Collection<Org.Apache.Kafka.Connect.Runtime.Isolation.PluginDesc<Org.Apache.Kafka.Common.Config.Provider.ConfigProvider>>>("configProviders"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/connect-runtime/3.4.0/org/apache/kafka/connect/runtime/isolation/PluginScanResult.html#connectorClientConfigPolicies()"/> 
        /// </summary>
        public Java.Util.Collection<Org.Apache.Kafka.Connect.Runtime.Isolation.PluginDesc<Org.Apache.Kafka.Connect.Connector.Policy.ConnectorClientConfigOverridePolicy>> ConnectorClientConfigPolicies
        {
            get { return IExecute<Java.Util.Collection<Org.Apache.Kafka.Connect.Runtime.Isolation.PluginDesc<Org.Apache.Kafka.Connect.Connector.Policy.ConnectorClientConfigOverridePolicy>>>("connectorClientConfigPolicies"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/connect-runtime/3.4.0/org/apache/kafka/connect/runtime/isolation/PluginScanResult.html#converters()"/> 
        /// </summary>
        public Java.Util.Collection<Org.Apache.Kafka.Connect.Runtime.Isolation.PluginDesc<Org.Apache.Kafka.Connect.Storage.Converter>> Converters
        {
            get { return IExecute<Java.Util.Collection<Org.Apache.Kafka.Connect.Runtime.Isolation.PluginDesc<Org.Apache.Kafka.Connect.Storage.Converter>>>("converters"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/connect-runtime/3.4.0/org/apache/kafka/connect/runtime/isolation/PluginScanResult.html#headerConverters()"/> 
        /// </summary>
        public Java.Util.Collection<Org.Apache.Kafka.Connect.Runtime.Isolation.PluginDesc<Org.Apache.Kafka.Connect.Storage.HeaderConverter>> HeaderConverters
        {
            get { return IExecute<Java.Util.Collection<Org.Apache.Kafka.Connect.Runtime.Isolation.PluginDesc<Org.Apache.Kafka.Connect.Storage.HeaderConverter>>>("headerConverters"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/connect-runtime/3.4.0/org/apache/kafka/connect/runtime/isolation/PluginScanResult.html#isEmpty()"/> 
        /// </summary>
        public bool IsEmpty
        {
            get { return IExecute<bool>("isEmpty"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/connect-runtime/3.4.0/org/apache/kafka/connect/runtime/isolation/PluginScanResult.html#predicates()"/> 
        /// </summary>
        public Java.Util.Collection Predicates
        {
            get { return IExecute<Java.Util.Collection>("predicates"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/connect-runtime/3.4.0/org/apache/kafka/connect/runtime/isolation/PluginScanResult.html#restExtensions()"/> 
        /// </summary>
        public Java.Util.Collection<Org.Apache.Kafka.Connect.Runtime.Isolation.PluginDesc<Org.Apache.Kafka.Connect.Rest.ConnectRestExtension>> RestExtensions
        {
            get { return IExecute<Java.Util.Collection<Org.Apache.Kafka.Connect.Runtime.Isolation.PluginDesc<Org.Apache.Kafka.Connect.Rest.ConnectRestExtension>>>("restExtensions"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/connect-runtime/3.4.0/org/apache/kafka/connect/runtime/isolation/PluginScanResult.html#sinkConnectors()"/> 
        /// </summary>
        public Java.Util.Collection<Org.Apache.Kafka.Connect.Runtime.Isolation.PluginDesc<Org.Apache.Kafka.Connect.Sink.SinkConnector>> SinkConnectors
        {
            get { return IExecute<Java.Util.Collection<Org.Apache.Kafka.Connect.Runtime.Isolation.PluginDesc<Org.Apache.Kafka.Connect.Sink.SinkConnector>>>("sinkConnectors"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/connect-runtime/3.4.0/org/apache/kafka/connect/runtime/isolation/PluginScanResult.html#sourceConnectors()"/> 
        /// </summary>
        public Java.Util.Collection<Org.Apache.Kafka.Connect.Runtime.Isolation.PluginDesc<Org.Apache.Kafka.Connect.Source.SourceConnector>> SourceConnectors
        {
            get { return IExecute<Java.Util.Collection<Org.Apache.Kafka.Connect.Runtime.Isolation.PluginDesc<Org.Apache.Kafka.Connect.Source.SourceConnector>>>("sourceConnectors"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/connect-runtime/3.4.0/org/apache/kafka/connect/runtime/isolation/PluginScanResult.html#transformations()"/> 
        /// </summary>
        public Java.Util.Collection Transformations
        {
            get { return IExecute<Java.Util.Collection>("transformations"); }
        }

        #endregion

        #region Nested classes

        #endregion

        // TODO: complete the class
    }
    #endregion
}