/*
*  Copyright 2023 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 1.5.5.0)
*  using connect-runtime-3.4.0.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Org.Apache.Kafka.Connect.Storage
{
    #region MemoryConfigBackingStore
    public partial class MemoryConfigBackingStore
    {
        #region Constructors
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/connect-runtime/3.4.0/org/apache/kafka/connect/storage/MemoryConfigBackingStore.html#%3Cinit%3E(org.apache.kafka.connect.runtime.WorkerConfigTransformer)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Connect.Runtime.WorkerConfigTransformer"/></param>
        public MemoryConfigBackingStore(Org.Apache.Kafka.Connect.Runtime.WorkerConfigTransformer arg0)
            : base(arg0)
        {
        }

        #endregion

        #region Class/Interface conversion operators
        /// <summary>
        /// Converter from <see cref="Org.Apache.Kafka.Connect.Storage.MemoryConfigBackingStore"/> to <see cref="Org.Apache.Kafka.Connect.Storage.ConfigBackingStore"/>
        /// </summary>
        public static implicit operator Org.Apache.Kafka.Connect.Storage.ConfigBackingStore(Org.Apache.Kafka.Connect.Storage.MemoryConfigBackingStore t) => t.Cast<Org.Apache.Kafka.Connect.Storage.ConfigBackingStore>();

        #endregion

        #region Fields

        #endregion

        #region Static methods

        #endregion

        #region Instance methods
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/connect-runtime/3.4.0/org/apache/kafka/connect/storage/MemoryConfigBackingStore.html#snapshot()"/> 
        /// </summary>
        public Org.Apache.Kafka.Connect.Storage.ClusterConfigState Snapshot
        {
            get { return IExecute<Org.Apache.Kafka.Connect.Storage.ClusterConfigState>("snapshot"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/connect-runtime/3.4.0/org/apache/kafka/connect/storage/MemoryConfigBackingStore.html#contains(java.lang.String)"/>
        /// </summary>
        /// <param name="arg0"><see cref="string"/></param>
        /// <returns><see cref="bool"/></returns>
        public bool Contains(string arg0)
        {
            return IExecute<bool>("contains", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/connect-runtime/3.4.0/org/apache/kafka/connect/storage/MemoryConfigBackingStore.html#putConnectorConfig(java.lang.String,java.util.Map)"/>
        /// </summary>
        /// <param name="arg0"><see cref="string"/></param>
        /// <param name="arg1"><see cref="Java.Util.Map"/></param>
        public void PutConnectorConfig(string arg0, Java.Util.Map<string, string> arg1)
        {
            IExecute("putConnectorConfig", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/connect-runtime/3.4.0/org/apache/kafka/connect/storage/MemoryConfigBackingStore.html#putTargetState(java.lang.String,org.apache.kafka.connect.runtime.TargetState)"/>
        /// </summary>
        /// <param name="arg0"><see cref="string"/></param>
        /// <param name="arg1"><see cref="Org.Apache.Kafka.Connect.Runtime.TargetState"/></param>
        public void PutTargetState(string arg0, Org.Apache.Kafka.Connect.Runtime.TargetState arg1)
        {
            IExecute("putTargetState", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/connect-runtime/3.4.0/org/apache/kafka/connect/storage/MemoryConfigBackingStore.html#putTaskConfigs(java.lang.String,java.util.List)"/>
        /// </summary>
        /// <param name="arg0"><see cref="string"/></param>
        /// <param name="arg1"><see cref="Java.Util.List"/></param>
        public void PutTaskConfigs(string arg0, Java.Util.List<Java.Util.Map<string, string>> arg1)
        {
            IExecute("putTaskConfigs", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/connect-runtime/3.4.0/org/apache/kafka/connect/storage/MemoryConfigBackingStore.html#removeConnectorConfig(java.lang.String)"/>
        /// </summary>
        /// <param name="arg0"><see cref="string"/></param>
        public void RemoveConnectorConfig(string arg0)
        {
            IExecute("removeConnectorConfig", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/connect-runtime/3.4.0/org/apache/kafka/connect/storage/MemoryConfigBackingStore.html#removeTaskConfigs(java.lang.String)"/>
        /// </summary>
        /// <param name="arg0"><see cref="string"/></param>
        public void RemoveTaskConfigs(string arg0)
        {
            IExecute("removeTaskConfigs", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/connect-runtime/3.4.0/org/apache/kafka/connect/storage/MemoryConfigBackingStore.html#setUpdateListener(org.apache.kafka.connect.storage.ConfigBackingStore.UpdateListener)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Connect.Storage.ConfigBackingStore.UpdateListener"/></param>
        public void SetUpdateListener(Org.Apache.Kafka.Connect.Storage.ConfigBackingStore.UpdateListener arg0)
        {
            IExecute("setUpdateListener", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/connect-runtime/3.4.0/org/apache/kafka/connect/storage/MemoryConfigBackingStore.html#start()"/>
        /// </summary>
        public void Start()
        {
            IExecute("start");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/connect-runtime/3.4.0/org/apache/kafka/connect/storage/MemoryConfigBackingStore.html#stop()"/>
        /// </summary>
        public void Stop()
        {
            IExecute("stop");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/connect-runtime/3.4.0/org/apache/kafka/connect/storage/MemoryConfigBackingStore.html#putRestartRequest(org.apache.kafka.connect.runtime.RestartRequest)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Connect.Runtime.RestartRequest"/></param>
        public void PutRestartRequest(Org.Apache.Kafka.Connect.Runtime.RestartRequest arg0)
        {
            IExecute("putRestartRequest", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/connect-runtime/3.4.0/org/apache/kafka/connect/storage/MemoryConfigBackingStore.html#putSessionKey(org.apache.kafka.connect.runtime.SessionKey)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Connect.Runtime.SessionKey"/></param>
        public void PutSessionKey(Org.Apache.Kafka.Connect.Runtime.SessionKey arg0)
        {
            IExecute("putSessionKey", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/connect-runtime/3.4.0/org/apache/kafka/connect/storage/MemoryConfigBackingStore.html#putTaskCountRecord(java.lang.String,int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="string"/></param>
        /// <param name="arg1"><see cref="int"/></param>
        public void PutTaskCountRecord(string arg0, int arg1)
        {
            IExecute("putTaskCountRecord", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/connect-runtime/3.4.0/org/apache/kafka/connect/storage/MemoryConfigBackingStore.html#refresh(long,java.util.concurrent.TimeUnit)"/>
        /// </summary>
        /// <param name="arg0"><see cref="long"/></param>
        /// <param name="arg1"><see cref="Java.Util.Concurrent.TimeUnit"/></param>
        public void Refresh(long arg0, Java.Util.Concurrent.TimeUnit arg1)
        {
            IExecute("refresh", arg0, arg1);
        }

        #endregion

        #region Nested classes

        #endregion

        // TODO: complete the class
    }
    #endregion
}