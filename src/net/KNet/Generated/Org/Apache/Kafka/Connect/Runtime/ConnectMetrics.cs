/*
*  Copyright 2023 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 1.5.5.0)
*  using connect-runtime-3.4.0.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Org.Apache.Kafka.Connect.Runtime
{
    #region ConnectMetrics
    public partial class ConnectMetrics
    {
        #region Constructors
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/connect-runtime/3.4.0/org/apache/kafka/connect/runtime/ConnectMetrics.html#%3Cinit%3E(java.lang.String,org.apache.kafka.connect.runtime.WorkerConfig,org.apache.kafka.common.utils.Time,java.lang.String)"/>
        /// </summary>
        /// <param name="arg0"><see cref="string"/></param>
        /// <param name="arg1"><see cref="Org.Apache.Kafka.Connect.Runtime.WorkerConfig"/></param>
        /// <param name="arg2"><see cref="Org.Apache.Kafka.Common.Utils.Time"/></param>
        /// <param name="arg3"><see cref="string"/></param>
        public ConnectMetrics(string arg0, Org.Apache.Kafka.Connect.Runtime.WorkerConfig arg1, Org.Apache.Kafka.Common.Utils.Time arg2, string arg3)
            : base(arg0, arg1, arg2, arg3)
        {
        }

        #endregion

        #region Class/Interface conversion operators

        #endregion

        #region Fields
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/connect-runtime/3.4.0/org/apache/kafka/connect/runtime/ConnectMetrics.html#JMX_PREFIX"/>
        /// </summary>
        public static string JMX_PREFIX { get { return SGetField<string>(LocalBridgeClazz, "JMX_PREFIX"); } }

        #endregion

        #region Static methods
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/connect-runtime/3.4.0/org/apache/kafka/connect/runtime/ConnectMetrics.html#main(java.lang.String[])"/>
        /// </summary>
        /// <param name="arg0"><see cref="string"/></param>
        public static void Main(string[] arg0)
        {
            SExecute(LocalBridgeClazz, "main", new object[] { arg0 });
        }

        #endregion

        #region Instance methods
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/connect-runtime/3.4.0/org/apache/kafka/connect/runtime/ConnectMetrics.html#workerId()"/>
        /// </summary>

        /// <returns><see cref="string"/></returns>
        public string WorkerId()
        {
            return IExecute<string>("workerId");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/connect-runtime/3.4.0/org/apache/kafka/connect/runtime/ConnectMetrics.html#metrics()"/>
        /// </summary>

        /// <returns><see cref="Org.Apache.Kafka.Common.Metrics.Metrics"/></returns>
        public Org.Apache.Kafka.Common.Metrics.Metrics Metrics()
        {
            return IExecute<Org.Apache.Kafka.Common.Metrics.Metrics>("metrics");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/connect-runtime/3.4.0/org/apache/kafka/connect/runtime/ConnectMetrics.html#time()"/>
        /// </summary>

        /// <returns><see cref="Org.Apache.Kafka.Common.Utils.Time"/></returns>
        public Org.Apache.Kafka.Common.Utils.Time Time()
        {
            return IExecute<Org.Apache.Kafka.Common.Utils.Time>("time");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/connect-runtime/3.4.0/org/apache/kafka/connect/runtime/ConnectMetrics.html#group(java.lang.String,java.lang.String[])"/>
        /// </summary>
        /// <param name="arg0"><see cref="string"/></param>
        /// <param name="arg1"><see cref="string"/></param>
        /// <returns><see cref="Org.Apache.Kafka.Connect.Runtime.ConnectMetrics.MetricGroup"/></returns>
        public Org.Apache.Kafka.Connect.Runtime.ConnectMetrics.MetricGroup Group(string arg0, params string[] arg1)
        {
            if (arg1.Length == 0) return IExecute<Org.Apache.Kafka.Connect.Runtime.ConnectMetrics.MetricGroup>("group", arg0); else return IExecute<Org.Apache.Kafka.Connect.Runtime.ConnectMetrics.MetricGroup>("group", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/connect-runtime/3.4.0/org/apache/kafka/connect/runtime/ConnectMetrics.html#registry()"/>
        /// </summary>

        /// <returns><see cref="Org.Apache.Kafka.Connect.Runtime.ConnectMetricsRegistry"/></returns>
        public Org.Apache.Kafka.Connect.Runtime.ConnectMetricsRegistry Registry()
        {
            return IExecute<Org.Apache.Kafka.Connect.Runtime.ConnectMetricsRegistry>("registry");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/connect-runtime/3.4.0/org/apache/kafka/connect/runtime/ConnectMetrics.html#stop()"/>
        /// </summary>
        public void Stop()
        {
            IExecute("stop");
        }

        #endregion

        #region Nested classes
        #region LiteralSupplier
        public partial class LiteralSupplier
        {
            #region Constructors

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields

            #endregion

            #region Static methods

            #endregion

            #region Instance methods
            /// <summary>
            /// <see href="https://www.javadoc.io/static/org.apache.kafka/connect-runtime/3.4.0/org/apache/kafka/connect/runtime/ConnectMetrics.LiteralSupplier.html#metricValue(long)"/>
            /// </summary>
            /// <param name="arg0"><see cref="long"/></param>
            /// <returns><see cref="object"/></returns>
            public object MetricValue(long arg0)
            {
                return IExecute("metricValue", arg0);
            }

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

        #region LiteralSupplier<T>
        public partial class LiteralSupplier<T>
        {
            #region Constructors

            #endregion

            #region Class/Interface conversion operators
            /// <summary>
            /// Converter from <see cref="Org.Apache.Kafka.Connect.Runtime.ConnectMetrics.LiteralSupplier{T}"/> to <see cref="Org.Apache.Kafka.Connect.Runtime.ConnectMetrics.LiteralSupplier"/>
            /// </summary>
            public static implicit operator Org.Apache.Kafka.Connect.Runtime.ConnectMetrics.LiteralSupplier(Org.Apache.Kafka.Connect.Runtime.ConnectMetrics.LiteralSupplier<T> t) => t.Cast<Org.Apache.Kafka.Connect.Runtime.ConnectMetrics.LiteralSupplier>();

            #endregion

            #region Fields

            #endregion

            #region Static methods

            #endregion

            #region Instance methods
            /// <summary>
            /// <see href="https://www.javadoc.io/static/org.apache.kafka/connect-runtime/3.4.0/org/apache/kafka/connect/runtime/ConnectMetrics.LiteralSupplier.html#metricValue(long)"/>
            /// </summary>
            /// <param name="arg0"><see cref="long"/></param>
            /// <returns><typeparamref name="T"/></returns>
            public T MetricValue(long arg0)
            {
                return IExecute<T>("metricValue", arg0);
            }

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

        #region MetricGroup
        public partial class MetricGroup
        {
            #region Constructors

            #endregion

            #region Class/Interface conversion operators
            /// <summary>
            /// Converter from <see cref="Org.Apache.Kafka.Connect.Runtime.ConnectMetrics.MetricGroup"/> to <see cref="Java.Lang.AutoCloseable"/>
            /// </summary>
            public static implicit operator Java.Lang.AutoCloseable(Org.Apache.Kafka.Connect.Runtime.ConnectMetrics.MetricGroup t) => t.Cast<Java.Lang.AutoCloseable>();

            #endregion

            #region Fields

            #endregion

            #region Static methods

            #endregion

            #region Instance methods
            /// <summary>
            /// <see href="https://www.javadoc.io/static/org.apache.kafka/connect-runtime/3.4.0/org/apache/kafka/connect/runtime/ConnectMetrics.MetricGroup.html#addImmutableValueMetric(org.apache.kafka.common.MetricNameTemplate,java.lang.Object)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Org.Apache.Kafka.Common.MetricNameTemplate"/></param>
            /// <param name="arg1"><typeparamref name="T"/></param>
            /// <typeparam name="T"></typeparam>
            public void AddImmutableValueMetric<T>(Org.Apache.Kafka.Common.MetricNameTemplate arg0, T arg1)
            {
                IExecute("addImmutableValueMetric", arg0, arg1);
            }
            /// <summary>
            /// <see href="https://www.javadoc.io/static/org.apache.kafka/connect-runtime/3.4.0/org/apache/kafka/connect/runtime/ConnectMetrics.MetricGroup.html#addValueMetric(org.apache.kafka.common.MetricNameTemplate,org.apache.kafka.connect.runtime.ConnectMetrics.LiteralSupplier)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Org.Apache.Kafka.Common.MetricNameTemplate"/></param>
            /// <param name="arg1"><see cref="Org.Apache.Kafka.Connect.Runtime.ConnectMetrics.LiteralSupplier"/></param>
            /// <typeparam name="T"></typeparam>
            public void AddValueMetric<T>(Org.Apache.Kafka.Common.MetricNameTemplate arg0, Org.Apache.Kafka.Connect.Runtime.ConnectMetrics.LiteralSupplier<T> arg1)
            {
                IExecute("addValueMetric", arg0, arg1);
            }
            /// <summary>
            /// <see href="https://www.javadoc.io/static/org.apache.kafka/connect-runtime/3.4.0/org/apache/kafka/connect/runtime/ConnectMetrics.MetricGroup.html#metricName(org.apache.kafka.common.MetricNameTemplate)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Org.Apache.Kafka.Common.MetricNameTemplate"/></param>
            /// <returns><see cref="Org.Apache.Kafka.Common.MetricName"/></returns>
            public Org.Apache.Kafka.Common.MetricName MetricName(Org.Apache.Kafka.Common.MetricNameTemplate arg0)
            {
                return IExecute<Org.Apache.Kafka.Common.MetricName>("metricName", arg0);
            }
            /// <summary>
            /// <see href="https://www.javadoc.io/static/org.apache.kafka/connect-runtime/3.4.0/org/apache/kafka/connect/runtime/ConnectMetrics.MetricGroup.html#metrics()"/>
            /// </summary>

            /// <returns><see cref="Org.Apache.Kafka.Common.Metrics.Metrics"/></returns>
            public Org.Apache.Kafka.Common.Metrics.Metrics Metrics()
            {
                return IExecute<Org.Apache.Kafka.Common.Metrics.Metrics>("metrics");
            }
            /// <summary>
            /// <see href="https://www.javadoc.io/static/org.apache.kafka/connect-runtime/3.4.0/org/apache/kafka/connect/runtime/ConnectMetrics.MetricGroup.html#sensor(java.lang.String,org.apache.kafka.common.metrics.MetricConfig,org.apache.kafka.common.metrics.Sensor[])"/>
            /// </summary>
            /// <param name="arg0"><see cref="string"/></param>
            /// <param name="arg1"><see cref="Org.Apache.Kafka.Common.Metrics.MetricConfig"/></param>
            /// <param name="arg2"><see cref="Org.Apache.Kafka.Common.Metrics.Sensor"/></param>
            /// <returns><see cref="Org.Apache.Kafka.Common.Metrics.Sensor"/></returns>
            public Org.Apache.Kafka.Common.Metrics.Sensor Sensor(string arg0, Org.Apache.Kafka.Common.Metrics.MetricConfig arg1, params Org.Apache.Kafka.Common.Metrics.Sensor[] arg2)
            {
                if (arg2.Length == 0) return IExecute<Org.Apache.Kafka.Common.Metrics.Sensor>("sensor", arg0, arg1); else return IExecute<Org.Apache.Kafka.Common.Metrics.Sensor>("sensor", arg0, arg1, arg2);
            }
            /// <summary>
            /// <see href="https://www.javadoc.io/static/org.apache.kafka/connect-runtime/3.4.0/org/apache/kafka/connect/runtime/ConnectMetrics.MetricGroup.html#sensor(java.lang.String,org.apache.kafka.common.metrics.Sensor[])"/>
            /// </summary>
            /// <param name="arg0"><see cref="string"/></param>
            /// <param name="arg1"><see cref="Org.Apache.Kafka.Common.Metrics.Sensor"/></param>
            /// <returns><see cref="Org.Apache.Kafka.Common.Metrics.Sensor"/></returns>
            public Org.Apache.Kafka.Common.Metrics.Sensor Sensor(string arg0, params Org.Apache.Kafka.Common.Metrics.Sensor[] arg1)
            {
                if (arg1.Length == 0) return IExecute<Org.Apache.Kafka.Common.Metrics.Sensor>("sensor", arg0); else return IExecute<Org.Apache.Kafka.Common.Metrics.Sensor>("sensor", arg0, arg1);
            }
            /// <summary>
            /// <see href="https://www.javadoc.io/static/org.apache.kafka/connect-runtime/3.4.0/org/apache/kafka/connect/runtime/ConnectMetrics.MetricGroup.html#sensor(java.lang.String,org.apache.kafka.common.metrics.Sensor.RecordingLevel,org.apache.kafka.common.metrics.Sensor[])"/>
            /// </summary>
            /// <param name="arg0"><see cref="string"/></param>
            /// <param name="arg1"><see cref="Org.Apache.Kafka.Common.Metrics.Sensor.RecordingLevel"/></param>
            /// <param name="arg2"><see cref="Org.Apache.Kafka.Common.Metrics.Sensor"/></param>
            /// <returns><see cref="Org.Apache.Kafka.Common.Metrics.Sensor"/></returns>
            public Org.Apache.Kafka.Common.Metrics.Sensor Sensor(string arg0, Org.Apache.Kafka.Common.Metrics.Sensor.RecordingLevel arg1, params Org.Apache.Kafka.Common.Metrics.Sensor[] arg2)
            {
                if (arg2.Length == 0) return IExecute<Org.Apache.Kafka.Common.Metrics.Sensor>("sensor", arg0, arg1); else return IExecute<Org.Apache.Kafka.Common.Metrics.Sensor>("sensor", arg0, arg1, arg2);
            }
            /// <summary>
            /// <see href="https://www.javadoc.io/static/org.apache.kafka/connect-runtime/3.4.0/org/apache/kafka/connect/runtime/ConnectMetrics.MetricGroup.html#sensor(java.lang.String)"/>
            /// </summary>
            /// <param name="arg0"><see cref="string"/></param>
            /// <returns><see cref="Org.Apache.Kafka.Common.Metrics.Sensor"/></returns>
            public Org.Apache.Kafka.Common.Metrics.Sensor Sensor(string arg0)
            {
                return IExecute<Org.Apache.Kafka.Common.Metrics.Sensor>("sensor", arg0);
            }
            /// <summary>
            /// <see href="https://www.javadoc.io/static/org.apache.kafka/connect-runtime/3.4.0/org/apache/kafka/connect/runtime/ConnectMetrics.MetricGroup.html#groupId()"/>
            /// </summary>

            /// <returns><see cref="Org.Apache.Kafka.Connect.Runtime.ConnectMetrics.MetricGroupId"/></returns>
            public Org.Apache.Kafka.Connect.Runtime.ConnectMetrics.MetricGroupId GroupId()
            {
                return IExecute<Org.Apache.Kafka.Connect.Runtime.ConnectMetrics.MetricGroupId>("groupId");
            }
            /// <summary>
            /// <see href="https://www.javadoc.io/static/org.apache.kafka/connect-runtime/3.4.0/org/apache/kafka/connect/runtime/ConnectMetrics.MetricGroup.html#sensor(java.lang.String,org.apache.kafka.common.metrics.MetricConfig,org.apache.kafka.common.metrics.Sensor.RecordingLevel,org.apache.kafka.common.metrics.Sensor[])"/>
            /// </summary>
            /// <param name="arg0"><see cref="string"/></param>
            /// <param name="arg1"><see cref="Org.Apache.Kafka.Common.Metrics.MetricConfig"/></param>
            /// <param name="arg2"><see cref="Org.Apache.Kafka.Common.Metrics.Sensor.RecordingLevel"/></param>
            /// <param name="arg3"><see cref="Org.Apache.Kafka.Common.Metrics.Sensor"/></param>
            /// <returns><see cref="Org.Apache.Kafka.Common.Metrics.Sensor"/></returns>
            public Org.Apache.Kafka.Common.Metrics.Sensor Sensor(string arg0, Org.Apache.Kafka.Common.Metrics.MetricConfig arg1, Org.Apache.Kafka.Common.Metrics.Sensor.RecordingLevel arg2, params Org.Apache.Kafka.Common.Metrics.Sensor[] arg3)
            {
                if (arg3.Length == 0) return IExecute<Org.Apache.Kafka.Common.Metrics.Sensor>("sensor", arg0, arg1, arg2); else return IExecute<Org.Apache.Kafka.Common.Metrics.Sensor>("sensor", arg0, arg1, arg2, arg3);
            }
            /// <summary>
            /// <see href="https://www.javadoc.io/static/org.apache.kafka/connect-runtime/3.4.0/org/apache/kafka/connect/runtime/ConnectMetrics.MetricGroup.html#close()"/>
            /// </summary>
            public void Close()
            {
                IExecute("close");
            }

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

        #region MetricGroupId
        public partial class MetricGroupId
        {
            #region Constructors
            /// <summary>
            /// <see href="https://www.javadoc.io/static/org.apache.kafka/connect-runtime/3.4.0/org/apache/kafka/connect/runtime/ConnectMetrics.MetricGroupId.html#%3Cinit%3E(java.lang.String,java.util.Map)"/>
            /// </summary>
            /// <param name="arg0"><see cref="string"/></param>
            /// <param name="arg1"><see cref="Java.Util.Map"/></param>
            public MetricGroupId(string arg0, Java.Util.Map<string, string> arg1)
                : base(arg0, arg1)
            {
            }

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields

            #endregion

            #region Static methods

            #endregion

            #region Instance methods
            /// <summary>
            /// <see href="https://www.javadoc.io/static/org.apache.kafka/connect-runtime/3.4.0/org/apache/kafka/connect/runtime/ConnectMetrics.MetricGroupId.html#includes(org.apache.kafka.common.MetricName)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Org.Apache.Kafka.Common.MetricName"/></param>
            /// <returns><see cref="bool"/></returns>
            public bool Includes(Org.Apache.Kafka.Common.MetricName arg0)
            {
                return IExecute<bool>("includes", arg0);
            }
            /// <summary>
            /// <see href="https://www.javadoc.io/static/org.apache.kafka/connect-runtime/3.4.0/org/apache/kafka/connect/runtime/ConnectMetrics.MetricGroupId.html#groupName()"/>
            /// </summary>

            /// <returns><see cref="string"/></returns>
            public string GroupName()
            {
                return IExecute<string>("groupName");
            }
            /// <summary>
            /// <see href="https://www.javadoc.io/static/org.apache.kafka/connect-runtime/3.4.0/org/apache/kafka/connect/runtime/ConnectMetrics.MetricGroupId.html#tags()"/>
            /// </summary>

            /// <returns><see cref="Java.Util.Map"/></returns>
            public Java.Util.Map<string, string> Tags()
            {
                return IExecute<Java.Util.Map<string, string>>("tags");
            }

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

    
        #endregion

        // TODO: complete the class
    }
    #endregion
}