/*
*  Copyright 2023 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 1.5.5.0)
*  using connect-runtime-3.4.0.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Org.Apache.Kafka.Connect.Runtime.Errors
{
    #region ErrorHandlingMetrics
    public partial class ErrorHandlingMetrics
    {
        #region Constructors
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/connect-runtime/3.4.0/org/apache/kafka/connect/runtime/errors/ErrorHandlingMetrics.html#%3Cinit%3E(org.apache.kafka.connect.util.ConnectorTaskId,org.apache.kafka.connect.runtime.ConnectMetrics)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Connect.Util.ConnectorTaskId"/></param>
        /// <param name="arg1"><see cref="Org.Apache.Kafka.Connect.Runtime.ConnectMetrics"/></param>
        public ErrorHandlingMetrics(Org.Apache.Kafka.Connect.Util.ConnectorTaskId arg0, Org.Apache.Kafka.Connect.Runtime.ConnectMetrics arg1)
            : base(arg0, arg1)
        {
        }

        #endregion

        #region Class/Interface conversion operators
        /// <summary>
        /// Converter from <see cref="Org.Apache.Kafka.Connect.Runtime.Errors.ErrorHandlingMetrics"/> to <see cref="Java.Lang.AutoCloseable"/>
        /// </summary>
        public static implicit operator Java.Lang.AutoCloseable(Org.Apache.Kafka.Connect.Runtime.Errors.ErrorHandlingMetrics t) => t.Cast<Java.Lang.AutoCloseable>();

        #endregion

        #region Fields

        #endregion

        #region Static methods

        #endregion

        #region Instance methods
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/connect-runtime/3.4.0/org/apache/kafka/connect/runtime/errors/ErrorHandlingMetrics.html#metricGroup()"/> 
        /// </summary>
        public Org.Apache.Kafka.Connect.Runtime.ConnectMetrics.MetricGroup MetricGroup
        {
            get { return IExecute<Org.Apache.Kafka.Connect.Runtime.ConnectMetrics.MetricGroup>("metricGroup"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/connect-runtime/3.4.0/org/apache/kafka/connect/runtime/errors/ErrorHandlingMetrics.html#close()"/>
        /// </summary>
        public void Close()
        {
            IExecute("close");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/connect-runtime/3.4.0/org/apache/kafka/connect/runtime/errors/ErrorHandlingMetrics.html#recordDeadLetterQueueProduceFailed()"/>
        /// </summary>
        public void RecordDeadLetterQueueProduceFailed()
        {
            IExecute("recordDeadLetterQueueProduceFailed");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/connect-runtime/3.4.0/org/apache/kafka/connect/runtime/errors/ErrorHandlingMetrics.html#recordDeadLetterQueueProduceRequest()"/>
        /// </summary>
        public void RecordDeadLetterQueueProduceRequest()
        {
            IExecute("recordDeadLetterQueueProduceRequest");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/connect-runtime/3.4.0/org/apache/kafka/connect/runtime/errors/ErrorHandlingMetrics.html#recordError()"/>
        /// </summary>
        public void RecordError()
        {
            IExecute("recordError");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/connect-runtime/3.4.0/org/apache/kafka/connect/runtime/errors/ErrorHandlingMetrics.html#recordErrorLogged()"/>
        /// </summary>
        public void RecordErrorLogged()
        {
            IExecute("recordErrorLogged");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/connect-runtime/3.4.0/org/apache/kafka/connect/runtime/errors/ErrorHandlingMetrics.html#recordErrorTimestamp()"/>
        /// </summary>
        public void RecordErrorTimestamp()
        {
            IExecute("recordErrorTimestamp");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/connect-runtime/3.4.0/org/apache/kafka/connect/runtime/errors/ErrorHandlingMetrics.html#recordFailure()"/>
        /// </summary>
        public void RecordFailure()
        {
            IExecute("recordFailure");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/connect-runtime/3.4.0/org/apache/kafka/connect/runtime/errors/ErrorHandlingMetrics.html#recordRetry()"/>
        /// </summary>
        public void RecordRetry()
        {
            IExecute("recordRetry");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/connect-runtime/3.4.0/org/apache/kafka/connect/runtime/errors/ErrorHandlingMetrics.html#recordSkipped()"/>
        /// </summary>
        public void RecordSkipped()
        {
            IExecute("recordSkipped");
        }

        #endregion

        #region Nested classes

        #endregion

        // TODO: complete the class
    }
    #endregion
}