/*
*  Copyright 2024 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 2.5.7.0)
*  using kafka-shell-3.8.0.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Org.Apache.Kafka.Shell
{
    #region InteractiveShell
    public partial class InteractiveShell
    {
        #region Constructors

        #endregion

        #region Class/Interface conversion operators

        #endregion

        #region Fields

        #endregion

        #region Static methods

        #endregion

        #region Instance methods
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-shell/3.8.0/org/apache/kafka/shell/InteractiveShell.html#screenWidth--"/>
        /// </summary>
        /// <returns><see cref="int"/></returns>
        public int ScreenWidth()
        {
            return IExecuteWithSignature<int>("screenWidth", "()I");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-shell/3.8.0/org/apache/kafka/shell/InteractiveShell.html#history-int-"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <returns><see cref="Java.Util.Iterator"/></returns>
        public Java.Util.Iterator<Java.Util.Map.Entry<Java.Lang.Integer, Java.Lang.String>> History(int arg0)
        {
            return IExecuteWithSignature<Java.Util.Iterator<Java.Util.Map.Entry<Java.Lang.Integer, Java.Lang.String>>>("history", "(I)Ljava/util/Iterator;", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-shell/3.8.0/org/apache/kafka/shell/InteractiveShell.html#close--"/>
        /// </summary>
        /// <exception cref="Java.Io.IOException"/>
        public void Close()
        {
            IExecuteWithSignature("close", "()V");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-shell/3.8.0/org/apache/kafka/shell/InteractiveShell.html#runMainLoop--"/>
        /// </summary>
        /// <exception cref="Java.Lang.Exception"/>
        public void RunMainLoop()
        {
            IExecuteWithSignature("runMainLoop", "()V");
        }

        #endregion

        #region Nested classes
        #region HistoryIterator
        public partial class HistoryIterator
        {
            #region Constructors

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields

            #endregion

            #region Static methods

            #endregion

            #region Instance methods
            /// <summary>
            /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-shell/3.8.0/org/apache/kafka/shell/InteractiveShell.HistoryIterator.html#hasNext--"/>
            /// </summary>
            /// <returns><see cref="bool"/></returns>
            public bool HasNext()
            {
                return IExecuteWithSignature<bool>("hasNext", "()Z");
            }
            /// <summary>
            /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-shell/3.8.0/org/apache/kafka/shell/InteractiveShell.HistoryIterator.html#next--"/>
            /// </summary>
            /// <returns><see cref="object"/></returns>
            public object Next()
            {
                return IExecuteWithSignature("next", "()Ljava/lang/Object;");
            }

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

    
        #endregion

        // TODO: complete the class
    }
    #endregion
}