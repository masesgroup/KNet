/*
*  Copyright 2024 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 2.5.7.0)
*  using kafka-shell-3.7.1.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Org.Apache.Kafka.Shell.State
{
    #region MetadataShellPublisher
    public partial class MetadataShellPublisher
    {
        #region Constructors
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-shell/3.7.1/org/apache/kafka/shell/state/MetadataShellPublisher.html#org.apache.kafka.shell.state.MetadataShellPublisher(org.apache.kafka.shell.state.MetadataShellState)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Shell.State.MetadataShellState"/></param>
        public MetadataShellPublisher(Org.Apache.Kafka.Shell.State.MetadataShellState arg0)
            : base(arg0)
        {
        }

        #endregion

        #region Class/Interface conversion operators

        #endregion

        #region Fields

        #endregion

        #region Static methods

        #endregion

        #region Instance methods
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-shell/3.7.1/org/apache/kafka/shell/state/MetadataShellPublisher.html#name--"/>
        /// </summary>
        /// <returns><see cref="Java.Lang.String"/></returns>
        public Java.Lang.String Name()
        {
            return IExecuteWithSignature<Java.Lang.String>("name", "()Ljava/lang/String;");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-shell/3.7.1/org/apache/kafka/shell/state/MetadataShellPublisher.html#state--"/>
        /// </summary>
        /// <returns><see cref="Org.Apache.Kafka.Shell.State.MetadataShellState"/></returns>
        public Org.Apache.Kafka.Shell.State.MetadataShellState State()
        {
            return IExecuteWithSignature<Org.Apache.Kafka.Shell.State.MetadataShellState>("state", "()Lorg/apache/kafka/shell/state/MetadataShellState;");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-shell/3.7.1/org/apache/kafka/shell/state/MetadataShellPublisher.html#onMetadataUpdate-org.apache.kafka.image.MetadataDelta-org.apache.kafka.image.MetadataImage-org.apache.kafka.image.loader.LoaderManifest-"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Image.MetadataDelta"/></param>
        /// <param name="arg1"><see cref="Org.Apache.Kafka.Image.MetadataImage"/></param>
        /// <param name="arg2"><see cref="Org.Apache.Kafka.Image.Loader.LoaderManifest"/></param>
        public void OnMetadataUpdate(Org.Apache.Kafka.Image.MetadataDelta arg0, Org.Apache.Kafka.Image.MetadataImage arg1, Org.Apache.Kafka.Image.Loader.LoaderManifest arg2)
        {
            IExecute("onMetadataUpdate", arg0, arg1, arg2);
        }

        #endregion

        #region Nested classes

        #endregion

        // TODO: complete the class
    }
    #endregion
}