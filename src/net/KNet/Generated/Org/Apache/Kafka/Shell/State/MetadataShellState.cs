/*
*  Copyright 2024 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 2.5.7.0)
*  using kafka-shell-3.7.1.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Org.Apache.Kafka.Shell.State
{
    #region MetadataShellState
    public partial class MetadataShellState
    {
        #region Constructors

        #endregion

        #region Class/Interface conversion operators

        #endregion

        #region Fields

        #endregion

        #region Static methods

        #endregion

        #region Instance methods
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-shell/3.7.1/org/apache/kafka/shell/state/MetadataShellState.html#workingDirectory--"/>
        /// </summary>
        /// <returns><see cref="Java.Lang.String"/></returns>
        public Java.Lang.String WorkingDirectory()
        {
            return IExecuteWithSignature<Java.Lang.String>("workingDirectory", "()Ljava/lang/String;");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-shell/3.7.1/org/apache/kafka/shell/state/MetadataShellState.html#root--"/>
        /// </summary>
        /// <returns><see cref="Org.Apache.Kafka.Image.Node.MetadataNode"/></returns>
        public Org.Apache.Kafka.Image.Node.MetadataNode Root()
        {
            return IExecuteWithSignature<Org.Apache.Kafka.Image.Node.MetadataNode>("root", "()Lorg/apache/kafka/image/node/MetadataNode;");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-shell/3.7.1/org/apache/kafka/shell/state/MetadataShellState.html#setRoot-org.apache.kafka.image.node.MetadataNode-"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Image.Node.MetadataNode"/></param>
        public void SetRoot(Org.Apache.Kafka.Image.Node.MetadataNode arg0)
        {
            IExecuteWithSignature("setRoot", "(Lorg/apache/kafka/image/node/MetadataNode;)V", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-shell/3.7.1/org/apache/kafka/shell/state/MetadataShellState.html#setWorkingDirectory-java.lang.String-"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        public void SetWorkingDirectory(Java.Lang.String arg0)
        {
            IExecuteWithSignature("setWorkingDirectory", "(Ljava/lang/String;)V", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-shell/3.7.1/org/apache/kafka/shell/state/MetadataShellState.html#visit-java.util.function.Consumer-"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Util.Function.Consumer"/></param>
        public void Visit(Java.Util.Function.Consumer<Org.Apache.Kafka.Shell.State.MetadataShellState> arg0)
        {
            IExecuteWithSignature("visit", "(Ljava/util/function/Consumer;)V", arg0);
        }

        #endregion

        #region Nested classes

        #endregion

        // TODO: complete the class
    }
    #endregion
}