/*
*  Copyright 2024 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 2.5.7.0)
*  using kafka-shell-3.7.1.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Org.Apache.Kafka.Shell.Command
{
    #region CommandUtils
    public partial class CommandUtils
    {
        #region Constructors

        #endregion

        #region Class/Interface conversion operators

        #endregion

        #region Fields

        #endregion

        #region Static methods
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-shell/3.7.1/org/apache/kafka/shell/command/CommandUtils.html#getEffectivePaths-java.util.List-"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Util.List"/></param>
        /// <returns><see cref="Java.Util.List"/></returns>
        public static Java.Util.List<Java.Lang.String> GetEffectivePaths(Java.Util.List<Java.Lang.String> arg0)
        {
            return SExecuteWithSignature<Java.Util.List<Java.Lang.String>>(LocalBridgeClazz, "getEffectivePaths", "(Ljava/util/List;)Ljava/util/List;", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-shell/3.7.1/org/apache/kafka/shell/command/CommandUtils.html#splitPath-java.lang.String-"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        /// <returns><see cref="Java.Util.List"/></returns>
        public static Java.Util.List<Java.Lang.String> SplitPath(Java.Lang.String arg0)
        {
            return SExecuteWithSignature<Java.Util.List<Java.Lang.String>>(LocalBridgeClazz, "splitPath", "(Ljava/lang/String;)Ljava/util/List;", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-shell/3.7.1/org/apache/kafka/shell/command/CommandUtils.html#stripDotPathComponents-java.util.List-"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Util.List"/></param>
        /// <returns><see cref="Java.Util.List"/></returns>
        public static Java.Util.List<Java.Lang.String> StripDotPathComponents(Java.Util.List<Java.Lang.String> arg0)
        {
            return SExecuteWithSignature<Java.Util.List<Java.Lang.String>>(LocalBridgeClazz, "stripDotPathComponents", "(Ljava/util/List;)Ljava/util/List;", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-shell/3.7.1/org/apache/kafka/shell/command/CommandUtils.html#completeCommand-java.lang.String-java.util.List-"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        /// <param name="arg1"><see cref="Java.Util.List"/></param>
        public static void CompleteCommand(Java.Lang.String arg0, Java.Util.List<Org.Jline.Reader.Candidate> arg1)
        {
            SExecute(LocalBridgeClazz, "completeCommand", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-shell/3.7.1/org/apache/kafka/shell/command/CommandUtils.html#completePath-org.apache.kafka.shell.state.MetadataShellState-java.lang.String-java.util.List-"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Shell.State.MetadataShellState"/></param>
        /// <param name="arg1"><see cref="Java.Lang.String"/></param>
        /// <param name="arg2"><see cref="Java.Util.List"/></param>
        /// <exception cref="Java.Lang.Exception"/>
        public static void CompletePath(Org.Apache.Kafka.Shell.State.MetadataShellState arg0, Java.Lang.String arg1, Java.Util.List<Org.Jline.Reader.Candidate> arg2)
        {
            SExecute(LocalBridgeClazz, "completePath", arg0, arg1, arg2);
        }

        #endregion

        #region Instance methods

        #endregion

        #region Nested classes

        #endregion

        // TODO: complete the class
    }
    #endregion
}