/*
*  Copyright 2023 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 1.5.5.0)
*  using kafka-tools-3.4.0.jar as reference
*/

using MASES.JCOBridge.C2JBridge.JVMInterop;

namespace Org.Apache.Kafka.Tools
{
    #region ClientCompatibilityTest
    /// <summary>
    /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-tools/3.4.0/org/apache/kafka/tools/ClientCompatibilityTest.html"/>
    /// </summary>
    public partial class ClientCompatibilityTest : MASES.JCOBridge.C2JBridge.JVMBridgeMain<ClientCompatibilityTest>
    {
        /// <summary>
        /// Initialize a new <see cref="ClientCompatibilityTest"/>
        /// </summary>
        public ClientCompatibilityTest()
            : base("org.apache.kafka.tools.ClientCompatibilityTest")
        {
        }
    }
    #endregion

    #region MetadataQuorumCommand
    /// <summary>
    /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-tools/3.4.0/org/apache/kafka/tools/MetadataQuorumCommand.html"/>
    /// </summary>
    public partial class MetadataQuorumCommand : MASES.JCOBridge.C2JBridge.JVMBridgeMain<MetadataQuorumCommand>
    {
        /// <summary>
        /// Initialize a new <see cref="MetadataQuorumCommand"/>
        /// </summary>
        public MetadataQuorumCommand()
            : base("org.apache.kafka.tools.MetadataQuorumCommand")
        {
        }
    }
    #endregion

    #region OAuthCompatibilityTool
    /// <summary>
    /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-tools/3.4.0/org/apache/kafka/tools/OAuthCompatibilityTool.html"/>
    /// </summary>
    public partial class OAuthCompatibilityTool : MASES.JCOBridge.C2JBridge.JVMBridgeMain<OAuthCompatibilityTool>
    {
        /// <summary>
        /// Initialize a new <see cref="OAuthCompatibilityTool"/>
        /// </summary>
        public OAuthCompatibilityTool()
            : base("org.apache.kafka.tools.OAuthCompatibilityTool")
        {
        }
    }
    #endregion

    #region ProducerPerformance
    /// <summary>
    /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-tools/3.4.0/org/apache/kafka/tools/ProducerPerformance.html"/>
    /// </summary>
    public partial class ProducerPerformance : MASES.JCOBridge.C2JBridge.JVMBridgeMain<ProducerPerformance>
    {
        /// <summary>
        /// Initialize a new <see cref="ProducerPerformance"/>
        /// </summary>
        public ProducerPerformance()
            : base("org.apache.kafka.tools.ProducerPerformance")
        {
        }
    }
    #endregion

    #region PushHttpMetricsReporter
    /// <summary>
    /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-tools/3.4.0/org/apache/kafka/tools/PushHttpMetricsReporter.html"/>
    /// </summary>
    public partial class PushHttpMetricsReporter : MASES.JCOBridge.C2JBridge.JVMBridgeBase<PushHttpMetricsReporter>
    {
        /// <summary>
        /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
        /// </summary>
        public PushHttpMetricsReporter() { }
        /// <summary>
        /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
        /// </summary>
        public PushHttpMetricsReporter(params object[] args) : base(args) { }

        private static IJavaType LocalBridgeClazz = ClazzOf("org.apache.kafka.tools.PushHttpMetricsReporter");

        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_BridgeClassName.htm"/>
        /// </summary>
        public override string BridgeClassName => "org.apache.kafka.tools.PushHttpMetricsReporter";
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeAbstract.htm"/>
        /// </summary>
        public override bool IsBridgeAbstract => false;
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeCloseable.htm"/>
        /// </summary>
        public override bool IsBridgeCloseable => false;
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeInterface.htm"/>
        /// </summary>
        public override bool IsBridgeInterface => false;
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeStatic.htm"/>
        /// </summary>
        public override bool IsBridgeStatic => false;

        // TODO: complete the class

    }
    #endregion

    #region TerseException
    /// <summary>
    /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-tools/3.4.0/org/apache/kafka/tools/TerseException.html"/>
    /// </summary>
    public partial class TerseException : Java.Lang.Exception
    {
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeException_BridgeClassName.htm"/>
        /// </summary>
        public override string BridgeClassName => "org.apache.kafka.tools.TerseException";

        // TODO: complete the class

    }
    #endregion

    #region ThroughputThrottler
    /// <summary>
    /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-tools/3.4.0/org/apache/kafka/tools/ThroughputThrottler.html"/>
    /// </summary>
    public partial class ThroughputThrottler : MASES.JCOBridge.C2JBridge.JVMBridgeBase<ThroughputThrottler>
    {
        /// <summary>
        /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
        /// </summary>
        public ThroughputThrottler() { }
        /// <summary>
        /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
        /// </summary>
        public ThroughputThrottler(params object[] args) : base(args) { }

        private static IJavaType LocalBridgeClazz = ClazzOf("org.apache.kafka.tools.ThroughputThrottler");

        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_BridgeClassName.htm"/>
        /// </summary>
        public override string BridgeClassName => "org.apache.kafka.tools.ThroughputThrottler";
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeAbstract.htm"/>
        /// </summary>
        public override bool IsBridgeAbstract => false;
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeCloseable.htm"/>
        /// </summary>
        public override bool IsBridgeCloseable => false;
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeInterface.htm"/>
        /// </summary>
        public override bool IsBridgeInterface => false;
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeStatic.htm"/>
        /// </summary>
        public override bool IsBridgeStatic => false;

        // TODO: complete the class

    }
    #endregion

    #region TransactionalMessageCopier
    /// <summary>
    /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-tools/3.4.0/org/apache/kafka/tools/TransactionalMessageCopier.html"/>
    /// </summary>
    public partial class TransactionalMessageCopier : MASES.JCOBridge.C2JBridge.JVMBridgeMain<TransactionalMessageCopier>
    {
        /// <summary>
        /// Initialize a new <see cref="TransactionalMessageCopier"/>
        /// </summary>
        public TransactionalMessageCopier()
            : base("org.apache.kafka.tools.TransactionalMessageCopier")
        {
        }
    }
    #endregion

    #region TransactionsCommand
    /// <summary>
    /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-tools/3.4.0/org/apache/kafka/tools/TransactionsCommand.html"/>
    /// </summary>
    public partial class TransactionsCommand : MASES.JCOBridge.C2JBridge.JVMBridgeMain<TransactionsCommand>
    {
        /// <summary>
        /// Initialize a new <see cref="TransactionsCommand"/>
        /// </summary>
        public TransactionsCommand()
            : base("org.apache.kafka.tools.TransactionsCommand")
        {
        }
    }
    #endregion

    #region VerifiableConsumer
    /// <summary>
    /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-tools/3.4.0/org/apache/kafka/tools/VerifiableConsumer.html"/>
    /// </summary>
    public partial class VerifiableConsumer : MASES.JCOBridge.C2JBridge.JVMBridgeMain<VerifiableConsumer>
    {
        /// <summary>
        /// Initialize a new <see cref="VerifiableConsumer"/>
        /// </summary>
        public VerifiableConsumer()
            : base("org.apache.kafka.tools.VerifiableConsumer")
        {
        }
    }
    #endregion

    #region VerifiableLog4jAppender
    /// <summary>
    /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-tools/3.4.0/org/apache/kafka/tools/VerifiableLog4jAppender.html"/>
    /// </summary>
    public partial class VerifiableLog4jAppender : MASES.JCOBridge.C2JBridge.JVMBridgeMain<VerifiableLog4jAppender>
    {
        /// <summary>
        /// Initialize a new <see cref="VerifiableLog4jAppender"/>
        /// </summary>
        public VerifiableLog4jAppender()
            : base("org.apache.kafka.tools.VerifiableLog4jAppender")
        {
        }
    }
    #endregion

    #region VerifiableProducer
    /// <summary>
    /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-tools/3.4.0/org/apache/kafka/tools/VerifiableProducer.html"/>
    /// </summary>
    public partial class VerifiableProducer : MASES.JCOBridge.C2JBridge.JVMBridgeMain<VerifiableProducer>
    {
        /// <summary>
        /// Initialize a new <see cref="VerifiableProducer"/>
        /// </summary>
        public VerifiableProducer()
            : base("org.apache.kafka.tools.VerifiableProducer")
        {
        }
    }
    #endregion


}