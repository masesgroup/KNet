/*
*  Copyright (c) 2021-2025 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 2.6.4.0)
*  using kafka-clients-4.1.0.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Org.Apache.Kafka.Clients.Admin
{
    #region StreamsGroupMemberDescription declaration
    /// <summary>
    /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/4.0.0/org/apache/kafka/clients/admin/StreamsGroupMemberDescription.html"/>
    /// </summary>
    public partial class StreamsGroupMemberDescription : MASES.JCOBridge.C2JBridge.JVMBridgeBase<StreamsGroupMemberDescription>
    {
        const string _bridgeClassName = "org.apache.kafka.clients.admin.StreamsGroupMemberDescription";
        /// <summary>
        /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
        /// </summary>
        public StreamsGroupMemberDescription() { }
        /// <summary>
        /// Internal constructor: used internally from JCOBridge
        /// </summary>
        [global::System.Obsolete("This public initializer is needed for JCOBridge internal use, other uses can produce unidentible behaviors.")]
        public StreamsGroupMemberDescription(IJVMBridgeBaseInitializer initializer) : base(initializer) { }
        /// <summary>
        /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
        /// </summary>
        public StreamsGroupMemberDescription(params object[] args) : base(args) { }

        private static readonly global::System.Exception _LocalBridgeClazzException = null;
        private static readonly MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType _LocalBridgeClazz = JVMBridgeBase.ClazzOf(_bridgeClassName, out _LocalBridgeClazzException, false);
        private static MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType LocalBridgeClazz => _LocalBridgeClazz ?? throw _LocalBridgeClazzException ?? new global::System.InvalidOperationException($"Class {_bridgeClassName} was not found.");

        /// <inheritdoc/>
        public override string BridgeClassName => _bridgeClassName;
        /// <inheritdoc/>
        public override bool IsBridgeAbstract => false;
        /// <inheritdoc/>
        public override bool IsBridgeCloseable => false;
        /// <inheritdoc/>
        public override bool IsBridgeInterface => false;
        /// <inheritdoc/>
        public override bool IsBridgeStatic => false;

        // TODO: complete the class
        #region Endpoint declaration
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/4.0.0/org/apache/kafka/clients/admin/StreamsGroupMemberDescription.Endpoint.html"/>
        /// </summary>
        public partial class Endpoint : MASES.JCOBridge.C2JBridge.JVMBridgeBase<Endpoint>
        {
            const string _bridgeClassName = "org.apache.kafka.clients.admin.StreamsGroupMemberDescription$Endpoint";
            /// <summary>
            /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
            /// </summary>
            public Endpoint() { }
            /// <summary>
            /// Internal constructor: used internally from JCOBridge
            /// </summary>
            [global::System.Obsolete("This public initializer is needed for JCOBridge internal use, other uses can produce unidentible behaviors.")]
            public Endpoint(IJVMBridgeBaseInitializer initializer) : base(initializer) { }
            /// <summary>
            /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
            /// </summary>
            public Endpoint(params object[] args) : base(args) { }

            private static readonly global::System.Exception _LocalBridgeClazzException = null;
            private static readonly MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType _LocalBridgeClazz = JVMBridgeBase.ClazzOf(_bridgeClassName, out _LocalBridgeClazzException, false);
            private static MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType LocalBridgeClazz => _LocalBridgeClazz ?? throw _LocalBridgeClazzException ?? new global::System.InvalidOperationException($"Class {_bridgeClassName} was not found.");

            /// <inheritdoc/>
            public override string BridgeClassName => _bridgeClassName;
            /// <inheritdoc/>
            public override bool IsBridgeAbstract => false;
            /// <inheritdoc/>
            public override bool IsBridgeCloseable => false;
            /// <inheritdoc/>
            public override bool IsBridgeInterface => false;
            /// <inheritdoc/>
            public override bool IsBridgeStatic => true;

            // TODO: complete the class

        }
        #endregion

        #region TaskOffset declaration
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/4.0.0/org/apache/kafka/clients/admin/StreamsGroupMemberDescription.TaskOffset.html"/>
        /// </summary>
        public partial class TaskOffset : MASES.JCOBridge.C2JBridge.JVMBridgeBase<TaskOffset>
        {
            const string _bridgeClassName = "org.apache.kafka.clients.admin.StreamsGroupMemberDescription$TaskOffset";
            /// <summary>
            /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
            /// </summary>
            public TaskOffset() { }
            /// <summary>
            /// Internal constructor: used internally from JCOBridge
            /// </summary>
            [global::System.Obsolete("This public initializer is needed for JCOBridge internal use, other uses can produce unidentible behaviors.")]
            public TaskOffset(IJVMBridgeBaseInitializer initializer) : base(initializer) { }
            /// <summary>
            /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
            /// </summary>
            public TaskOffset(params object[] args) : base(args) { }

            private static readonly global::System.Exception _LocalBridgeClazzException = null;
            private static readonly MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType _LocalBridgeClazz = JVMBridgeBase.ClazzOf(_bridgeClassName, out _LocalBridgeClazzException, false);
            private static MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType LocalBridgeClazz => _LocalBridgeClazz ?? throw _LocalBridgeClazzException ?? new global::System.InvalidOperationException($"Class {_bridgeClassName} was not found.");

            /// <inheritdoc/>
            public override string BridgeClassName => _bridgeClassName;
            /// <inheritdoc/>
            public override bool IsBridgeAbstract => false;
            /// <inheritdoc/>
            public override bool IsBridgeCloseable => false;
            /// <inheritdoc/>
            public override bool IsBridgeInterface => false;
            /// <inheritdoc/>
            public override bool IsBridgeStatic => true;

            // TODO: complete the class

        }
        #endregion

    
    }
    #endregion

    #region StreamsGroupMemberDescription implementation
    public partial class StreamsGroupMemberDescription
    {
        #region Constructors
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/4.0.0/org/apache/kafka/clients/admin/StreamsGroupMemberDescription.html#%3Cinit%3E(java.lang.String,int,java.util.Optional,java.util.Optional,java.lang.String,java.lang.String,int,java.lang.String,java.util.Optional,java.util.Map,java.util.List,java.util.List,org.apache.kafka.clients.admin.StreamsGroupMemberAssignment,org.apache.kafka.clients.admin.StreamsGroupMemberAssignment,boolean)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        /// <param name="arg1"><see cref="int"/></param>
        /// <param name="arg2"><see cref="Java.Util.Optional"/></param>
        /// <param name="arg3"><see cref="Java.Util.Optional"/></param>
        /// <param name="arg4"><see cref="Java.Lang.String"/></param>
        /// <param name="arg5"><see cref="Java.Lang.String"/></param>
        /// <param name="arg6"><see cref="int"/></param>
        /// <param name="arg7"><see cref="Java.Lang.String"/></param>
        /// <param name="arg8"><see cref="Java.Util.Optional"/></param>
        /// <param name="arg9"><see cref="Java.Util.Map"/></param>
        /// <param name="arg10"><see cref="Java.Util.List"/></param>
        /// <param name="arg11"><see cref="Java.Util.List"/></param>
        /// <param name="arg12"><see cref="Org.Apache.Kafka.Clients.Admin.StreamsGroupMemberAssignment"/></param>
        /// <param name="arg13"><see cref="Org.Apache.Kafka.Clients.Admin.StreamsGroupMemberAssignment"/></param>
        /// <param name="arg14"><see cref="bool"/></param>
        public StreamsGroupMemberDescription(Java.Lang.String arg0, int arg1, Java.Util.Optional<Java.Lang.String> arg2, Java.Util.Optional<Java.Lang.String> arg3, Java.Lang.String arg4, Java.Lang.String arg5, int arg6, Java.Lang.String arg7, Java.Util.Optional<Org.Apache.Kafka.Clients.Admin.StreamsGroupMemberDescription.Endpoint> arg8, Java.Util.Map<Java.Lang.String, Java.Lang.String> arg9, Java.Util.List<Org.Apache.Kafka.Clients.Admin.StreamsGroupMemberDescription.TaskOffset> arg10, Java.Util.List<Org.Apache.Kafka.Clients.Admin.StreamsGroupMemberDescription.TaskOffset> arg11, Org.Apache.Kafka.Clients.Admin.StreamsGroupMemberAssignment arg12, Org.Apache.Kafka.Clients.Admin.StreamsGroupMemberAssignment arg13, bool arg14)
            : base(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11, arg12, arg13, arg14)
        {
        }

        #endregion

        #region Class/Interface conversion operators

        #endregion

        #region Fields

        #endregion

        #region Static methods

        #endregion

        #region Instance methods
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/4.0.0/org/apache/kafka/clients/admin/StreamsGroupMemberDescription.html#isClassic()"/>
        /// </summary>
        /// <returns><see cref="bool"/></returns>
        public bool IsClassic()
        {
            return IExecuteWithSignature<bool>("isClassic", "()Z");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/4.0.0/org/apache/kafka/clients/admin/StreamsGroupMemberDescription.html#memberEpoch()"/>
        /// </summary>
        /// <returns><see cref="int"/></returns>
        public int MemberEpoch()
        {
            return IExecuteWithSignature<int>("memberEpoch", "()I");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/4.0.0/org/apache/kafka/clients/admin/StreamsGroupMemberDescription.html#topologyEpoch()"/>
        /// </summary>
        /// <returns><see cref="int"/></returns>
        public int TopologyEpoch()
        {
            return IExecuteWithSignature<int>("topologyEpoch", "()I");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/4.0.0/org/apache/kafka/clients/admin/StreamsGroupMemberDescription.html#clientHost()"/>
        /// </summary>
        /// <returns><see cref="Java.Lang.String"/></returns>
        public Java.Lang.String ClientHost()
        {
            return IExecuteWithSignature<Java.Lang.String>("clientHost", "()Ljava/lang/String;");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/4.0.0/org/apache/kafka/clients/admin/StreamsGroupMemberDescription.html#clientId()"/>
        /// </summary>
        /// <returns><see cref="Java.Lang.String"/></returns>
        public Java.Lang.String ClientId()
        {
            return IExecuteWithSignature<Java.Lang.String>("clientId", "()Ljava/lang/String;");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/4.0.0/org/apache/kafka/clients/admin/StreamsGroupMemberDescription.html#memberId()"/>
        /// </summary>
        /// <returns><see cref="Java.Lang.String"/></returns>
        public Java.Lang.String MemberId()
        {
            return IExecuteWithSignature<Java.Lang.String>("memberId", "()Ljava/lang/String;");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/4.0.0/org/apache/kafka/clients/admin/StreamsGroupMemberDescription.html#processId()"/>
        /// </summary>
        /// <returns><see cref="Java.Lang.String"/></returns>
        public Java.Lang.String ProcessId()
        {
            return IExecuteWithSignature<Java.Lang.String>("processId", "()Ljava/lang/String;");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/4.0.0/org/apache/kafka/clients/admin/StreamsGroupMemberDescription.html#taskEndOffsets()"/>
        /// </summary>
        /// <returns><see cref="Java.Util.List"/></returns>
        public Java.Util.List<Org.Apache.Kafka.Clients.Admin.StreamsGroupMemberDescription.TaskOffset> TaskEndOffsets()
        {
            return IExecuteWithSignature<Java.Util.List<Org.Apache.Kafka.Clients.Admin.StreamsGroupMemberDescription.TaskOffset>>("taskEndOffsets", "()Ljava/util/List;");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/4.0.0/org/apache/kafka/clients/admin/StreamsGroupMemberDescription.html#taskOffsets()"/>
        /// </summary>
        /// <returns><see cref="Java.Util.List"/></returns>
        public Java.Util.List<Org.Apache.Kafka.Clients.Admin.StreamsGroupMemberDescription.TaskOffset> TaskOffsets()
        {
            return IExecuteWithSignature<Java.Util.List<Org.Apache.Kafka.Clients.Admin.StreamsGroupMemberDescription.TaskOffset>>("taskOffsets", "()Ljava/util/List;");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/4.0.0/org/apache/kafka/clients/admin/StreamsGroupMemberDescription.html#clientTags()"/>
        /// </summary>
        /// <returns><see cref="Java.Util.Map"/></returns>
        public Java.Util.Map<Java.Lang.String, Java.Lang.String> ClientTags()
        {
            return IExecuteWithSignature<Java.Util.Map<Java.Lang.String, Java.Lang.String>>("clientTags", "()Ljava/util/Map;");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/4.0.0/org/apache/kafka/clients/admin/StreamsGroupMemberDescription.html#instanceId()"/>
        /// </summary>
        /// <returns><see cref="Java.Util.Optional"/></returns>
        public Java.Util.Optional<Java.Lang.String> InstanceId()
        {
            return IExecuteWithSignature<Java.Util.Optional<Java.Lang.String>>("instanceId", "()Ljava/util/Optional;");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/4.0.0/org/apache/kafka/clients/admin/StreamsGroupMemberDescription.html#rackId()"/>
        /// </summary>
        /// <returns><see cref="Java.Util.Optional"/></returns>
        public Java.Util.Optional<Java.Lang.String> RackId()
        {
            return IExecuteWithSignature<Java.Util.Optional<Java.Lang.String>>("rackId", "()Ljava/util/Optional;");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/4.0.0/org/apache/kafka/clients/admin/StreamsGroupMemberDescription.html#userEndpoint()"/>
        /// </summary>
        /// <returns><see cref="Java.Util.Optional"/></returns>
        public Java.Util.Optional<Org.Apache.Kafka.Clients.Admin.StreamsGroupMemberDescription.Endpoint> UserEndpoint()
        {
            return IExecuteWithSignature<Java.Util.Optional<Org.Apache.Kafka.Clients.Admin.StreamsGroupMemberDescription.Endpoint>>("userEndpoint", "()Ljava/util/Optional;");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/4.0.0/org/apache/kafka/clients/admin/StreamsGroupMemberDescription.html#assignment()"/>
        /// </summary>
        /// <returns><see cref="Org.Apache.Kafka.Clients.Admin.StreamsGroupMemberAssignment"/></returns>
        public Org.Apache.Kafka.Clients.Admin.StreamsGroupMemberAssignment Assignment()
        {
            return IExecuteWithSignature<Org.Apache.Kafka.Clients.Admin.StreamsGroupMemberAssignment>("assignment", "()Lorg/apache/kafka/clients/admin/StreamsGroupMemberAssignment;");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/4.0.0/org/apache/kafka/clients/admin/StreamsGroupMemberDescription.html#targetAssignment()"/>
        /// </summary>
        /// <returns><see cref="Org.Apache.Kafka.Clients.Admin.StreamsGroupMemberAssignment"/></returns>
        public Org.Apache.Kafka.Clients.Admin.StreamsGroupMemberAssignment TargetAssignment()
        {
            return IExecuteWithSignature<Org.Apache.Kafka.Clients.Admin.StreamsGroupMemberAssignment>("targetAssignment", "()Lorg/apache/kafka/clients/admin/StreamsGroupMemberAssignment;");
        }

        #endregion

        #region Nested classes
        #region Endpoint implementation
        public partial class Endpoint
        {
            #region Constructors
            /// <summary>
            /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/4.0.0/org/apache/kafka/clients/admin/StreamsGroupMemberDescription.Endpoint.html#%3Cinit%3E(java.lang.String,int)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Java.Lang.String"/></param>
            /// <param name="arg1"><see cref="int"/></param>
            public Endpoint(Java.Lang.String arg0, int arg1)
                : base(arg0, arg1)
            {
            }

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields

            #endregion

            #region Static methods

            #endregion

            #region Instance methods
            /// <summary>
            /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/4.0.0/org/apache/kafka/clients/admin/StreamsGroupMemberDescription.Endpoint.html#port()"/>
            /// </summary>
            /// <returns><see cref="int"/></returns>
            public int Port()
            {
                return IExecuteWithSignature<int>("port", "()I");
            }
            /// <summary>
            /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/4.0.0/org/apache/kafka/clients/admin/StreamsGroupMemberDescription.Endpoint.html#host()"/>
            /// </summary>
            /// <returns><see cref="Java.Lang.String"/></returns>
            public Java.Lang.String Host()
            {
                return IExecuteWithSignature<Java.Lang.String>("host", "()Ljava/lang/String;");
            }

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

        #region TaskOffset implementation
        public partial class TaskOffset
        {
            #region Constructors
            /// <summary>
            /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/4.0.0/org/apache/kafka/clients/admin/StreamsGroupMemberDescription.TaskOffset.html#%3Cinit%3E(java.lang.String,int,long)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Java.Lang.String"/></param>
            /// <param name="arg1"><see cref="int"/></param>
            /// <param name="arg2"><see cref="long"/></param>
            public TaskOffset(Java.Lang.String arg0, int arg1, long arg2)
                : base(arg0, arg1, arg2)
            {
            }

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields

            #endregion

            #region Static methods

            #endregion

            #region Instance methods
            /// <summary>
            /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/4.0.0/org/apache/kafka/clients/admin/StreamsGroupMemberDescription.TaskOffset.html#partition()"/>
            /// </summary>
            /// <returns><see cref="int"/></returns>
            public int Partition()
            {
                return IExecuteWithSignature<int>("partition", "()I");
            }
            /// <summary>
            /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/4.0.0/org/apache/kafka/clients/admin/StreamsGroupMemberDescription.TaskOffset.html#subtopologyId()"/>
            /// </summary>
            /// <returns><see cref="Java.Lang.String"/></returns>
            public Java.Lang.String SubtopologyId()
            {
                return IExecuteWithSignature<Java.Lang.String>("subtopologyId", "()Ljava/lang/String;");
            }
            /// <summary>
            /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/4.0.0/org/apache/kafka/clients/admin/StreamsGroupMemberDescription.TaskOffset.html#offset()"/>
            /// </summary>
            /// <returns><see cref="long"/></returns>
            public long Offset()
            {
                return IExecuteWithSignature<long>("offset", "()J");
            }

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

    
        #endregion

        // TODO: complete the class
    }
    #endregion
}