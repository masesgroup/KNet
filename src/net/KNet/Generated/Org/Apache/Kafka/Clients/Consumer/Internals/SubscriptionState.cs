/*
*  Copyright 2023 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 1.5.5.0)
*  using kafka-clients-3.4.0.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Org.Apache.Kafka.Clients.Consumer.Internals
{
    #region SubscriptionState
    public partial class SubscriptionState
    {
        #region Constructors
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/consumer/internals/SubscriptionState.html#%3Cinit%3E(org.apache.kafka.common.utils.LogContext,org.apache.kafka.clients.consumer.OffsetResetStrategy)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Common.Utils.LogContext"/></param>
        /// <param name="arg1"><see cref="Org.Apache.Kafka.Clients.Consumer.OffsetResetStrategy"/></param>
        public SubscriptionState(Org.Apache.Kafka.Common.Utils.LogContext arg0, Org.Apache.Kafka.Clients.Consumer.OffsetResetStrategy arg1)
            : base(arg0, arg1)
        {
        }

        #endregion

        #region Class/Interface conversion operators

        #endregion

        #region Fields

        #endregion

        #region Static methods

        #endregion

        #region Instance methods
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/consumer/internals/SubscriptionState.html#allConsumed()"/> 
        /// </summary>
        public Java.Util.Map<Org.Apache.Kafka.Common.TopicPartition, Org.Apache.Kafka.Clients.Consumer.OffsetAndMetadata> AllConsumed
        {
            get { return IExecute<Java.Util.Map<Org.Apache.Kafka.Common.TopicPartition, Org.Apache.Kafka.Clients.Consumer.OffsetAndMetadata>>("allConsumed"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/consumer/internals/SubscriptionState.html#assignedPartitions()"/> 
        /// </summary>
        public Java.Util.Set<Org.Apache.Kafka.Common.TopicPartition> AssignedPartitions
        {
            get { return IExecute<Java.Util.Set<Org.Apache.Kafka.Common.TopicPartition>>("assignedPartitions"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/consumer/internals/SubscriptionState.html#assignedPartitionsList()"/> 
        /// </summary>
        public Java.Util.List<Org.Apache.Kafka.Common.TopicPartition> AssignedPartitionsList
        {
            get { return IExecute<Java.Util.List<Org.Apache.Kafka.Common.TopicPartition>>("assignedPartitionsList"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/consumer/internals/SubscriptionState.html#hasAllFetchPositions()"/> 
        /// </summary>
        public bool HasAllFetchPositions
        {
            get { return IExecute<bool>("hasAllFetchPositions"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/consumer/internals/SubscriptionState.html#hasAutoAssignedPartitions()"/> 
        /// </summary>
        public bool HasAutoAssignedPartitions
        {
            get { return IExecute<bool>("hasAutoAssignedPartitions"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/consumer/internals/SubscriptionState.html#hasNoSubscriptionOrUserAssignment()"/> 
        /// </summary>
        public bool HasNoSubscriptionOrUserAssignment
        {
            get { return IExecute<bool>("hasNoSubscriptionOrUserAssignment"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/consumer/internals/SubscriptionState.html#initializingPartitions()"/> 
        /// </summary>
        public Java.Util.Set<Org.Apache.Kafka.Common.TopicPartition> InitializingPartitions
        {
            get { return IExecute<Java.Util.Set<Org.Apache.Kafka.Common.TopicPartition>>("initializingPartitions"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/consumer/internals/SubscriptionState.html#pausedPartitions()"/> 
        /// </summary>
        public Java.Util.Set<Org.Apache.Kafka.Common.TopicPartition> PausedPartitions
        {
            get { return IExecute<Java.Util.Set<Org.Apache.Kafka.Common.TopicPartition>>("pausedPartitions"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/consumer/internals/SubscriptionState.html#prettyString()"/> 
        /// </summary>
        public string PrettyString
        {
            get { return IExecute<string>("prettyString"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/consumer/internals/SubscriptionState.html#rebalanceListener()"/> 
        /// </summary>
        public Org.Apache.Kafka.Clients.Consumer.ConsumerRebalanceListener RebalanceListener
        {
            get { return IExecute<Org.Apache.Kafka.Clients.Consumer.ConsumerRebalanceListener>("rebalanceListener"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/consumer/internals/SubscriptionState.html#subscription()"/> 
        /// </summary>
        public Java.Util.Set<string> Subscription
        {
            get { return IExecute<Java.Util.Set<string>>("subscription"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/consumer/internals/SubscriptionState.html#assignFromUser(java.util.Set)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Util.Set"/></param>
        /// <returns><see cref="bool"/></returns>
        public bool AssignFromUser(Java.Util.Set<Org.Apache.Kafka.Common.TopicPartition> arg0)
        {
            return IExecute<bool>("assignFromUser", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/consumer/internals/SubscriptionState.html#awaitingValidation(org.apache.kafka.common.TopicPartition)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Common.TopicPartition"/></param>
        /// <returns><see cref="bool"/></returns>
        public bool AwaitingValidation(Org.Apache.Kafka.Common.TopicPartition arg0)
        {
            return IExecute<bool>("awaitingValidation", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/consumer/internals/SubscriptionState.html#checkAssignmentMatchedSubscription(java.util.Collection)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Util.Collection"/></param>
        /// <returns><see cref="bool"/></returns>
        public bool CheckAssignmentMatchedSubscription(Java.Util.Collection<Org.Apache.Kafka.Common.TopicPartition> arg0)
        {
            return IExecute<bool>("checkAssignmentMatchedSubscription", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/consumer/internals/SubscriptionState.html#hasValidPosition(org.apache.kafka.common.TopicPartition)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Common.TopicPartition"/></param>
        /// <returns><see cref="bool"/></returns>
        public bool HasValidPosition(Org.Apache.Kafka.Common.TopicPartition arg0)
        {
            return IExecute<bool>("hasValidPosition", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/consumer/internals/SubscriptionState.html#isAssigned(org.apache.kafka.common.TopicPartition)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Common.TopicPartition"/></param>
        /// <returns><see cref="bool"/></returns>
        public bool IsAssigned(Org.Apache.Kafka.Common.TopicPartition arg0)
        {
            return IExecute<bool>("isAssigned", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/consumer/internals/SubscriptionState.html#isOffsetResetNeeded(org.apache.kafka.common.TopicPartition)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Common.TopicPartition"/></param>
        /// <returns><see cref="bool"/></returns>
        public bool IsOffsetResetNeeded(Org.Apache.Kafka.Common.TopicPartition arg0)
        {
            return IExecute<bool>("isOffsetResetNeeded", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/consumer/internals/SubscriptionState.html#isPaused(org.apache.kafka.common.TopicPartition)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Common.TopicPartition"/></param>
        /// <returns><see cref="bool"/></returns>
        public bool IsPaused(Org.Apache.Kafka.Common.TopicPartition arg0)
        {
            return IExecute<bool>("isPaused", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/consumer/internals/SubscriptionState.html#maybeValidatePositionForCurrentLeader(org.apache.kafka.clients.ApiVersions,org.apache.kafka.common.TopicPartition,org.apache.kafka.clients.Metadata.LeaderAndEpoch)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Clients.ApiVersions"/></param>
        /// <param name="arg1"><see cref="Org.Apache.Kafka.Common.TopicPartition"/></param>
        /// <param name="arg2"><see cref="Org.Apache.Kafka.Clients.Metadata.LeaderAndEpoch"/></param>
        /// <returns><see cref="bool"/></returns>
        public bool MaybeValidatePositionForCurrentLeader(Org.Apache.Kafka.Clients.ApiVersions arg0, Org.Apache.Kafka.Common.TopicPartition arg1, Org.Apache.Kafka.Clients.Metadata.LeaderAndEpoch arg2)
        {
            return IExecute<bool>("maybeValidatePositionForCurrentLeader", arg0, arg1, arg2);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/consumer/internals/SubscriptionState.html#partitionEndOffsetRequested(org.apache.kafka.common.TopicPartition)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Common.TopicPartition"/></param>
        /// <returns><see cref="bool"/></returns>
        public bool PartitionEndOffsetRequested(Org.Apache.Kafka.Common.TopicPartition arg0)
        {
            return IExecute<bool>("partitionEndOffsetRequested", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/consumer/internals/SubscriptionState.html#subscribe(java.util.Set,org.apache.kafka.clients.consumer.ConsumerRebalanceListener)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Util.Set"/></param>
        /// <param name="arg1"><see cref="Org.Apache.Kafka.Clients.Consumer.ConsumerRebalanceListener"/></param>
        /// <returns><see cref="bool"/></returns>
        public bool Subscribe(Java.Util.Set<string> arg0, Org.Apache.Kafka.Clients.Consumer.ConsumerRebalanceListener arg1)
        {
            return IExecute<bool>("subscribe", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/consumer/internals/SubscriptionState.html#subscribeFromPattern(java.util.Set)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Util.Set"/></param>
        /// <returns><see cref="bool"/></returns>
        public bool SubscribeFromPattern(Java.Util.Set<string> arg0)
        {
            return IExecute<bool>("subscribeFromPattern", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/consumer/internals/SubscriptionState.html#partitionEndOffset(org.apache.kafka.common.TopicPartition,org.apache.kafka.common.IsolationLevel)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Common.TopicPartition"/></param>
        /// <param name="arg1"><see cref="Org.Apache.Kafka.Common.IsolationLevel"/></param>
        /// <returns><see cref="long"/></returns>
        public long? PartitionEndOffset(Org.Apache.Kafka.Common.TopicPartition arg0, Org.Apache.Kafka.Common.IsolationLevel arg1)
        {
            return IExecute<long?>("partitionEndOffset", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/consumer/internals/SubscriptionState.html#partitionLag(org.apache.kafka.common.TopicPartition,org.apache.kafka.common.IsolationLevel)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Common.TopicPartition"/></param>
        /// <param name="arg1"><see cref="Org.Apache.Kafka.Common.IsolationLevel"/></param>
        /// <returns><see cref="long"/></returns>
        public long? PartitionLag(Org.Apache.Kafka.Common.TopicPartition arg0, Org.Apache.Kafka.Common.IsolationLevel arg1)
        {
            return IExecute<long?>("partitionLag", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/consumer/internals/SubscriptionState.html#fetchablePartitions(java.util.function.Predicate)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Util.Function.Predicate"/></param>
        /// <returns><see cref="Java.Util.List"/></returns>
        public Java.Util.List<Org.Apache.Kafka.Common.TopicPartition> FetchablePartitions(Java.Util.Function.Predicate<Org.Apache.Kafka.Common.TopicPartition> arg0)
        {
            return IExecute<Java.Util.List<Org.Apache.Kafka.Common.TopicPartition>>("fetchablePartitions", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/consumer/internals/SubscriptionState.html#clearPreferredReadReplica(org.apache.kafka.common.TopicPartition)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Common.TopicPartition"/></param>
        /// <returns><see cref="Java.Util.Optional"/></returns>
        public Java.Util.Optional<int?> ClearPreferredReadReplica(Org.Apache.Kafka.Common.TopicPartition arg0)
        {
            return IExecute<Java.Util.Optional<int?>>("clearPreferredReadReplica", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/consumer/internals/SubscriptionState.html#preferredReadReplica(org.apache.kafka.common.TopicPartition,long)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Common.TopicPartition"/></param>
        /// <param name="arg1"><see cref="long"/></param>
        /// <returns><see cref="Java.Util.Optional"/></returns>
        public Java.Util.Optional<int?> PreferredReadReplica(Org.Apache.Kafka.Common.TopicPartition arg0, long arg1)
        {
            return IExecute<Java.Util.Optional<int?>>("preferredReadReplica", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/consumer/internals/SubscriptionState.html#maybeCompleteValidation(org.apache.kafka.common.TopicPartition,org.apache.kafka.clients.consumer.internals.SubscriptionState.FetchPosition,org.apache.kafka.common.message.OffsetForLeaderEpochResponseData.EpochEndOffset)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Common.TopicPartition"/></param>
        /// <param name="arg1"><see cref="Org.Apache.Kafka.Clients.Consumer.Internals.SubscriptionState.FetchPosition"/></param>
        /// <param name="arg2"><see cref="Org.Apache.Kafka.Common.Message.OffsetForLeaderEpochResponseData.EpochEndOffset"/></param>
        /// <returns><see cref="Java.Util.Optional"/></returns>
        public Java.Util.Optional<Org.Apache.Kafka.Clients.Consumer.Internals.SubscriptionState.LogTruncation> MaybeCompleteValidation(Org.Apache.Kafka.Common.TopicPartition arg0, Org.Apache.Kafka.Clients.Consumer.Internals.SubscriptionState.FetchPosition arg1, Org.Apache.Kafka.Common.Message.OffsetForLeaderEpochResponseData.EpochEndOffset arg2)
        {
            return IExecute<Java.Util.Optional<Org.Apache.Kafka.Clients.Consumer.Internals.SubscriptionState.LogTruncation>>("maybeCompleteValidation", arg0, arg1, arg2);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/consumer/internals/SubscriptionState.html#partitionsNeedingReset(long)"/>
        /// </summary>
        /// <param name="arg0"><see cref="long"/></param>
        /// <returns><see cref="Java.Util.Set"/></returns>
        public Java.Util.Set<Org.Apache.Kafka.Common.TopicPartition> PartitionsNeedingReset(long arg0)
        {
            return IExecute<Java.Util.Set<Org.Apache.Kafka.Common.TopicPartition>>("partitionsNeedingReset", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/consumer/internals/SubscriptionState.html#partitionsNeedingValidation(long)"/>
        /// </summary>
        /// <param name="arg0"><see cref="long"/></param>
        /// <returns><see cref="Java.Util.Set"/></returns>
        public Java.Util.Set<Org.Apache.Kafka.Common.TopicPartition> PartitionsNeedingValidation(long arg0)
        {
            return IExecute<Java.Util.Set<Org.Apache.Kafka.Common.TopicPartition>>("partitionsNeedingValidation", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/consumer/internals/SubscriptionState.html#position(org.apache.kafka.common.TopicPartition)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Common.TopicPartition"/></param>
        /// <returns><see cref="Org.Apache.Kafka.Clients.Consumer.Internals.SubscriptionState.FetchPosition"/></returns>
        public Org.Apache.Kafka.Clients.Consumer.Internals.SubscriptionState.FetchPosition Position(Org.Apache.Kafka.Common.TopicPartition arg0)
        {
            return IExecute<Org.Apache.Kafka.Clients.Consumer.Internals.SubscriptionState.FetchPosition>("position", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/consumer/internals/SubscriptionState.html#validPosition(org.apache.kafka.common.TopicPartition)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Common.TopicPartition"/></param>
        /// <returns><see cref="Org.Apache.Kafka.Clients.Consumer.Internals.SubscriptionState.FetchPosition"/></returns>
        public Org.Apache.Kafka.Clients.Consumer.Internals.SubscriptionState.FetchPosition ValidPosition(Org.Apache.Kafka.Common.TopicPartition arg0)
        {
            return IExecute<Org.Apache.Kafka.Clients.Consumer.Internals.SubscriptionState.FetchPosition>("validPosition", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/consumer/internals/SubscriptionState.html#resetStrategy(org.apache.kafka.common.TopicPartition)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Common.TopicPartition"/></param>
        /// <returns><see cref="Org.Apache.Kafka.Clients.Consumer.OffsetResetStrategy"/></returns>
        public Org.Apache.Kafka.Clients.Consumer.OffsetResetStrategy ResetStrategy(Org.Apache.Kafka.Common.TopicPartition arg0)
        {
            return IExecute<Org.Apache.Kafka.Clients.Consumer.OffsetResetStrategy>("resetStrategy", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/consumer/internals/SubscriptionState.html#assignFromSubscribed(java.util.Collection)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Util.Collection"/></param>
        public void AssignFromSubscribed(Java.Util.Collection<Org.Apache.Kafka.Common.TopicPartition> arg0)
        {
            IExecute("assignFromSubscribed", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/consumer/internals/SubscriptionState.html#completeValidation(org.apache.kafka.common.TopicPartition)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Common.TopicPartition"/></param>
        public void CompleteValidation(Org.Apache.Kafka.Common.TopicPartition arg0)
        {
            IExecute("completeValidation", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/consumer/internals/SubscriptionState.html#markPendingRevocation(java.util.Set)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Util.Set"/></param>
        public void MarkPendingRevocation(Java.Util.Set<Org.Apache.Kafka.Common.TopicPartition> arg0)
        {
            IExecute("markPendingRevocation", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/consumer/internals/SubscriptionState.html#pause(org.apache.kafka.common.TopicPartition)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Common.TopicPartition"/></param>
        public void Pause(Org.Apache.Kafka.Common.TopicPartition arg0)
        {
            IExecute("pause", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/consumer/internals/SubscriptionState.html#position(org.apache.kafka.common.TopicPartition,org.apache.kafka.clients.consumer.internals.SubscriptionState.FetchPosition)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Common.TopicPartition"/></param>
        /// <param name="arg1"><see cref="Org.Apache.Kafka.Clients.Consumer.Internals.SubscriptionState.FetchPosition"/></param>
        public void Position(Org.Apache.Kafka.Common.TopicPartition arg0, Org.Apache.Kafka.Clients.Consumer.Internals.SubscriptionState.FetchPosition arg1)
        {
            IExecute("position", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/consumer/internals/SubscriptionState.html#requestOffsetReset(java.util.Collection,org.apache.kafka.clients.consumer.OffsetResetStrategy)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Util.Collection"/></param>
        /// <param name="arg1"><see cref="Org.Apache.Kafka.Clients.Consumer.OffsetResetStrategy"/></param>
        public void RequestOffsetReset(Java.Util.Collection<Org.Apache.Kafka.Common.TopicPartition> arg0, Org.Apache.Kafka.Clients.Consumer.OffsetResetStrategy arg1)
        {
            IExecute("requestOffsetReset", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/consumer/internals/SubscriptionState.html#requestOffsetReset(org.apache.kafka.common.TopicPartition,org.apache.kafka.clients.consumer.OffsetResetStrategy)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Common.TopicPartition"/></param>
        /// <param name="arg1"><see cref="Org.Apache.Kafka.Clients.Consumer.OffsetResetStrategy"/></param>
        public void RequestOffsetReset(Org.Apache.Kafka.Common.TopicPartition arg0, Org.Apache.Kafka.Clients.Consumer.OffsetResetStrategy arg1)
        {
            IExecute("requestOffsetReset", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/consumer/internals/SubscriptionState.html#requestPartitionEndOffset(org.apache.kafka.common.TopicPartition)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Common.TopicPartition"/></param>
        public void RequestPartitionEndOffset(Org.Apache.Kafka.Common.TopicPartition arg0)
        {
            IExecute("requestPartitionEndOffset", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/consumer/internals/SubscriptionState.html#resetInitializingPositions()"/>
        /// </summary>
        public void ResetInitializingPositions()
        {
            IExecute("resetInitializingPositions");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/consumer/internals/SubscriptionState.html#resume(org.apache.kafka.common.TopicPartition)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Common.TopicPartition"/></param>
        public void Resume(Org.Apache.Kafka.Common.TopicPartition arg0)
        {
            IExecute("resume", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/consumer/internals/SubscriptionState.html#seekValidated(org.apache.kafka.common.TopicPartition,org.apache.kafka.clients.consumer.internals.SubscriptionState.FetchPosition)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Common.TopicPartition"/></param>
        /// <param name="arg1"><see cref="Org.Apache.Kafka.Clients.Consumer.Internals.SubscriptionState.FetchPosition"/></param>
        public void SeekValidated(Org.Apache.Kafka.Common.TopicPartition arg0, Org.Apache.Kafka.Clients.Consumer.Internals.SubscriptionState.FetchPosition arg1)
        {
            IExecute("seekValidated", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/consumer/internals/SubscriptionState.html#subscribe(java.util.regex.Pattern,org.apache.kafka.clients.consumer.ConsumerRebalanceListener)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Util.Regex.Pattern"/></param>
        /// <param name="arg1"><see cref="Org.Apache.Kafka.Clients.Consumer.ConsumerRebalanceListener"/></param>
        public void Subscribe(Java.Util.Regex.Pattern arg0, Org.Apache.Kafka.Clients.Consumer.ConsumerRebalanceListener arg1)
        {
            IExecute("subscribe", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/consumer/internals/SubscriptionState.html#unsubscribe()"/>
        /// </summary>
        public void Unsubscribe()
        {
            IExecute("unsubscribe");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/consumer/internals/SubscriptionState.html#updatePreferredReadReplica(org.apache.kafka.common.TopicPartition,int,java.util.function.LongSupplier)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Common.TopicPartition"/></param>
        /// <param name="arg1"><see cref="int"/></param>
        /// <param name="arg2"><see cref="Java.Util.Function.LongSupplier"/></param>
        public void UpdatePreferredReadReplica(Org.Apache.Kafka.Common.TopicPartition arg0, int arg1, Java.Util.Function.LongSupplier arg2)
        {
            IExecute("updatePreferredReadReplica", arg0, arg1, arg2);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/consumer/internals/SubscriptionState.html#requestOffsetReset(org.apache.kafka.common.TopicPartition)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Common.TopicPartition"/></param>
        public void RequestOffsetReset(Org.Apache.Kafka.Common.TopicPartition arg0)
        {
            IExecute("requestOffsetReset", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/consumer/internals/SubscriptionState.html#seek(org.apache.kafka.common.TopicPartition,long)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Common.TopicPartition"/></param>
        /// <param name="arg1"><see cref="long"/></param>
        public void Seek(Org.Apache.Kafka.Common.TopicPartition arg0, long arg1)
        {
            IExecute("seek", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/consumer/internals/SubscriptionState.html#seekUnvalidated(org.apache.kafka.common.TopicPartition,org.apache.kafka.clients.consumer.internals.SubscriptionState.FetchPosition)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Common.TopicPartition"/></param>
        /// <param name="arg1"><see cref="Org.Apache.Kafka.Clients.Consumer.Internals.SubscriptionState.FetchPosition"/></param>
        public void SeekUnvalidated(Org.Apache.Kafka.Common.TopicPartition arg0, Org.Apache.Kafka.Clients.Consumer.Internals.SubscriptionState.FetchPosition arg1)
        {
            IExecute("seekUnvalidated", arg0, arg1);
        }

        #endregion

        #region Nested classes
        #region FetchPosition
        public partial class FetchPosition
        {
            #region Constructors
            /// <summary>
            /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/consumer/internals/SubscriptionState.FetchPosition.html#%3Cinit%3E(long,java.util.Optional,org.apache.kafka.clients.Metadata.LeaderAndEpoch)"/>
            /// </summary>
            /// <param name="arg0"><see cref="long"/></param>
            /// <param name="arg1"><see cref="Java.Util.Optional"/></param>
            /// <param name="arg2"><see cref="Org.Apache.Kafka.Clients.Metadata.LeaderAndEpoch"/></param>
            public FetchPosition(long arg0, Java.Util.Optional arg1, Org.Apache.Kafka.Clients.Metadata.LeaderAndEpoch arg2)
                : base(arg0, arg1, arg2)
            {
            }

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields
            /// <summary>
            /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/consumer/internals/SubscriptionState.FetchPosition.html#offset"/>
            /// </summary>
            public long offset { get { return IGetField<long>("offset"); } }

            #endregion

            #region Static methods

            #endregion

            #region Instance methods

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

        #region LogTruncation
        public partial class LogTruncation
        {
            #region Constructors
            /// <summary>
            /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/consumer/internals/SubscriptionState.LogTruncation.html#%3Cinit%3E(org.apache.kafka.common.TopicPartition,org.apache.kafka.clients.consumer.internals.SubscriptionState.FetchPosition,java.util.Optional)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Org.Apache.Kafka.Common.TopicPartition"/></param>
            /// <param name="arg1"><see cref="Org.Apache.Kafka.Clients.Consumer.Internals.SubscriptionState.FetchPosition"/></param>
            /// <param name="arg2"><see cref="Java.Util.Optional"/></param>
            public LogTruncation(Org.Apache.Kafka.Common.TopicPartition arg0, Org.Apache.Kafka.Clients.Consumer.Internals.SubscriptionState.FetchPosition arg1, Java.Util.Optional arg2)
                : base(arg0, arg1, arg2)
            {
            }

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields
            /// <summary>
            /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/consumer/internals/SubscriptionState.LogTruncation.html#divergentOffsetOpt"/>
            /// </summary>
            public Java.Util.Optional divergentOffsetOpt { get { return IGetField<Java.Util.Optional>("divergentOffsetOpt"); } }
            /// <summary>
            /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/consumer/internals/SubscriptionState.LogTruncation.html#fetchPosition"/>
            /// </summary>
            public Org.Apache.Kafka.Clients.Consumer.Internals.SubscriptionState.FetchPosition fetchPosition { get { return IGetField<Org.Apache.Kafka.Clients.Consumer.Internals.SubscriptionState.FetchPosition>("fetchPosition"); } }
            /// <summary>
            /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/consumer/internals/SubscriptionState.LogTruncation.html#topicPartition"/>
            /// </summary>
            public Org.Apache.Kafka.Common.TopicPartition topicPartition { get { return IGetField<Org.Apache.Kafka.Common.TopicPartition>("topicPartition"); } }

            #endregion

            #region Static methods

            #endregion

            #region Instance methods

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

    
        #endregion

        // TODO: complete the class
    }
    #endregion
}