/*
*  Copyright 2023 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 1.5.5.0)
*  using kafka-clients-3.4.0.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Org.Apache.Kafka.Clients
{
    #region Metadata
    public partial class Metadata
    {
        #region Constructors
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/Metadata.html#%3Cinit%3E(long,long,org.apache.kafka.common.utils.LogContext,org.apache.kafka.common.internals.ClusterResourceListeners)"/>
        /// </summary>
        /// <param name="arg0"><see cref="long"/></param>
        /// <param name="arg1"><see cref="long"/></param>
        /// <param name="arg2"><see cref="Org.Apache.Kafka.Common.Utils.LogContext"/></param>
        /// <param name="arg3"><see cref="Org.Apache.Kafka.Common.Internals.ClusterResourceListeners"/></param>
        public Metadata(long arg0, long arg1, Org.Apache.Kafka.Common.Utils.LogContext arg2, Org.Apache.Kafka.Common.Internals.ClusterResourceListeners arg3)
            : base(arg0, arg1, arg2, arg3)
        {
        }

        #endregion

        #region Class/Interface conversion operators
        /// <summary>
        /// Converter from <see cref="Org.Apache.Kafka.Clients.Metadata"/> to <see cref="Java.Io.Closeable"/>
        /// </summary>
        public static implicit operator Java.Io.Closeable(Org.Apache.Kafka.Clients.Metadata t) => t.Cast<Java.Io.Closeable>();

        #endregion

        #region Fields

        #endregion

        #region Static methods

        #endregion

        #region Instance methods
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/Metadata.html#fetch()"/> 
        /// </summary>
        public Org.Apache.Kafka.Common.Cluster Fetch
        {
            get { return IExecute<Org.Apache.Kafka.Common.Cluster>("fetch"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/Metadata.html#isClosed()"/> 
        /// </summary>
        public bool IsClosed
        {
            get { return IExecute<bool>("isClosed"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/Metadata.html#lastSuccessfulUpdate()"/> 
        /// </summary>
        public long LastSuccessfulUpdate
        {
            get { return IExecute<long>("lastSuccessfulUpdate"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/Metadata.html#metadataExpireMs()"/> 
        /// </summary>
        public long MetadataExpireMs
        {
            get { return IExecute<long>("metadataExpireMs"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/Metadata.html#requestUpdate()"/> 
        /// </summary>
        public int RequestUpdate
        {
            get { return IExecute<int>("requestUpdate"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/Metadata.html#requestUpdateForNewTopics()"/> 
        /// </summary>
        public int RequestUpdateForNewTopics
        {
            get { return IExecute<int>("requestUpdateForNewTopics"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/Metadata.html#topicIds()"/> 
        /// </summary>
        public Java.Util.Map<string, Org.Apache.Kafka.Common.Uuid> TopicIds
        {
            get { return IExecute<Java.Util.Map<string, Org.Apache.Kafka.Common.Uuid>>("topicIds"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/Metadata.html#updateRequested()"/> 
        /// </summary>
        public bool UpdateRequested
        {
            get { return IExecute<bool>("updateRequested"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/Metadata.html#updateVersion()"/> 
        /// </summary>
        public int UpdateVersion
        {
            get { return IExecute<int>("updateVersion"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/Metadata.html#lastSeenLeaderEpoch(org.apache.kafka.common.TopicPartition)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Common.TopicPartition"/></param>
        /// <returns><see cref="Java.Util.Optional"/></returns>
        public Java.Util.Optional<int?> LastSeenLeaderEpoch(Org.Apache.Kafka.Common.TopicPartition arg0)
        {
            return IExecute<Java.Util.Optional<int?>>("lastSeenLeaderEpoch", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/Metadata.html#updateLastSeenEpochIfNewer(org.apache.kafka.common.TopicPartition,int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Common.TopicPartition"/></param>
        /// <param name="arg1"><see cref="int"/></param>
        /// <returns><see cref="bool"/></returns>
        public bool UpdateLastSeenEpochIfNewer(Org.Apache.Kafka.Common.TopicPartition arg0, int arg1)
        {
            return IExecute<bool>("updateLastSeenEpochIfNewer", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/Metadata.html#timeToAllowUpdate(long)"/>
        /// </summary>
        /// <param name="arg0"><see cref="long"/></param>
        /// <returns><see cref="long"/></returns>
        public long TimeToAllowUpdate(long arg0)
        {
            return IExecute<long>("timeToAllowUpdate", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/Metadata.html#timeToNextUpdate(long)"/>
        /// </summary>
        /// <param name="arg0"><see cref="long"/></param>
        /// <returns><see cref="long"/></returns>
        public long TimeToNextUpdate(long arg0)
        {
            return IExecute<long>("timeToNextUpdate", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/Metadata.html#currentLeader(org.apache.kafka.common.TopicPartition)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Common.TopicPartition"/></param>
        /// <returns><see cref="Org.Apache.Kafka.Clients.Metadata.LeaderAndEpoch"/></returns>
        public Org.Apache.Kafka.Clients.Metadata.LeaderAndEpoch CurrentLeader(Org.Apache.Kafka.Common.TopicPartition arg0)
        {
            return IExecute<Org.Apache.Kafka.Clients.Metadata.LeaderAndEpoch>("currentLeader", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/Metadata.html#newMetadataRequestAndVersion(long)"/>
        /// </summary>
        /// <param name="arg0"><see cref="long"/></param>
        /// <returns><see cref="Org.Apache.Kafka.Clients.Metadata.MetadataRequestAndVersion"/></returns>
        public Org.Apache.Kafka.Clients.Metadata.MetadataRequestAndVersion NewMetadataRequestAndVersion(long arg0)
        {
            return IExecute<Org.Apache.Kafka.Clients.Metadata.MetadataRequestAndVersion>("newMetadataRequestAndVersion", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/Metadata.html#bootstrap(java.util.List)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Util.List"/></param>
        public void Bootstrap(Java.Util.List<Java.Net.InetSocketAddress> arg0)
        {
            IExecute("bootstrap", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/Metadata.html#close()"/>
        /// </summary>
        public void Close()
        {
            IExecute("close");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/Metadata.html#failedUpdate(long)"/>
        /// </summary>
        /// <param name="arg0"><see cref="long"/></param>
        public void FailedUpdate(long arg0)
        {
            IExecute("failedUpdate", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/Metadata.html#fatalError(org.apache.kafka.common.KafkaException)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Common.KafkaException"/></param>
        public void FatalError(Org.Apache.Kafka.Common.KafkaException arg0)
        {
            IExecute("fatalError", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/Metadata.html#maybeThrowAnyException()"/>
        /// </summary>
        public void MaybeThrowAnyException()
        {
            IExecute("maybeThrowAnyException");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/Metadata.html#maybeThrowExceptionForTopic(java.lang.String)"/>
        /// </summary>
        /// <param name="arg0"><see cref="string"/></param>
        public void MaybeThrowExceptionForTopic(string arg0)
        {
            IExecute("maybeThrowExceptionForTopic", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/Metadata.html#update(int,org.apache.kafka.common.requests.MetadataResponse,boolean,long)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <param name="arg1"><see cref="Org.Apache.Kafka.Common.Requests.MetadataResponse"/></param>
        /// <param name="arg2"><see cref="bool"/></param>
        /// <param name="arg3"><see cref="long"/></param>
        public void Update(int arg0, Org.Apache.Kafka.Common.Requests.MetadataResponse arg1, bool arg2, long arg3)
        {
            IExecute("update", arg0, arg1, arg2, arg3);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/Metadata.html#updateWithCurrentRequestVersion(org.apache.kafka.common.requests.MetadataResponse,boolean,long)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Common.Requests.MetadataResponse"/></param>
        /// <param name="arg1"><see cref="bool"/></param>
        /// <param name="arg2"><see cref="long"/></param>
        public void UpdateWithCurrentRequestVersion(Org.Apache.Kafka.Common.Requests.MetadataResponse arg0, bool arg1, long arg2)
        {
            IExecute("updateWithCurrentRequestVersion", arg0, arg1, arg2);
        }

        #endregion

        #region Nested classes
        #region LeaderAndEpoch
        public partial class LeaderAndEpoch
        {
            #region Constructors
            /// <summary>
            /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/Metadata.LeaderAndEpoch.html#%3Cinit%3E(java.util.Optional,java.util.Optional)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Java.Util.Optional"/></param>
            /// <param name="arg1"><see cref="Java.Util.Optional"/></param>
            public LeaderAndEpoch(Java.Util.Optional arg0, Java.Util.Optional arg1)
                : base(arg0, arg1)
            {
            }

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields
            /// <summary>
            /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/Metadata.LeaderAndEpoch.html#epoch"/>
            /// </summary>
            public Java.Util.Optional epoch { get { return IGetField<Java.Util.Optional>("epoch"); } }
            /// <summary>
            /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/Metadata.LeaderAndEpoch.html#leader"/>
            /// </summary>
            public Java.Util.Optional leader { get { return IGetField<Java.Util.Optional>("leader"); } }

            #endregion

            #region Static methods
            /// <summary>
            /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/Metadata.LeaderAndEpoch.html#noLeaderOrEpoch()"/> 
            /// </summary>
            public static Org.Apache.Kafka.Clients.Metadata.LeaderAndEpoch NoLeaderOrEpoch
            {
                get { return SExecute<Org.Apache.Kafka.Clients.Metadata.LeaderAndEpoch>(LocalBridgeClazz, "noLeaderOrEpoch"); }
            }

            #endregion

            #region Instance methods

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

        #region MetadataRequestAndVersion
        public partial class MetadataRequestAndVersion
        {
            #region Constructors

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields
            /// <summary>
            /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/Metadata.MetadataRequestAndVersion.html#isPartialUpdate"/>
            /// </summary>
            public bool isPartialUpdate { get { return IGetField<bool>("isPartialUpdate"); } }
            /// <summary>
            /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/Metadata.MetadataRequestAndVersion.html#requestVersion"/>
            /// </summary>
            public int requestVersion { get { return IGetField<int>("requestVersion"); } }
            /// <summary>
            /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/Metadata.MetadataRequestAndVersion.html#requestBuilder"/>
            /// </summary>
            public Org.Apache.Kafka.Common.Requests.MetadataRequest.Builder requestBuilder { get { return IGetField<Org.Apache.Kafka.Common.Requests.MetadataRequest.Builder>("requestBuilder"); } }

            #endregion

            #region Static methods

            #endregion

            #region Instance methods

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

    
        #endregion

        // TODO: complete the class
    }
    #endregion
}