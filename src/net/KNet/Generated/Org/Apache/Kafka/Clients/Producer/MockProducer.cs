/*
*  Copyright 2023 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 1.5.5.0)
*  using kafka-clients-3.4.0.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Org.Apache.Kafka.Clients.Producer
{
    #region MockProducer
    public partial class MockProducer
    {
        #region Constructors
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/producer/MockProducer.html#%3Cinit%3E(boolean,org.apache.kafka.clients.producer.Partitioner,org.apache.kafka.common.serialization.Serializer,org.apache.kafka.common.serialization.Serializer)"/>
        /// </summary>
        /// <param name="arg0"><see cref="bool"/></param>
        /// <param name="arg1"><see cref="Org.Apache.Kafka.Clients.Producer.Partitioner"/></param>
        /// <param name="arg2"><see cref="Org.Apache.Kafka.Common.Serialization.Serializer"/></param>
        /// <param name="arg3"><see cref="Org.Apache.Kafka.Common.Serialization.Serializer"/></param>
        public MockProducer(bool arg0, Org.Apache.Kafka.Clients.Producer.Partitioner arg1, Org.Apache.Kafka.Common.Serialization.Serializer arg2, Org.Apache.Kafka.Common.Serialization.Serializer arg3)
            : base(arg0, arg1, arg2, arg3)
        {
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/producer/MockProducer.html#%3Cinit%3E(boolean,org.apache.kafka.common.serialization.Serializer,org.apache.kafka.common.serialization.Serializer)"/>
        /// </summary>
        /// <param name="arg0"><see cref="bool"/></param>
        /// <param name="arg1"><see cref="Org.Apache.Kafka.Common.Serialization.Serializer"/></param>
        /// <param name="arg2"><see cref="Org.Apache.Kafka.Common.Serialization.Serializer"/></param>
        public MockProducer(bool arg0, Org.Apache.Kafka.Common.Serialization.Serializer arg1, Org.Apache.Kafka.Common.Serialization.Serializer arg2)
            : base(arg0, arg1, arg2)
        {
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/producer/MockProducer.html#%3Cinit%3E(org.apache.kafka.common.Cluster,boolean,org.apache.kafka.clients.producer.Partitioner,org.apache.kafka.common.serialization.Serializer,org.apache.kafka.common.serialization.Serializer)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Common.Cluster"/></param>
        /// <param name="arg1"><see cref="bool"/></param>
        /// <param name="arg2"><see cref="Org.Apache.Kafka.Clients.Producer.Partitioner"/></param>
        /// <param name="arg3"><see cref="Org.Apache.Kafka.Common.Serialization.Serializer"/></param>
        /// <param name="arg4"><see cref="Org.Apache.Kafka.Common.Serialization.Serializer"/></param>
        public MockProducer(Org.Apache.Kafka.Common.Cluster arg0, bool arg1, Org.Apache.Kafka.Clients.Producer.Partitioner arg2, Org.Apache.Kafka.Common.Serialization.Serializer arg3, Org.Apache.Kafka.Common.Serialization.Serializer arg4)
            : base(arg0, arg1, arg2, arg3, arg4)
        {
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/producer/MockProducer.html#%3Cinit%3E(org.apache.kafka.common.Cluster,boolean,org.apache.kafka.common.serialization.Serializer,org.apache.kafka.common.serialization.Serializer)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Common.Cluster"/></param>
        /// <param name="arg1"><see cref="bool"/></param>
        /// <param name="arg2"><see cref="Org.Apache.Kafka.Common.Serialization.Serializer"/></param>
        /// <param name="arg3"><see cref="Org.Apache.Kafka.Common.Serialization.Serializer"/></param>
        public MockProducer(Org.Apache.Kafka.Common.Cluster arg0, bool arg1, Org.Apache.Kafka.Common.Serialization.Serializer arg2, Org.Apache.Kafka.Common.Serialization.Serializer arg3)
            : base(arg0, arg1, arg2, arg3)
        {
        }

        #endregion

        #region Class/Interface conversion operators
        /// <summary>
        /// Converter from <see cref="Org.Apache.Kafka.Clients.Producer.MockProducer"/> to <see cref="Org.Apache.Kafka.Clients.Producer.Producer"/>
        /// </summary>
        public static implicit operator Org.Apache.Kafka.Clients.Producer.Producer(Org.Apache.Kafka.Clients.Producer.MockProducer t) => t.Cast<Org.Apache.Kafka.Clients.Producer.Producer>();

        #endregion

        #region Fields
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/producer/MockProducer.html#abortTransactionException"/>
        /// </summary>
        public Java.Lang.RuntimeException abortTransactionException { get { return IGetField<Java.Lang.RuntimeException>("abortTransactionException"); } set { ISetField("abortTransactionException", value); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/producer/MockProducer.html#beginTransactionException"/>
        /// </summary>
        public Java.Lang.RuntimeException beginTransactionException { get { return IGetField<Java.Lang.RuntimeException>("beginTransactionException"); } set { ISetField("beginTransactionException", value); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/producer/MockProducer.html#closeException"/>
        /// </summary>
        public Java.Lang.RuntimeException closeException { get { return IGetField<Java.Lang.RuntimeException>("closeException"); } set { ISetField("closeException", value); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/producer/MockProducer.html#commitTransactionException"/>
        /// </summary>
        public Java.Lang.RuntimeException commitTransactionException { get { return IGetField<Java.Lang.RuntimeException>("commitTransactionException"); } set { ISetField("commitTransactionException", value); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/producer/MockProducer.html#flushException"/>
        /// </summary>
        public Java.Lang.RuntimeException flushException { get { return IGetField<Java.Lang.RuntimeException>("flushException"); } set { ISetField("flushException", value); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/producer/MockProducer.html#initTransactionException"/>
        /// </summary>
        public Java.Lang.RuntimeException initTransactionException { get { return IGetField<Java.Lang.RuntimeException>("initTransactionException"); } set { ISetField("initTransactionException", value); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/producer/MockProducer.html#partitionsForException"/>
        /// </summary>
        public Java.Lang.RuntimeException partitionsForException { get { return IGetField<Java.Lang.RuntimeException>("partitionsForException"); } set { ISetField("partitionsForException", value); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/producer/MockProducer.html#sendException"/>
        /// </summary>
        public Java.Lang.RuntimeException sendException { get { return IGetField<Java.Lang.RuntimeException>("sendException"); } set { ISetField("sendException", value); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/producer/MockProducer.html#sendOffsetsToTransactionException"/>
        /// </summary>
        public Java.Lang.RuntimeException sendOffsetsToTransactionException { get { return IGetField<Java.Lang.RuntimeException>("sendOffsetsToTransactionException"); } set { ISetField("sendOffsetsToTransactionException", value); } }

        #endregion

        #region Static methods

        #endregion

        #region Instance methods
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/producer/MockProducer.html#closed()"/> 
        /// </summary>
        public bool Closed
        {
            get { return IExecute<bool>("closed"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/producer/MockProducer.html#commitCount()"/> 
        /// </summary>
        public long CommitCount
        {
            get { return IExecute<long>("commitCount"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/producer/MockProducer.html#completeNext()"/> 
        /// </summary>
        public bool CompleteNext
        {
            get { return IExecute<bool>("completeNext"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/producer/MockProducer.html#consumerGroupOffsetsHistory()"/> 
        /// </summary>
        public Java.Util.List ConsumerGroupOffsetsHistory
        {
            get { return IExecute<Java.Util.List>("consumerGroupOffsetsHistory"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/producer/MockProducer.html#flushed()"/> 
        /// </summary>
        public bool Flushed
        {
            get { return IExecute<bool>("flushed"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/producer/MockProducer.html#history()"/> 
        /// </summary>
        public Java.Util.List History
        {
            get { return IExecute<Java.Util.List>("history"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/producer/MockProducer.html#metrics()"/> 
        /// </summary>
        public Java.Util.Map Metrics
        {
            get { return IExecute<Java.Util.Map>("metrics"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/producer/MockProducer.html#sentOffsets()"/> 
        /// </summary>
        public bool SentOffsets
        {
            get { return IExecute<bool>("sentOffsets"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/producer/MockProducer.html#transactionAborted()"/> 
        /// </summary>
        public bool TransactionAborted
        {
            get { return IExecute<bool>("transactionAborted"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/producer/MockProducer.html#transactionCommitted()"/> 
        /// </summary>
        public bool TransactionCommitted
        {
            get { return IExecute<bool>("transactionCommitted"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/producer/MockProducer.html#transactionInFlight()"/> 
        /// </summary>
        public bool TransactionInFlight
        {
            get { return IExecute<bool>("transactionInFlight"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/producer/MockProducer.html#transactionInitialized()"/> 
        /// </summary>
        public bool TransactionInitialized
        {
            get { return IExecute<bool>("transactionInitialized"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/producer/MockProducer.html#uncommittedOffsets()"/> 
        /// </summary>
        public Java.Util.Map UncommittedOffsets
        {
            get { return IExecute<Java.Util.Map>("uncommittedOffsets"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/producer/MockProducer.html#uncommittedRecords()"/> 
        /// </summary>
        public Java.Util.List UncommittedRecords
        {
            get { return IExecute<Java.Util.List>("uncommittedRecords"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/producer/MockProducer.html#partitionsFor(java.lang.String)"/>
        /// </summary>
        /// <param name="arg0"><see cref="string"/></param>
        /// <returns><see cref="Java.Util.List"/></returns>
        public Java.Util.List PartitionsFor(string arg0)
        {
            return IExecute<Java.Util.List>("partitionsFor", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/producer/MockProducer.html#errorNext(java.lang.RuntimeException)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.RuntimeException"/></param>
        /// <returns><see cref="bool"/></returns>
        public bool ErrorNext(Java.Lang.RuntimeException arg0)
        {
            return IExecute<bool>("errorNext", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/producer/MockProducer.html#send(org.apache.kafka.clients.producer.ProducerRecord,org.apache.kafka.clients.producer.Callback)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Clients.Producer.ProducerRecord"/></param>
        /// <param name="arg1"><see cref="Org.Apache.Kafka.Clients.Producer.Callback"/></param>
        /// <returns><see cref="Java.Util.Concurrent.Future"/></returns>
        public Java.Util.Concurrent.Future Send(Org.Apache.Kafka.Clients.Producer.ProducerRecord arg0, Org.Apache.Kafka.Clients.Producer.Callback arg1)
        {
            return IExecute<Java.Util.Concurrent.Future>("send", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/producer/MockProducer.html#send(org.apache.kafka.clients.producer.ProducerRecord)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Clients.Producer.ProducerRecord"/></param>
        /// <returns><see cref="Java.Util.Concurrent.Future"/></returns>
        public Java.Util.Concurrent.Future Send(Org.Apache.Kafka.Clients.Producer.ProducerRecord arg0)
        {
            return IExecute<Java.Util.Concurrent.Future>("send", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/producer/MockProducer.html#clear()"/>
        /// </summary>
        public void Clear()
        {
            IExecute("clear");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/producer/MockProducer.html#fenceProducer()"/>
        /// </summary>
        public void FenceProducer()
        {
            IExecute("fenceProducer");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/producer/MockProducer.html#flush()"/>
        /// </summary>
        public void Flush()
        {
            IExecute("flush");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/producer/MockProducer.html#abortTransaction()"/>
        /// </summary>

        /// <exception cref="Org.Apache.Kafka.Common.Errors.ProducerFencedException"/>
        public void AbortTransaction()
        {
            IExecute("abortTransaction");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/producer/MockProducer.html#beginTransaction()"/>
        /// </summary>

        /// <exception cref="Org.Apache.Kafka.Common.Errors.ProducerFencedException"/>
        public void BeginTransaction()
        {
            IExecute("beginTransaction");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/producer/MockProducer.html#close()"/>
        /// </summary>
        public void Close()
        {
            IExecute("close");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/producer/MockProducer.html#close(java.time.Duration)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Time.Duration"/></param>
        public void Close(Java.Time.Duration arg0)
        {
            IExecute("close", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/producer/MockProducer.html#commitTransaction()"/>
        /// </summary>

        /// <exception cref="Org.Apache.Kafka.Common.Errors.ProducerFencedException"/>
        public void CommitTransaction()
        {
            IExecute("commitTransaction");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/producer/MockProducer.html#initTransactions()"/>
        /// </summary>
        public void InitTransactions()
        {
            IExecute("initTransactions");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/producer/MockProducer.html#sendOffsetsToTransaction(java.util.Map,org.apache.kafka.clients.consumer.ConsumerGroupMetadata)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Util.Map"/></param>
        /// <param name="arg1"><see cref="Org.Apache.Kafka.Clients.Consumer.ConsumerGroupMetadata"/></param>
        /// <exception cref="Org.Apache.Kafka.Common.Errors.ProducerFencedException"/>
        public void SendOffsetsToTransaction(Java.Util.Map arg0, Org.Apache.Kafka.Clients.Consumer.ConsumerGroupMetadata arg1)
        {
            IExecute("sendOffsetsToTransaction", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/producer/MockProducer.html#setMockMetrics(org.apache.kafka.common.MetricName,org.apache.kafka.common.Metric)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Common.MetricName"/></param>
        /// <param name="arg1"><see cref="Org.Apache.Kafka.Common.Metric"/></param>
        public void SetMockMetrics(Org.Apache.Kafka.Common.MetricName arg0, Org.Apache.Kafka.Common.Metric arg1)
        {
            IExecute("setMockMetrics", arg0, arg1);
        }

        #endregion

        #region Nested classes

        #endregion

        // TODO: complete the class
    }
    #endregion

    #region MockProducer<K, V>
    public partial class MockProducer<K, V>
    {
        #region Constructors
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/producer/MockProducer.html#%3Cinit%3E(boolean,org.apache.kafka.clients.producer.Partitioner,org.apache.kafka.common.serialization.Serializer,org.apache.kafka.common.serialization.Serializer)"/>
        /// </summary>
        /// <param name="arg0"><see cref="bool"/></param>
        /// <param name="arg1"><see cref="Org.Apache.Kafka.Clients.Producer.Partitioner"/></param>
        /// <param name="arg2"><see cref="Org.Apache.Kafka.Common.Serialization.Serializer"/></param>
        /// <param name="arg3"><see cref="Org.Apache.Kafka.Common.Serialization.Serializer"/></param>
        public MockProducer(bool arg0, Org.Apache.Kafka.Clients.Producer.Partitioner arg1, Org.Apache.Kafka.Common.Serialization.Serializer<K> arg2, Org.Apache.Kafka.Common.Serialization.Serializer<V> arg3)
            : base(arg0, arg1, arg2, arg3)
        {
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/producer/MockProducer.html#%3Cinit%3E(boolean,org.apache.kafka.common.serialization.Serializer,org.apache.kafka.common.serialization.Serializer)"/>
        /// </summary>
        /// <param name="arg0"><see cref="bool"/></param>
        /// <param name="arg1"><see cref="Org.Apache.Kafka.Common.Serialization.Serializer"/></param>
        /// <param name="arg2"><see cref="Org.Apache.Kafka.Common.Serialization.Serializer"/></param>
        public MockProducer(bool arg0, Org.Apache.Kafka.Common.Serialization.Serializer<K> arg1, Org.Apache.Kafka.Common.Serialization.Serializer<V> arg2)
            : base(arg0, arg1, arg2)
        {
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/producer/MockProducer.html#%3Cinit%3E(org.apache.kafka.common.Cluster,boolean,org.apache.kafka.clients.producer.Partitioner,org.apache.kafka.common.serialization.Serializer,org.apache.kafka.common.serialization.Serializer)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Common.Cluster"/></param>
        /// <param name="arg1"><see cref="bool"/></param>
        /// <param name="arg2"><see cref="Org.Apache.Kafka.Clients.Producer.Partitioner"/></param>
        /// <param name="arg3"><see cref="Org.Apache.Kafka.Common.Serialization.Serializer"/></param>
        /// <param name="arg4"><see cref="Org.Apache.Kafka.Common.Serialization.Serializer"/></param>
        public MockProducer(Org.Apache.Kafka.Common.Cluster arg0, bool arg1, Org.Apache.Kafka.Clients.Producer.Partitioner arg2, Org.Apache.Kafka.Common.Serialization.Serializer<K> arg3, Org.Apache.Kafka.Common.Serialization.Serializer<V> arg4)
            : base(arg0, arg1, arg2, arg3, arg4)
        {
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/producer/MockProducer.html#%3Cinit%3E(org.apache.kafka.common.Cluster,boolean,org.apache.kafka.common.serialization.Serializer,org.apache.kafka.common.serialization.Serializer)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Common.Cluster"/></param>
        /// <param name="arg1"><see cref="bool"/></param>
        /// <param name="arg2"><see cref="Org.Apache.Kafka.Common.Serialization.Serializer"/></param>
        /// <param name="arg3"><see cref="Org.Apache.Kafka.Common.Serialization.Serializer"/></param>
        public MockProducer(Org.Apache.Kafka.Common.Cluster arg0, bool arg1, Org.Apache.Kafka.Common.Serialization.Serializer<K> arg2, Org.Apache.Kafka.Common.Serialization.Serializer<V> arg3)
            : base(arg0, arg1, arg2, arg3)
        {
        }

        #endregion

        #region Class/Interface conversion operators
        /// <summary>
        /// Converter from <see cref="Org.Apache.Kafka.Clients.Producer.MockProducer{K, V}"/> to <see cref="Org.Apache.Kafka.Clients.Producer.Producer{K, V}"/>
        /// </summary>
        public static implicit operator Org.Apache.Kafka.Clients.Producer.Producer<K, V>(Org.Apache.Kafka.Clients.Producer.MockProducer<K, V> t) => t.Cast<Org.Apache.Kafka.Clients.Producer.Producer<K, V>>();
        /// <summary>
        /// Converter from <see cref="Org.Apache.Kafka.Clients.Producer.MockProducer{K, V}"/> to <see cref="Org.Apache.Kafka.Clients.Producer.MockProducer"/>
        /// </summary>
        public static implicit operator Org.Apache.Kafka.Clients.Producer.MockProducer(Org.Apache.Kafka.Clients.Producer.MockProducer<K, V> t) => t.Cast<Org.Apache.Kafka.Clients.Producer.MockProducer>();

        #endregion

        #region Fields
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/producer/MockProducer.html#abortTransactionException"/>
        /// </summary>
        public Java.Lang.RuntimeException abortTransactionException { get { return IGetField<Java.Lang.RuntimeException>("abortTransactionException"); } set { ISetField("abortTransactionException", value); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/producer/MockProducer.html#beginTransactionException"/>
        /// </summary>
        public Java.Lang.RuntimeException beginTransactionException { get { return IGetField<Java.Lang.RuntimeException>("beginTransactionException"); } set { ISetField("beginTransactionException", value); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/producer/MockProducer.html#closeException"/>
        /// </summary>
        public Java.Lang.RuntimeException closeException { get { return IGetField<Java.Lang.RuntimeException>("closeException"); } set { ISetField("closeException", value); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/producer/MockProducer.html#commitTransactionException"/>
        /// </summary>
        public Java.Lang.RuntimeException commitTransactionException { get { return IGetField<Java.Lang.RuntimeException>("commitTransactionException"); } set { ISetField("commitTransactionException", value); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/producer/MockProducer.html#flushException"/>
        /// </summary>
        public Java.Lang.RuntimeException flushException { get { return IGetField<Java.Lang.RuntimeException>("flushException"); } set { ISetField("flushException", value); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/producer/MockProducer.html#initTransactionException"/>
        /// </summary>
        public Java.Lang.RuntimeException initTransactionException { get { return IGetField<Java.Lang.RuntimeException>("initTransactionException"); } set { ISetField("initTransactionException", value); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/producer/MockProducer.html#partitionsForException"/>
        /// </summary>
        public Java.Lang.RuntimeException partitionsForException { get { return IGetField<Java.Lang.RuntimeException>("partitionsForException"); } set { ISetField("partitionsForException", value); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/producer/MockProducer.html#sendException"/>
        /// </summary>
        public Java.Lang.RuntimeException sendException { get { return IGetField<Java.Lang.RuntimeException>("sendException"); } set { ISetField("sendException", value); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/producer/MockProducer.html#sendOffsetsToTransactionException"/>
        /// </summary>
        public Java.Lang.RuntimeException sendOffsetsToTransactionException { get { return IGetField<Java.Lang.RuntimeException>("sendOffsetsToTransactionException"); } set { ISetField("sendOffsetsToTransactionException", value); } }

        #endregion

        #region Static methods

        #endregion

        #region Instance methods
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/producer/MockProducer.html#closed()"/> 
        /// </summary>
        public bool Closed
        {
            get { return IExecute<bool>("closed"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/producer/MockProducer.html#commitCount()"/> 
        /// </summary>
        public long CommitCount
        {
            get { return IExecute<long>("commitCount"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/producer/MockProducer.html#completeNext()"/> 
        /// </summary>
        public bool CompleteNext
        {
            get { return IExecute<bool>("completeNext"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/producer/MockProducer.html#consumerGroupOffsetsHistory()"/> 
        /// </summary>
        public Java.Util.List<Java.Util.Map<string, Java.Util.Map<Org.Apache.Kafka.Common.TopicPartition, Org.Apache.Kafka.Clients.Consumer.OffsetAndMetadata>>> ConsumerGroupOffsetsHistory
        {
            get { return IExecute<Java.Util.List<Java.Util.Map<string, Java.Util.Map<Org.Apache.Kafka.Common.TopicPartition, Org.Apache.Kafka.Clients.Consumer.OffsetAndMetadata>>>>("consumerGroupOffsetsHistory"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/producer/MockProducer.html#flushed()"/> 
        /// </summary>
        public bool Flushed
        {
            get { return IExecute<bool>("flushed"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/producer/MockProducer.html#history()"/> 
        /// </summary>
        public Java.Util.List<Org.Apache.Kafka.Clients.Producer.ProducerRecord<K, V>> History
        {
            get { return IExecute<Java.Util.List<Org.Apache.Kafka.Clients.Producer.ProducerRecord<K, V>>>("history"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/producer/MockProducer.html#metrics()"/> 
        /// </summary>
        public Java.Util.Map<Org.Apache.Kafka.Common.MetricName, Org.Apache.Kafka.Common.Metric> Metrics
        {
            get { return IExecute<Java.Util.Map<Org.Apache.Kafka.Common.MetricName, Org.Apache.Kafka.Common.Metric>>("metrics"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/producer/MockProducer.html#sentOffsets()"/> 
        /// </summary>
        public bool SentOffsets
        {
            get { return IExecute<bool>("sentOffsets"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/producer/MockProducer.html#transactionAborted()"/> 
        /// </summary>
        public bool TransactionAborted
        {
            get { return IExecute<bool>("transactionAborted"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/producer/MockProducer.html#transactionCommitted()"/> 
        /// </summary>
        public bool TransactionCommitted
        {
            get { return IExecute<bool>("transactionCommitted"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/producer/MockProducer.html#transactionInFlight()"/> 
        /// </summary>
        public bool TransactionInFlight
        {
            get { return IExecute<bool>("transactionInFlight"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/producer/MockProducer.html#transactionInitialized()"/> 
        /// </summary>
        public bool TransactionInitialized
        {
            get { return IExecute<bool>("transactionInitialized"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/producer/MockProducer.html#uncommittedOffsets()"/> 
        /// </summary>
        public Java.Util.Map<string, Java.Util.Map<Org.Apache.Kafka.Common.TopicPartition, Org.Apache.Kafka.Clients.Consumer.OffsetAndMetadata>> UncommittedOffsets
        {
            get { return IExecute<Java.Util.Map<string, Java.Util.Map<Org.Apache.Kafka.Common.TopicPartition, Org.Apache.Kafka.Clients.Consumer.OffsetAndMetadata>>>("uncommittedOffsets"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/producer/MockProducer.html#uncommittedRecords()"/> 
        /// </summary>
        public Java.Util.List<Org.Apache.Kafka.Clients.Producer.ProducerRecord<K, V>> UncommittedRecords
        {
            get { return IExecute<Java.Util.List<Org.Apache.Kafka.Clients.Producer.ProducerRecord<K, V>>>("uncommittedRecords"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/producer/MockProducer.html#partitionsFor(java.lang.String)"/>
        /// </summary>
        /// <param name="arg0"><see cref="string"/></param>
        /// <returns><see cref="Java.Util.List"/></returns>
        public Java.Util.List<Org.Apache.Kafka.Common.PartitionInfo> PartitionsFor(string arg0)
        {
            return IExecute<Java.Util.List<Org.Apache.Kafka.Common.PartitionInfo>>("partitionsFor", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/producer/MockProducer.html#errorNext(java.lang.RuntimeException)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.RuntimeException"/></param>
        /// <returns><see cref="bool"/></returns>
        public bool ErrorNext(Java.Lang.RuntimeException arg0)
        {
            return IExecute<bool>("errorNext", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/producer/MockProducer.html#send(org.apache.kafka.clients.producer.ProducerRecord,org.apache.kafka.clients.producer.Callback)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Clients.Producer.ProducerRecord"/></param>
        /// <param name="arg1"><see cref="Org.Apache.Kafka.Clients.Producer.Callback"/></param>
        /// <returns><see cref="Java.Util.Concurrent.Future"/></returns>
        public Java.Util.Concurrent.Future<Org.Apache.Kafka.Clients.Producer.RecordMetadata> Send(Org.Apache.Kafka.Clients.Producer.ProducerRecord<K, V> arg0, Org.Apache.Kafka.Clients.Producer.Callback arg1)
        {
            return IExecute<Java.Util.Concurrent.Future<Org.Apache.Kafka.Clients.Producer.RecordMetadata>>("send", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/producer/MockProducer.html#send(org.apache.kafka.clients.producer.ProducerRecord)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Clients.Producer.ProducerRecord"/></param>
        /// <returns><see cref="Java.Util.Concurrent.Future"/></returns>
        public Java.Util.Concurrent.Future<Org.Apache.Kafka.Clients.Producer.RecordMetadata> Send(Org.Apache.Kafka.Clients.Producer.ProducerRecord<K, V> arg0)
        {
            return IExecute<Java.Util.Concurrent.Future<Org.Apache.Kafka.Clients.Producer.RecordMetadata>>("send", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/producer/MockProducer.html#clear()"/>
        /// </summary>
        public void Clear()
        {
            IExecute("clear");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/producer/MockProducer.html#fenceProducer()"/>
        /// </summary>
        public void FenceProducer()
        {
            IExecute("fenceProducer");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/producer/MockProducer.html#flush()"/>
        /// </summary>
        public void Flush()
        {
            IExecute("flush");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/producer/MockProducer.html#abortTransaction()"/>
        /// </summary>

        /// <exception cref="Org.Apache.Kafka.Common.Errors.ProducerFencedException"/>
        public void AbortTransaction()
        {
            IExecute("abortTransaction");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/producer/MockProducer.html#beginTransaction()"/>
        /// </summary>

        /// <exception cref="Org.Apache.Kafka.Common.Errors.ProducerFencedException"/>
        public void BeginTransaction()
        {
            IExecute("beginTransaction");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/producer/MockProducer.html#close()"/>
        /// </summary>
        public void Close()
        {
            IExecute("close");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/producer/MockProducer.html#close(java.time.Duration)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Time.Duration"/></param>
        public void Close(Java.Time.Duration arg0)
        {
            IExecute("close", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/producer/MockProducer.html#commitTransaction()"/>
        /// </summary>

        /// <exception cref="Org.Apache.Kafka.Common.Errors.ProducerFencedException"/>
        public void CommitTransaction()
        {
            IExecute("commitTransaction");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/producer/MockProducer.html#initTransactions()"/>
        /// </summary>
        public void InitTransactions()
        {
            IExecute("initTransactions");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/producer/MockProducer.html#sendOffsetsToTransaction(java.util.Map,org.apache.kafka.clients.consumer.ConsumerGroupMetadata)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Util.Map"/></param>
        /// <param name="arg1"><see cref="Org.Apache.Kafka.Clients.Consumer.ConsumerGroupMetadata"/></param>
        /// <exception cref="Org.Apache.Kafka.Common.Errors.ProducerFencedException"/>
        public void SendOffsetsToTransaction(Java.Util.Map<Org.Apache.Kafka.Common.TopicPartition, Org.Apache.Kafka.Clients.Consumer.OffsetAndMetadata> arg0, Org.Apache.Kafka.Clients.Consumer.ConsumerGroupMetadata arg1)
        {
            IExecute("sendOffsetsToTransaction", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/producer/MockProducer.html#setMockMetrics(org.apache.kafka.common.MetricName,org.apache.kafka.common.Metric)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Common.MetricName"/></param>
        /// <param name="arg1"><see cref="Org.Apache.Kafka.Common.Metric"/></param>
        public void SetMockMetrics(Org.Apache.Kafka.Common.MetricName arg0, Org.Apache.Kafka.Common.Metric arg1)
        {
            IExecute("setMockMetrics", arg0, arg1);
        }

        #endregion

        #region Nested classes

        #endregion

        // TODO: complete the class
    }
    #endregion
}