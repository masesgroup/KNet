/*
*  Copyright 2023 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 1.5.5.0)
*  using kafka-clients-3.4.0.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Org.Apache.Kafka.Clients.Producer.Internals
{
    #region ProduceRequestResult
    public partial class ProduceRequestResult
    {
        #region Constructors
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/producer/internals/ProduceRequestResult.html#%3Cinit%3E(org.apache.kafka.common.TopicPartition)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Common.TopicPartition"/></param>
        public ProduceRequestResult(Org.Apache.Kafka.Common.TopicPartition arg0)
            : base(arg0)
        {
        }

        #endregion

        #region Class/Interface conversion operators

        #endregion

        #region Fields

        #endregion

        #region Static methods

        #endregion

        #region Instance methods
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/producer/internals/ProduceRequestResult.html#baseOffset()"/> 
        /// </summary>
        public long BaseOffset
        {
            get { return IExecute<long>("baseOffset"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/producer/internals/ProduceRequestResult.html#completed()"/> 
        /// </summary>
        public bool Completed
        {
            get { return IExecute<bool>("completed"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/producer/internals/ProduceRequestResult.html#hasLogAppendTime()"/> 
        /// </summary>
        public bool HasLogAppendTime
        {
            get { return IExecute<bool>("hasLogAppendTime"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/producer/internals/ProduceRequestResult.html#logAppendTime()"/> 
        /// </summary>
        public long LogAppendTime
        {
            get { return IExecute<long>("logAppendTime"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/producer/internals/ProduceRequestResult.html#topicPartition()"/> 
        /// </summary>
        public Org.Apache.Kafka.Common.TopicPartition TopicPartition
        {
            get { return IExecute<Org.Apache.Kafka.Common.TopicPartition>("topicPartition"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/producer/internals/ProduceRequestResult.html#await(long,java.util.concurrent.TimeUnit)"/>
        /// </summary>
        /// <param name="arg0"><see cref="long"/></param>
        /// <param name="arg1"><see cref="Java.Util.Concurrent.TimeUnit"/></param>
        /// <returns><see cref="bool"/></returns>
        /// <exception cref="Java.Lang.InterruptedException"/>
        public bool Await(long arg0, Java.Util.Concurrent.TimeUnit arg1)
        {
            return IExecute<bool>("await", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/producer/internals/ProduceRequestResult.html#error(int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <returns><see cref="Java.Lang.RuntimeException"/></returns>
        public Java.Lang.RuntimeException Error(int arg0)
        {
            var obj = IExecute<MASES.JCOBridge.C2JBridge.JVMInterop.IJavaObject>("error", arg0); return MASES.JCOBridge.C2JBridge.JVMBridgeException.New<Java.Lang.RuntimeException>(obj);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/producer/internals/ProduceRequestResult.html#await()"/>
        /// </summary>

        /// <exception cref="Java.Lang.InterruptedException"/>
        public void Await()
        {
            IExecute("await");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/producer/internals/ProduceRequestResult.html#done()"/>
        /// </summary>
        public void Done()
        {
            IExecute("done");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/producer/internals/ProduceRequestResult.html#set(long,long,java.util.function.Function)"/>
        /// </summary>
        /// <param name="arg0"><see cref="long"/></param>
        /// <param name="arg1"><see cref="long"/></param>
        /// <param name="arg2"><see cref="Java.Util.Function.Function"/></param>
        public void Set(long arg0, long arg1, Java.Util.Function.Function<int?, Java.Lang.RuntimeException> arg2)
        {
            IExecute("set", arg0, arg1, arg2);
        }

        #endregion

        #region Nested classes

        #endregion

        // TODO: complete the class
    }
    #endregion
}