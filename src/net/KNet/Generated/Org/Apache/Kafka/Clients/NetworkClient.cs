/*
*  Copyright 2023 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 1.5.5.0)
*  using kafka-clients-3.4.0.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Org.Apache.Kafka.Clients
{
    #region NetworkClient
    public partial class NetworkClient
    {
        #region Constructors
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/NetworkClient.html#%3Cinit%3E(org.apache.kafka.clients.MetadataUpdater,org.apache.kafka.clients.Metadata,org.apache.kafka.common.network.Selectable,java.lang.String,int,long,long,int,int,int,long,long,org.apache.kafka.common.utils.Time,boolean,org.apache.kafka.clients.ApiVersions,org.apache.kafka.common.metrics.Sensor,org.apache.kafka.common.utils.LogContext,org.apache.kafka.clients.HostResolver)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Clients.MetadataUpdater"/></param>
        /// <param name="arg1"><see cref="Org.Apache.Kafka.Clients.Metadata"/></param>
        /// <param name="arg2"><see cref="Org.Apache.Kafka.Common.Network.Selectable"/></param>
        /// <param name="arg3"><see cref="string"/></param>
        /// <param name="arg4"><see cref="int"/></param>
        /// <param name="arg5"><see cref="long"/></param>
        /// <param name="arg6"><see cref="long"/></param>
        /// <param name="arg7"><see cref="int"/></param>
        /// <param name="arg8"><see cref="int"/></param>
        /// <param name="arg9"><see cref="int"/></param>
        /// <param name="arg10"><see cref="long"/></param>
        /// <param name="arg11"><see cref="long"/></param>
        /// <param name="arg12"><see cref="Org.Apache.Kafka.Common.Utils.Time"/></param>
        /// <param name="arg13"><see cref="bool"/></param>
        /// <param name="arg14"><see cref="Org.Apache.Kafka.Clients.ApiVersions"/></param>
        /// <param name="arg15"><see cref="Org.Apache.Kafka.Common.Metrics.Sensor"/></param>
        /// <param name="arg16"><see cref="Org.Apache.Kafka.Common.Utils.LogContext"/></param>
        /// <param name="arg17"><see cref="Org.Apache.Kafka.Clients.HostResolver"/></param>
        public NetworkClient(Org.Apache.Kafka.Clients.MetadataUpdater arg0, Org.Apache.Kafka.Clients.Metadata arg1, Org.Apache.Kafka.Common.Network.Selectable arg2, string arg3, int arg4, long arg5, long arg6, int arg7, int arg8, int arg9, long arg10, long arg11, Org.Apache.Kafka.Common.Utils.Time arg12, bool arg13, Org.Apache.Kafka.Clients.ApiVersions arg14, Org.Apache.Kafka.Common.Metrics.Sensor arg15, Org.Apache.Kafka.Common.Utils.LogContext arg16, Org.Apache.Kafka.Clients.HostResolver arg17)
            : base(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11, arg12, arg13, arg14, arg15, arg16, arg17)
        {
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/NetworkClient.html#%3Cinit%3E(org.apache.kafka.common.network.Selectable,org.apache.kafka.clients.Metadata,java.lang.String,int,long,long,int,int,int,long,long,org.apache.kafka.common.utils.Time,boolean,org.apache.kafka.clients.ApiVersions,org.apache.kafka.common.metrics.Sensor,org.apache.kafka.common.utils.LogContext)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Common.Network.Selectable"/></param>
        /// <param name="arg1"><see cref="Org.Apache.Kafka.Clients.Metadata"/></param>
        /// <param name="arg2"><see cref="string"/></param>
        /// <param name="arg3"><see cref="int"/></param>
        /// <param name="arg4"><see cref="long"/></param>
        /// <param name="arg5"><see cref="long"/></param>
        /// <param name="arg6"><see cref="int"/></param>
        /// <param name="arg7"><see cref="int"/></param>
        /// <param name="arg8"><see cref="int"/></param>
        /// <param name="arg9"><see cref="long"/></param>
        /// <param name="arg10"><see cref="long"/></param>
        /// <param name="arg11"><see cref="Org.Apache.Kafka.Common.Utils.Time"/></param>
        /// <param name="arg12"><see cref="bool"/></param>
        /// <param name="arg13"><see cref="Org.Apache.Kafka.Clients.ApiVersions"/></param>
        /// <param name="arg14"><see cref="Org.Apache.Kafka.Common.Metrics.Sensor"/></param>
        /// <param name="arg15"><see cref="Org.Apache.Kafka.Common.Utils.LogContext"/></param>
        public NetworkClient(Org.Apache.Kafka.Common.Network.Selectable arg0, Org.Apache.Kafka.Clients.Metadata arg1, string arg2, int arg3, long arg4, long arg5, int arg6, int arg7, int arg8, long arg9, long arg10, Org.Apache.Kafka.Common.Utils.Time arg11, bool arg12, Org.Apache.Kafka.Clients.ApiVersions arg13, Org.Apache.Kafka.Common.Metrics.Sensor arg14, Org.Apache.Kafka.Common.Utils.LogContext arg15)
            : base(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11, arg12, arg13, arg14, arg15)
        {
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/NetworkClient.html#%3Cinit%3E(org.apache.kafka.common.network.Selectable,org.apache.kafka.clients.Metadata,java.lang.String,int,long,long,int,int,int,long,long,org.apache.kafka.common.utils.Time,boolean,org.apache.kafka.clients.ApiVersions,org.apache.kafka.common.utils.LogContext)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Common.Network.Selectable"/></param>
        /// <param name="arg1"><see cref="Org.Apache.Kafka.Clients.Metadata"/></param>
        /// <param name="arg2"><see cref="string"/></param>
        /// <param name="arg3"><see cref="int"/></param>
        /// <param name="arg4"><see cref="long"/></param>
        /// <param name="arg5"><see cref="long"/></param>
        /// <param name="arg6"><see cref="int"/></param>
        /// <param name="arg7"><see cref="int"/></param>
        /// <param name="arg8"><see cref="int"/></param>
        /// <param name="arg9"><see cref="long"/></param>
        /// <param name="arg10"><see cref="long"/></param>
        /// <param name="arg11"><see cref="Org.Apache.Kafka.Common.Utils.Time"/></param>
        /// <param name="arg12"><see cref="bool"/></param>
        /// <param name="arg13"><see cref="Org.Apache.Kafka.Clients.ApiVersions"/></param>
        /// <param name="arg14"><see cref="Org.Apache.Kafka.Common.Utils.LogContext"/></param>
        public NetworkClient(Org.Apache.Kafka.Common.Network.Selectable arg0, Org.Apache.Kafka.Clients.Metadata arg1, string arg2, int arg3, long arg4, long arg5, int arg6, int arg7, int arg8, long arg9, long arg10, Org.Apache.Kafka.Common.Utils.Time arg11, bool arg12, Org.Apache.Kafka.Clients.ApiVersions arg13, Org.Apache.Kafka.Common.Utils.LogContext arg14)
            : base(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11, arg12, arg13, arg14)
        {
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/NetworkClient.html#%3Cinit%3E(org.apache.kafka.common.network.Selectable,org.apache.kafka.clients.MetadataUpdater,java.lang.String,int,long,long,int,int,int,long,long,org.apache.kafka.common.utils.Time,boolean,org.apache.kafka.clients.ApiVersions,org.apache.kafka.common.utils.LogContext)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Common.Network.Selectable"/></param>
        /// <param name="arg1"><see cref="Org.Apache.Kafka.Clients.MetadataUpdater"/></param>
        /// <param name="arg2"><see cref="string"/></param>
        /// <param name="arg3"><see cref="int"/></param>
        /// <param name="arg4"><see cref="long"/></param>
        /// <param name="arg5"><see cref="long"/></param>
        /// <param name="arg6"><see cref="int"/></param>
        /// <param name="arg7"><see cref="int"/></param>
        /// <param name="arg8"><see cref="int"/></param>
        /// <param name="arg9"><see cref="long"/></param>
        /// <param name="arg10"><see cref="long"/></param>
        /// <param name="arg11"><see cref="Org.Apache.Kafka.Common.Utils.Time"/></param>
        /// <param name="arg12"><see cref="bool"/></param>
        /// <param name="arg13"><see cref="Org.Apache.Kafka.Clients.ApiVersions"/></param>
        /// <param name="arg14"><see cref="Org.Apache.Kafka.Common.Utils.LogContext"/></param>
        public NetworkClient(Org.Apache.Kafka.Common.Network.Selectable arg0, Org.Apache.Kafka.Clients.MetadataUpdater arg1, string arg2, int arg3, long arg4, long arg5, int arg6, int arg7, int arg8, long arg9, long arg10, Org.Apache.Kafka.Common.Utils.Time arg11, bool arg12, Org.Apache.Kafka.Clients.ApiVersions arg13, Org.Apache.Kafka.Common.Utils.LogContext arg14)
            : base(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11, arg12, arg13, arg14)
        {
        }

        #endregion

        #region Class/Interface conversion operators
        /// <summary>
        /// Converter from <see cref="Org.Apache.Kafka.Clients.NetworkClient"/> to <see cref="Org.Apache.Kafka.Clients.KafkaClient"/>
        /// </summary>
        public static implicit operator Org.Apache.Kafka.Clients.KafkaClient(Org.Apache.Kafka.Clients.NetworkClient t) => t.Cast<Org.Apache.Kafka.Clients.KafkaClient>();

        #endregion

        #region Fields

        #endregion

        #region Static methods
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/NetworkClient.html#parseResponse(java.nio.ByteBuffer,org.apache.kafka.common.requests.RequestHeader)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Nio.ByteBuffer"/></param>
        /// <param name="arg1"><see cref="Org.Apache.Kafka.Common.Requests.RequestHeader"/></param>
        /// <returns><see cref="Org.Apache.Kafka.Common.Requests.AbstractResponse"/></returns>
        public static Org.Apache.Kafka.Common.Requests.AbstractResponse ParseResponse(Java.Nio.ByteBuffer arg0, Org.Apache.Kafka.Common.Requests.RequestHeader arg1)
        {
            return SExecute<Org.Apache.Kafka.Common.Requests.AbstractResponse>(LocalBridgeClazz, "parseResponse", arg0, arg1);
        }

        #endregion

        #region Instance methods
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/NetworkClient.html#active()"/> 
        /// </summary>
        public bool Active
        {
            get { return IExecute<bool>("active"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/NetworkClient.html#discoverBrokerVersions()"/> 
        /// </summary>
        public bool DiscoverBrokerVersions
        {
            get { return IExecute<bool>("discoverBrokerVersions"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/NetworkClient.html#connectionFailed(org.apache.kafka.common.Node)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Common.Node"/></param>
        /// <returns><see cref="bool"/></returns>
        public bool ConnectionFailed(Org.Apache.Kafka.Common.Node arg0)
        {
            return IExecute<bool>("connectionFailed", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/NetworkClient.html#hasInFlightRequests()"/>
        /// </summary>

        /// <returns><see cref="bool"/></returns>
        public bool HasInFlightRequests()
        {
            return IExecute<bool>("hasInFlightRequests");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/NetworkClient.html#hasInFlightRequests(java.lang.String)"/>
        /// </summary>
        /// <param name="arg0"><see cref="string"/></param>
        /// <returns><see cref="bool"/></returns>
        public bool HasInFlightRequests(string arg0)
        {
            return IExecute<bool>("hasInFlightRequests", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/NetworkClient.html#hasReadyNodes(long)"/>
        /// </summary>
        /// <param name="arg0"><see cref="long"/></param>
        /// <returns><see cref="bool"/></returns>
        public bool HasReadyNodes(long arg0)
        {
            return IExecute<bool>("hasReadyNodes", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/NetworkClient.html#isReady(org.apache.kafka.common.Node,long)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Common.Node"/></param>
        /// <param name="arg1"><see cref="long"/></param>
        /// <returns><see cref="bool"/></returns>
        public bool IsReady(Org.Apache.Kafka.Common.Node arg0, long arg1)
        {
            return IExecute<bool>("isReady", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/NetworkClient.html#ready(org.apache.kafka.common.Node,long)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Common.Node"/></param>
        /// <param name="arg1"><see cref="long"/></param>
        /// <returns><see cref="bool"/></returns>
        public bool Ready(Org.Apache.Kafka.Common.Node arg0, long arg1)
        {
            return IExecute<bool>("ready", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/NetworkClient.html#inFlightRequestCount()"/>
        /// </summary>

        /// <returns><see cref="int"/></returns>
        public int InFlightRequestCount()
        {
            return IExecute<int>("inFlightRequestCount");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/NetworkClient.html#inFlightRequestCount(java.lang.String)"/>
        /// </summary>
        /// <param name="arg0"><see cref="string"/></param>
        /// <returns><see cref="int"/></returns>
        public int InFlightRequestCount(string arg0)
        {
            return IExecute<int>("inFlightRequestCount", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/NetworkClient.html#poll(long,long)"/>
        /// </summary>
        /// <param name="arg0"><see cref="long"/></param>
        /// <param name="arg1"><see cref="long"/></param>
        /// <returns><see cref="Java.Util.List"/></returns>
        public Java.Util.List<Org.Apache.Kafka.Clients.ClientResponse> Poll(long arg0, long arg1)
        {
            return IExecute<Java.Util.List<Org.Apache.Kafka.Clients.ClientResponse>>("poll", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/NetworkClient.html#connectionDelay(org.apache.kafka.common.Node,long)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Common.Node"/></param>
        /// <param name="arg1"><see cref="long"/></param>
        /// <returns><see cref="long"/></returns>
        public long ConnectionDelay(Org.Apache.Kafka.Common.Node arg0, long arg1)
        {
            return IExecute<long>("connectionDelay", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/NetworkClient.html#pollDelayMs(org.apache.kafka.common.Node,long)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Common.Node"/></param>
        /// <param name="arg1"><see cref="long"/></param>
        /// <returns><see cref="long"/></returns>
        public long PollDelayMs(Org.Apache.Kafka.Common.Node arg0, long arg1)
        {
            return IExecute<long>("pollDelayMs", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/NetworkClient.html#throttleDelayMs(org.apache.kafka.common.Node,long)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Common.Node"/></param>
        /// <param name="arg1"><see cref="long"/></param>
        /// <returns><see cref="long"/></returns>
        public long ThrottleDelayMs(Org.Apache.Kafka.Common.Node arg0, long arg1)
        {
            return IExecute<long>("throttleDelayMs", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/NetworkClient.html#newClientRequest(java.lang.String,org.apache.kafka.common.requests.AbstractRequest.Builder,long,boolean,int,org.apache.kafka.clients.RequestCompletionHandler)"/>
        /// </summary>
        /// <param name="arg0"><see cref="string"/></param>
        /// <param name="arg1"><see cref="Org.Apache.Kafka.Common.Requests.AbstractRequest.Builder"/></param>
        /// <param name="arg2"><see cref="long"/></param>
        /// <param name="arg3"><see cref="bool"/></param>
        /// <param name="arg4"><see cref="int"/></param>
        /// <param name="arg5"><see cref="Org.Apache.Kafka.Clients.RequestCompletionHandler"/></param>
        /// <returns><see cref="Org.Apache.Kafka.Clients.ClientRequest"/></returns>
        public Org.Apache.Kafka.Clients.ClientRequest NewClientRequest(string arg0, Org.Apache.Kafka.Common.Requests.AbstractRequest.Builder arg1, long arg2, bool arg3, int arg4, Org.Apache.Kafka.Clients.RequestCompletionHandler arg5)
        {
            return IExecute<Org.Apache.Kafka.Clients.ClientRequest>("newClientRequest", arg0, arg1, arg2, arg3, arg4, arg5);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/NetworkClient.html#newClientRequest(java.lang.String,org.apache.kafka.common.requests.AbstractRequest.Builder,long,boolean)"/>
        /// </summary>
        /// <param name="arg0"><see cref="string"/></param>
        /// <param name="arg1"><see cref="Org.Apache.Kafka.Common.Requests.AbstractRequest.Builder"/></param>
        /// <param name="arg2"><see cref="long"/></param>
        /// <param name="arg3"><see cref="bool"/></param>
        /// <returns><see cref="Org.Apache.Kafka.Clients.ClientRequest"/></returns>
        public Org.Apache.Kafka.Clients.ClientRequest NewClientRequest(string arg0, Org.Apache.Kafka.Common.Requests.AbstractRequest.Builder arg1, long arg2, bool arg3)
        {
            return IExecute<Org.Apache.Kafka.Clients.ClientRequest>("newClientRequest", arg0, arg1, arg2, arg3);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/NetworkClient.html#authenticationException(org.apache.kafka.common.Node)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Common.Node"/></param>
        /// <returns><see cref="Org.Apache.Kafka.Common.Errors.AuthenticationException"/></returns>
        public Org.Apache.Kafka.Common.Errors.AuthenticationException AuthenticationException(Org.Apache.Kafka.Common.Node arg0)
        {
            var obj = IExecute<MASES.JCOBridge.C2JBridge.JVMInterop.IJavaObject>("authenticationException", arg0); return MASES.JCOBridge.C2JBridge.JVMBridgeException.New<Org.Apache.Kafka.Common.Errors.AuthenticationException>(obj);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/NetworkClient.html#leastLoadedNode(long)"/>
        /// </summary>
        /// <param name="arg0"><see cref="long"/></param>
        /// <returns><see cref="Org.Apache.Kafka.Common.Node"/></returns>
        public Org.Apache.Kafka.Common.Node LeastLoadedNode(long arg0)
        {
            return IExecute<Org.Apache.Kafka.Common.Node>("leastLoadedNode", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/NetworkClient.html#close()"/>
        /// </summary>
        public void Close()
        {
            IExecute("close");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/NetworkClient.html#close(java.lang.String)"/>
        /// </summary>
        /// <param name="arg0"><see cref="string"/></param>
        public void Close(string arg0)
        {
            IExecute("close", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/NetworkClient.html#disconnect(java.lang.String)"/>
        /// </summary>
        /// <param name="arg0"><see cref="string"/></param>
        public void Disconnect(string arg0)
        {
            IExecute("disconnect", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/NetworkClient.html#initiateClose()"/>
        /// </summary>
        public void InitiateClose()
        {
            IExecute("initiateClose");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/NetworkClient.html#send(org.apache.kafka.clients.ClientRequest,long)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Clients.ClientRequest"/></param>
        /// <param name="arg1"><see cref="long"/></param>
        public void Send(Org.Apache.Kafka.Clients.ClientRequest arg0, long arg1)
        {
            IExecute("send", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/NetworkClient.html#wakeup()"/>
        /// </summary>
        public void Wakeup()
        {
            IExecute("wakeup");
        }

        #endregion

        #region Nested classes

        #endregion

        // TODO: complete the class
    }
    #endregion
}