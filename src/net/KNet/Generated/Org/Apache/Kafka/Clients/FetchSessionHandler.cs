/*
*  Copyright 2023 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 1.5.5.0)
*  using kafka-clients-3.4.0.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Org.Apache.Kafka.Clients
{
    #region FetchSessionHandler
    public partial class FetchSessionHandler
    {
        #region Constructors
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/FetchSessionHandler.html#%3Cinit%3E(org.apache.kafka.common.utils.LogContext,int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Common.Utils.LogContext"/></param>
        /// <param name="arg1"><see cref="int"/></param>
        public FetchSessionHandler(Org.Apache.Kafka.Common.Utils.LogContext arg0, int arg1)
            : base(arg0, arg1)
        {
        }

        #endregion

        #region Class/Interface conversion operators

        #endregion

        #region Fields

        #endregion

        #region Static methods

        #endregion

        #region Instance methods
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/FetchSessionHandler.html#handleResponse(org.apache.kafka.common.requests.FetchResponse,short)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Common.Requests.FetchResponse"/></param>
        /// <param name="arg1"><see cref="short"/></param>
        /// <returns><see cref="bool"/></returns>
        public bool HandleResponse(Org.Apache.Kafka.Common.Requests.FetchResponse arg0, short arg1)
        {
            return IExecute<bool>("handleResponse", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/FetchSessionHandler.html#sessionTopicNames()"/>
        /// </summary>

        /// <returns><see cref="Java.Util.Map"/></returns>
        public Java.Util.Map<Org.Apache.Kafka.Common.Uuid, string> SessionTopicNames()
        {
            return IExecute<Java.Util.Map<Org.Apache.Kafka.Common.Uuid, string>>("sessionTopicNames");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/FetchSessionHandler.html#sessionTopicPartitions()"/>
        /// </summary>

        /// <returns><see cref="Java.Util.Set"/></returns>
        public Java.Util.Set<Org.Apache.Kafka.Common.TopicPartition> SessionTopicPartitions()
        {
            return IExecute<Java.Util.Set<Org.Apache.Kafka.Common.TopicPartition>>("sessionTopicPartitions");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/FetchSessionHandler.html#newBuilder()"/>
        /// </summary>

        /// <returns><see cref="Org.Apache.Kafka.Clients.FetchSessionHandler.Builder"/></returns>
        public Org.Apache.Kafka.Clients.FetchSessionHandler.Builder NewBuilder()
        {
            return IExecute<Org.Apache.Kafka.Clients.FetchSessionHandler.Builder>("newBuilder");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/FetchSessionHandler.html#newBuilder(int,boolean)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <param name="arg1"><see cref="bool"/></param>
        /// <returns><see cref="Org.Apache.Kafka.Clients.FetchSessionHandler.Builder"/></returns>
        public Org.Apache.Kafka.Clients.FetchSessionHandler.Builder NewBuilder(int arg0, bool arg1)
        {
            return IExecute<Org.Apache.Kafka.Clients.FetchSessionHandler.Builder>("newBuilder", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/FetchSessionHandler.html#handleError(java.lang.Throwable)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.Throwable"/></param>
        public void HandleError(Java.Lang.Throwable arg0)
        {
            IExecute("handleError", arg0);
        }

        #endregion

        #region Nested classes
        #region Builder
        public partial class Builder
        {
            #region Constructors

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields

            #endregion

            #region Static methods

            #endregion

            #region Instance methods
            /// <summary>
            /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/FetchSessionHandler.Builder.html#build()"/>
            /// </summary>

            /// <returns><see cref="Org.Apache.Kafka.Clients.FetchSessionHandler.FetchRequestData"/></returns>
            public Org.Apache.Kafka.Clients.FetchSessionHandler.FetchRequestData Build()
            {
                return IExecute<Org.Apache.Kafka.Clients.FetchSessionHandler.FetchRequestData>("build");
            }
            /// <summary>
            /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/FetchSessionHandler.Builder.html#add(org.apache.kafka.common.TopicPartition,org.apache.kafka.common.requests.FetchRequest.PartitionData)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Org.Apache.Kafka.Common.TopicPartition"/></param>
            /// <param name="arg1"><see cref="Org.Apache.Kafka.Common.Requests.FetchRequest.PartitionData"/></param>
            public void Add(Org.Apache.Kafka.Common.TopicPartition arg0, Org.Apache.Kafka.Common.Requests.FetchRequest.PartitionData arg1)
            {
                IExecute("add", arg0, arg1);
            }

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

        #region FetchRequestData
        public partial class FetchRequestData
        {
            #region Constructors

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields

            #endregion

            #region Static methods

            #endregion

            #region Instance methods
            /// <summary>
            /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/FetchSessionHandler.FetchRequestData.html#canUseTopicIds()"/>
            /// </summary>

            /// <returns><see cref="bool"/></returns>
            public bool CanUseTopicIds()
            {
                return IExecute<bool>("canUseTopicIds");
            }
            /// <summary>
            /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/FetchSessionHandler.FetchRequestData.html#toForget()"/>
            /// </summary>

            /// <returns><see cref="Java.Util.List"/></returns>
            public Java.Util.List<Org.Apache.Kafka.Common.TopicIdPartition> ToForget()
            {
                return IExecute<Java.Util.List<Org.Apache.Kafka.Common.TopicIdPartition>>("toForget");
            }
            /// <summary>
            /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/FetchSessionHandler.FetchRequestData.html#toReplace()"/>
            /// </summary>

            /// <returns><see cref="Java.Util.List"/></returns>
            public Java.Util.List<Org.Apache.Kafka.Common.TopicIdPartition> ToReplace()
            {
                return IExecute<Java.Util.List<Org.Apache.Kafka.Common.TopicIdPartition>>("toReplace");
            }
            /// <summary>
            /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/FetchSessionHandler.FetchRequestData.html#sessionPartitions()"/>
            /// </summary>

            /// <returns><see cref="Java.Util.Map"/></returns>
            public Java.Util.Map<Org.Apache.Kafka.Common.TopicPartition, Org.Apache.Kafka.Common.Requests.FetchRequest.PartitionData> SessionPartitions()
            {
                return IExecute<Java.Util.Map<Org.Apache.Kafka.Common.TopicPartition, Org.Apache.Kafka.Common.Requests.FetchRequest.PartitionData>>("sessionPartitions");
            }
            /// <summary>
            /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/FetchSessionHandler.FetchRequestData.html#toSend()"/>
            /// </summary>

            /// <returns><see cref="Java.Util.Map"/></returns>
            public Java.Util.Map<Org.Apache.Kafka.Common.TopicPartition, Org.Apache.Kafka.Common.Requests.FetchRequest.PartitionData> ToSend()
            {
                return IExecute<Java.Util.Map<Org.Apache.Kafka.Common.TopicPartition, Org.Apache.Kafka.Common.Requests.FetchRequest.PartitionData>>("toSend");
            }
            /// <summary>
            /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/FetchSessionHandler.FetchRequestData.html#metadata()"/>
            /// </summary>

            /// <returns><see cref="Org.Apache.Kafka.Common.Requests.FetchMetadata"/></returns>
            public Org.Apache.Kafka.Common.Requests.FetchMetadata Metadata()
            {
                return IExecute<Org.Apache.Kafka.Common.Requests.FetchMetadata>("metadata");
            }

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

    
        #endregion

        // TODO: complete the class
    }
    #endregion
}