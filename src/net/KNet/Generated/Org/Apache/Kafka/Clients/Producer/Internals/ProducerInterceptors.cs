/*
*  Copyright 2023 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 1.5.5.0)
*  using kafka-clients-3.4.0.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Org.Apache.Kafka.Clients.Producer.Internals
{
    #region ProducerInterceptors
    public partial class ProducerInterceptors
    {
        #region Constructors
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/producer/internals/ProducerInterceptors.html#%3Cinit%3E(java.util.List)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Util.List"/></param>
        public ProducerInterceptors(Java.Util.List arg0)
            : base(arg0)
        {
        }

        #endregion

        #region Class/Interface conversion operators
        /// <summary>
        /// Converter from <see cref="Org.Apache.Kafka.Clients.Producer.Internals.ProducerInterceptors"/> to <see cref="Java.Io.Closeable"/>
        /// </summary>
        public static implicit operator Java.Io.Closeable(Org.Apache.Kafka.Clients.Producer.Internals.ProducerInterceptors t) => t.Cast<Java.Io.Closeable>();

        #endregion

        #region Fields

        #endregion

        #region Static methods
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/producer/internals/ProducerInterceptors.html#extractTopicPartition(org.apache.kafka.clients.producer.ProducerRecord)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Clients.Producer.ProducerRecord"/></param>
        /// <returns><see cref="Org.Apache.Kafka.Common.TopicPartition"/></returns>
        public static Org.Apache.Kafka.Common.TopicPartition ExtractTopicPartition(Org.Apache.Kafka.Clients.Producer.ProducerRecord arg0)
        {
            return SExecute<Org.Apache.Kafka.Common.TopicPartition>(LocalBridgeClazz, "extractTopicPartition", arg0);
        }

        #endregion

        #region Instance methods
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/producer/internals/ProducerInterceptors.html#onSend(org.apache.kafka.clients.producer.ProducerRecord)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Clients.Producer.ProducerRecord"/></param>
        /// <returns><see cref="Org.Apache.Kafka.Clients.Producer.ProducerRecord"/></returns>
        public Org.Apache.Kafka.Clients.Producer.ProducerRecord OnSend(Org.Apache.Kafka.Clients.Producer.ProducerRecord arg0)
        {
            return IExecute<Org.Apache.Kafka.Clients.Producer.ProducerRecord>("onSend", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/producer/internals/ProducerInterceptors.html#close()"/>
        /// </summary>
        public void Close()
        {
            IExecute("close");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/producer/internals/ProducerInterceptors.html#onAcknowledgement(org.apache.kafka.clients.producer.RecordMetadata,java.lang.Exception)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Clients.Producer.RecordMetadata"/></param>
        /// <param name="arg1"><see cref="Java.Lang.Exception"/></param>
        public void OnAcknowledgement(Org.Apache.Kafka.Clients.Producer.RecordMetadata arg0, Java.Lang.Exception arg1)
        {
            IExecute("onAcknowledgement", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/producer/internals/ProducerInterceptors.html#onSendError(org.apache.kafka.clients.producer.ProducerRecord,org.apache.kafka.common.TopicPartition,java.lang.Exception)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Clients.Producer.ProducerRecord"/></param>
        /// <param name="arg1"><see cref="Org.Apache.Kafka.Common.TopicPartition"/></param>
        /// <param name="arg2"><see cref="Java.Lang.Exception"/></param>
        public void OnSendError(Org.Apache.Kafka.Clients.Producer.ProducerRecord arg0, Org.Apache.Kafka.Common.TopicPartition arg1, Java.Lang.Exception arg2)
        {
            IExecute("onSendError", arg0, arg1, arg2);
        }

        #endregion

        #region Nested classes

        #endregion

        // TODO: complete the class
    }
    #endregion

    #region ProducerInterceptors<K, V>
    public partial class ProducerInterceptors<K, V>
    {
        #region Constructors
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/producer/internals/ProducerInterceptors.html#%3Cinit%3E(java.util.List)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Util.List"/></param>
        public ProducerInterceptors(Java.Util.List<Org.Apache.Kafka.Clients.Producer.ProducerInterceptor<K, V>> arg0)
            : base(arg0)
        {
        }

        #endregion

        #region Class/Interface conversion operators
        /// <summary>
        /// Converter from <see cref="Org.Apache.Kafka.Clients.Producer.Internals.ProducerInterceptors{K, V}"/> to <see cref="Java.Io.Closeable"/>
        /// </summary>
        public static implicit operator Java.Io.Closeable(Org.Apache.Kafka.Clients.Producer.Internals.ProducerInterceptors<K, V> t) => t.Cast<Java.Io.Closeable>();
        /// <summary>
        /// Converter from <see cref="Org.Apache.Kafka.Clients.Producer.Internals.ProducerInterceptors{K, V}"/> to <see cref="Org.Apache.Kafka.Clients.Producer.Internals.ProducerInterceptors"/>
        /// </summary>
        public static implicit operator Org.Apache.Kafka.Clients.Producer.Internals.ProducerInterceptors(Org.Apache.Kafka.Clients.Producer.Internals.ProducerInterceptors<K, V> t) => t.Cast<Org.Apache.Kafka.Clients.Producer.Internals.ProducerInterceptors>();

        #endregion

        #region Fields

        #endregion

        #region Static methods
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/producer/internals/ProducerInterceptors.html#extractTopicPartition(org.apache.kafka.clients.producer.ProducerRecord)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Clients.Producer.ProducerRecord"/></param>
        /// <returns><see cref="Org.Apache.Kafka.Common.TopicPartition"/></returns>
        public static Org.Apache.Kafka.Common.TopicPartition ExtractTopicPartition(Org.Apache.Kafka.Clients.Producer.ProducerRecord<K, V> arg0)
        {
            return SExecute<Org.Apache.Kafka.Common.TopicPartition>(LocalBridgeClazz, "extractTopicPartition", arg0);
        }

        #endregion

        #region Instance methods
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/producer/internals/ProducerInterceptors.html#onSend(org.apache.kafka.clients.producer.ProducerRecord)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Clients.Producer.ProducerRecord"/></param>
        /// <returns><see cref="Org.Apache.Kafka.Clients.Producer.ProducerRecord"/></returns>
        public Org.Apache.Kafka.Clients.Producer.ProducerRecord<K, V> OnSend(Org.Apache.Kafka.Clients.Producer.ProducerRecord<K, V> arg0)
        {
            return IExecute<Org.Apache.Kafka.Clients.Producer.ProducerRecord<K, V>>("onSend", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/producer/internals/ProducerInterceptors.html#close()"/>
        /// </summary>
        public void Close()
        {
            IExecute("close");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/producer/internals/ProducerInterceptors.html#onAcknowledgement(org.apache.kafka.clients.producer.RecordMetadata,java.lang.Exception)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Clients.Producer.RecordMetadata"/></param>
        /// <param name="arg1"><see cref="Java.Lang.Exception"/></param>
        public void OnAcknowledgement(Org.Apache.Kafka.Clients.Producer.RecordMetadata arg0, Java.Lang.Exception arg1)
        {
            IExecute("onAcknowledgement", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/producer/internals/ProducerInterceptors.html#onSendError(org.apache.kafka.clients.producer.ProducerRecord,org.apache.kafka.common.TopicPartition,java.lang.Exception)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Clients.Producer.ProducerRecord"/></param>
        /// <param name="arg1"><see cref="Org.Apache.Kafka.Common.TopicPartition"/></param>
        /// <param name="arg2"><see cref="Java.Lang.Exception"/></param>
        public void OnSendError(Org.Apache.Kafka.Clients.Producer.ProducerRecord<K, V> arg0, Org.Apache.Kafka.Common.TopicPartition arg1, Java.Lang.Exception arg2)
        {
            IExecute("onSendError", arg0, arg1, arg2);
        }

        #endregion

        #region Nested classes

        #endregion

        // TODO: complete the class
    }
    #endregion
}