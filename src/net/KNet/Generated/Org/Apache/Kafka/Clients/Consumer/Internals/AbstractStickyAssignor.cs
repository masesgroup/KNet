/*
*  Copyright 2023 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 1.5.5.0)
*  using kafka-clients-3.4.0.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Org.Apache.Kafka.Clients.Consumer.Internals
{
    #region AbstractStickyAssignor
    public partial class AbstractStickyAssignor
    {
        #region Constructors

        #endregion

        #region Class/Interface conversion operators

        #endregion

        #region Fields
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/consumer/internals/AbstractStickyAssignor.html#maxGeneration"/>
        /// </summary>
        public int maxGeneration { get { return IGetField<int>("maxGeneration"); } set { ISetField("maxGeneration", value); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/consumer/internals/AbstractStickyAssignor.html#DEFAULT_GENERATION"/>
        /// </summary>
        public static int DEFAULT_GENERATION { get { return SGetField<int>(LocalBridgeClazz, "DEFAULT_GENERATION"); } }

        #endregion

        #region Static methods

        #endregion

        #region Instance methods
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/consumer/internals/AbstractStickyAssignor.html#isSticky()"/> 
        /// </summary>
        public bool IsSticky
        {
            get { return IExecute<bool>("isSticky"); }
        }

        #endregion

        #region Nested classes
        #region MemberData
        public partial class MemberData
        {
            #region Constructors
            /// <summary>
            /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/consumer/internals/AbstractStickyAssignor.MemberData.html#%3Cinit%3E(java.util.List,java.util.Optional)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Java.Util.List"/></param>
            /// <param name="arg1"><see cref="Java.Util.Optional"/></param>
            public MemberData(Java.Util.List arg0, Java.Util.Optional arg1)
                : base(arg0, arg1)
            {
            }

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields
            /// <summary>
            /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/consumer/internals/AbstractStickyAssignor.MemberData.html#partitions"/>
            /// </summary>
            public Java.Util.List partitions { get { return IGetField<Java.Util.List>("partitions"); } }
            /// <summary>
            /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/consumer/internals/AbstractStickyAssignor.MemberData.html#generation"/>
            /// </summary>
            public Java.Util.Optional generation { get { return IGetField<Java.Util.Optional>("generation"); } }

            #endregion

            #region Static methods

            #endregion

            #region Instance methods

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

    
        #endregion

        // TODO: complete the class
    }
    #endregion
}