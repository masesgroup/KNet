/*
*  Copyright 2023 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 1.5.5.0)
*  using kafka-clients-3.4.0.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Org.Apache.Kafka.Clients.Consumer.Internals
{
    #region ConsumerCoordinator
    public partial class ConsumerCoordinator
    {
        #region Constructors
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/consumer/internals/ConsumerCoordinator.html#%3Cinit%3E(org.apache.kafka.clients.GroupRebalanceConfig,org.apache.kafka.common.utils.LogContext,org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient,java.util.List,org.apache.kafka.clients.consumer.internals.ConsumerMetadata,org.apache.kafka.clients.consumer.internals.SubscriptionState,org.apache.kafka.common.metrics.Metrics,java.lang.String,org.apache.kafka.common.utils.Time,boolean,int,org.apache.kafka.clients.consumer.internals.ConsumerInterceptors,boolean,java.lang.String)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Clients.GroupRebalanceConfig"/></param>
        /// <param name="arg1"><see cref="Org.Apache.Kafka.Common.Utils.LogContext"/></param>
        /// <param name="arg2"><see cref="Org.Apache.Kafka.Clients.Consumer.Internals.ConsumerNetworkClient"/></param>
        /// <param name="arg3"><see cref="Java.Util.List"/></param>
        /// <param name="arg4"><see cref="Org.Apache.Kafka.Clients.Consumer.Internals.ConsumerMetadata"/></param>
        /// <param name="arg5"><see cref="Org.Apache.Kafka.Clients.Consumer.Internals.SubscriptionState"/></param>
        /// <param name="arg6"><see cref="Org.Apache.Kafka.Common.Metrics.Metrics"/></param>
        /// <param name="arg7"><see cref="string"/></param>
        /// <param name="arg8"><see cref="Org.Apache.Kafka.Common.Utils.Time"/></param>
        /// <param name="arg9"><see cref="bool"/></param>
        /// <param name="arg10"><see cref="int"/></param>
        /// <param name="arg11"><see cref="Org.Apache.Kafka.Clients.Consumer.Internals.ConsumerInterceptors"/></param>
        /// <param name="arg12"><see cref="bool"/></param>
        /// <param name="arg13"><see cref="string"/></param>
        public ConsumerCoordinator(Org.Apache.Kafka.Clients.GroupRebalanceConfig arg0, Org.Apache.Kafka.Common.Utils.LogContext arg1, Org.Apache.Kafka.Clients.Consumer.Internals.ConsumerNetworkClient arg2, Java.Util.List arg3, Org.Apache.Kafka.Clients.Consumer.Internals.ConsumerMetadata arg4, Org.Apache.Kafka.Clients.Consumer.Internals.SubscriptionState arg5, Org.Apache.Kafka.Common.Metrics.Metrics arg6, string arg7, Org.Apache.Kafka.Common.Utils.Time arg8, bool arg9, int arg10, Org.Apache.Kafka.Clients.Consumer.Internals.ConsumerInterceptors arg11, bool arg12, string arg13)
            : base(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11, arg12, arg13)
        {
        }

        #endregion

        #region Class/Interface conversion operators

        #endregion

        #region Fields

        #endregion

        #region Static methods

        #endregion

        #region Instance methods
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/consumer/internals/ConsumerCoordinator.html#groupMetadata()"/> 
        /// </summary>
        public Org.Apache.Kafka.Clients.Consumer.ConsumerGroupMetadata GroupMetadata
        {
            get { return IExecute<Org.Apache.Kafka.Clients.Consumer.ConsumerGroupMetadata>("groupMetadata"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/consumer/internals/ConsumerCoordinator.html#protocolType()"/> 
        /// </summary>
        public string ProtocolType
        {
            get { return IExecute<string>("protocolType"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/consumer/internals/ConsumerCoordinator.html#rejoinNeededOrPending()"/> 
        /// </summary>
        public bool RejoinNeededOrPending
        {
            get { return IExecute<bool>("rejoinNeededOrPending"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/consumer/internals/ConsumerCoordinator.html#commitOffsetsSync(java.util.Map,org.apache.kafka.common.utils.Timer)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Util.Map"/></param>
        /// <param name="arg1"><see cref="Org.Apache.Kafka.Common.Utils.Timer"/></param>
        /// <returns><see cref="bool"/></returns>
        public bool CommitOffsetsSync(Java.Util.Map<Org.Apache.Kafka.Common.TopicPartition, Org.Apache.Kafka.Clients.Consumer.OffsetAndMetadata> arg0, Org.Apache.Kafka.Common.Utils.Timer arg1)
        {
            return IExecute<bool>("commitOffsetsSync", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/consumer/internals/ConsumerCoordinator.html#poll(org.apache.kafka.common.utils.Timer,boolean)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Common.Utils.Timer"/></param>
        /// <param name="arg1"><see cref="bool"/></param>
        /// <returns><see cref="bool"/></returns>
        public bool Poll(Org.Apache.Kafka.Common.Utils.Timer arg0, bool arg1)
        {
            return IExecute<bool>("poll", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/consumer/internals/ConsumerCoordinator.html#refreshCommittedOffsetsIfNeeded(org.apache.kafka.common.utils.Timer)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Common.Utils.Timer"/></param>
        /// <returns><see cref="bool"/></returns>
        public bool RefreshCommittedOffsetsIfNeeded(Org.Apache.Kafka.Common.Utils.Timer arg0)
        {
            return IExecute<bool>("refreshCommittedOffsetsIfNeeded", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/consumer/internals/ConsumerCoordinator.html#fetchCommittedOffsets(java.util.Set,org.apache.kafka.common.utils.Timer)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Util.Set"/></param>
        /// <param name="arg1"><see cref="Org.Apache.Kafka.Common.Utils.Timer"/></param>
        /// <returns><see cref="Java.Util.Map"/></returns>
        public Java.Util.Map<Org.Apache.Kafka.Common.TopicPartition, Org.Apache.Kafka.Clients.Consumer.OffsetAndMetadata> FetchCommittedOffsets(Java.Util.Set<Org.Apache.Kafka.Common.TopicPartition> arg0, Org.Apache.Kafka.Common.Utils.Timer arg1)
        {
            return IExecute<Java.Util.Map<Org.Apache.Kafka.Common.TopicPartition, Org.Apache.Kafka.Clients.Consumer.OffsetAndMetadata>>("fetchCommittedOffsets", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/consumer/internals/ConsumerCoordinator.html#timeToNextPoll(long)"/>
        /// </summary>
        /// <param name="arg0"><see cref="long"/></param>
        /// <returns><see cref="long"/></returns>
        public long TimeToNextPoll(long arg0)
        {
            return IExecute<long>("timeToNextPoll", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/consumer/internals/ConsumerCoordinator.html#commitOffsetsAsync(java.util.Map,org.apache.kafka.clients.consumer.OffsetCommitCallback)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Util.Map"/></param>
        /// <param name="arg1"><see cref="Org.Apache.Kafka.Clients.Consumer.OffsetCommitCallback"/></param>
        /// <returns><see cref="Org.Apache.Kafka.Clients.Consumer.Internals.RequestFuture"/></returns>
        public Org.Apache.Kafka.Clients.Consumer.Internals.RequestFuture<Java.Lang.Void> CommitOffsetsAsync(Java.Util.Map<Org.Apache.Kafka.Common.TopicPartition, Org.Apache.Kafka.Clients.Consumer.OffsetAndMetadata> arg0, Org.Apache.Kafka.Clients.Consumer.OffsetCommitCallback arg1)
        {
            return IExecute<Org.Apache.Kafka.Clients.Consumer.Internals.RequestFuture<Java.Lang.Void>>("commitOffsetsAsync", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/consumer/internals/ConsumerCoordinator.html#close(org.apache.kafka.common.utils.Timer)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Common.Utils.Timer"/></param>
        public void Close(Org.Apache.Kafka.Common.Utils.Timer arg0)
        {
            IExecute("close", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/consumer/internals/ConsumerCoordinator.html#maybeAutoCommitOffsetsAsync(long)"/>
        /// </summary>
        /// <param name="arg0"><see cref="long"/></param>
        public void MaybeAutoCommitOffsetsAsync(long arg0)
        {
            IExecute("maybeAutoCommitOffsetsAsync", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/consumer/internals/ConsumerCoordinator.html#onLeavePrepare()"/>
        /// </summary>
        public void OnLeavePrepare()
        {
            IExecute("onLeavePrepare");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/consumer/internals/ConsumerCoordinator.html#updatePatternSubscription(org.apache.kafka.common.Cluster)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Common.Cluster"/></param>
        public void UpdatePatternSubscription(Org.Apache.Kafka.Common.Cluster arg0)
        {
            IExecute("updatePatternSubscription", arg0);
        }

        #endregion

        #region Nested classes

        #endregion

        // TODO: complete the class
    }
    #endregion
}