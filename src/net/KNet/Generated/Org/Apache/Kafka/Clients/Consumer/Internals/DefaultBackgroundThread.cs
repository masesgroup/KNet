/*
*  Copyright 2023 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 1.5.5.0)
*  using kafka-clients-3.4.0.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Org.Apache.Kafka.Clients.Consumer.Internals
{
    #region DefaultBackgroundThread
    public partial class DefaultBackgroundThread
    {
        #region Constructors
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/consumer/internals/DefaultBackgroundThread.html#%3Cinit%3E(org.apache.kafka.common.utils.Time,org.apache.kafka.clients.consumer.ConsumerConfig,org.apache.kafka.common.utils.LogContext,java.util.concurrent.BlockingQueue,java.util.concurrent.BlockingQueue,org.apache.kafka.clients.consumer.internals.SubscriptionState,org.apache.kafka.clients.consumer.internals.ConsumerMetadata,org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient,org.apache.kafka.common.metrics.Metrics)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Common.Utils.Time"/></param>
        /// <param name="arg1"><see cref="Org.Apache.Kafka.Clients.Consumer.ConsumerConfig"/></param>
        /// <param name="arg2"><see cref="Org.Apache.Kafka.Common.Utils.LogContext"/></param>
        /// <param name="arg3"><see cref="Java.Util.Concurrent.BlockingQueue"/></param>
        /// <param name="arg4"><see cref="Java.Util.Concurrent.BlockingQueue"/></param>
        /// <param name="arg5"><see cref="Org.Apache.Kafka.Clients.Consumer.Internals.SubscriptionState"/></param>
        /// <param name="arg6"><see cref="Org.Apache.Kafka.Clients.Consumer.Internals.ConsumerMetadata"/></param>
        /// <param name="arg7"><see cref="Org.Apache.Kafka.Clients.Consumer.Internals.ConsumerNetworkClient"/></param>
        /// <param name="arg8"><see cref="Org.Apache.Kafka.Common.Metrics.Metrics"/></param>
        public DefaultBackgroundThread(Org.Apache.Kafka.Common.Utils.Time arg0, Org.Apache.Kafka.Clients.Consumer.ConsumerConfig arg1, Org.Apache.Kafka.Common.Utils.LogContext arg2, Java.Util.Concurrent.BlockingQueue arg3, Java.Util.Concurrent.BlockingQueue arg4, Org.Apache.Kafka.Clients.Consumer.Internals.SubscriptionState arg5, Org.Apache.Kafka.Clients.Consumer.Internals.ConsumerMetadata arg6, Org.Apache.Kafka.Clients.Consumer.Internals.ConsumerNetworkClient arg7, Org.Apache.Kafka.Common.Metrics.Metrics arg8)
            : base(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8)
        {
        }

        #endregion

        #region Class/Interface conversion operators

        #endregion

        #region Fields

        #endregion

        #region Static methods

        #endregion

        #region Instance methods
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/consumer/internals/DefaultBackgroundThread.html#isRunning()"/> 
        /// </summary>
        public bool IsRunning
        {
            get { return IExecute<bool>("isRunning"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/consumer/internals/DefaultBackgroundThread.html#close()"/>
        /// </summary>
        public void Close()
        {
            IExecute("close");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/consumer/internals/DefaultBackgroundThread.html#wakeup()"/>
        /// </summary>
        public void Wakeup()
        {
            IExecute("wakeup");
        }

        #endregion

        #region Nested classes

        #endregion

        // TODO: complete the class
    }
    #endregion
}