/*
*  Copyright 2023 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 1.5.5.0)
*  using kafka-clients-3.4.0.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Org.Apache.Kafka.Clients.Consumer.Internals
{
    #region ConsumerProtocol
    public partial class ConsumerProtocol
    {
        #region Constructors

        #endregion

        #region Class/Interface conversion operators

        #endregion

        #region Fields
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/consumer/internals/ConsumerProtocol.html#PROTOCOL_TYPE"/>
        /// </summary>
        public static string PROTOCOL_TYPE { get { return SGetField<string>(LocalBridgeClazz, "PROTOCOL_TYPE"); } }

        #endregion

        #region Static methods
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/consumer/internals/ConsumerProtocol.html#serializeAssignment(org.apache.kafka.clients.consumer.ConsumerPartitionAssignor.Assignment,short)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Clients.Consumer.ConsumerPartitionAssignor.Assignment"/></param>
        /// <param name="arg1"><see cref="short"/></param>
        /// <returns><see cref="Java.Nio.ByteBuffer"/></returns>
        public static Java.Nio.ByteBuffer SerializeAssignment(Org.Apache.Kafka.Clients.Consumer.ConsumerPartitionAssignor.Assignment arg0, short arg1)
        {
            return SExecute<Java.Nio.ByteBuffer>(LocalBridgeClazz, "serializeAssignment", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/consumer/internals/ConsumerProtocol.html#serializeAssignment(org.apache.kafka.clients.consumer.ConsumerPartitionAssignor.Assignment)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Clients.Consumer.ConsumerPartitionAssignor.Assignment"/></param>
        /// <returns><see cref="Java.Nio.ByteBuffer"/></returns>
        public static Java.Nio.ByteBuffer SerializeAssignment(Org.Apache.Kafka.Clients.Consumer.ConsumerPartitionAssignor.Assignment arg0)
        {
            return SExecute<Java.Nio.ByteBuffer>(LocalBridgeClazz, "serializeAssignment", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/consumer/internals/ConsumerProtocol.html#serializeSubscription(org.apache.kafka.clients.consumer.ConsumerPartitionAssignor.Subscription,short)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Clients.Consumer.ConsumerPartitionAssignor.Subscription"/></param>
        /// <param name="arg1"><see cref="short"/></param>
        /// <returns><see cref="Java.Nio.ByteBuffer"/></returns>
        public static Java.Nio.ByteBuffer SerializeSubscription(Org.Apache.Kafka.Clients.Consumer.ConsumerPartitionAssignor.Subscription arg0, short arg1)
        {
            return SExecute<Java.Nio.ByteBuffer>(LocalBridgeClazz, "serializeSubscription", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/consumer/internals/ConsumerProtocol.html#serializeSubscription(org.apache.kafka.clients.consumer.ConsumerPartitionAssignor.Subscription)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Clients.Consumer.ConsumerPartitionAssignor.Subscription"/></param>
        /// <returns><see cref="Java.Nio.ByteBuffer"/></returns>
        public static Java.Nio.ByteBuffer SerializeSubscription(Org.Apache.Kafka.Clients.Consumer.ConsumerPartitionAssignor.Subscription arg0)
        {
            return SExecute<Java.Nio.ByteBuffer>(LocalBridgeClazz, "serializeSubscription", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/consumer/internals/ConsumerProtocol.html#deserializeAssignment(java.nio.ByteBuffer,short)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Nio.ByteBuffer"/></param>
        /// <param name="arg1"><see cref="short"/></param>
        /// <returns><see cref="Org.Apache.Kafka.Clients.Consumer.ConsumerPartitionAssignor.Assignment"/></returns>
        public static Org.Apache.Kafka.Clients.Consumer.ConsumerPartitionAssignor.Assignment DeserializeAssignment(Java.Nio.ByteBuffer arg0, short arg1)
        {
            return SExecute<Org.Apache.Kafka.Clients.Consumer.ConsumerPartitionAssignor.Assignment>(LocalBridgeClazz, "deserializeAssignment", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/consumer/internals/ConsumerProtocol.html#deserializeAssignment(java.nio.ByteBuffer)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Nio.ByteBuffer"/></param>
        /// <returns><see cref="Org.Apache.Kafka.Clients.Consumer.ConsumerPartitionAssignor.Assignment"/></returns>
        public static Org.Apache.Kafka.Clients.Consumer.ConsumerPartitionAssignor.Assignment DeserializeAssignment(Java.Nio.ByteBuffer arg0)
        {
            return SExecute<Org.Apache.Kafka.Clients.Consumer.ConsumerPartitionAssignor.Assignment>(LocalBridgeClazz, "deserializeAssignment", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/consumer/internals/ConsumerProtocol.html#deserializeSubscription(java.nio.ByteBuffer,short)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Nio.ByteBuffer"/></param>
        /// <param name="arg1"><see cref="short"/></param>
        /// <returns><see cref="Org.Apache.Kafka.Clients.Consumer.ConsumerPartitionAssignor.Subscription"/></returns>
        public static Org.Apache.Kafka.Clients.Consumer.ConsumerPartitionAssignor.Subscription DeserializeSubscription(Java.Nio.ByteBuffer arg0, short arg1)
        {
            return SExecute<Org.Apache.Kafka.Clients.Consumer.ConsumerPartitionAssignor.Subscription>(LocalBridgeClazz, "deserializeSubscription", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/consumer/internals/ConsumerProtocol.html#deserializeSubscription(java.nio.ByteBuffer)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Nio.ByteBuffer"/></param>
        /// <returns><see cref="Org.Apache.Kafka.Clients.Consumer.ConsumerPartitionAssignor.Subscription"/></returns>
        public static Org.Apache.Kafka.Clients.Consumer.ConsumerPartitionAssignor.Subscription DeserializeSubscription(Java.Nio.ByteBuffer arg0)
        {
            return SExecute<Org.Apache.Kafka.Clients.Consumer.ConsumerPartitionAssignor.Subscription>(LocalBridgeClazz, "deserializeSubscription", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/consumer/internals/ConsumerProtocol.html#deserializeVersion(java.nio.ByteBuffer)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Nio.ByteBuffer"/></param>
        /// <returns><see cref="short"/></returns>
        public static short DeserializeVersion(Java.Nio.ByteBuffer arg0)
        {
            return SExecute<short>(LocalBridgeClazz, "deserializeVersion", arg0);
        }

        #endregion

        #region Instance methods

        #endregion

        #region Nested classes

        #endregion

        // TODO: complete the class
    }
    #endregion
}