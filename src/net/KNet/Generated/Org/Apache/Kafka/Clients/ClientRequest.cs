/*
*  Copyright 2023 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 1.5.5.0)
*  using kafka-clients-3.4.0.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Org.Apache.Kafka.Clients
{
    #region ClientRequest
    public partial class ClientRequest
    {
        #region Constructors

        #endregion

        #region Class/Interface conversion operators

        #endregion

        #region Fields

        #endregion

        #region Static methods

        #endregion

        #region Instance methods
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/ClientRequest.html#expectResponse()"/>
        /// </summary>

        /// <returns><see cref="bool"/></returns>
        public bool ExpectResponse()
        {
            return IExecute<bool>("expectResponse");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/ClientRequest.html#correlationId()"/>
        /// </summary>

        /// <returns><see cref="int"/></returns>
        public int CorrelationId()
        {
            return IExecute<int>("correlationId");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/ClientRequest.html#requestTimeoutMs()"/>
        /// </summary>

        /// <returns><see cref="int"/></returns>
        public int RequestTimeoutMs()
        {
            return IExecute<int>("requestTimeoutMs");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/ClientRequest.html#destination()"/>
        /// </summary>

        /// <returns><see cref="string"/></returns>
        public string Destination()
        {
            return IExecute<string>("destination");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/ClientRequest.html#createdTimeMs()"/>
        /// </summary>

        /// <returns><see cref="long"/></returns>
        public long CreatedTimeMs()
        {
            return IExecute<long>("createdTimeMs");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/ClientRequest.html#callback()"/>
        /// </summary>

        /// <returns><see cref="Org.Apache.Kafka.Clients.RequestCompletionHandler"/></returns>
        public Org.Apache.Kafka.Clients.RequestCompletionHandler Callback()
        {
            return IExecute<Org.Apache.Kafka.Clients.RequestCompletionHandler>("callback");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/ClientRequest.html#apiKey()"/>
        /// </summary>

        /// <returns><see cref="Org.Apache.Kafka.Common.Protocol.ApiKeys"/></returns>
        public Org.Apache.Kafka.Common.Protocol.ApiKeys ApiKey()
        {
            return IExecute<Org.Apache.Kafka.Common.Protocol.ApiKeys>("apiKey");
        }

        #endregion

        #region Nested classes

        #endregion

        // TODO: complete the class
    }
    #endregion
}