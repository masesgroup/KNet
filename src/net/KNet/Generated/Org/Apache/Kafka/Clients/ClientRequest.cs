/*
*  Copyright 2023 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 1.5.5.0)
*  using kafka-clients-3.4.0.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Org.Apache.Kafka.Clients
{
    #region ClientRequest
    public partial class ClientRequest
    {
        #region Constructors
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/ClientRequest.html#%3Cinit%3E(java.lang.String,org.apache.kafka.common.requests.AbstractRequest.Builder,int,java.lang.String,long,boolean,int,org.apache.kafka.clients.RequestCompletionHandler)"/>
        /// </summary>
        /// <param name="arg0"><see cref="string"/></param>
        /// <param name="arg1"><see cref="Org.Apache.Kafka.Common.Requests.AbstractRequest.Builder"/></param>
        /// <param name="arg2"><see cref="int"/></param>
        /// <param name="arg3"><see cref="string"/></param>
        /// <param name="arg4"><see cref="long"/></param>
        /// <param name="arg5"><see cref="bool"/></param>
        /// <param name="arg6"><see cref="int"/></param>
        /// <param name="arg7"><see cref="Org.Apache.Kafka.Clients.RequestCompletionHandler"/></param>
        public ClientRequest(string arg0, Org.Apache.Kafka.Common.Requests.AbstractRequest.Builder arg1, int arg2, string arg3, long arg4, bool arg5, int arg6, Org.Apache.Kafka.Clients.RequestCompletionHandler arg7)
            : base(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7)
        {
        }

        #endregion

        #region Class/Interface conversion operators

        #endregion

        #region Fields

        #endregion

        #region Static methods

        #endregion

        #region Instance methods
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/ClientRequest.html#apiKey()"/> 
        /// </summary>
        public Org.Apache.Kafka.Common.Protocol.ApiKeys ApiKey
        {
            get { return IExecute<Org.Apache.Kafka.Common.Protocol.ApiKeys>("apiKey"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/ClientRequest.html#callback()"/> 
        /// </summary>
        public Org.Apache.Kafka.Clients.RequestCompletionHandler Callback
        {
            get { return IExecute<Org.Apache.Kafka.Clients.RequestCompletionHandler>("callback"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/ClientRequest.html#correlationId()"/> 
        /// </summary>
        public int CorrelationId
        {
            get { return IExecute<int>("correlationId"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/ClientRequest.html#createdTimeMs()"/> 
        /// </summary>
        public long CreatedTimeMs
        {
            get { return IExecute<long>("createdTimeMs"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/ClientRequest.html#destination()"/> 
        /// </summary>
        public string Destination
        {
            get { return IExecute<string>("destination"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/ClientRequest.html#expectResponse()"/> 
        /// </summary>
        public bool ExpectResponse
        {
            get { return IExecute<bool>("expectResponse"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/ClientRequest.html#requestBuilder()"/> 
        /// </summary>
        public Org.Apache.Kafka.Common.Requests.AbstractRequest.Builder RequestBuilder
        {
            get { return IExecute<Org.Apache.Kafka.Common.Requests.AbstractRequest.Builder>("requestBuilder"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/ClientRequest.html#requestTimeoutMs()"/> 
        /// </summary>
        public int RequestTimeoutMs
        {
            get { return IExecute<int>("requestTimeoutMs"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/ClientRequest.html#makeHeader(short)"/>
        /// </summary>
        /// <param name="arg0"><see cref="short"/></param>
        /// <returns><see cref="Org.Apache.Kafka.Common.Requests.RequestHeader"/></returns>
        public Org.Apache.Kafka.Common.Requests.RequestHeader MakeHeader(short arg0)
        {
            return IExecute<Org.Apache.Kafka.Common.Requests.RequestHeader>("makeHeader", arg0);
        }

        #endregion

        #region Nested classes

        #endregion

        // TODO: complete the class
    }
    #endregion
}