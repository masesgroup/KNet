/*
*  Copyright 2023 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 1.5.5.0)
*  using kafka-clients-3.4.0.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Org.Apache.Kafka.Clients.Consumer.Internals
{
    #region PrototypeAsyncConsumer
    public partial class PrototypeAsyncConsumer
    {
        #region Constructors
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/consumer/internals/PrototypeAsyncConsumer.html#%3Cinit%3E(org.apache.kafka.common.utils.Time,org.apache.kafka.clients.consumer.ConsumerConfig,org.apache.kafka.common.serialization.Deserializer,org.apache.kafka.common.serialization.Deserializer)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Common.Utils.Time"/></param>
        /// <param name="arg1"><see cref="Org.Apache.Kafka.Clients.Consumer.ConsumerConfig"/></param>
        /// <param name="arg2"><see cref="Org.Apache.Kafka.Common.Serialization.Deserializer"/></param>
        /// <param name="arg3"><see cref="Org.Apache.Kafka.Common.Serialization.Deserializer"/></param>
        public PrototypeAsyncConsumer(Org.Apache.Kafka.Common.Utils.Time arg0, Org.Apache.Kafka.Clients.Consumer.ConsumerConfig arg1, Org.Apache.Kafka.Common.Serialization.Deserializer arg2, Org.Apache.Kafka.Common.Serialization.Deserializer arg3)
            : base(arg0, arg1, arg2, arg3)
        {
        }

        #endregion

        #region Class/Interface conversion operators
        /// <summary>
        /// Converter from <see cref="Org.Apache.Kafka.Clients.Consumer.Internals.PrototypeAsyncConsumer"/> to <see cref="Org.Apache.Kafka.Clients.Consumer.Consumer"/>
        /// </summary>
        public static implicit operator Org.Apache.Kafka.Clients.Consumer.Consumer(Org.Apache.Kafka.Clients.Consumer.Internals.PrototypeAsyncConsumer t) => t.Cast<Org.Apache.Kafka.Clients.Consumer.Consumer>();

        #endregion

        #region Fields

        #endregion

        #region Static methods

        #endregion

        #region Instance methods
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/consumer/internals/PrototypeAsyncConsumer.html#assignment()"/> 
        /// </summary>
        public Java.Util.Set Assignment
        {
            get { return IExecute<Java.Util.Set>("assignment"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/consumer/internals/PrototypeAsyncConsumer.html#groupMetadata()"/> 
        /// </summary>
        public Org.Apache.Kafka.Clients.Consumer.ConsumerGroupMetadata GroupMetadata
        {
            get { return IExecute<Org.Apache.Kafka.Clients.Consumer.ConsumerGroupMetadata>("groupMetadata"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/consumer/internals/PrototypeAsyncConsumer.html#metrics()"/> 
        /// </summary>
        public Java.Util.Map Metrics
        {
            get { return IExecute<Java.Util.Map>("metrics"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/consumer/internals/PrototypeAsyncConsumer.html#paused()"/> 
        /// </summary>
        public Java.Util.Set Paused
        {
            get { return IExecute<Java.Util.Set>("paused"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/consumer/internals/PrototypeAsyncConsumer.html#subscription()"/> 
        /// </summary>
        public Java.Util.Set Subscription
        {
            get { return IExecute<Java.Util.Set>("subscription"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/consumer/internals/PrototypeAsyncConsumer.html#partitionsFor(java.lang.String,java.time.Duration)"/>
        /// </summary>
        /// <param name="arg0"><see cref="string"/></param>
        /// <param name="arg1"><see cref="Java.Time.Duration"/></param>
        /// <returns><see cref="Java.Util.List"/></returns>
        public Java.Util.List PartitionsFor(string arg0, Java.Time.Duration arg1)
        {
            return IExecute<Java.Util.List>("partitionsFor", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/consumer/internals/PrototypeAsyncConsumer.html#partitionsFor(java.lang.String)"/>
        /// </summary>
        /// <param name="arg0"><see cref="string"/></param>
        /// <returns><see cref="Java.Util.List"/></returns>
        public Java.Util.List PartitionsFor(string arg0)
        {
            return IExecute<Java.Util.List>("partitionsFor", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/consumer/internals/PrototypeAsyncConsumer.html#listTopics()"/>
        /// </summary>

        /// <returns><see cref="Java.Util.Map"/></returns>
        public Java.Util.Map ListTopics()
        {
            return IExecute<Java.Util.Map>("listTopics");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/consumer/internals/PrototypeAsyncConsumer.html#listTopics(java.time.Duration)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Time.Duration"/></param>
        /// <returns><see cref="Java.Util.Map"/></returns>
        public Java.Util.Map ListTopics(Java.Time.Duration arg0)
        {
            return IExecute<Java.Util.Map>("listTopics", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/consumer/internals/PrototypeAsyncConsumer.html#beginningOffsets(java.util.Collection,java.time.Duration)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Util.Collection"/></param>
        /// <param name="arg1"><see cref="Java.Time.Duration"/></param>
        /// <returns><see cref="Java.Util.Map"/></returns>
        public Java.Util.Map BeginningOffsets(Java.Util.Collection arg0, Java.Time.Duration arg1)
        {
            return IExecute<Java.Util.Map>("beginningOffsets", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/consumer/internals/PrototypeAsyncConsumer.html#beginningOffsets(java.util.Collection)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Util.Collection"/></param>
        /// <returns><see cref="Java.Util.Map"/></returns>
        public Java.Util.Map BeginningOffsets(Java.Util.Collection arg0)
        {
            return IExecute<Java.Util.Map>("beginningOffsets", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/consumer/internals/PrototypeAsyncConsumer.html#endOffsets(java.util.Collection,java.time.Duration)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Util.Collection"/></param>
        /// <param name="arg1"><see cref="Java.Time.Duration"/></param>
        /// <returns><see cref="Java.Util.Map"/></returns>
        public Java.Util.Map EndOffsets(Java.Util.Collection arg0, Java.Time.Duration arg1)
        {
            return IExecute<Java.Util.Map>("endOffsets", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/consumer/internals/PrototypeAsyncConsumer.html#endOffsets(java.util.Collection)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Util.Collection"/></param>
        /// <returns><see cref="Java.Util.Map"/></returns>
        public Java.Util.Map EndOffsets(Java.Util.Collection arg0)
        {
            return IExecute<Java.Util.Map>("endOffsets", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/consumer/internals/PrototypeAsyncConsumer.html#committed(java.util.Set,java.time.Duration)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Util.Set"/></param>
        /// <param name="arg1"><see cref="Java.Time.Duration"/></param>
        /// <returns><see cref="Java.Util.Map"/></returns>
        public Java.Util.Map Committed(Java.Util.Set arg0, Java.Time.Duration arg1)
        {
            return IExecute<Java.Util.Map>("committed", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/consumer/internals/PrototypeAsyncConsumer.html#committed(java.util.Set)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Util.Set"/></param>
        /// <returns><see cref="Java.Util.Map"/></returns>
        public Java.Util.Map Committed(Java.Util.Set arg0)
        {
            return IExecute<Java.Util.Map>("committed", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/consumer/internals/PrototypeAsyncConsumer.html#offsetsForTimes(java.util.Map,java.time.Duration)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Util.Map"/></param>
        /// <param name="arg1"><see cref="Java.Time.Duration"/></param>
        /// <returns><see cref="Java.Util.Map"/></returns>
        public Java.Util.Map OffsetsForTimes(Java.Util.Map arg0, Java.Time.Duration arg1)
        {
            return IExecute<Java.Util.Map>("offsetsForTimes", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/consumer/internals/PrototypeAsyncConsumer.html#offsetsForTimes(java.util.Map)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Util.Map"/></param>
        /// <returns><see cref="Java.Util.Map"/></returns>
        public Java.Util.Map OffsetsForTimes(Java.Util.Map arg0)
        {
            return IExecute<Java.Util.Map>("offsetsForTimes", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/consumer/internals/PrototypeAsyncConsumer.html#currentLag(org.apache.kafka.common.TopicPartition)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Common.TopicPartition"/></param>
        /// <returns><see cref="Java.Util.OptionalLong"/></returns>
        public Java.Util.OptionalLong CurrentLag(Org.Apache.Kafka.Common.TopicPartition arg0)
        {
            return IExecute<Java.Util.OptionalLong>("currentLag", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/consumer/internals/PrototypeAsyncConsumer.html#position(org.apache.kafka.common.TopicPartition,java.time.Duration)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Common.TopicPartition"/></param>
        /// <param name="arg1"><see cref="Java.Time.Duration"/></param>
        /// <returns><see cref="long"/></returns>
        public long Position(Org.Apache.Kafka.Common.TopicPartition arg0, Java.Time.Duration arg1)
        {
            return IExecute<long>("position", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/consumer/internals/PrototypeAsyncConsumer.html#position(org.apache.kafka.common.TopicPartition)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Common.TopicPartition"/></param>
        /// <returns><see cref="long"/></returns>
        public long Position(Org.Apache.Kafka.Common.TopicPartition arg0)
        {
            return IExecute<long>("position", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/consumer/internals/PrototypeAsyncConsumer.html#poll(java.time.Duration)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Time.Duration"/></param>
        /// <returns><see cref="Org.Apache.Kafka.Clients.Consumer.ConsumerRecords"/></returns>
        public Org.Apache.Kafka.Clients.Consumer.ConsumerRecords Poll(Java.Time.Duration arg0)
        {
            return IExecute<Org.Apache.Kafka.Clients.Consumer.ConsumerRecords>("poll", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/consumer/internals/PrototypeAsyncConsumer.html#assign(java.util.Collection)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Util.Collection"/></param>
        public void Assign(Java.Util.Collection arg0)
        {
            IExecute("assign", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/consumer/internals/PrototypeAsyncConsumer.html#close()"/>
        /// </summary>
        public void Close()
        {
            IExecute("close");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/consumer/internals/PrototypeAsyncConsumer.html#close(java.time.Duration)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Time.Duration"/></param>
        public void Close(Java.Time.Duration arg0)
        {
            IExecute("close", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/consumer/internals/PrototypeAsyncConsumer.html#commitAsync()"/>
        /// </summary>
        public void CommitAsync()
        {
            IExecute("commitAsync");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/consumer/internals/PrototypeAsyncConsumer.html#commitAsync(java.util.Map,org.apache.kafka.clients.consumer.OffsetCommitCallback)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Util.Map"/></param>
        /// <param name="arg1"><see cref="Org.Apache.Kafka.Clients.Consumer.OffsetCommitCallback"/></param>
        public void CommitAsync(Java.Util.Map arg0, Org.Apache.Kafka.Clients.Consumer.OffsetCommitCallback arg1)
        {
            IExecute("commitAsync", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/consumer/internals/PrototypeAsyncConsumer.html#commitAsync(org.apache.kafka.clients.consumer.OffsetCommitCallback)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Clients.Consumer.OffsetCommitCallback"/></param>
        public void CommitAsync(Org.Apache.Kafka.Clients.Consumer.OffsetCommitCallback arg0)
        {
            IExecute("commitAsync", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/consumer/internals/PrototypeAsyncConsumer.html#commitSync()"/>
        /// </summary>
        public void CommitSync()
        {
            IExecute("commitSync");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/consumer/internals/PrototypeAsyncConsumer.html#commitSync(java.time.Duration)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Time.Duration"/></param>
        public void CommitSync(Java.Time.Duration arg0)
        {
            IExecute("commitSync", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/consumer/internals/PrototypeAsyncConsumer.html#commitSync(java.util.Map,java.time.Duration)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Util.Map"/></param>
        /// <param name="arg1"><see cref="Java.Time.Duration"/></param>
        public void CommitSync(Java.Util.Map arg0, Java.Time.Duration arg1)
        {
            IExecute("commitSync", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/consumer/internals/PrototypeAsyncConsumer.html#commitSync(java.util.Map)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Util.Map"/></param>
        public void CommitSync(Java.Util.Map arg0)
        {
            IExecute("commitSync", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/consumer/internals/PrototypeAsyncConsumer.html#enforceRebalance()"/>
        /// </summary>
        public void EnforceRebalance()
        {
            IExecute("enforceRebalance");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/consumer/internals/PrototypeAsyncConsumer.html#enforceRebalance(java.lang.String)"/>
        /// </summary>
        /// <param name="arg0"><see cref="string"/></param>
        public void EnforceRebalance(string arg0)
        {
            IExecute("enforceRebalance", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/consumer/internals/PrototypeAsyncConsumer.html#pause(java.util.Collection)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Util.Collection"/></param>
        public void Pause(Java.Util.Collection arg0)
        {
            IExecute("pause", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/consumer/internals/PrototypeAsyncConsumer.html#resume(java.util.Collection)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Util.Collection"/></param>
        public void Resume(Java.Util.Collection arg0)
        {
            IExecute("resume", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/consumer/internals/PrototypeAsyncConsumer.html#seek(org.apache.kafka.common.TopicPartition,long)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Common.TopicPartition"/></param>
        /// <param name="arg1"><see cref="long"/></param>
        public void Seek(Org.Apache.Kafka.Common.TopicPartition arg0, long arg1)
        {
            IExecute("seek", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/consumer/internals/PrototypeAsyncConsumer.html#seek(org.apache.kafka.common.TopicPartition,org.apache.kafka.clients.consumer.OffsetAndMetadata)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Common.TopicPartition"/></param>
        /// <param name="arg1"><see cref="Org.Apache.Kafka.Clients.Consumer.OffsetAndMetadata"/></param>
        public void Seek(Org.Apache.Kafka.Common.TopicPartition arg0, Org.Apache.Kafka.Clients.Consumer.OffsetAndMetadata arg1)
        {
            IExecute("seek", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/consumer/internals/PrototypeAsyncConsumer.html#seekToBeginning(java.util.Collection)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Util.Collection"/></param>
        public void SeekToBeginning(Java.Util.Collection arg0)
        {
            IExecute("seekToBeginning", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/consumer/internals/PrototypeAsyncConsumer.html#seekToEnd(java.util.Collection)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Util.Collection"/></param>
        public void SeekToEnd(Java.Util.Collection arg0)
        {
            IExecute("seekToEnd", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/consumer/internals/PrototypeAsyncConsumer.html#subscribe(java.util.Collection,org.apache.kafka.clients.consumer.ConsumerRebalanceListener)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Util.Collection"/></param>
        /// <param name="arg1"><see cref="Org.Apache.Kafka.Clients.Consumer.ConsumerRebalanceListener"/></param>
        public void Subscribe(Java.Util.Collection arg0, Org.Apache.Kafka.Clients.Consumer.ConsumerRebalanceListener arg1)
        {
            IExecute("subscribe", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/consumer/internals/PrototypeAsyncConsumer.html#subscribe(java.util.Collection)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Util.Collection"/></param>
        public void Subscribe(Java.Util.Collection arg0)
        {
            IExecute("subscribe", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/consumer/internals/PrototypeAsyncConsumer.html#subscribe(java.util.regex.Pattern,org.apache.kafka.clients.consumer.ConsumerRebalanceListener)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Util.Regex.Pattern"/></param>
        /// <param name="arg1"><see cref="Org.Apache.Kafka.Clients.Consumer.ConsumerRebalanceListener"/></param>
        public void Subscribe(Java.Util.Regex.Pattern arg0, Org.Apache.Kafka.Clients.Consumer.ConsumerRebalanceListener arg1)
        {
            IExecute("subscribe", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/consumer/internals/PrototypeAsyncConsumer.html#subscribe(java.util.regex.Pattern)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Util.Regex.Pattern"/></param>
        public void Subscribe(Java.Util.Regex.Pattern arg0)
        {
            IExecute("subscribe", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/consumer/internals/PrototypeAsyncConsumer.html#unsubscribe()"/>
        /// </summary>
        public void Unsubscribe()
        {
            IExecute("unsubscribe");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/consumer/internals/PrototypeAsyncConsumer.html#wakeup()"/>
        /// </summary>
        public void Wakeup()
        {
            IExecute("wakeup");
        }

        #endregion

        #region Nested classes

        #endregion

        // TODO: complete the class
    }
    #endregion

    #region PrototypeAsyncConsumer<K, V>
    public partial class PrototypeAsyncConsumer<K, V>
    {
        #region Constructors
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/consumer/internals/PrototypeAsyncConsumer.html#%3Cinit%3E(org.apache.kafka.common.utils.Time,org.apache.kafka.clients.consumer.ConsumerConfig,org.apache.kafka.common.serialization.Deserializer,org.apache.kafka.common.serialization.Deserializer)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Common.Utils.Time"/></param>
        /// <param name="arg1"><see cref="Org.Apache.Kafka.Clients.Consumer.ConsumerConfig"/></param>
        /// <param name="arg2"><see cref="Org.Apache.Kafka.Common.Serialization.Deserializer"/></param>
        /// <param name="arg3"><see cref="Org.Apache.Kafka.Common.Serialization.Deserializer"/></param>
        public PrototypeAsyncConsumer(Org.Apache.Kafka.Common.Utils.Time arg0, Org.Apache.Kafka.Clients.Consumer.ConsumerConfig arg1, Org.Apache.Kafka.Common.Serialization.Deserializer<K> arg2, Org.Apache.Kafka.Common.Serialization.Deserializer<V> arg3)
            : base(arg0, arg1, arg2, arg3)
        {
        }

        #endregion

        #region Class/Interface conversion operators
        /// <summary>
        /// Converter from <see cref="Org.Apache.Kafka.Clients.Consumer.Internals.PrototypeAsyncConsumer{K, V}"/> to <see cref="Org.Apache.Kafka.Clients.Consumer.Consumer{K, V}"/>
        /// </summary>
        public static implicit operator Org.Apache.Kafka.Clients.Consumer.Consumer<K, V>(Org.Apache.Kafka.Clients.Consumer.Internals.PrototypeAsyncConsumer<K, V> t) => t.Cast<Org.Apache.Kafka.Clients.Consumer.Consumer<K, V>>();
        /// <summary>
        /// Converter from <see cref="Org.Apache.Kafka.Clients.Consumer.Internals.PrototypeAsyncConsumer{K, V}"/> to <see cref="Org.Apache.Kafka.Clients.Consumer.Internals.PrototypeAsyncConsumer"/>
        /// </summary>
        public static implicit operator Org.Apache.Kafka.Clients.Consumer.Internals.PrototypeAsyncConsumer(Org.Apache.Kafka.Clients.Consumer.Internals.PrototypeAsyncConsumer<K, V> t) => t.Cast<Org.Apache.Kafka.Clients.Consumer.Internals.PrototypeAsyncConsumer>();

        #endregion

        #region Fields

        #endregion

        #region Static methods

        #endregion

        #region Instance methods
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/consumer/internals/PrototypeAsyncConsumer.html#assignment()"/> 
        /// </summary>
        public Java.Util.Set<Org.Apache.Kafka.Common.TopicPartition> Assignment
        {
            get { return IExecute<Java.Util.Set<Org.Apache.Kafka.Common.TopicPartition>>("assignment"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/consumer/internals/PrototypeAsyncConsumer.html#groupMetadata()"/> 
        /// </summary>
        public Org.Apache.Kafka.Clients.Consumer.ConsumerGroupMetadata GroupMetadata
        {
            get { return IExecute<Org.Apache.Kafka.Clients.Consumer.ConsumerGroupMetadata>("groupMetadata"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/consumer/internals/PrototypeAsyncConsumer.html#metrics()"/> 
        /// </summary>
        public Java.Util.Map Metrics
        {
            get { return IExecute<Java.Util.Map>("metrics"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/consumer/internals/PrototypeAsyncConsumer.html#paused()"/> 
        /// </summary>
        public Java.Util.Set<Org.Apache.Kafka.Common.TopicPartition> Paused
        {
            get { return IExecute<Java.Util.Set<Org.Apache.Kafka.Common.TopicPartition>>("paused"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/consumer/internals/PrototypeAsyncConsumer.html#subscription()"/> 
        /// </summary>
        public Java.Util.Set<string> Subscription
        {
            get { return IExecute<Java.Util.Set<string>>("subscription"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/consumer/internals/PrototypeAsyncConsumer.html#partitionsFor(java.lang.String,java.time.Duration)"/>
        /// </summary>
        /// <param name="arg0"><see cref="string"/></param>
        /// <param name="arg1"><see cref="Java.Time.Duration"/></param>
        /// <returns><see cref="Java.Util.List"/></returns>
        public Java.Util.List<Org.Apache.Kafka.Common.PartitionInfo> PartitionsFor(string arg0, Java.Time.Duration arg1)
        {
            return IExecute<Java.Util.List<Org.Apache.Kafka.Common.PartitionInfo>>("partitionsFor", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/consumer/internals/PrototypeAsyncConsumer.html#partitionsFor(java.lang.String)"/>
        /// </summary>
        /// <param name="arg0"><see cref="string"/></param>
        /// <returns><see cref="Java.Util.List"/></returns>
        public Java.Util.List<Org.Apache.Kafka.Common.PartitionInfo> PartitionsFor(string arg0)
        {
            return IExecute<Java.Util.List<Org.Apache.Kafka.Common.PartitionInfo>>("partitionsFor", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/consumer/internals/PrototypeAsyncConsumer.html#listTopics()"/>
        /// </summary>

        /// <returns><see cref="Java.Util.Map"/></returns>
        public Java.Util.Map<string, Java.Util.List<Org.Apache.Kafka.Common.PartitionInfo>> ListTopics()
        {
            return IExecute<Java.Util.Map<string, Java.Util.List<Org.Apache.Kafka.Common.PartitionInfo>>>("listTopics");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/consumer/internals/PrototypeAsyncConsumer.html#listTopics(java.time.Duration)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Time.Duration"/></param>
        /// <returns><see cref="Java.Util.Map"/></returns>
        public Java.Util.Map<string, Java.Util.List<Org.Apache.Kafka.Common.PartitionInfo>> ListTopics(Java.Time.Duration arg0)
        {
            return IExecute<Java.Util.Map<string, Java.Util.List<Org.Apache.Kafka.Common.PartitionInfo>>>("listTopics", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/consumer/internals/PrototypeAsyncConsumer.html#beginningOffsets(java.util.Collection,java.time.Duration)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Util.Collection"/></param>
        /// <param name="arg1"><see cref="Java.Time.Duration"/></param>
        /// <returns><see cref="Java.Util.Map"/></returns>
        public Java.Util.Map<Org.Apache.Kafka.Common.TopicPartition, long?> BeginningOffsets(Java.Util.Collection<Org.Apache.Kafka.Common.TopicPartition> arg0, Java.Time.Duration arg1)
        {
            return IExecute<Java.Util.Map<Org.Apache.Kafka.Common.TopicPartition, long?>>("beginningOffsets", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/consumer/internals/PrototypeAsyncConsumer.html#beginningOffsets(java.util.Collection)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Util.Collection"/></param>
        /// <returns><see cref="Java.Util.Map"/></returns>
        public Java.Util.Map<Org.Apache.Kafka.Common.TopicPartition, long?> BeginningOffsets(Java.Util.Collection<Org.Apache.Kafka.Common.TopicPartition> arg0)
        {
            return IExecute<Java.Util.Map<Org.Apache.Kafka.Common.TopicPartition, long?>>("beginningOffsets", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/consumer/internals/PrototypeAsyncConsumer.html#endOffsets(java.util.Collection,java.time.Duration)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Util.Collection"/></param>
        /// <param name="arg1"><see cref="Java.Time.Duration"/></param>
        /// <returns><see cref="Java.Util.Map"/></returns>
        public Java.Util.Map<Org.Apache.Kafka.Common.TopicPartition, long?> EndOffsets(Java.Util.Collection<Org.Apache.Kafka.Common.TopicPartition> arg0, Java.Time.Duration arg1)
        {
            return IExecute<Java.Util.Map<Org.Apache.Kafka.Common.TopicPartition, long?>>("endOffsets", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/consumer/internals/PrototypeAsyncConsumer.html#endOffsets(java.util.Collection)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Util.Collection"/></param>
        /// <returns><see cref="Java.Util.Map"/></returns>
        public Java.Util.Map<Org.Apache.Kafka.Common.TopicPartition, long?> EndOffsets(Java.Util.Collection<Org.Apache.Kafka.Common.TopicPartition> arg0)
        {
            return IExecute<Java.Util.Map<Org.Apache.Kafka.Common.TopicPartition, long?>>("endOffsets", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/consumer/internals/PrototypeAsyncConsumer.html#committed(java.util.Set,java.time.Duration)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Util.Set"/></param>
        /// <param name="arg1"><see cref="Java.Time.Duration"/></param>
        /// <returns><see cref="Java.Util.Map"/></returns>
        public Java.Util.Map<Org.Apache.Kafka.Common.TopicPartition, Org.Apache.Kafka.Clients.Consumer.OffsetAndMetadata> Committed(Java.Util.Set<Org.Apache.Kafka.Common.TopicPartition> arg0, Java.Time.Duration arg1)
        {
            return IExecute<Java.Util.Map<Org.Apache.Kafka.Common.TopicPartition, Org.Apache.Kafka.Clients.Consumer.OffsetAndMetadata>>("committed", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/consumer/internals/PrototypeAsyncConsumer.html#committed(java.util.Set)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Util.Set"/></param>
        /// <returns><see cref="Java.Util.Map"/></returns>
        public Java.Util.Map<Org.Apache.Kafka.Common.TopicPartition, Org.Apache.Kafka.Clients.Consumer.OffsetAndMetadata> Committed(Java.Util.Set<Org.Apache.Kafka.Common.TopicPartition> arg0)
        {
            return IExecute<Java.Util.Map<Org.Apache.Kafka.Common.TopicPartition, Org.Apache.Kafka.Clients.Consumer.OffsetAndMetadata>>("committed", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/consumer/internals/PrototypeAsyncConsumer.html#offsetsForTimes(java.util.Map,java.time.Duration)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Util.Map"/></param>
        /// <param name="arg1"><see cref="Java.Time.Duration"/></param>
        /// <returns><see cref="Java.Util.Map"/></returns>
        public Java.Util.Map<Org.Apache.Kafka.Common.TopicPartition, Org.Apache.Kafka.Clients.Consumer.OffsetAndTimestamp> OffsetsForTimes(Java.Util.Map<Org.Apache.Kafka.Common.TopicPartition, long?> arg0, Java.Time.Duration arg1)
        {
            return IExecute<Java.Util.Map<Org.Apache.Kafka.Common.TopicPartition, Org.Apache.Kafka.Clients.Consumer.OffsetAndTimestamp>>("offsetsForTimes", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/consumer/internals/PrototypeAsyncConsumer.html#offsetsForTimes(java.util.Map)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Util.Map"/></param>
        /// <returns><see cref="Java.Util.Map"/></returns>
        public Java.Util.Map<Org.Apache.Kafka.Common.TopicPartition, Org.Apache.Kafka.Clients.Consumer.OffsetAndTimestamp> OffsetsForTimes(Java.Util.Map<Org.Apache.Kafka.Common.TopicPartition, long?> arg0)
        {
            return IExecute<Java.Util.Map<Org.Apache.Kafka.Common.TopicPartition, Org.Apache.Kafka.Clients.Consumer.OffsetAndTimestamp>>("offsetsForTimes", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/consumer/internals/PrototypeAsyncConsumer.html#currentLag(org.apache.kafka.common.TopicPartition)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Common.TopicPartition"/></param>
        /// <returns><see cref="Java.Util.OptionalLong"/></returns>
        public Java.Util.OptionalLong CurrentLag(Org.Apache.Kafka.Common.TopicPartition arg0)
        {
            return IExecute<Java.Util.OptionalLong>("currentLag", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/consumer/internals/PrototypeAsyncConsumer.html#position(org.apache.kafka.common.TopicPartition,java.time.Duration)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Common.TopicPartition"/></param>
        /// <param name="arg1"><see cref="Java.Time.Duration"/></param>
        /// <returns><see cref="long"/></returns>
        public long Position(Org.Apache.Kafka.Common.TopicPartition arg0, Java.Time.Duration arg1)
        {
            return IExecute<long>("position", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/consumer/internals/PrototypeAsyncConsumer.html#position(org.apache.kafka.common.TopicPartition)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Common.TopicPartition"/></param>
        /// <returns><see cref="long"/></returns>
        public long Position(Org.Apache.Kafka.Common.TopicPartition arg0)
        {
            return IExecute<long>("position", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/consumer/internals/PrototypeAsyncConsumer.html#poll(java.time.Duration)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Time.Duration"/></param>
        /// <returns><see cref="Org.Apache.Kafka.Clients.Consumer.ConsumerRecords"/></returns>
        public Org.Apache.Kafka.Clients.Consumer.ConsumerRecords<K, V> Poll(Java.Time.Duration arg0)
        {
            return IExecute<Org.Apache.Kafka.Clients.Consumer.ConsumerRecords<K, V>>("poll", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/consumer/internals/PrototypeAsyncConsumer.html#assign(java.util.Collection)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Util.Collection"/></param>
        public void Assign(Java.Util.Collection<Org.Apache.Kafka.Common.TopicPartition> arg0)
        {
            IExecute("assign", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/consumer/internals/PrototypeAsyncConsumer.html#close()"/>
        /// </summary>
        public void Close()
        {
            IExecute("close");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/consumer/internals/PrototypeAsyncConsumer.html#close(java.time.Duration)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Time.Duration"/></param>
        public void Close(Java.Time.Duration arg0)
        {
            IExecute("close", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/consumer/internals/PrototypeAsyncConsumer.html#commitAsync()"/>
        /// </summary>
        public void CommitAsync()
        {
            IExecute("commitAsync");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/consumer/internals/PrototypeAsyncConsumer.html#commitAsync(java.util.Map,org.apache.kafka.clients.consumer.OffsetCommitCallback)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Util.Map"/></param>
        /// <param name="arg1"><see cref="Org.Apache.Kafka.Clients.Consumer.OffsetCommitCallback"/></param>
        public void CommitAsync(Java.Util.Map<Org.Apache.Kafka.Common.TopicPartition, Org.Apache.Kafka.Clients.Consumer.OffsetAndMetadata> arg0, Org.Apache.Kafka.Clients.Consumer.OffsetCommitCallback arg1)
        {
            IExecute("commitAsync", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/consumer/internals/PrototypeAsyncConsumer.html#commitAsync(org.apache.kafka.clients.consumer.OffsetCommitCallback)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Clients.Consumer.OffsetCommitCallback"/></param>
        public void CommitAsync(Org.Apache.Kafka.Clients.Consumer.OffsetCommitCallback arg0)
        {
            IExecute("commitAsync", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/consumer/internals/PrototypeAsyncConsumer.html#commitSync()"/>
        /// </summary>
        public void CommitSync()
        {
            IExecute("commitSync");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/consumer/internals/PrototypeAsyncConsumer.html#commitSync(java.time.Duration)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Time.Duration"/></param>
        public void CommitSync(Java.Time.Duration arg0)
        {
            IExecute("commitSync", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/consumer/internals/PrototypeAsyncConsumer.html#commitSync(java.util.Map,java.time.Duration)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Util.Map"/></param>
        /// <param name="arg1"><see cref="Java.Time.Duration"/></param>
        public void CommitSync(Java.Util.Map<Org.Apache.Kafka.Common.TopicPartition, Org.Apache.Kafka.Clients.Consumer.OffsetAndMetadata> arg0, Java.Time.Duration arg1)
        {
            IExecute("commitSync", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/consumer/internals/PrototypeAsyncConsumer.html#commitSync(java.util.Map)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Util.Map"/></param>
        public void CommitSync(Java.Util.Map<Org.Apache.Kafka.Common.TopicPartition, Org.Apache.Kafka.Clients.Consumer.OffsetAndMetadata> arg0)
        {
            IExecute("commitSync", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/consumer/internals/PrototypeAsyncConsumer.html#enforceRebalance()"/>
        /// </summary>
        public void EnforceRebalance()
        {
            IExecute("enforceRebalance");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/consumer/internals/PrototypeAsyncConsumer.html#enforceRebalance(java.lang.String)"/>
        /// </summary>
        /// <param name="arg0"><see cref="string"/></param>
        public void EnforceRebalance(string arg0)
        {
            IExecute("enforceRebalance", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/consumer/internals/PrototypeAsyncConsumer.html#pause(java.util.Collection)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Util.Collection"/></param>
        public void Pause(Java.Util.Collection<Org.Apache.Kafka.Common.TopicPartition> arg0)
        {
            IExecute("pause", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/consumer/internals/PrototypeAsyncConsumer.html#resume(java.util.Collection)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Util.Collection"/></param>
        public void Resume(Java.Util.Collection<Org.Apache.Kafka.Common.TopicPartition> arg0)
        {
            IExecute("resume", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/consumer/internals/PrototypeAsyncConsumer.html#seek(org.apache.kafka.common.TopicPartition,long)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Common.TopicPartition"/></param>
        /// <param name="arg1"><see cref="long"/></param>
        public void Seek(Org.Apache.Kafka.Common.TopicPartition arg0, long arg1)
        {
            IExecute("seek", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/consumer/internals/PrototypeAsyncConsumer.html#seek(org.apache.kafka.common.TopicPartition,org.apache.kafka.clients.consumer.OffsetAndMetadata)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Common.TopicPartition"/></param>
        /// <param name="arg1"><see cref="Org.Apache.Kafka.Clients.Consumer.OffsetAndMetadata"/></param>
        public void Seek(Org.Apache.Kafka.Common.TopicPartition arg0, Org.Apache.Kafka.Clients.Consumer.OffsetAndMetadata arg1)
        {
            IExecute("seek", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/consumer/internals/PrototypeAsyncConsumer.html#seekToBeginning(java.util.Collection)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Util.Collection"/></param>
        public void SeekToBeginning(Java.Util.Collection<Org.Apache.Kafka.Common.TopicPartition> arg0)
        {
            IExecute("seekToBeginning", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/consumer/internals/PrototypeAsyncConsumer.html#seekToEnd(java.util.Collection)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Util.Collection"/></param>
        public void SeekToEnd(Java.Util.Collection<Org.Apache.Kafka.Common.TopicPartition> arg0)
        {
            IExecute("seekToEnd", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/consumer/internals/PrototypeAsyncConsumer.html#subscribe(java.util.Collection,org.apache.kafka.clients.consumer.ConsumerRebalanceListener)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Util.Collection"/></param>
        /// <param name="arg1"><see cref="Org.Apache.Kafka.Clients.Consumer.ConsumerRebalanceListener"/></param>
        public void Subscribe(Java.Util.Collection<string> arg0, Org.Apache.Kafka.Clients.Consumer.ConsumerRebalanceListener arg1)
        {
            IExecute("subscribe", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/consumer/internals/PrototypeAsyncConsumer.html#subscribe(java.util.Collection)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Util.Collection"/></param>
        public void Subscribe(Java.Util.Collection<string> arg0)
        {
            IExecute("subscribe", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/consumer/internals/PrototypeAsyncConsumer.html#subscribe(java.util.regex.Pattern,org.apache.kafka.clients.consumer.ConsumerRebalanceListener)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Util.Regex.Pattern"/></param>
        /// <param name="arg1"><see cref="Org.Apache.Kafka.Clients.Consumer.ConsumerRebalanceListener"/></param>
        public void Subscribe(Java.Util.Regex.Pattern arg0, Org.Apache.Kafka.Clients.Consumer.ConsumerRebalanceListener arg1)
        {
            IExecute("subscribe", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/consumer/internals/PrototypeAsyncConsumer.html#subscribe(java.util.regex.Pattern)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Util.Regex.Pattern"/></param>
        public void Subscribe(Java.Util.Regex.Pattern arg0)
        {
            IExecute("subscribe", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/consumer/internals/PrototypeAsyncConsumer.html#unsubscribe()"/>
        /// </summary>
        public void Unsubscribe()
        {
            IExecute("unsubscribe");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/consumer/internals/PrototypeAsyncConsumer.html#wakeup()"/>
        /// </summary>
        public void Wakeup()
        {
            IExecute("wakeup");
        }

        #endregion

        #region Nested classes

        #endregion

        // TODO: complete the class
    }
    #endregion
}