/*
*  Copyright 2023 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 1.5.5.0)
*  using kafka-clients-3.4.0.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Org.Apache.Kafka.Clients
{
    #region NodeApiVersions
    public partial class NodeApiVersions
    {
        #region Constructors
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/NodeApiVersions.html#%3Cinit%3E(java.util.Collection,java.util.Collection)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Util.Collection"/></param>
        /// <param name="arg1"><see cref="Java.Util.Collection"/></param>
        public NodeApiVersions(Java.Util.Collection arg0, Java.Util.Collection arg1)
            : base(arg0, arg1)
        {
        }

        #endregion

        #region Class/Interface conversion operators

        #endregion

        #region Fields

        #endregion

        #region Static methods
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/NodeApiVersions.html#create()"/>
        /// </summary>

        /// <returns><see cref="Org.Apache.Kafka.Clients.NodeApiVersions"/></returns>
        public static Org.Apache.Kafka.Clients.NodeApiVersions Create()
        {
            return SExecute<Org.Apache.Kafka.Clients.NodeApiVersions>(LocalBridgeClazz, "create");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/NodeApiVersions.html#create(java.util.Collection)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Util.Collection"/></param>
        /// <returns><see cref="Org.Apache.Kafka.Clients.NodeApiVersions"/></returns>
        public static Org.Apache.Kafka.Clients.NodeApiVersions Create(Java.Util.Collection<Org.Apache.Kafka.Common.Message.ApiVersionsResponseData.ApiVersion> arg0)
        {
            return SExecute<Org.Apache.Kafka.Clients.NodeApiVersions>(LocalBridgeClazz, "create", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/NodeApiVersions.html#create(short,short,short)"/>
        /// </summary>
        /// <param name="arg0"><see cref="short"/></param>
        /// <param name="arg1"><see cref="short"/></param>
        /// <param name="arg2"><see cref="short"/></param>
        /// <returns><see cref="Org.Apache.Kafka.Clients.NodeApiVersions"/></returns>
        public static Org.Apache.Kafka.Clients.NodeApiVersions Create(short arg0, short arg1, short arg2)
        {
            return SExecute<Org.Apache.Kafka.Clients.NodeApiVersions>(LocalBridgeClazz, "create", arg0, arg1, arg2);
        }

        #endregion

        #region Instance methods
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/NodeApiVersions.html#allSupportedApiVersions()"/> 
        /// </summary>
        public Java.Util.Map<Org.Apache.Kafka.Common.Protocol.ApiKeys, Org.Apache.Kafka.Common.Message.ApiVersionsResponseData.ApiVersion> AllSupportedApiVersions
        {
            get { return IExecute<Java.Util.Map<Org.Apache.Kafka.Common.Protocol.ApiKeys, Org.Apache.Kafka.Common.Message.ApiVersionsResponseData.ApiVersion>>("allSupportedApiVersions"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/NodeApiVersions.html#supportedFeatures()"/> 
        /// </summary>
        public Java.Util.Map<string, Org.Apache.Kafka.Common.Feature.SupportedVersionRange> SupportedFeatures
        {
            get { return IExecute<Java.Util.Map<string, Org.Apache.Kafka.Common.Feature.SupportedVersionRange>>("supportedFeatures"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/NodeApiVersions.html#toString(boolean)"/>
        /// </summary>
        /// <param name="arg0"><see cref="bool"/></param>
        /// <returns><see cref="string"/></returns>
        public string ToString(bool arg0)
        {
            return IExecute<string>("toString", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/NodeApiVersions.html#apiVersion(org.apache.kafka.common.protocol.ApiKeys)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Common.Protocol.ApiKeys"/></param>
        /// <returns><see cref="Org.Apache.Kafka.Common.Message.ApiVersionsResponseData.ApiVersion"/></returns>
        public Org.Apache.Kafka.Common.Message.ApiVersionsResponseData.ApiVersion ApiVersion(Org.Apache.Kafka.Common.Protocol.ApiKeys arg0)
        {
            return IExecute<Org.Apache.Kafka.Common.Message.ApiVersionsResponseData.ApiVersion>("apiVersion", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/NodeApiVersions.html#latestUsableVersion(org.apache.kafka.common.protocol.ApiKeys,short,short)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Common.Protocol.ApiKeys"/></param>
        /// <param name="arg1"><see cref="short"/></param>
        /// <param name="arg2"><see cref="short"/></param>
        /// <returns><see cref="short"/></returns>
        public short LatestUsableVersion(Org.Apache.Kafka.Common.Protocol.ApiKeys arg0, short arg1, short arg2)
        {
            return IExecute<short>("latestUsableVersion", arg0, arg1, arg2);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/NodeApiVersions.html#latestUsableVersion(org.apache.kafka.common.protocol.ApiKeys)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Common.Protocol.ApiKeys"/></param>
        /// <returns><see cref="short"/></returns>
        public short LatestUsableVersion(Org.Apache.Kafka.Common.Protocol.ApiKeys arg0)
        {
            return IExecute<short>("latestUsableVersion", arg0);
        }

        #endregion

        #region Nested classes

        #endregion

        // TODO: complete the class
    }
    #endregion
}