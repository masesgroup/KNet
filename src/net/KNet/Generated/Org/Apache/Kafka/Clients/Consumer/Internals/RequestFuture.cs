/*
*  Copyright 2023 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 1.5.5.0)
*  using kafka-clients-3.4.0.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Org.Apache.Kafka.Clients.Consumer.Internals
{
    #region RequestFuture
    public partial class RequestFuture
    {
        #region Constructors

        #endregion

        #region Class/Interface conversion operators

        #endregion

        #region Fields

        #endregion

        #region Static methods
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/consumer/internals/RequestFuture.html#coordinatorNotAvailable()"/> 
        /// </summary>
        public static Org.Apache.Kafka.Clients.Consumer.Internals.RequestFuture CoordinatorNotAvailable
        {
            get { return SExecute<Org.Apache.Kafka.Clients.Consumer.Internals.RequestFuture>(LocalBridgeClazz, "coordinatorNotAvailable"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/consumer/internals/RequestFuture.html#noBrokersAvailable()"/> 
        /// </summary>
        public static Org.Apache.Kafka.Clients.Consumer.Internals.RequestFuture NoBrokersAvailable
        {
            get { return SExecute<Org.Apache.Kafka.Clients.Consumer.Internals.RequestFuture>(LocalBridgeClazz, "noBrokersAvailable"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/consumer/internals/RequestFuture.html#voidSuccess()"/> 
        /// </summary>
        public static Org.Apache.Kafka.Clients.Consumer.Internals.RequestFuture VoidSuccess
        {
            get { return SExecute<Org.Apache.Kafka.Clients.Consumer.Internals.RequestFuture>(LocalBridgeClazz, "voidSuccess"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/consumer/internals/RequestFuture.html#failure(java.lang.RuntimeException)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.RuntimeException"/></param>
        /// <returns><see cref="Org.Apache.Kafka.Clients.Consumer.Internals.RequestFuture"/></returns>
        public static Org.Apache.Kafka.Clients.Consumer.Internals.RequestFuture Failure(Java.Lang.RuntimeException arg0)
        {
            return SExecute<Org.Apache.Kafka.Clients.Consumer.Internals.RequestFuture>(LocalBridgeClazz, "failure", arg0);
        }

        #endregion

        #region Instance methods
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/consumer/internals/RequestFuture.html#exception()"/> 
        /// </summary>
        public Java.Lang.RuntimeException Exception
        {
            get { var obj = IExecute<MASES.JCOBridge.C2JBridge.JVMInterop.IJavaObject>("exception"); return MASES.JCOBridge.C2JBridge.JVMBridgeException.New<Java.Lang.RuntimeException>(obj); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/consumer/internals/RequestFuture.html#failed()"/> 
        /// </summary>
        public bool Failed
        {
            get { return IExecute<bool>("failed"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/consumer/internals/RequestFuture.html#isDone()"/> 
        /// </summary>
        public bool IsDone
        {
            get { return IExecute<bool>("isDone"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/consumer/internals/RequestFuture.html#isRetriable()"/> 
        /// </summary>
        public bool IsRetriable
        {
            get { return IExecute<bool>("isRetriable"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/consumer/internals/RequestFuture.html#shouldBlock()"/> 
        /// </summary>
        public bool ShouldBlock
        {
            get { return IExecute<bool>("shouldBlock"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/consumer/internals/RequestFuture.html#succeeded()"/> 
        /// </summary>
        public bool Succeeded
        {
            get { return IExecute<bool>("succeeded"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/consumer/internals/RequestFuture.html#value()"/> 
        /// </summary>
        public object Value
        {
            get { return IExecute("value"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/consumer/internals/RequestFuture.html#compose(org.apache.kafka.clients.consumer.internals.RequestFutureAdapter)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Clients.Consumer.Internals.RequestFutureAdapter"/></param>
        /// <returns><see cref="Org.Apache.Kafka.Clients.Consumer.Internals.RequestFuture"/></returns>
        public Org.Apache.Kafka.Clients.Consumer.Internals.RequestFuture Compose(Org.Apache.Kafka.Clients.Consumer.Internals.RequestFutureAdapter arg0)
        {
            return IExecute<Org.Apache.Kafka.Clients.Consumer.Internals.RequestFuture>("compose", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/consumer/internals/RequestFuture.html#awaitDone(long,java.util.concurrent.TimeUnit)"/>
        /// </summary>
        /// <param name="arg0"><see cref="long"/></param>
        /// <param name="arg1"><see cref="Java.Util.Concurrent.TimeUnit"/></param>
        /// <returns><see cref="bool"/></returns>
        /// <exception cref="Java.Lang.InterruptedException"/>
        public bool AwaitDone(long arg0, Java.Util.Concurrent.TimeUnit arg1)
        {
            return IExecute<bool>("awaitDone", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/consumer/internals/RequestFuture.html#addListener(org.apache.kafka.clients.consumer.internals.RequestFutureListener)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Clients.Consumer.Internals.RequestFutureListener"/></param>
        public void AddListener(Org.Apache.Kafka.Clients.Consumer.Internals.RequestFutureListener arg0)
        {
            IExecute("addListener", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/consumer/internals/RequestFuture.html#chain(org.apache.kafka.clients.consumer.internals.RequestFuture)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Clients.Consumer.Internals.RequestFuture"/></param>
        public void Chain(Org.Apache.Kafka.Clients.Consumer.Internals.RequestFuture arg0)
        {
            IExecute("chain", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/consumer/internals/RequestFuture.html#complete(java.lang.Object)"/>
        /// </summary>
        /// <param name="arg0"><see cref="object"/></param>
        public void Complete(object arg0)
        {
            IExecute("complete", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/consumer/internals/RequestFuture.html#raise(java.lang.RuntimeException)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.RuntimeException"/></param>
        public void Raise(Java.Lang.RuntimeException arg0)
        {
            IExecute("raise", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/consumer/internals/RequestFuture.html#raise(org.apache.kafka.common.protocol.Errors)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Common.Protocol.Errors"/></param>
        public void Raise(Org.Apache.Kafka.Common.Protocol.Errors arg0)
        {
            IExecute("raise", arg0);
        }

        #endregion

        #region Nested classes

        #endregion

        // TODO: complete the class
    }
    #endregion

    #region RequestFuture<T>
    public partial class RequestFuture<T>
    {
        #region Constructors

        #endregion

        #region Class/Interface conversion operators
        /// <summary>
        /// Converter from <see cref="Org.Apache.Kafka.Clients.Consumer.Internals.RequestFuture{T}"/> to <see cref="Org.Apache.Kafka.Clients.Consumer.Internals.RequestFuture"/>
        /// </summary>
        public static implicit operator Org.Apache.Kafka.Clients.Consumer.Internals.RequestFuture(Org.Apache.Kafka.Clients.Consumer.Internals.RequestFuture<T> t) => t.Cast<Org.Apache.Kafka.Clients.Consumer.Internals.RequestFuture>();

        #endregion

        #region Fields

        #endregion

        #region Static methods
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/consumer/internals/RequestFuture.html#coordinatorNotAvailable()"/> 
        /// </summary>
        public static Org.Apache.Kafka.Clients.Consumer.Internals.RequestFuture<T> CoordinatorNotAvailable
        {
            get { return SExecute<Org.Apache.Kafka.Clients.Consumer.Internals.RequestFuture<T>>(LocalBridgeClazz, "coordinatorNotAvailable"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/consumer/internals/RequestFuture.html#noBrokersAvailable()"/> 
        /// </summary>
        public static Org.Apache.Kafka.Clients.Consumer.Internals.RequestFuture<T> NoBrokersAvailable
        {
            get { return SExecute<Org.Apache.Kafka.Clients.Consumer.Internals.RequestFuture<T>>(LocalBridgeClazz, "noBrokersAvailable"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/consumer/internals/RequestFuture.html#voidSuccess()"/> 
        /// </summary>
        public static Org.Apache.Kafka.Clients.Consumer.Internals.RequestFuture<Java.Lang.Void> VoidSuccess
        {
            get { return SExecute<Org.Apache.Kafka.Clients.Consumer.Internals.RequestFuture<Java.Lang.Void>>(LocalBridgeClazz, "voidSuccess"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/consumer/internals/RequestFuture.html#failure(java.lang.RuntimeException)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.RuntimeException"/></param>
        /// <returns><see cref="Org.Apache.Kafka.Clients.Consumer.Internals.RequestFuture"/></returns>
        public static Org.Apache.Kafka.Clients.Consumer.Internals.RequestFuture<T> Failure(Java.Lang.RuntimeException arg0)
        {
            return SExecute<Org.Apache.Kafka.Clients.Consumer.Internals.RequestFuture<T>>(LocalBridgeClazz, "failure", arg0);
        }

        #endregion

        #region Instance methods
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/consumer/internals/RequestFuture.html#exception()"/> 
        /// </summary>
        public Java.Lang.RuntimeException Exception
        {
            get { var obj = IExecute<MASES.JCOBridge.C2JBridge.JVMInterop.IJavaObject>("exception"); return MASES.JCOBridge.C2JBridge.JVMBridgeException.New<Java.Lang.RuntimeException>(obj); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/consumer/internals/RequestFuture.html#failed()"/> 
        /// </summary>
        public bool Failed
        {
            get { return IExecute<bool>("failed"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/consumer/internals/RequestFuture.html#isDone()"/> 
        /// </summary>
        public bool IsDone
        {
            get { return IExecute<bool>("isDone"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/consumer/internals/RequestFuture.html#isRetriable()"/> 
        /// </summary>
        public bool IsRetriable
        {
            get { return IExecute<bool>("isRetriable"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/consumer/internals/RequestFuture.html#shouldBlock()"/> 
        /// </summary>
        public bool ShouldBlock
        {
            get { return IExecute<bool>("shouldBlock"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/consumer/internals/RequestFuture.html#succeeded()"/> 
        /// </summary>
        public bool Succeeded
        {
            get { return IExecute<bool>("succeeded"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/consumer/internals/RequestFuture.html#value()"/> 
        /// </summary>
        public T Value
        {
            get { return IExecute<T>("value"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/consumer/internals/RequestFuture.html#compose(org.apache.kafka.clients.consumer.internals.RequestFutureAdapter)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Clients.Consumer.Internals.RequestFutureAdapter"/></param>
        /// <typeparam name="S"></typeparam>
        /// <returns><see cref="Org.Apache.Kafka.Clients.Consumer.Internals.RequestFuture"/></returns>
        public Org.Apache.Kafka.Clients.Consumer.Internals.RequestFuture<S> Compose<S>(Org.Apache.Kafka.Clients.Consumer.Internals.RequestFutureAdapter<T, S> arg0)
        {
            return IExecute<Org.Apache.Kafka.Clients.Consumer.Internals.RequestFuture<S>>("compose", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/consumer/internals/RequestFuture.html#awaitDone(long,java.util.concurrent.TimeUnit)"/>
        /// </summary>
        /// <param name="arg0"><see cref="long"/></param>
        /// <param name="arg1"><see cref="Java.Util.Concurrent.TimeUnit"/></param>
        /// <returns><see cref="bool"/></returns>
        /// <exception cref="Java.Lang.InterruptedException"/>
        public bool AwaitDone(long arg0, Java.Util.Concurrent.TimeUnit arg1)
        {
            return IExecute<bool>("awaitDone", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/consumer/internals/RequestFuture.html#addListener(org.apache.kafka.clients.consumer.internals.RequestFutureListener)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Clients.Consumer.Internals.RequestFutureListener"/></param>
        public void AddListener(Org.Apache.Kafka.Clients.Consumer.Internals.RequestFutureListener<T> arg0)
        {
            IExecute("addListener", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/consumer/internals/RequestFuture.html#chain(org.apache.kafka.clients.consumer.internals.RequestFuture)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Clients.Consumer.Internals.RequestFuture"/></param>
        public void Chain(Org.Apache.Kafka.Clients.Consumer.Internals.RequestFuture<T> arg0)
        {
            IExecute("chain", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/consumer/internals/RequestFuture.html#complete(java.lang.Object)"/>
        /// </summary>
        /// <param name="arg0"><typeparamref name="T"/></param>
        public void Complete(T arg0)
        {
            IExecute("complete", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/consumer/internals/RequestFuture.html#raise(java.lang.RuntimeException)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.RuntimeException"/></param>
        public void Raise(Java.Lang.RuntimeException arg0)
        {
            IExecute("raise", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/clients/consumer/internals/RequestFuture.html#raise(org.apache.kafka.common.protocol.Errors)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Common.Protocol.Errors"/></param>
        public void Raise(Org.Apache.Kafka.Common.Protocol.Errors arg0)
        {
            IExecute("raise", arg0);
        }

        #endregion

        #region Nested classes

        #endregion

        // TODO: complete the class
    }
    #endregion
}