/*
*  Copyright 2024 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 2.5.10.0)
*  using kafka-server-common-3.9.0.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Org.Apache.Kafka.Timeline
{
    #region SnapshotRegistry declaration
    /// <summary>
    /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-server-common/3.9.0/org/apache/kafka/timeline/SnapshotRegistry.html"/>
    /// </summary>
    public partial class SnapshotRegistry : MASES.JCOBridge.C2JBridge.JVMBridgeBase<SnapshotRegistry>
    {
        const string _bridgeClassName = "org.apache.kafka.timeline.SnapshotRegistry";
        /// <summary>
        /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
        /// </summary>
        public SnapshotRegistry() { }
        /// <summary>
        /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
        /// </summary>
        public SnapshotRegistry(params object[] args) : base(args) { }

        private static readonly MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType _LocalBridgeClazz = JVMBridgeBase.ClazzOf(_bridgeClassName);
        private static MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType LocalBridgeClazz => _LocalBridgeClazz ?? throw new global::System.InvalidOperationException($"Class {_bridgeClassName} was not found.");

        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_BridgeClassName.htm"/>
        /// </summary>
        public override string BridgeClassName => _bridgeClassName;
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeAbstract.htm"/>
        /// </summary>
        public override bool IsBridgeAbstract => false;
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeCloseable.htm"/>
        /// </summary>
        public override bool IsBridgeCloseable => false;
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeInterface.htm"/>
        /// </summary>
        public override bool IsBridgeInterface => false;
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeStatic.htm"/>
        /// </summary>
        public override bool IsBridgeStatic => false;

        // TODO: complete the class

    }
    #endregion

    #region SnapshotRegistry implementation
    public partial class SnapshotRegistry
    {
        #region Constructors
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-server-common/3.9.0/org/apache/kafka/timeline/SnapshotRegistry.html#org.apache.kafka.timeline.SnapshotRegistry(org.apache.kafka.common.utils.LogContext)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Common.Utils.LogContext"/></param>
        public SnapshotRegistry(Org.Apache.Kafka.Common.Utils.LogContext arg0)
            : base(arg0)
        {
        }

        #endregion

        #region Class/Interface conversion operators

        #endregion

        #region Fields
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-server-common/3.9.0/org/apache/kafka/timeline/SnapshotRegistry.html#LATEST_EPOCH"/>
        /// </summary>
        public static long LATEST_EPOCH { get { if (!_LATEST_EPOCHReady) { _LATEST_EPOCHContent = SGetField<long>(LocalBridgeClazz, "LATEST_EPOCH"); _LATEST_EPOCHReady = true; } return _LATEST_EPOCHContent; } }
        private static long _LATEST_EPOCHContent = default;
        private static bool _LATEST_EPOCHReady = false; // this is used because in case of generics 

        #endregion

        #region Static methods

        #endregion

        #region Instance methods
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-server-common/3.9.0/org/apache/kafka/timeline/SnapshotRegistry.html#hasSnapshot-long-"/>
        /// </summary>
        /// <param name="arg0"><see cref="long"/></param>
        /// <returns><see cref="bool"/></returns>
        public bool HasSnapshot(long arg0)
        {
            return IExecuteWithSignature<bool>("hasSnapshot", "(J)Z", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-server-common/3.9.0/org/apache/kafka/timeline/SnapshotRegistry.html#iterator--"/>
        /// </summary>
        /// <returns><see cref="Java.Util.Iterator"/></returns>
        public Java.Util.Iterator<Org.Apache.Kafka.Timeline.Snapshot> Iterator()
        {
            return IExecuteWithSignature<Java.Util.Iterator<Org.Apache.Kafka.Timeline.Snapshot>>("iterator", "()Ljava/util/Iterator;");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-server-common/3.9.0/org/apache/kafka/timeline/SnapshotRegistry.html#iterator-long-"/>
        /// </summary>
        /// <param name="arg0"><see cref="long"/></param>
        /// <returns><see cref="Java.Util.Iterator"/></returns>
        public Java.Util.Iterator<Org.Apache.Kafka.Timeline.Snapshot> Iterator(long arg0)
        {
            return IExecuteWithSignature<Java.Util.Iterator<Org.Apache.Kafka.Timeline.Snapshot>>("iterator", "(J)Ljava/util/Iterator;", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-server-common/3.9.0/org/apache/kafka/timeline/SnapshotRegistry.html#reverseIterator--"/>
        /// </summary>
        /// <returns><see cref="Java.Util.Iterator"/></returns>
        public Java.Util.Iterator<Org.Apache.Kafka.Timeline.Snapshot> ReverseIterator()
        {
            return IExecuteWithSignature<Java.Util.Iterator<Org.Apache.Kafka.Timeline.Snapshot>>("reverseIterator", "()Ljava/util/Iterator;");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-server-common/3.9.0/org/apache/kafka/timeline/SnapshotRegistry.html#epochsList--"/>
        /// </summary>
        /// <returns><see cref="Java.Util.List"/></returns>
        public Java.Util.List<Java.Lang.Long> EpochsList()
        {
            return IExecuteWithSignature<Java.Util.List<Java.Lang.Long>>("epochsList", "()Ljava/util/List;");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-server-common/3.9.0/org/apache/kafka/timeline/SnapshotRegistry.html#latestEpoch--"/>
        /// </summary>
        /// <returns><see cref="long"/></returns>
        public long LatestEpoch()
        {
            return IExecuteWithSignature<long>("latestEpoch", "()J");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-server-common/3.9.0/org/apache/kafka/timeline/SnapshotRegistry.html#deleteSnapshot-long-"/>
        /// </summary>
        /// <param name="arg0"><see cref="long"/></param>
        public void DeleteSnapshot(long arg0)
        {
            IExecuteWithSignature("deleteSnapshot", "(J)V", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-server-common/3.9.0/org/apache/kafka/timeline/SnapshotRegistry.html#deleteSnapshotsUpTo-long-"/>
        /// </summary>
        /// <param name="arg0"><see cref="long"/></param>
        public void DeleteSnapshotsUpTo(long arg0)
        {
            IExecuteWithSignature("deleteSnapshotsUpTo", "(J)V", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-server-common/3.9.0/org/apache/kafka/timeline/SnapshotRegistry.html#reset--"/>
        /// </summary>
        public void Reset()
        {
            IExecuteWithSignature("reset", "()V");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-server-common/3.9.0/org/apache/kafka/timeline/SnapshotRegistry.html#revertToSnapshot-long-"/>
        /// </summary>
        /// <param name="arg0"><see cref="long"/></param>
        public void RevertToSnapshot(long arg0)
        {
            IExecuteWithSignature("revertToSnapshot", "(J)V", arg0);
        }

        #endregion

        #region Nested classes

        #endregion

        // TODO: complete the class
    }
    #endregion
}