/*
*  Copyright 2023 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 1.5.5.0)
*  using kafka-clients-3.4.0.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Org.Apache.Kafka.Common.Security.Scram.Internals
{
    #region ScramMessages
    public partial class ScramMessages
    {
        #region Constructors

        #endregion

        #region Class/Interface conversion operators

        #endregion

        #region Fields

        #endregion

        #region Static methods

        #endregion

        #region Instance methods

        #endregion

        #region Nested classes
        #region ClientFinalMessage
        public partial class ClientFinalMessage
        {
            #region Constructors
            /// <summary>
            /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/security/scram/internals/ScramMessages.ClientFinalMessage.html#%3Cinit%3E(byte[],java.lang.String)"/>
            /// </summary>
            /// <param name="arg0"><see cref="byte"/></param>
            /// <param name="arg1"><see cref="string"/></param>
            public ClientFinalMessage(byte[] arg0, string arg1)
                : base(arg0, arg1)
            {
            }
            /// <summary>
            /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/security/scram/internals/ScramMessages.ClientFinalMessage.html#%3Cinit%3E(byte[])"/>
            /// </summary>
            /// <param name="arg0"><see cref="byte"/></param>
            /// <exception cref="Javax.Security.Sasl.SaslException"/>
            public ClientFinalMessage(byte[] arg0)
                : base(arg0)
            {
            }

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields

            #endregion

            #region Static methods

            #endregion

            #region Instance methods
            /// <summary>
            /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/security/scram/internals/ScramMessages.ClientFinalMessage.html#channelBinding()"/> 
            /// </summary>
            public byte[] ChannelBinding
            {
                get { return IExecuteArray<byte>("channelBinding"); }
            }
            /// <summary>
            /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/security/scram/internals/ScramMessages.ClientFinalMessage.html#clientFinalMessageWithoutProof()"/> 
            /// </summary>
            public string ClientFinalMessageWithoutProof
            {
                get { return IExecute<string>("clientFinalMessageWithoutProof"); }
            }
            /// <summary>
            /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/security/scram/internals/ScramMessages.ClientFinalMessage.html#nonce()"/> 
            /// </summary>
            public string Nonce
            {
                get { return IExecute<string>("nonce"); }
            }
            /// <summary>
            /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/security/scram/internals/ScramMessages.ClientFinalMessage.html#proof()"/>
            /// </summary>

            /// <returns><see cref="byte"/></returns>
            public byte[] Proof()
            {
                return IExecuteArray<byte>("proof");
            }
            /// <summary>
            /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/security/scram/internals/ScramMessages.ClientFinalMessage.html#proof(byte[])"/>
            /// </summary>
            /// <param name="arg0"><see cref="byte"/></param>
            public void Proof(byte[] arg0)
            {
                IExecute("proof", new object[] { arg0 });
            }

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

        #region ClientFirstMessage
        public partial class ClientFirstMessage
        {
            #region Constructors
            /// <summary>
            /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/security/scram/internals/ScramMessages.ClientFirstMessage.html#%3Cinit%3E(byte[])"/>
            /// </summary>
            /// <param name="arg0"><see cref="byte"/></param>
            /// <exception cref="Javax.Security.Sasl.SaslException"/>
            public ClientFirstMessage(byte[] arg0)
                : base(arg0)
            {
            }
            /// <summary>
            /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/security/scram/internals/ScramMessages.ClientFirstMessage.html#%3Cinit%3E(java.lang.String,java.lang.String,java.util.Map)"/>
            /// </summary>
            /// <param name="arg0"><see cref="string"/></param>
            /// <param name="arg1"><see cref="string"/></param>
            /// <param name="arg2"><see cref="Java.Util.Map"/></param>
            public ClientFirstMessage(string arg0, string arg1, Java.Util.Map arg2)
                : base(arg0, arg1, arg2)
            {
            }

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields

            #endregion

            #region Static methods

            #endregion

            #region Instance methods
            /// <summary>
            /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/security/scram/internals/ScramMessages.ClientFirstMessage.html#authorizationId()"/> 
            /// </summary>
            public string AuthorizationId
            {
                get { return IExecute<string>("authorizationId"); }
            }
            /// <summary>
            /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/security/scram/internals/ScramMessages.ClientFirstMessage.html#clientFirstMessageBare()"/> 
            /// </summary>
            public string ClientFirstMessageBare
            {
                get { return IExecute<string>("clientFirstMessageBare"); }
            }
            /// <summary>
            /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/security/scram/internals/ScramMessages.ClientFirstMessage.html#extensions()"/> 
            /// </summary>
            public Org.Apache.Kafka.Common.Security.Scram.Internals.ScramExtensions Extensions
            {
                get { return IExecute<Org.Apache.Kafka.Common.Security.Scram.Internals.ScramExtensions>("extensions"); }
            }
            /// <summary>
            /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/security/scram/internals/ScramMessages.ClientFirstMessage.html#gs2Header()"/> 
            /// </summary>
            public string Gs2Header
            {
                get { return IExecute<string>("gs2Header"); }
            }
            /// <summary>
            /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/security/scram/internals/ScramMessages.ClientFirstMessage.html#nonce()"/> 
            /// </summary>
            public string Nonce
            {
                get { return IExecute<string>("nonce"); }
            }
            /// <summary>
            /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/security/scram/internals/ScramMessages.ClientFirstMessage.html#saslName()"/> 
            /// </summary>
            public string SaslName
            {
                get { return IExecute<string>("saslName"); }
            }

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

        #region ServerFinalMessage
        public partial class ServerFinalMessage
        {
            #region Constructors
            /// <summary>
            /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/security/scram/internals/ScramMessages.ServerFinalMessage.html#%3Cinit%3E(byte[])"/>
            /// </summary>
            /// <param name="arg0"><see cref="byte"/></param>
            /// <exception cref="Javax.Security.Sasl.SaslException"/>
            public ServerFinalMessage(byte[] arg0)
                : base(arg0)
            {
            }
            /// <summary>
            /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/security/scram/internals/ScramMessages.ServerFinalMessage.html#%3Cinit%3E(java.lang.String,byte[])"/>
            /// </summary>
            /// <param name="arg0"><see cref="string"/></param>
            /// <param name="arg1"><see cref="byte"/></param>
            public ServerFinalMessage(string arg0, byte[] arg1)
                : base(arg0, arg1)
            {
            }

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields

            #endregion

            #region Static methods

            #endregion

            #region Instance methods
            /// <summary>
            /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/security/scram/internals/ScramMessages.ServerFinalMessage.html#error()"/> 
            /// </summary>
            public string Error
            {
                get { return IExecute<string>("error"); }
            }
            /// <summary>
            /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/security/scram/internals/ScramMessages.ServerFinalMessage.html#serverSignature()"/> 
            /// </summary>
            public byte[] ServerSignature
            {
                get { return IExecuteArray<byte>("serverSignature"); }
            }

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

        #region ServerFirstMessage
        public partial class ServerFirstMessage
        {
            #region Constructors
            /// <summary>
            /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/security/scram/internals/ScramMessages.ServerFirstMessage.html#%3Cinit%3E(byte[])"/>
            /// </summary>
            /// <param name="arg0"><see cref="byte"/></param>
            /// <exception cref="Javax.Security.Sasl.SaslException"/>
            public ServerFirstMessage(byte[] arg0)
                : base(arg0)
            {
            }
            /// <summary>
            /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/security/scram/internals/ScramMessages.ServerFirstMessage.html#%3Cinit%3E(java.lang.String,java.lang.String,byte[],int)"/>
            /// </summary>
            /// <param name="arg0"><see cref="string"/></param>
            /// <param name="arg1"><see cref="string"/></param>
            /// <param name="arg2"><see cref="byte"/></param>
            /// <param name="arg3"><see cref="int"/></param>
            public ServerFirstMessage(string arg0, string arg1, byte[] arg2, int arg3)
                : base(arg0, arg1, arg2, arg3)
            {
            }

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields

            #endregion

            #region Static methods

            #endregion

            #region Instance methods
            /// <summary>
            /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/security/scram/internals/ScramMessages.ServerFirstMessage.html#iterations()"/> 
            /// </summary>
            public int Iterations
            {
                get { return IExecute<int>("iterations"); }
            }
            /// <summary>
            /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/security/scram/internals/ScramMessages.ServerFirstMessage.html#nonce()"/> 
            /// </summary>
            public string Nonce
            {
                get { return IExecute<string>("nonce"); }
            }
            /// <summary>
            /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/security/scram/internals/ScramMessages.ServerFirstMessage.html#salt()"/> 
            /// </summary>
            public byte[] Salt
            {
                get { return IExecuteArray<byte>("salt"); }
            }

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

    
        #endregion

        // TODO: complete the class
    }
    #endregion
}