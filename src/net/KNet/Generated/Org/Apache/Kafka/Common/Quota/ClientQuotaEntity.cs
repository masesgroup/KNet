/*
*  Copyright 2024 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 2.5.2.0)
*  using kafka-clients-3.7.0.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Org.Apache.Kafka.Common.Quota
{
    #region ClientQuotaEntity
    public partial class ClientQuotaEntity
    {
        #region Constructors
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.7.0/org/apache/kafka/common/quota/ClientQuotaEntity.html#org.apache.kafka.common.quota.ClientQuotaEntity(java.util.Map)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Util.Map"/></param>
        public ClientQuotaEntity(Java.Util.Map<Java.Lang.String, Java.Lang.String> arg0)
            : base(arg0)
        {
        }

        #endregion

        #region Class/Interface conversion operators

        #endregion

        #region Fields
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.7.0/org/apache/kafka/common/quota/ClientQuotaEntity.html#CLIENT_ID"/>
        /// </summary>
        public static Java.Lang.String CLIENT_ID { get { if (!_CLIENT_IDReady) { _CLIENT_IDContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "CLIENT_ID"); _CLIENT_IDReady = true; } return _CLIENT_IDContent; } }
        private static Java.Lang.String _CLIENT_IDContent = default;
        private static bool _CLIENT_IDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.7.0/org/apache/kafka/common/quota/ClientQuotaEntity.html#IP"/>
        /// </summary>
        public static Java.Lang.String IP { get { if (!_IPReady) { _IPContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "IP"); _IPReady = true; } return _IPContent; } }
        private static Java.Lang.String _IPContent = default;
        private static bool _IPReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.7.0/org/apache/kafka/common/quota/ClientQuotaEntity.html#USER"/>
        /// </summary>
        public static Java.Lang.String USER { get { if (!_USERReady) { _USERContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "USER"); _USERReady = true; } return _USERContent; } }
        private static Java.Lang.String _USERContent = default;
        private static bool _USERReady = false; // this is used because in case of generics 

        #endregion

        #region Static methods
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.7.0/org/apache/kafka/common/quota/ClientQuotaEntity.html#isValidEntityType-java.lang.String-"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        /// <returns><see cref="bool"/></returns>
        public static bool IsValidEntityType(Java.Lang.String arg0)
        {
            return SExecuteWithSignature<bool>(LocalBridgeClazz, "isValidEntityType", "(Ljava/lang/String;)Z", arg0);
        }

        #endregion

        #region Instance methods
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.7.0/org/apache/kafka/common/quota/ClientQuotaEntity.html#entries--"/>
        /// </summary>
        /// <returns><see cref="Java.Util.Map"/></returns>
        public Java.Util.Map<Java.Lang.String, Java.Lang.String> Entries()
        {
            return IExecuteWithSignature<Java.Util.Map<Java.Lang.String, Java.Lang.String>>("entries", "()Ljava/util/Map;");
        }

        #endregion

        #region Nested classes

        #endregion

        // TODO: complete the class
    }
    #endregion
}