/*
*  Copyright 2024 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 2.2.4.0)
*  using kafka-clients-3.6.1.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Org.Apache.Kafka.Common.Config
{
    #region ConfigDef
    public partial class ConfigDef
    {
        #region Constructors
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.6.1/org/apache/kafka/common/config/ConfigDef.html#org.apache.kafka.common.config.ConfigDef(org.apache.kafka.common.config.ConfigDef)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Common.Config.ConfigDef"/></param>
        public ConfigDef(Org.Apache.Kafka.Common.Config.ConfigDef arg0)
            : base(arg0)
        {
        }

        #endregion

        #region Class/Interface conversion operators

        #endregion

        #region Fields
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.6.1/org/apache/kafka/common/config/ConfigDef.html#NO_DEFAULT_VALUE"/>
        /// </summary>
        public static object NO_DEFAULT_VALUE { get { if (!_NO_DEFAULT_VALUEReady) { _NO_DEFAULT_VALUEContent = SGetField(LocalBridgeClazz, "NO_DEFAULT_VALUE"); _NO_DEFAULT_VALUEReady = true; } return _NO_DEFAULT_VALUEContent; } }
        private static object _NO_DEFAULT_VALUEContent = default;
        private static bool _NO_DEFAULT_VALUEReady = false; // this is used because in case of generics 

        #endregion

        #region Static methods
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.6.1/org/apache/kafka/common/config/ConfigDef.html#parseType-java.lang.String-java.lang.Object-org.apache.kafka.common.config.ConfigDef.Type-"/>
        /// </summary>
        /// <param name="arg0"><see cref="string"/></param>
        /// <param name="arg1"><see cref="object"/></param>
        /// <param name="arg2"><see cref="Org.Apache.Kafka.Common.Config.ConfigDef.Type"/></param>
        /// <returns><see cref="object"/></returns>
        public static object ParseType(string arg0, object arg1, Org.Apache.Kafka.Common.Config.ConfigDef.Type arg2)
        {
            return SExecute(LocalBridgeClazz, "parseType", arg0, arg1, arg2);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.6.1/org/apache/kafka/common/config/ConfigDef.html#convertToString-java.lang.Object-org.apache.kafka.common.config.ConfigDef.Type-"/>
        /// </summary>
        /// <param name="arg0"><see cref="object"/></param>
        /// <param name="arg1"><see cref="Org.Apache.Kafka.Common.Config.ConfigDef.Type"/></param>
        /// <returns><see cref="string"/></returns>
        public static string ConvertToString(object arg0, Org.Apache.Kafka.Common.Config.ConfigDef.Type arg1)
        {
            return SExecute<string>(LocalBridgeClazz, "convertToString", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.6.1/org/apache/kafka/common/config/ConfigDef.html#convertToStringMapWithPasswordValues-java.util.Map-"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Util.Map"/></param>
        /// <returns><see cref="Java.Util.Map"/></returns>
        public static Java.Util.Map<string, string> ConvertToStringMapWithPasswordValues(Java.Util.Map<string, object> arg0)
        {
            return SExecute<Java.Util.Map<string, string>>(LocalBridgeClazz, "convertToStringMapWithPasswordValues", arg0);
        }

        #endregion

        #region Instance methods
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.6.1/org/apache/kafka/common/config/ConfigDef.html#toEnrichedRst--"/>
        /// </summary>

        /// <returns><see cref="string"/></returns>
        public string ToEnrichedRst()
        {
            return IExecute<string>("toEnrichedRst");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.6.1/org/apache/kafka/common/config/ConfigDef.html#toHtml--"/>
        /// </summary>

        /// <returns><see cref="string"/></returns>
        public string ToHtml()
        {
            return IExecute<string>("toHtml");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.6.1/org/apache/kafka/common/config/ConfigDef.html#toHtml-int-java.util.function.Function-java.util.Map-"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <param name="arg1"><see cref="Java.Util.Function.Function"/></param>
        /// <param name="arg2"><see cref="Java.Util.Map"/></param>
        /// <returns><see cref="string"/></returns>
        public string ToHtml(int arg0, Java.Util.Function.Function<string, string> arg1, Java.Util.Map<string, string> arg2)
        {
            return IExecute<string>("toHtml", arg0, arg1, arg2);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.6.1/org/apache/kafka/common/config/ConfigDef.html#toHtml-int-java.util.function.Function-"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <param name="arg1"><see cref="Java.Util.Function.Function"/></param>
        /// <returns><see cref="string"/></returns>
        public string ToHtml(int arg0, Java.Util.Function.Function<string, string> arg1)
        {
            return IExecute<string>("toHtml", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.6.1/org/apache/kafka/common/config/ConfigDef.html#toHtml-java.util.Map-"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Util.Map"/></param>
        /// <returns><see cref="string"/></returns>
        public string ToHtml(Java.Util.Map<string, string> arg0)
        {
            return IExecute<string>("toHtml", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.6.1/org/apache/kafka/common/config/ConfigDef.html#toHtmlTable--"/>
        /// </summary>

        /// <returns><see cref="string"/></returns>
        public string ToHtmlTable()
        {
            return IExecute<string>("toHtmlTable");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.6.1/org/apache/kafka/common/config/ConfigDef.html#toHtmlTable-java.util.Map-"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Util.Map"/></param>
        /// <returns><see cref="string"/></returns>
        public string ToHtmlTable(Java.Util.Map<string, string> arg0)
        {
            return IExecute<string>("toHtmlTable", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.6.1/org/apache/kafka/common/config/ConfigDef.html#toRst--"/>
        /// </summary>

        /// <returns><see cref="string"/></returns>
        public string ToRst()
        {
            return IExecute<string>("toRst");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.6.1/org/apache/kafka/common/config/ConfigDef.html#groups--"/>
        /// </summary>

        /// <returns><see cref="Java.Util.List"/></returns>
        public Java.Util.List<string> Groups()
        {
            return IExecute<Java.Util.List<string>>("groups");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.6.1/org/apache/kafka/common/config/ConfigDef.html#validate-java.util.Map-"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Util.Map"/></param>
        /// <returns><see cref="Java.Util.List"/></returns>
        public Java.Util.List<Org.Apache.Kafka.Common.Config.ConfigValue> Validate(Java.Util.Map<string, string> arg0)
        {
            return IExecute<Java.Util.List<Org.Apache.Kafka.Common.Config.ConfigValue>>("validate", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.6.1/org/apache/kafka/common/config/ConfigDef.html#defaultValues--"/>
        /// </summary>

        /// <returns><see cref="Java.Util.Map"/></returns>
        public Java.Util.Map<string, object> DefaultValues()
        {
            return IExecute<Java.Util.Map<string, object>>("defaultValues");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.6.1/org/apache/kafka/common/config/ConfigDef.html#parse-java.util.Map-"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Util.Map"/></param>
        /// <returns><see cref="Java.Util.Map"/></returns>
        public Java.Util.Map<string, object> Parse(Java.Util.Map<object, object> arg0)
        {
            return IExecute<Java.Util.Map<string, object>>("parse", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.6.1/org/apache/kafka/common/config/ConfigDef.html#configKeys--"/>
        /// </summary>

        /// <returns><see cref="Java.Util.Map"/></returns>
        public Java.Util.Map<string, Org.Apache.Kafka.Common.Config.ConfigDef.ConfigKey> ConfigKeys()
        {
            return IExecute<Java.Util.Map<string, Org.Apache.Kafka.Common.Config.ConfigDef.ConfigKey>>("configKeys");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.6.1/org/apache/kafka/common/config/ConfigDef.html#validateAll-java.util.Map-"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Util.Map"/></param>
        /// <returns><see cref="Java.Util.Map"/></returns>
        public Java.Util.Map<string, Org.Apache.Kafka.Common.Config.ConfigValue> ValidateAll(Java.Util.Map<string, string> arg0)
        {
            return IExecute<Java.Util.Map<string, Org.Apache.Kafka.Common.Config.ConfigValue>>("validateAll", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.6.1/org/apache/kafka/common/config/ConfigDef.html#names--"/>
        /// </summary>

        /// <returns><see cref="Java.Util.Set"/></returns>
        public Java.Util.Set<string> Names()
        {
            return IExecute<Java.Util.Set<string>>("names");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.6.1/org/apache/kafka/common/config/ConfigDef.html#define-java.lang.String-org.apache.kafka.common.config.ConfigDef.Type-java.lang.Object-org.apache.kafka.common.config.ConfigDef.Importance-java.lang.String-java.lang.String-int-org.apache.kafka.common.config.ConfigDef.Width-java.lang.String-java.util.List-org.apache.kafka.common.config.ConfigDef.Recommender-"/>
        /// </summary>
        /// <param name="arg0"><see cref="string"/></param>
        /// <param name="arg1"><see cref="Org.Apache.Kafka.Common.Config.ConfigDef.Type"/></param>
        /// <param name="arg2"><see cref="object"/></param>
        /// <param name="arg3"><see cref="Org.Apache.Kafka.Common.Config.ConfigDef.Importance"/></param>
        /// <param name="arg4"><see cref="string"/></param>
        /// <param name="arg5"><see cref="string"/></param>
        /// <param name="arg6"><see cref="int"/></param>
        /// <param name="arg7"><see cref="Org.Apache.Kafka.Common.Config.ConfigDef.Width"/></param>
        /// <param name="arg8"><see cref="string"/></param>
        /// <param name="arg9"><see cref="Java.Util.List"/></param>
        /// <param name="arg10"><see cref="Org.Apache.Kafka.Common.Config.ConfigDef.Recommender"/></param>
        /// <returns><see cref="Org.Apache.Kafka.Common.Config.ConfigDef"/></returns>
        public Org.Apache.Kafka.Common.Config.ConfigDef Define(string arg0, Org.Apache.Kafka.Common.Config.ConfigDef.Type arg1, object arg2, Org.Apache.Kafka.Common.Config.ConfigDef.Importance arg3, string arg4, string arg5, int arg6, Org.Apache.Kafka.Common.Config.ConfigDef.Width arg7, string arg8, Java.Util.List<string> arg9, Org.Apache.Kafka.Common.Config.ConfigDef.Recommender arg10)
        {
            return IExecute<Org.Apache.Kafka.Common.Config.ConfigDef>("define", arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.6.1/org/apache/kafka/common/config/ConfigDef.html#define-java.lang.String-org.apache.kafka.common.config.ConfigDef.Type-java.lang.Object-org.apache.kafka.common.config.ConfigDef.Importance-java.lang.String-java.lang.String-int-org.apache.kafka.common.config.ConfigDef.Width-java.lang.String-java.util.List-"/>
        /// </summary>
        /// <param name="arg0"><see cref="string"/></param>
        /// <param name="arg1"><see cref="Org.Apache.Kafka.Common.Config.ConfigDef.Type"/></param>
        /// <param name="arg2"><see cref="object"/></param>
        /// <param name="arg3"><see cref="Org.Apache.Kafka.Common.Config.ConfigDef.Importance"/></param>
        /// <param name="arg4"><see cref="string"/></param>
        /// <param name="arg5"><see cref="string"/></param>
        /// <param name="arg6"><see cref="int"/></param>
        /// <param name="arg7"><see cref="Org.Apache.Kafka.Common.Config.ConfigDef.Width"/></param>
        /// <param name="arg8"><see cref="string"/></param>
        /// <param name="arg9"><see cref="Java.Util.List"/></param>
        /// <returns><see cref="Org.Apache.Kafka.Common.Config.ConfigDef"/></returns>
        public Org.Apache.Kafka.Common.Config.ConfigDef Define(string arg0, Org.Apache.Kafka.Common.Config.ConfigDef.Type arg1, object arg2, Org.Apache.Kafka.Common.Config.ConfigDef.Importance arg3, string arg4, string arg5, int arg6, Org.Apache.Kafka.Common.Config.ConfigDef.Width arg7, string arg8, Java.Util.List<string> arg9)
        {
            return IExecute<Org.Apache.Kafka.Common.Config.ConfigDef>("define", arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.6.1/org/apache/kafka/common/config/ConfigDef.html#define-java.lang.String-org.apache.kafka.common.config.ConfigDef.Type-java.lang.Object-org.apache.kafka.common.config.ConfigDef.Importance-java.lang.String-java.lang.String-int-org.apache.kafka.common.config.ConfigDef.Width-java.lang.String-org.apache.kafka.common.config.ConfigDef.Recommender-"/>
        /// </summary>
        /// <param name="arg0"><see cref="string"/></param>
        /// <param name="arg1"><see cref="Org.Apache.Kafka.Common.Config.ConfigDef.Type"/></param>
        /// <param name="arg2"><see cref="object"/></param>
        /// <param name="arg3"><see cref="Org.Apache.Kafka.Common.Config.ConfigDef.Importance"/></param>
        /// <param name="arg4"><see cref="string"/></param>
        /// <param name="arg5"><see cref="string"/></param>
        /// <param name="arg6"><see cref="int"/></param>
        /// <param name="arg7"><see cref="Org.Apache.Kafka.Common.Config.ConfigDef.Width"/></param>
        /// <param name="arg8"><see cref="string"/></param>
        /// <param name="arg9"><see cref="Org.Apache.Kafka.Common.Config.ConfigDef.Recommender"/></param>
        /// <returns><see cref="Org.Apache.Kafka.Common.Config.ConfigDef"/></returns>
        public Org.Apache.Kafka.Common.Config.ConfigDef Define(string arg0, Org.Apache.Kafka.Common.Config.ConfigDef.Type arg1, object arg2, Org.Apache.Kafka.Common.Config.ConfigDef.Importance arg3, string arg4, string arg5, int arg6, Org.Apache.Kafka.Common.Config.ConfigDef.Width arg7, string arg8, Org.Apache.Kafka.Common.Config.ConfigDef.Recommender arg9)
        {
            return IExecute<Org.Apache.Kafka.Common.Config.ConfigDef>("define", arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.6.1/org/apache/kafka/common/config/ConfigDef.html#define-java.lang.String-org.apache.kafka.common.config.ConfigDef.Type-java.lang.Object-org.apache.kafka.common.config.ConfigDef.Importance-java.lang.String-java.lang.String-int-org.apache.kafka.common.config.ConfigDef.Width-java.lang.String-"/>
        /// </summary>
        /// <param name="arg0"><see cref="string"/></param>
        /// <param name="arg1"><see cref="Org.Apache.Kafka.Common.Config.ConfigDef.Type"/></param>
        /// <param name="arg2"><see cref="object"/></param>
        /// <param name="arg3"><see cref="Org.Apache.Kafka.Common.Config.ConfigDef.Importance"/></param>
        /// <param name="arg4"><see cref="string"/></param>
        /// <param name="arg5"><see cref="string"/></param>
        /// <param name="arg6"><see cref="int"/></param>
        /// <param name="arg7"><see cref="Org.Apache.Kafka.Common.Config.ConfigDef.Width"/></param>
        /// <param name="arg8"><see cref="string"/></param>
        /// <returns><see cref="Org.Apache.Kafka.Common.Config.ConfigDef"/></returns>
        public Org.Apache.Kafka.Common.Config.ConfigDef Define(string arg0, Org.Apache.Kafka.Common.Config.ConfigDef.Type arg1, object arg2, Org.Apache.Kafka.Common.Config.ConfigDef.Importance arg3, string arg4, string arg5, int arg6, Org.Apache.Kafka.Common.Config.ConfigDef.Width arg7, string arg8)
        {
            return IExecute<Org.Apache.Kafka.Common.Config.ConfigDef>("define", arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.6.1/org/apache/kafka/common/config/ConfigDef.html#define-java.lang.String-org.apache.kafka.common.config.ConfigDef.Type-java.lang.Object-org.apache.kafka.common.config.ConfigDef.Importance-java.lang.String-"/>
        /// </summary>
        /// <param name="arg0"><see cref="string"/></param>
        /// <param name="arg1"><see cref="Org.Apache.Kafka.Common.Config.ConfigDef.Type"/></param>
        /// <param name="arg2"><see cref="object"/></param>
        /// <param name="arg3"><see cref="Org.Apache.Kafka.Common.Config.ConfigDef.Importance"/></param>
        /// <param name="arg4"><see cref="string"/></param>
        /// <returns><see cref="Org.Apache.Kafka.Common.Config.ConfigDef"/></returns>
        public Org.Apache.Kafka.Common.Config.ConfigDef Define(string arg0, Org.Apache.Kafka.Common.Config.ConfigDef.Type arg1, object arg2, Org.Apache.Kafka.Common.Config.ConfigDef.Importance arg3, string arg4)
        {
            return IExecute<Org.Apache.Kafka.Common.Config.ConfigDef>("define", arg0, arg1, arg2, arg3, arg4);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.6.1/org/apache/kafka/common/config/ConfigDef.html#define-java.lang.String-org.apache.kafka.common.config.ConfigDef.Type-java.lang.Object-org.apache.kafka.common.config.ConfigDef.Validator-org.apache.kafka.common.config.ConfigDef.Importance-java.lang.String-java.lang.String-int-org.apache.kafka.common.config.ConfigDef.Width-java.lang.String-java.util.List-org.apache.kafka.common.config.ConfigDef.Recommender-"/>
        /// </summary>
        /// <param name="arg0"><see cref="string"/></param>
        /// <param name="arg1"><see cref="Org.Apache.Kafka.Common.Config.ConfigDef.Type"/></param>
        /// <param name="arg2"><see cref="object"/></param>
        /// <param name="arg3"><see cref="Org.Apache.Kafka.Common.Config.ConfigDef.Validator"/></param>
        /// <param name="arg4"><see cref="Org.Apache.Kafka.Common.Config.ConfigDef.Importance"/></param>
        /// <param name="arg5"><see cref="string"/></param>
        /// <param name="arg6"><see cref="string"/></param>
        /// <param name="arg7"><see cref="int"/></param>
        /// <param name="arg8"><see cref="Org.Apache.Kafka.Common.Config.ConfigDef.Width"/></param>
        /// <param name="arg9"><see cref="string"/></param>
        /// <param name="arg10"><see cref="Java.Util.List"/></param>
        /// <param name="arg11"><see cref="Org.Apache.Kafka.Common.Config.ConfigDef.Recommender"/></param>
        /// <returns><see cref="Org.Apache.Kafka.Common.Config.ConfigDef"/></returns>
        public Org.Apache.Kafka.Common.Config.ConfigDef Define(string arg0, Org.Apache.Kafka.Common.Config.ConfigDef.Type arg1, object arg2, Org.Apache.Kafka.Common.Config.ConfigDef.Validator arg3, Org.Apache.Kafka.Common.Config.ConfigDef.Importance arg4, string arg5, string arg6, int arg7, Org.Apache.Kafka.Common.Config.ConfigDef.Width arg8, string arg9, Java.Util.List<string> arg10, Org.Apache.Kafka.Common.Config.ConfigDef.Recommender arg11)
        {
            return IExecute<Org.Apache.Kafka.Common.Config.ConfigDef>("define", arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.6.1/org/apache/kafka/common/config/ConfigDef.html#define-java.lang.String-org.apache.kafka.common.config.ConfigDef.Type-java.lang.Object-org.apache.kafka.common.config.ConfigDef.Validator-org.apache.kafka.common.config.ConfigDef.Importance-java.lang.String-java.lang.String-int-org.apache.kafka.common.config.ConfigDef.Width-java.lang.String-java.util.List-"/>
        /// </summary>
        /// <param name="arg0"><see cref="string"/></param>
        /// <param name="arg1"><see cref="Org.Apache.Kafka.Common.Config.ConfigDef.Type"/></param>
        /// <param name="arg2"><see cref="object"/></param>
        /// <param name="arg3"><see cref="Org.Apache.Kafka.Common.Config.ConfigDef.Validator"/></param>
        /// <param name="arg4"><see cref="Org.Apache.Kafka.Common.Config.ConfigDef.Importance"/></param>
        /// <param name="arg5"><see cref="string"/></param>
        /// <param name="arg6"><see cref="string"/></param>
        /// <param name="arg7"><see cref="int"/></param>
        /// <param name="arg8"><see cref="Org.Apache.Kafka.Common.Config.ConfigDef.Width"/></param>
        /// <param name="arg9"><see cref="string"/></param>
        /// <param name="arg10"><see cref="Java.Util.List"/></param>
        /// <returns><see cref="Org.Apache.Kafka.Common.Config.ConfigDef"/></returns>
        public Org.Apache.Kafka.Common.Config.ConfigDef Define(string arg0, Org.Apache.Kafka.Common.Config.ConfigDef.Type arg1, object arg2, Org.Apache.Kafka.Common.Config.ConfigDef.Validator arg3, Org.Apache.Kafka.Common.Config.ConfigDef.Importance arg4, string arg5, string arg6, int arg7, Org.Apache.Kafka.Common.Config.ConfigDef.Width arg8, string arg9, Java.Util.List<string> arg10)
        {
            return IExecute<Org.Apache.Kafka.Common.Config.ConfigDef>("define", arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.6.1/org/apache/kafka/common/config/ConfigDef.html#define-java.lang.String-org.apache.kafka.common.config.ConfigDef.Type-java.lang.Object-org.apache.kafka.common.config.ConfigDef.Validator-org.apache.kafka.common.config.ConfigDef.Importance-java.lang.String-java.lang.String-int-org.apache.kafka.common.config.ConfigDef.Width-java.lang.String-org.apache.kafka.common.config.ConfigDef.Recommender-"/>
        /// </summary>
        /// <param name="arg0"><see cref="string"/></param>
        /// <param name="arg1"><see cref="Org.Apache.Kafka.Common.Config.ConfigDef.Type"/></param>
        /// <param name="arg2"><see cref="object"/></param>
        /// <param name="arg3"><see cref="Org.Apache.Kafka.Common.Config.ConfigDef.Validator"/></param>
        /// <param name="arg4"><see cref="Org.Apache.Kafka.Common.Config.ConfigDef.Importance"/></param>
        /// <param name="arg5"><see cref="string"/></param>
        /// <param name="arg6"><see cref="string"/></param>
        /// <param name="arg7"><see cref="int"/></param>
        /// <param name="arg8"><see cref="Org.Apache.Kafka.Common.Config.ConfigDef.Width"/></param>
        /// <param name="arg9"><see cref="string"/></param>
        /// <param name="arg10"><see cref="Org.Apache.Kafka.Common.Config.ConfigDef.Recommender"/></param>
        /// <returns><see cref="Org.Apache.Kafka.Common.Config.ConfigDef"/></returns>
        public Org.Apache.Kafka.Common.Config.ConfigDef Define(string arg0, Org.Apache.Kafka.Common.Config.ConfigDef.Type arg1, object arg2, Org.Apache.Kafka.Common.Config.ConfigDef.Validator arg3, Org.Apache.Kafka.Common.Config.ConfigDef.Importance arg4, string arg5, string arg6, int arg7, Org.Apache.Kafka.Common.Config.ConfigDef.Width arg8, string arg9, Org.Apache.Kafka.Common.Config.ConfigDef.Recommender arg10)
        {
            return IExecute<Org.Apache.Kafka.Common.Config.ConfigDef>("define", arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.6.1/org/apache/kafka/common/config/ConfigDef.html#define-java.lang.String-org.apache.kafka.common.config.ConfigDef.Type-java.lang.Object-org.apache.kafka.common.config.ConfigDef.Validator-org.apache.kafka.common.config.ConfigDef.Importance-java.lang.String-java.lang.String-int-org.apache.kafka.common.config.ConfigDef.Width-java.lang.String-"/>
        /// </summary>
        /// <param name="arg0"><see cref="string"/></param>
        /// <param name="arg1"><see cref="Org.Apache.Kafka.Common.Config.ConfigDef.Type"/></param>
        /// <param name="arg2"><see cref="object"/></param>
        /// <param name="arg3"><see cref="Org.Apache.Kafka.Common.Config.ConfigDef.Validator"/></param>
        /// <param name="arg4"><see cref="Org.Apache.Kafka.Common.Config.ConfigDef.Importance"/></param>
        /// <param name="arg5"><see cref="string"/></param>
        /// <param name="arg6"><see cref="string"/></param>
        /// <param name="arg7"><see cref="int"/></param>
        /// <param name="arg8"><see cref="Org.Apache.Kafka.Common.Config.ConfigDef.Width"/></param>
        /// <param name="arg9"><see cref="string"/></param>
        /// <returns><see cref="Org.Apache.Kafka.Common.Config.ConfigDef"/></returns>
        public Org.Apache.Kafka.Common.Config.ConfigDef Define(string arg0, Org.Apache.Kafka.Common.Config.ConfigDef.Type arg1, object arg2, Org.Apache.Kafka.Common.Config.ConfigDef.Validator arg3, Org.Apache.Kafka.Common.Config.ConfigDef.Importance arg4, string arg5, string arg6, int arg7, Org.Apache.Kafka.Common.Config.ConfigDef.Width arg8, string arg9)
        {
            return IExecute<Org.Apache.Kafka.Common.Config.ConfigDef>("define", arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.6.1/org/apache/kafka/common/config/ConfigDef.html#define-java.lang.String-org.apache.kafka.common.config.ConfigDef.Type-java.lang.Object-org.apache.kafka.common.config.ConfigDef.Validator-org.apache.kafka.common.config.ConfigDef.Importance-java.lang.String-"/>
        /// </summary>
        /// <param name="arg0"><see cref="string"/></param>
        /// <param name="arg1"><see cref="Org.Apache.Kafka.Common.Config.ConfigDef.Type"/></param>
        /// <param name="arg2"><see cref="object"/></param>
        /// <param name="arg3"><see cref="Org.Apache.Kafka.Common.Config.ConfigDef.Validator"/></param>
        /// <param name="arg4"><see cref="Org.Apache.Kafka.Common.Config.ConfigDef.Importance"/></param>
        /// <param name="arg5"><see cref="string"/></param>
        /// <returns><see cref="Org.Apache.Kafka.Common.Config.ConfigDef"/></returns>
        public Org.Apache.Kafka.Common.Config.ConfigDef Define(string arg0, Org.Apache.Kafka.Common.Config.ConfigDef.Type arg1, object arg2, Org.Apache.Kafka.Common.Config.ConfigDef.Validator arg3, Org.Apache.Kafka.Common.Config.ConfigDef.Importance arg4, string arg5)
        {
            return IExecute<Org.Apache.Kafka.Common.Config.ConfigDef>("define", arg0, arg1, arg2, arg3, arg4, arg5);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.6.1/org/apache/kafka/common/config/ConfigDef.html#define-java.lang.String-org.apache.kafka.common.config.ConfigDef.Type-org.apache.kafka.common.config.ConfigDef.Importance-java.lang.String-java.lang.String-int-org.apache.kafka.common.config.ConfigDef.Width-java.lang.String-java.util.List-org.apache.kafka.common.config.ConfigDef.Recommender-"/>
        /// </summary>
        /// <param name="arg0"><see cref="string"/></param>
        /// <param name="arg1"><see cref="Org.Apache.Kafka.Common.Config.ConfigDef.Type"/></param>
        /// <param name="arg2"><see cref="Org.Apache.Kafka.Common.Config.ConfigDef.Importance"/></param>
        /// <param name="arg3"><see cref="string"/></param>
        /// <param name="arg4"><see cref="string"/></param>
        /// <param name="arg5"><see cref="int"/></param>
        /// <param name="arg6"><see cref="Org.Apache.Kafka.Common.Config.ConfigDef.Width"/></param>
        /// <param name="arg7"><see cref="string"/></param>
        /// <param name="arg8"><see cref="Java.Util.List"/></param>
        /// <param name="arg9"><see cref="Org.Apache.Kafka.Common.Config.ConfigDef.Recommender"/></param>
        /// <returns><see cref="Org.Apache.Kafka.Common.Config.ConfigDef"/></returns>
        public Org.Apache.Kafka.Common.Config.ConfigDef Define(string arg0, Org.Apache.Kafka.Common.Config.ConfigDef.Type arg1, Org.Apache.Kafka.Common.Config.ConfigDef.Importance arg2, string arg3, string arg4, int arg5, Org.Apache.Kafka.Common.Config.ConfigDef.Width arg6, string arg7, Java.Util.List<string> arg8, Org.Apache.Kafka.Common.Config.ConfigDef.Recommender arg9)
        {
            return IExecute<Org.Apache.Kafka.Common.Config.ConfigDef>("define", arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.6.1/org/apache/kafka/common/config/ConfigDef.html#define-java.lang.String-org.apache.kafka.common.config.ConfigDef.Type-org.apache.kafka.common.config.ConfigDef.Importance-java.lang.String-java.lang.String-int-org.apache.kafka.common.config.ConfigDef.Width-java.lang.String-java.util.List-"/>
        /// </summary>
        /// <param name="arg0"><see cref="string"/></param>
        /// <param name="arg1"><see cref="Org.Apache.Kafka.Common.Config.ConfigDef.Type"/></param>
        /// <param name="arg2"><see cref="Org.Apache.Kafka.Common.Config.ConfigDef.Importance"/></param>
        /// <param name="arg3"><see cref="string"/></param>
        /// <param name="arg4"><see cref="string"/></param>
        /// <param name="arg5"><see cref="int"/></param>
        /// <param name="arg6"><see cref="Org.Apache.Kafka.Common.Config.ConfigDef.Width"/></param>
        /// <param name="arg7"><see cref="string"/></param>
        /// <param name="arg8"><see cref="Java.Util.List"/></param>
        /// <returns><see cref="Org.Apache.Kafka.Common.Config.ConfigDef"/></returns>
        public Org.Apache.Kafka.Common.Config.ConfigDef Define(string arg0, Org.Apache.Kafka.Common.Config.ConfigDef.Type arg1, Org.Apache.Kafka.Common.Config.ConfigDef.Importance arg2, string arg3, string arg4, int arg5, Org.Apache.Kafka.Common.Config.ConfigDef.Width arg6, string arg7, Java.Util.List<string> arg8)
        {
            return IExecute<Org.Apache.Kafka.Common.Config.ConfigDef>("define", arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.6.1/org/apache/kafka/common/config/ConfigDef.html#define-java.lang.String-org.apache.kafka.common.config.ConfigDef.Type-org.apache.kafka.common.config.ConfigDef.Importance-java.lang.String-java.lang.String-int-org.apache.kafka.common.config.ConfigDef.Width-java.lang.String-org.apache.kafka.common.config.ConfigDef.Recommender-"/>
        /// </summary>
        /// <param name="arg0"><see cref="string"/></param>
        /// <param name="arg1"><see cref="Org.Apache.Kafka.Common.Config.ConfigDef.Type"/></param>
        /// <param name="arg2"><see cref="Org.Apache.Kafka.Common.Config.ConfigDef.Importance"/></param>
        /// <param name="arg3"><see cref="string"/></param>
        /// <param name="arg4"><see cref="string"/></param>
        /// <param name="arg5"><see cref="int"/></param>
        /// <param name="arg6"><see cref="Org.Apache.Kafka.Common.Config.ConfigDef.Width"/></param>
        /// <param name="arg7"><see cref="string"/></param>
        /// <param name="arg8"><see cref="Org.Apache.Kafka.Common.Config.ConfigDef.Recommender"/></param>
        /// <returns><see cref="Org.Apache.Kafka.Common.Config.ConfigDef"/></returns>
        public Org.Apache.Kafka.Common.Config.ConfigDef Define(string arg0, Org.Apache.Kafka.Common.Config.ConfigDef.Type arg1, Org.Apache.Kafka.Common.Config.ConfigDef.Importance arg2, string arg3, string arg4, int arg5, Org.Apache.Kafka.Common.Config.ConfigDef.Width arg6, string arg7, Org.Apache.Kafka.Common.Config.ConfigDef.Recommender arg8)
        {
            return IExecute<Org.Apache.Kafka.Common.Config.ConfigDef>("define", arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.6.1/org/apache/kafka/common/config/ConfigDef.html#define-java.lang.String-org.apache.kafka.common.config.ConfigDef.Type-org.apache.kafka.common.config.ConfigDef.Importance-java.lang.String-java.lang.String-int-org.apache.kafka.common.config.ConfigDef.Width-java.lang.String-"/>
        /// </summary>
        /// <param name="arg0"><see cref="string"/></param>
        /// <param name="arg1"><see cref="Org.Apache.Kafka.Common.Config.ConfigDef.Type"/></param>
        /// <param name="arg2"><see cref="Org.Apache.Kafka.Common.Config.ConfigDef.Importance"/></param>
        /// <param name="arg3"><see cref="string"/></param>
        /// <param name="arg4"><see cref="string"/></param>
        /// <param name="arg5"><see cref="int"/></param>
        /// <param name="arg6"><see cref="Org.Apache.Kafka.Common.Config.ConfigDef.Width"/></param>
        /// <param name="arg7"><see cref="string"/></param>
        /// <returns><see cref="Org.Apache.Kafka.Common.Config.ConfigDef"/></returns>
        public Org.Apache.Kafka.Common.Config.ConfigDef Define(string arg0, Org.Apache.Kafka.Common.Config.ConfigDef.Type arg1, Org.Apache.Kafka.Common.Config.ConfigDef.Importance arg2, string arg3, string arg4, int arg5, Org.Apache.Kafka.Common.Config.ConfigDef.Width arg6, string arg7)
        {
            return IExecute<Org.Apache.Kafka.Common.Config.ConfigDef>("define", arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.6.1/org/apache/kafka/common/config/ConfigDef.html#define-java.lang.String-org.apache.kafka.common.config.ConfigDef.Type-org.apache.kafka.common.config.ConfigDef.Importance-java.lang.String-"/>
        /// </summary>
        /// <param name="arg0"><see cref="string"/></param>
        /// <param name="arg1"><see cref="Org.Apache.Kafka.Common.Config.ConfigDef.Type"/></param>
        /// <param name="arg2"><see cref="Org.Apache.Kafka.Common.Config.ConfigDef.Importance"/></param>
        /// <param name="arg3"><see cref="string"/></param>
        /// <returns><see cref="Org.Apache.Kafka.Common.Config.ConfigDef"/></returns>
        public Org.Apache.Kafka.Common.Config.ConfigDef Define(string arg0, Org.Apache.Kafka.Common.Config.ConfigDef.Type arg1, Org.Apache.Kafka.Common.Config.ConfigDef.Importance arg2, string arg3)
        {
            return IExecute<Org.Apache.Kafka.Common.Config.ConfigDef>("define", arg0, arg1, arg2, arg3);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.6.1/org/apache/kafka/common/config/ConfigDef.html#define-org.apache.kafka.common.config.ConfigDef.ConfigKey-"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Common.Config.ConfigDef.ConfigKey"/></param>
        /// <returns><see cref="Org.Apache.Kafka.Common.Config.ConfigDef"/></returns>
        public Org.Apache.Kafka.Common.Config.ConfigDef Define(Org.Apache.Kafka.Common.Config.ConfigDef.ConfigKey arg0)
        {
            return IExecute<Org.Apache.Kafka.Common.Config.ConfigDef>("define", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.6.1/org/apache/kafka/common/config/ConfigDef.html#defineInternal-java.lang.String-org.apache.kafka.common.config.ConfigDef.Type-java.lang.Object-org.apache.kafka.common.config.ConfigDef.Importance-"/>
        /// </summary>
        /// <param name="arg0"><see cref="string"/></param>
        /// <param name="arg1"><see cref="Org.Apache.Kafka.Common.Config.ConfigDef.Type"/></param>
        /// <param name="arg2"><see cref="object"/></param>
        /// <param name="arg3"><see cref="Org.Apache.Kafka.Common.Config.ConfigDef.Importance"/></param>
        /// <returns><see cref="Org.Apache.Kafka.Common.Config.ConfigDef"/></returns>
        public Org.Apache.Kafka.Common.Config.ConfigDef DefineInternal(string arg0, Org.Apache.Kafka.Common.Config.ConfigDef.Type arg1, object arg2, Org.Apache.Kafka.Common.Config.ConfigDef.Importance arg3)
        {
            return IExecute<Org.Apache.Kafka.Common.Config.ConfigDef>("defineInternal", arg0, arg1, arg2, arg3);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.6.1/org/apache/kafka/common/config/ConfigDef.html#defineInternal-java.lang.String-org.apache.kafka.common.config.ConfigDef.Type-java.lang.Object-org.apache.kafka.common.config.ConfigDef.Validator-org.apache.kafka.common.config.ConfigDef.Importance-java.lang.String-"/>
        /// </summary>
        /// <param name="arg0"><see cref="string"/></param>
        /// <param name="arg1"><see cref="Org.Apache.Kafka.Common.Config.ConfigDef.Type"/></param>
        /// <param name="arg2"><see cref="object"/></param>
        /// <param name="arg3"><see cref="Org.Apache.Kafka.Common.Config.ConfigDef.Validator"/></param>
        /// <param name="arg4"><see cref="Org.Apache.Kafka.Common.Config.ConfigDef.Importance"/></param>
        /// <param name="arg5"><see cref="string"/></param>
        /// <returns><see cref="Org.Apache.Kafka.Common.Config.ConfigDef"/></returns>
        public Org.Apache.Kafka.Common.Config.ConfigDef DefineInternal(string arg0, Org.Apache.Kafka.Common.Config.ConfigDef.Type arg1, object arg2, Org.Apache.Kafka.Common.Config.ConfigDef.Validator arg3, Org.Apache.Kafka.Common.Config.ConfigDef.Importance arg4, string arg5)
        {
            return IExecute<Org.Apache.Kafka.Common.Config.ConfigDef>("defineInternal", arg0, arg1, arg2, arg3, arg4, arg5);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.6.1/org/apache/kafka/common/config/ConfigDef.html#withClientSaslSupport--"/>
        /// </summary>

        /// <returns><see cref="Org.Apache.Kafka.Common.Config.ConfigDef"/></returns>
        public Org.Apache.Kafka.Common.Config.ConfigDef WithClientSaslSupport()
        {
            return IExecute<Org.Apache.Kafka.Common.Config.ConfigDef>("withClientSaslSupport");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.6.1/org/apache/kafka/common/config/ConfigDef.html#withClientSslSupport--"/>
        /// </summary>

        /// <returns><see cref="Org.Apache.Kafka.Common.Config.ConfigDef"/></returns>
        public Org.Apache.Kafka.Common.Config.ConfigDef WithClientSslSupport()
        {
            return IExecute<Org.Apache.Kafka.Common.Config.ConfigDef>("withClientSslSupport");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.6.1/org/apache/kafka/common/config/ConfigDef.html#embed-java.lang.String-java.lang.String-int-org.apache.kafka.common.config.ConfigDef-"/>
        /// </summary>
        /// <param name="arg0"><see cref="string"/></param>
        /// <param name="arg1"><see cref="string"/></param>
        /// <param name="arg2"><see cref="int"/></param>
        /// <param name="arg3"><see cref="Org.Apache.Kafka.Common.Config.ConfigDef"/></param>
        public void Embed(string arg0, string arg1, int arg2, Org.Apache.Kafka.Common.Config.ConfigDef arg3)
        {
            IExecute("embed", arg0, arg1, arg2, arg3);
        }

        #endregion

        #region Nested classes
        #region CaseInsensitiveValidString
        public partial class CaseInsensitiveValidString
        {
            #region Constructors

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields

            #endregion

            #region Static methods
            /// <summary>
            /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.6.1/org/apache/kafka/common/config/ConfigDef.CaseInsensitiveValidString.html#in-java.lang.String[]-"/>
            /// </summary>
            /// <param name="arg0"><see cref="string"/></param>
            /// <returns><see cref="Org.Apache.Kafka.Common.Config.ConfigDef.CaseInsensitiveValidString"/></returns>
            public static Org.Apache.Kafka.Common.Config.ConfigDef.CaseInsensitiveValidString In(params string[] arg0)
            {
                if (arg0.Length == 0) return SExecute<Org.Apache.Kafka.Common.Config.ConfigDef.CaseInsensitiveValidString>(LocalBridgeClazz, "in"); else return SExecute<Org.Apache.Kafka.Common.Config.ConfigDef.CaseInsensitiveValidString>(LocalBridgeClazz, "in", arg0);
            }

            #endregion

            #region Instance methods
            /// <summary>
            /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.6.1/org/apache/kafka/common/config/ConfigDef.CaseInsensitiveValidString.html#ensureValid-java.lang.String-java.lang.Object-"/>
            /// </summary>
            /// <param name="arg0"><see cref="string"/></param>
            /// <param name="arg1"><see cref="object"/></param>
            public void EnsureValid(string arg0, object arg1)
            {
                IExecute("ensureValid", arg0, arg1);
            }

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

        #region CompositeValidator
        public partial class CompositeValidator
        {
            #region Constructors

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields

            #endregion

            #region Static methods
            /// <summary>
            /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.6.1/org/apache/kafka/common/config/ConfigDef.CompositeValidator.html#of-org.apache.kafka.common.config.ConfigDef.Validator[]-"/>
            /// </summary>
            /// <param name="arg0"><see cref="Org.Apache.Kafka.Common.Config.ConfigDef.Validator"/></param>
            /// <returns><see cref="Org.Apache.Kafka.Common.Config.ConfigDef.CompositeValidator"/></returns>
            public static Org.Apache.Kafka.Common.Config.ConfigDef.CompositeValidator Of(params Org.Apache.Kafka.Common.Config.ConfigDef.Validator[] arg0)
            {
                if (arg0.Length == 0) return SExecute<Org.Apache.Kafka.Common.Config.ConfigDef.CompositeValidator>(LocalBridgeClazz, "of"); else return SExecute<Org.Apache.Kafka.Common.Config.ConfigDef.CompositeValidator>(LocalBridgeClazz, "of", arg0);
            }

            #endregion

            #region Instance methods
            /// <summary>
            /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.6.1/org/apache/kafka/common/config/ConfigDef.CompositeValidator.html#ensureValid-java.lang.String-java.lang.Object-"/>
            /// </summary>
            /// <param name="arg0"><see cref="string"/></param>
            /// <param name="arg1"><see cref="object"/></param>
            public void EnsureValid(string arg0, object arg1)
            {
                IExecute("ensureValid", arg0, arg1);
            }

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

        #region ConfigKey
        public partial class ConfigKey
        {
            #region Constructors
            /// <summary>
            /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.6.1/org/apache/kafka/common/config/ConfigDef.ConfigKey.html#org.apache.kafka.common.config.ConfigDef$ConfigKey(java.lang.String,org.apache.kafka.common.config.ConfigDef.Type,java.lang.Object,org.apache.kafka.common.config.ConfigDef.Validator,org.apache.kafka.common.config.ConfigDef.Importance,java.lang.String,java.lang.String,int,org.apache.kafka.common.config.ConfigDef.Width,java.lang.String,java.util.List,org.apache.kafka.common.config.ConfigDef.Recommender,boolean)"/>
            /// </summary>
            /// <param name="arg0"><see cref="string"/></param>
            /// <param name="arg1"><see cref="Org.Apache.Kafka.Common.Config.ConfigDef.Type"/></param>
            /// <param name="arg2"><see cref="object"/></param>
            /// <param name="arg3"><see cref="Org.Apache.Kafka.Common.Config.ConfigDef.Validator"/></param>
            /// <param name="arg4"><see cref="Org.Apache.Kafka.Common.Config.ConfigDef.Importance"/></param>
            /// <param name="arg5"><see cref="string"/></param>
            /// <param name="arg6"><see cref="string"/></param>
            /// <param name="arg7"><see cref="int"/></param>
            /// <param name="arg8"><see cref="Org.Apache.Kafka.Common.Config.ConfigDef.Width"/></param>
            /// <param name="arg9"><see cref="string"/></param>
            /// <param name="arg10"><see cref="Java.Util.List"/></param>
            /// <param name="arg11"><see cref="Org.Apache.Kafka.Common.Config.ConfigDef.Recommender"/></param>
            /// <param name="arg12"><see cref="bool"/></param>
            public ConfigKey(string arg0, Org.Apache.Kafka.Common.Config.ConfigDef.Type arg1, object arg2, Org.Apache.Kafka.Common.Config.ConfigDef.Validator arg3, Org.Apache.Kafka.Common.Config.ConfigDef.Importance arg4, string arg5, string arg6, int arg7, Org.Apache.Kafka.Common.Config.ConfigDef.Width arg8, string arg9, Java.Util.List<string> arg10, Org.Apache.Kafka.Common.Config.ConfigDef.Recommender arg11, bool arg12)
                : base(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11, arg12)
            {
            }

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields
            /// <summary>
            /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.6.1/org/apache/kafka/common/config/ConfigDef.ConfigKey.html#internalConfig"/>
            /// </summary>
            public bool internalConfig { get { if (!_internalConfigReady) { _internalConfigContent = IGetField<bool>("internalConfig"); _internalConfigReady = true; } return _internalConfigContent; } }
            private bool _internalConfigContent = default;
            private bool _internalConfigReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.6.1/org/apache/kafka/common/config/ConfigDef.ConfigKey.html#orderInGroup"/>
            /// </summary>
            public int orderInGroup { get { if (!_orderInGroupReady) { _orderInGroupContent = IGetField<int>("orderInGroup"); _orderInGroupReady = true; } return _orderInGroupContent; } }
            private int _orderInGroupContent = default;
            private bool _orderInGroupReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.6.1/org/apache/kafka/common/config/ConfigDef.ConfigKey.html#defaultValue"/>
            /// </summary>
            public object defaultValue { get { if (!_defaultValueReady) { _defaultValueContent = IGetField("defaultValue"); _defaultValueReady = true; } return _defaultValueContent; } }
            private object _defaultValueContent = default;
            private bool _defaultValueReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.6.1/org/apache/kafka/common/config/ConfigDef.ConfigKey.html#displayName"/>
            /// </summary>
            public string displayName { get { if (!_displayNameReady) { _displayNameContent = IGetField<string>("displayName"); _displayNameReady = true; } return _displayNameContent; } }
            private string _displayNameContent = default;
            private bool _displayNameReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.6.1/org/apache/kafka/common/config/ConfigDef.ConfigKey.html#documentation"/>
            /// </summary>
            public string documentation { get { if (!_documentationReady) { _documentationContent = IGetField<string>("documentation"); _documentationReady = true; } return _documentationContent; } }
            private string _documentationContent = default;
            private bool _documentationReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.6.1/org/apache/kafka/common/config/ConfigDef.ConfigKey.html#group"/>
            /// </summary>
            public string group { get { if (!_groupReady) { _groupContent = IGetField<string>("group"); _groupReady = true; } return _groupContent; } }
            private string _groupContent = default;
            private bool _groupReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.6.1/org/apache/kafka/common/config/ConfigDef.ConfigKey.html#name"/>
            /// </summary>
            public string name { get { if (!_nameReady) { _nameContent = IGetField<string>("name"); _nameReady = true; } return _nameContent; } }
            private string _nameContent = default;
            private bool _nameReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.6.1/org/apache/kafka/common/config/ConfigDef.ConfigKey.html#dependents"/>
            /// </summary>
            public Java.Util.List dependents { get { if (!_dependentsReady) { _dependentsContent = IGetField<Java.Util.List>("dependents"); _dependentsReady = true; } return _dependentsContent; } }
            private Java.Util.List _dependentsContent = default;
            private bool _dependentsReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.6.1/org/apache/kafka/common/config/ConfigDef.ConfigKey.html#importance"/>
            /// </summary>
            public Org.Apache.Kafka.Common.Config.ConfigDef.Importance importance { get { if (!_importanceReady) { _importanceContent = IGetField<Org.Apache.Kafka.Common.Config.ConfigDef.Importance>("importance"); _importanceReady = true; } return _importanceContent; } }
            private Org.Apache.Kafka.Common.Config.ConfigDef.Importance _importanceContent = default;
            private bool _importanceReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.6.1/org/apache/kafka/common/config/ConfigDef.ConfigKey.html#recommender"/>
            /// </summary>
            public Org.Apache.Kafka.Common.Config.ConfigDef.Recommender recommender { get { if (!_recommenderReady) { _recommenderContent = IGetField<Org.Apache.Kafka.Common.Config.ConfigDef.Recommender>("recommender"); _recommenderReady = true; } return _recommenderContent; } }
            private Org.Apache.Kafka.Common.Config.ConfigDef.Recommender _recommenderContent = default;
            private bool _recommenderReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.6.1/org/apache/kafka/common/config/ConfigDef.ConfigKey.html#type"/>
            /// </summary>
            public Org.Apache.Kafka.Common.Config.ConfigDef.Type type { get { if (!_typeReady) { _typeContent = IGetField<Org.Apache.Kafka.Common.Config.ConfigDef.Type>("type"); _typeReady = true; } return _typeContent; } }
            private Org.Apache.Kafka.Common.Config.ConfigDef.Type _typeContent = default;
            private bool _typeReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.6.1/org/apache/kafka/common/config/ConfigDef.ConfigKey.html#validator"/>
            /// </summary>
            public Org.Apache.Kafka.Common.Config.ConfigDef.Validator validator { get { if (!_validatorReady) { _validatorContent = IGetField<Org.Apache.Kafka.Common.Config.ConfigDef.Validator>("validator"); _validatorReady = true; } return _validatorContent; } }
            private Org.Apache.Kafka.Common.Config.ConfigDef.Validator _validatorContent = default;
            private bool _validatorReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.6.1/org/apache/kafka/common/config/ConfigDef.ConfigKey.html#width"/>
            /// </summary>
            public Org.Apache.Kafka.Common.Config.ConfigDef.Width width { get { if (!_widthReady) { _widthContent = IGetField<Org.Apache.Kafka.Common.Config.ConfigDef.Width>("width"); _widthReady = true; } return _widthContent; } }
            private Org.Apache.Kafka.Common.Config.ConfigDef.Width _widthContent = default;
            private bool _widthReady = false; // this is used because in case of generics 

            #endregion

            #region Static methods

            #endregion

            #region Instance methods
            /// <summary>
            /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.6.1/org/apache/kafka/common/config/ConfigDef.ConfigKey.html#hasDefault--"/>
            /// </summary>

            /// <returns><see cref="bool"/></returns>
            public bool HasDefault()
            {
                return IExecute<bool>("hasDefault");
            }
            /// <summary>
            /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.6.1/org/apache/kafka/common/config/ConfigDef.ConfigKey.html#type--"/>
            /// </summary>

            /// <returns><see cref="Org.Apache.Kafka.Common.Config.ConfigDef.Type"/></returns>
            public Org.Apache.Kafka.Common.Config.ConfigDef.Type TypeMethod()
            {
                return IExecute<Org.Apache.Kafka.Common.Config.ConfigDef.Type>("type");
            }

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

        #region Importance
        public partial class Importance
        {
            #region Constructors

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields
            /// <summary>
            /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.6.1/org/apache/kafka/common/config/ConfigDef.Importance.html#HIGH"/>
            /// </summary>
            public static Org.Apache.Kafka.Common.Config.ConfigDef.Importance HIGH { get { if (!_HIGHReady) { _HIGHContent = SGetField<Org.Apache.Kafka.Common.Config.ConfigDef.Importance>(LocalBridgeClazz, "HIGH"); _HIGHReady = true; } return _HIGHContent; } }
            private static Org.Apache.Kafka.Common.Config.ConfigDef.Importance _HIGHContent = default;
            private static bool _HIGHReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.6.1/org/apache/kafka/common/config/ConfigDef.Importance.html#LOW"/>
            /// </summary>
            public static Org.Apache.Kafka.Common.Config.ConfigDef.Importance LOW { get { if (!_LOWReady) { _LOWContent = SGetField<Org.Apache.Kafka.Common.Config.ConfigDef.Importance>(LocalBridgeClazz, "LOW"); _LOWReady = true; } return _LOWContent; } }
            private static Org.Apache.Kafka.Common.Config.ConfigDef.Importance _LOWContent = default;
            private static bool _LOWReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.6.1/org/apache/kafka/common/config/ConfigDef.Importance.html#MEDIUM"/>
            /// </summary>
            public static Org.Apache.Kafka.Common.Config.ConfigDef.Importance MEDIUM { get { if (!_MEDIUMReady) { _MEDIUMContent = SGetField<Org.Apache.Kafka.Common.Config.ConfigDef.Importance>(LocalBridgeClazz, "MEDIUM"); _MEDIUMReady = true; } return _MEDIUMContent; } }
            private static Org.Apache.Kafka.Common.Config.ConfigDef.Importance _MEDIUMContent = default;
            private static bool _MEDIUMReady = false; // this is used because in case of generics 

            #endregion

            #region Static methods
            /// <summary>
            /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.6.1/org/apache/kafka/common/config/ConfigDef.Importance.html#valueOf-java.lang.String-"/>
            /// </summary>
            /// <param name="arg0"><see cref="string"/></param>
            /// <returns><see cref="Org.Apache.Kafka.Common.Config.ConfigDef.Importance"/></returns>
            public static Org.Apache.Kafka.Common.Config.ConfigDef.Importance ValueOf(string arg0)
            {
                return SExecute<Org.Apache.Kafka.Common.Config.ConfigDef.Importance>(LocalBridgeClazz, "valueOf", arg0);
            }
            /// <summary>
            /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.6.1/org/apache/kafka/common/config/ConfigDef.Importance.html#values--"/>
            /// </summary>

            /// <returns><see cref="Org.Apache.Kafka.Common.Config.ConfigDef.Importance"/></returns>
            public static Org.Apache.Kafka.Common.Config.ConfigDef.Importance[] Values()
            {
                return SExecuteArray<Org.Apache.Kafka.Common.Config.ConfigDef.Importance>(LocalBridgeClazz, "values");
            }

            #endregion

            #region Instance methods

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

        #region LambdaValidator
        public partial class LambdaValidator
        {
            #region Constructors

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields

            #endregion

            #region Static methods
            /// <summary>
            /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.6.1/org/apache/kafka/common/config/ConfigDef.LambdaValidator.html#with-java.util.function.BiConsumer-java.util.function.Supplier-"/>
            /// </summary>
            /// <param name="arg0"><see cref="Java.Util.Function.BiConsumer"/></param>
            /// <param name="arg1"><see cref="Java.Util.Function.Supplier"/></param>
            /// <returns><see cref="Org.Apache.Kafka.Common.Config.ConfigDef.LambdaValidator"/></returns>
            public static Org.Apache.Kafka.Common.Config.ConfigDef.LambdaValidator With(Java.Util.Function.BiConsumer<string, object> arg0, Java.Util.Function.Supplier<string> arg1)
            {
                return SExecute<Org.Apache.Kafka.Common.Config.ConfigDef.LambdaValidator>(LocalBridgeClazz, "with", arg0, arg1);
            }

            #endregion

            #region Instance methods
            /// <summary>
            /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.6.1/org/apache/kafka/common/config/ConfigDef.LambdaValidator.html#ensureValid-java.lang.String-java.lang.Object-"/>
            /// </summary>
            /// <param name="arg0"><see cref="string"/></param>
            /// <param name="arg1"><see cref="object"/></param>
            public void EnsureValid(string arg0, object arg1)
            {
                IExecute("ensureValid", arg0, arg1);
            }

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

        #region ListSize
        public partial class ListSize
        {
            #region Constructors

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields

            #endregion

            #region Static methods
            /// <summary>
            /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.6.1/org/apache/kafka/common/config/ConfigDef.ListSize.html#atMostOfSize-int-"/>
            /// </summary>
            /// <param name="arg0"><see cref="int"/></param>
            /// <returns><see cref="Org.Apache.Kafka.Common.Config.ConfigDef.ListSize"/></returns>
            public static Org.Apache.Kafka.Common.Config.ConfigDef.ListSize AtMostOfSize(int arg0)
            {
                return SExecute<Org.Apache.Kafka.Common.Config.ConfigDef.ListSize>(LocalBridgeClazz, "atMostOfSize", arg0);
            }

            #endregion

            #region Instance methods
            /// <summary>
            /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.6.1/org/apache/kafka/common/config/ConfigDef.ListSize.html#ensureValid-java.lang.String-java.lang.Object-"/>
            /// </summary>
            /// <param name="arg0"><see cref="string"/></param>
            /// <param name="arg1"><see cref="object"/></param>
            public void EnsureValid(string arg0, object arg1)
            {
                IExecute("ensureValid", arg0, arg1);
            }

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

        #region NonEmptyString
        public partial class NonEmptyString
        {
            #region Constructors

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields

            #endregion

            #region Static methods

            #endregion

            #region Instance methods
            /// <summary>
            /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.6.1/org/apache/kafka/common/config/ConfigDef.NonEmptyString.html#ensureValid-java.lang.String-java.lang.Object-"/>
            /// </summary>
            /// <param name="arg0"><see cref="string"/></param>
            /// <param name="arg1"><see cref="object"/></param>
            public void EnsureValid(string arg0, object arg1)
            {
                IExecute("ensureValid", arg0, arg1);
            }

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

        #region NonEmptyStringWithoutControlChars
        public partial class NonEmptyStringWithoutControlChars
        {
            #region Constructors

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields

            #endregion

            #region Static methods
            /// <summary>
            /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.6.1/org/apache/kafka/common/config/ConfigDef.NonEmptyStringWithoutControlChars.html#nonEmptyStringWithoutControlChars--"/>
            /// </summary>

            /// <returns><see cref="Org.Apache.Kafka.Common.Config.ConfigDef.NonEmptyStringWithoutControlChars"/></returns>
            public static Org.Apache.Kafka.Common.Config.ConfigDef.NonEmptyStringWithoutControlChars NonEmptyStringWithoutControlCharsMethod()
            {
                return SExecute<Org.Apache.Kafka.Common.Config.ConfigDef.NonEmptyStringWithoutControlChars>(LocalBridgeClazz, "nonEmptyStringWithoutControlChars");
            }

            #endregion

            #region Instance methods
            /// <summary>
            /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.6.1/org/apache/kafka/common/config/ConfigDef.NonEmptyStringWithoutControlChars.html#ensureValid-java.lang.String-java.lang.Object-"/>
            /// </summary>
            /// <param name="arg0"><see cref="string"/></param>
            /// <param name="arg1"><see cref="object"/></param>
            public void EnsureValid(string arg0, object arg1)
            {
                IExecute("ensureValid", arg0, arg1);
            }

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

        #region NonNullValidator
        public partial class NonNullValidator
        {
            #region Constructors

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields

            #endregion

            #region Static methods

            #endregion

            #region Instance methods
            /// <summary>
            /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.6.1/org/apache/kafka/common/config/ConfigDef.NonNullValidator.html#ensureValid-java.lang.String-java.lang.Object-"/>
            /// </summary>
            /// <param name="arg0"><see cref="string"/></param>
            /// <param name="arg1"><see cref="object"/></param>
            public void EnsureValid(string arg0, object arg1)
            {
                IExecute("ensureValid", arg0, arg1);
            }

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

        #region Range
        public partial class Range
        {
            #region Constructors

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields

            #endregion

            #region Static methods
            /// <summary>
            /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.6.1/org/apache/kafka/common/config/ConfigDef.Range.html#atLeast-java.lang.Number-"/>
            /// </summary>
            /// <param name="arg0"><see cref="Java.Lang.Number"/></param>
            /// <returns><see cref="Org.Apache.Kafka.Common.Config.ConfigDef.Range"/></returns>
            public static Org.Apache.Kafka.Common.Config.ConfigDef.Range AtLeast(Java.Lang.Number arg0)
            {
                return SExecute<Org.Apache.Kafka.Common.Config.ConfigDef.Range>(LocalBridgeClazz, "atLeast", arg0);
            }
            /// <summary>
            /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.6.1/org/apache/kafka/common/config/ConfigDef.Range.html#between-java.lang.Number-java.lang.Number-"/>
            /// </summary>
            /// <param name="arg0"><see cref="Java.Lang.Number"/></param>
            /// <param name="arg1"><see cref="Java.Lang.Number"/></param>
            /// <returns><see cref="Org.Apache.Kafka.Common.Config.ConfigDef.Range"/></returns>
            public static Org.Apache.Kafka.Common.Config.ConfigDef.Range Between(Java.Lang.Number arg0, Java.Lang.Number arg1)
            {
                return SExecute<Org.Apache.Kafka.Common.Config.ConfigDef.Range>(LocalBridgeClazz, "between", arg0, arg1);
            }

            #endregion

            #region Instance methods
            /// <summary>
            /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.6.1/org/apache/kafka/common/config/ConfigDef.Range.html#ensureValid-java.lang.String-java.lang.Object-"/>
            /// </summary>
            /// <param name="arg0"><see cref="string"/></param>
            /// <param name="arg1"><see cref="object"/></param>
            public void EnsureValid(string arg0, object arg1)
            {
                IExecute("ensureValid", arg0, arg1);
            }

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

        #region Recommender
        public partial class Recommender
        {
            #region Constructors

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields

            #endregion

            #region Static methods

            #endregion

            #region Instance methods
            /// <summary>
            /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.6.1/org/apache/kafka/common/config/ConfigDef.Recommender.html#visible-java.lang.String-java.util.Map-"/>
            /// </summary>
            /// <param name="arg0"><see cref="string"/></param>
            /// <param name="arg1"><see cref="Java.Util.Map"/></param>
            /// <returns><see cref="bool"/></returns>
            public bool Visible(string arg0, Java.Util.Map<string, object> arg1)
            {
                return IExecute<bool>("visible", arg0, arg1);
            }
            /// <summary>
            /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.6.1/org/apache/kafka/common/config/ConfigDef.Recommender.html#validValues-java.lang.String-java.util.Map-"/>
            /// </summary>
            /// <param name="arg0"><see cref="string"/></param>
            /// <param name="arg1"><see cref="Java.Util.Map"/></param>
            /// <returns><see cref="Java.Util.List"/></returns>
            public Java.Util.List<object> ValidValues(string arg0, Java.Util.Map<string, object> arg1)
            {
                return IExecute<Java.Util.List<object>>("validValues", arg0, arg1);
            }

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

        #region Type
        public partial class Type
        {
            #region Constructors

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields
            /// <summary>
            /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.6.1/org/apache/kafka/common/config/ConfigDef.Type.html#BOOLEAN"/>
            /// </summary>
            public static Org.Apache.Kafka.Common.Config.ConfigDef.Type BOOLEAN { get { if (!_BOOLEANReady) { _BOOLEANContent = SGetField<Org.Apache.Kafka.Common.Config.ConfigDef.Type>(LocalBridgeClazz, "BOOLEAN"); _BOOLEANReady = true; } return _BOOLEANContent; } }
            private static Org.Apache.Kafka.Common.Config.ConfigDef.Type _BOOLEANContent = default;
            private static bool _BOOLEANReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.6.1/org/apache/kafka/common/config/ConfigDef.Type.html#CLASS"/>
            /// </summary>
            public static Org.Apache.Kafka.Common.Config.ConfigDef.Type CLASS { get { if (!_CLASSReady) { _CLASSContent = SGetField<Org.Apache.Kafka.Common.Config.ConfigDef.Type>(LocalBridgeClazz, "CLASS"); _CLASSReady = true; } return _CLASSContent; } }
            private static Org.Apache.Kafka.Common.Config.ConfigDef.Type _CLASSContent = default;
            private static bool _CLASSReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.6.1/org/apache/kafka/common/config/ConfigDef.Type.html#DOUBLE"/>
            /// </summary>
            public static Org.Apache.Kafka.Common.Config.ConfigDef.Type DOUBLE { get { if (!_DOUBLEReady) { _DOUBLEContent = SGetField<Org.Apache.Kafka.Common.Config.ConfigDef.Type>(LocalBridgeClazz, "DOUBLE"); _DOUBLEReady = true; } return _DOUBLEContent; } }
            private static Org.Apache.Kafka.Common.Config.ConfigDef.Type _DOUBLEContent = default;
            private static bool _DOUBLEReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.6.1/org/apache/kafka/common/config/ConfigDef.Type.html#INT"/>
            /// </summary>
            public static Org.Apache.Kafka.Common.Config.ConfigDef.Type INT { get { if (!_INTReady) { _INTContent = SGetField<Org.Apache.Kafka.Common.Config.ConfigDef.Type>(LocalBridgeClazz, "INT"); _INTReady = true; } return _INTContent; } }
            private static Org.Apache.Kafka.Common.Config.ConfigDef.Type _INTContent = default;
            private static bool _INTReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.6.1/org/apache/kafka/common/config/ConfigDef.Type.html#LIST"/>
            /// </summary>
            public static Org.Apache.Kafka.Common.Config.ConfigDef.Type LIST { get { if (!_LISTReady) { _LISTContent = SGetField<Org.Apache.Kafka.Common.Config.ConfigDef.Type>(LocalBridgeClazz, "LIST"); _LISTReady = true; } return _LISTContent; } }
            private static Org.Apache.Kafka.Common.Config.ConfigDef.Type _LISTContent = default;
            private static bool _LISTReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.6.1/org/apache/kafka/common/config/ConfigDef.Type.html#LONG"/>
            /// </summary>
            public static Org.Apache.Kafka.Common.Config.ConfigDef.Type LONG { get { if (!_LONGReady) { _LONGContent = SGetField<Org.Apache.Kafka.Common.Config.ConfigDef.Type>(LocalBridgeClazz, "LONG"); _LONGReady = true; } return _LONGContent; } }
            private static Org.Apache.Kafka.Common.Config.ConfigDef.Type _LONGContent = default;
            private static bool _LONGReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.6.1/org/apache/kafka/common/config/ConfigDef.Type.html#PASSWORD"/>
            /// </summary>
            public static Org.Apache.Kafka.Common.Config.ConfigDef.Type PASSWORD { get { if (!_PASSWORDReady) { _PASSWORDContent = SGetField<Org.Apache.Kafka.Common.Config.ConfigDef.Type>(LocalBridgeClazz, "PASSWORD"); _PASSWORDReady = true; } return _PASSWORDContent; } }
            private static Org.Apache.Kafka.Common.Config.ConfigDef.Type _PASSWORDContent = default;
            private static bool _PASSWORDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.6.1/org/apache/kafka/common/config/ConfigDef.Type.html#SHORT"/>
            /// </summary>
            public static Org.Apache.Kafka.Common.Config.ConfigDef.Type SHORT { get { if (!_SHORTReady) { _SHORTContent = SGetField<Org.Apache.Kafka.Common.Config.ConfigDef.Type>(LocalBridgeClazz, "SHORT"); _SHORTReady = true; } return _SHORTContent; } }
            private static Org.Apache.Kafka.Common.Config.ConfigDef.Type _SHORTContent = default;
            private static bool _SHORTReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.6.1/org/apache/kafka/common/config/ConfigDef.Type.html#STRING"/>
            /// </summary>
            public static Org.Apache.Kafka.Common.Config.ConfigDef.Type STRING { get { if (!_STRINGReady) { _STRINGContent = SGetField<Org.Apache.Kafka.Common.Config.ConfigDef.Type>(LocalBridgeClazz, "STRING"); _STRINGReady = true; } return _STRINGContent; } }
            private static Org.Apache.Kafka.Common.Config.ConfigDef.Type _STRINGContent = default;
            private static bool _STRINGReady = false; // this is used because in case of generics 

            #endregion

            #region Static methods
            /// <summary>
            /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.6.1/org/apache/kafka/common/config/ConfigDef.Type.html#valueOf-java.lang.String-"/>
            /// </summary>
            /// <param name="arg0"><see cref="string"/></param>
            /// <returns><see cref="Org.Apache.Kafka.Common.Config.ConfigDef.Type"/></returns>
            public static Org.Apache.Kafka.Common.Config.ConfigDef.Type ValueOf(string arg0)
            {
                return SExecute<Org.Apache.Kafka.Common.Config.ConfigDef.Type>(LocalBridgeClazz, "valueOf", arg0);
            }
            /// <summary>
            /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.6.1/org/apache/kafka/common/config/ConfigDef.Type.html#values--"/>
            /// </summary>

            /// <returns><see cref="Org.Apache.Kafka.Common.Config.ConfigDef.Type"/></returns>
            public static Org.Apache.Kafka.Common.Config.ConfigDef.Type[] Values()
            {
                return SExecuteArray<Org.Apache.Kafka.Common.Config.ConfigDef.Type>(LocalBridgeClazz, "values");
            }

            #endregion

            #region Instance methods
            /// <summary>
            /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.6.1/org/apache/kafka/common/config/ConfigDef.Type.html#isSensitive--"/>
            /// </summary>

            /// <returns><see cref="bool"/></returns>
            public bool IsSensitive()
            {
                return IExecute<bool>("isSensitive");
            }

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

        #region Validator
        public partial class Validator
        {
            #region Constructors

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields

            #endregion

            #region Static methods

            #endregion

            #region Instance methods
            /// <summary>
            /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.6.1/org/apache/kafka/common/config/ConfigDef.Validator.html#ensureValid-java.lang.String-java.lang.Object-"/>
            /// </summary>
            /// <param name="arg0"><see cref="string"/></param>
            /// <param name="arg1"><see cref="object"/></param>
            public void EnsureValid(string arg0, object arg1)
            {
                IExecute("ensureValid", arg0, arg1);
            }

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

        #region ValidList
        public partial class ValidList
        {
            #region Constructors

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields

            #endregion

            #region Static methods
            /// <summary>
            /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.6.1/org/apache/kafka/common/config/ConfigDef.ValidList.html#in-java.lang.String[]-"/>
            /// </summary>
            /// <param name="arg0"><see cref="string"/></param>
            /// <returns><see cref="Org.Apache.Kafka.Common.Config.ConfigDef.ValidList"/></returns>
            public static Org.Apache.Kafka.Common.Config.ConfigDef.ValidList In(params string[] arg0)
            {
                if (arg0.Length == 0) return SExecute<Org.Apache.Kafka.Common.Config.ConfigDef.ValidList>(LocalBridgeClazz, "in"); else return SExecute<Org.Apache.Kafka.Common.Config.ConfigDef.ValidList>(LocalBridgeClazz, "in", arg0);
            }

            #endregion

            #region Instance methods
            /// <summary>
            /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.6.1/org/apache/kafka/common/config/ConfigDef.ValidList.html#ensureValid-java.lang.String-java.lang.Object-"/>
            /// </summary>
            /// <param name="arg0"><see cref="string"/></param>
            /// <param name="arg1"><see cref="object"/></param>
            public void EnsureValid(string arg0, object arg1)
            {
                IExecute("ensureValid", arg0, arg1);
            }

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

        #region ValidString
        public partial class ValidString
        {
            #region Constructors

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields

            #endregion

            #region Static methods
            /// <summary>
            /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.6.1/org/apache/kafka/common/config/ConfigDef.ValidString.html#in-java.lang.String[]-"/>
            /// </summary>
            /// <param name="arg0"><see cref="string"/></param>
            /// <returns><see cref="Org.Apache.Kafka.Common.Config.ConfigDef.ValidString"/></returns>
            public static Org.Apache.Kafka.Common.Config.ConfigDef.ValidString In(params string[] arg0)
            {
                if (arg0.Length == 0) return SExecute<Org.Apache.Kafka.Common.Config.ConfigDef.ValidString>(LocalBridgeClazz, "in"); else return SExecute<Org.Apache.Kafka.Common.Config.ConfigDef.ValidString>(LocalBridgeClazz, "in", arg0);
            }

            #endregion

            #region Instance methods
            /// <summary>
            /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.6.1/org/apache/kafka/common/config/ConfigDef.ValidString.html#ensureValid-java.lang.String-java.lang.Object-"/>
            /// </summary>
            /// <param name="arg0"><see cref="string"/></param>
            /// <param name="arg1"><see cref="object"/></param>
            public void EnsureValid(string arg0, object arg1)
            {
                IExecute("ensureValid", arg0, arg1);
            }

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

        #region Width
        public partial class Width
        {
            #region Constructors

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields
            /// <summary>
            /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.6.1/org/apache/kafka/common/config/ConfigDef.Width.html#LONG"/>
            /// </summary>
            public static Org.Apache.Kafka.Common.Config.ConfigDef.Width LONG { get { if (!_LONGReady) { _LONGContent = SGetField<Org.Apache.Kafka.Common.Config.ConfigDef.Width>(LocalBridgeClazz, "LONG"); _LONGReady = true; } return _LONGContent; } }
            private static Org.Apache.Kafka.Common.Config.ConfigDef.Width _LONGContent = default;
            private static bool _LONGReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.6.1/org/apache/kafka/common/config/ConfigDef.Width.html#MEDIUM"/>
            /// </summary>
            public static Org.Apache.Kafka.Common.Config.ConfigDef.Width MEDIUM { get { if (!_MEDIUMReady) { _MEDIUMContent = SGetField<Org.Apache.Kafka.Common.Config.ConfigDef.Width>(LocalBridgeClazz, "MEDIUM"); _MEDIUMReady = true; } return _MEDIUMContent; } }
            private static Org.Apache.Kafka.Common.Config.ConfigDef.Width _MEDIUMContent = default;
            private static bool _MEDIUMReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.6.1/org/apache/kafka/common/config/ConfigDef.Width.html#NONE"/>
            /// </summary>
            public static Org.Apache.Kafka.Common.Config.ConfigDef.Width NONE { get { if (!_NONEReady) { _NONEContent = SGetField<Org.Apache.Kafka.Common.Config.ConfigDef.Width>(LocalBridgeClazz, "NONE"); _NONEReady = true; } return _NONEContent; } }
            private static Org.Apache.Kafka.Common.Config.ConfigDef.Width _NONEContent = default;
            private static bool _NONEReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.6.1/org/apache/kafka/common/config/ConfigDef.Width.html#SHORT"/>
            /// </summary>
            public static Org.Apache.Kafka.Common.Config.ConfigDef.Width SHORT { get { if (!_SHORTReady) { _SHORTContent = SGetField<Org.Apache.Kafka.Common.Config.ConfigDef.Width>(LocalBridgeClazz, "SHORT"); _SHORTReady = true; } return _SHORTContent; } }
            private static Org.Apache.Kafka.Common.Config.ConfigDef.Width _SHORTContent = default;
            private static bool _SHORTReady = false; // this is used because in case of generics 

            #endregion

            #region Static methods
            /// <summary>
            /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.6.1/org/apache/kafka/common/config/ConfigDef.Width.html#valueOf-java.lang.String-"/>
            /// </summary>
            /// <param name="arg0"><see cref="string"/></param>
            /// <returns><see cref="Org.Apache.Kafka.Common.Config.ConfigDef.Width"/></returns>
            public static Org.Apache.Kafka.Common.Config.ConfigDef.Width ValueOf(string arg0)
            {
                return SExecute<Org.Apache.Kafka.Common.Config.ConfigDef.Width>(LocalBridgeClazz, "valueOf", arg0);
            }
            /// <summary>
            /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.6.1/org/apache/kafka/common/config/ConfigDef.Width.html#values--"/>
            /// </summary>

            /// <returns><see cref="Org.Apache.Kafka.Common.Config.ConfigDef.Width"/></returns>
            public static Org.Apache.Kafka.Common.Config.ConfigDef.Width[] Values()
            {
                return SExecuteArray<Org.Apache.Kafka.Common.Config.ConfigDef.Width>(LocalBridgeClazz, "values");
            }

            #endregion

            #region Instance methods

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

    
        #endregion

        // TODO: complete the class
    }
    #endregion
}