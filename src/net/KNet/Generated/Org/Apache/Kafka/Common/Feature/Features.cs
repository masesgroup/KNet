/*
*  Copyright 2023 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 1.5.5.0)
*  using kafka-clients-3.4.0.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Org.Apache.Kafka.Common.Feature
{
    #region Features
    public partial class Features
    {
        #region Constructors

        #endregion

        #region Class/Interface conversion operators

        #endregion

        #region Fields

        #endregion

        #region Static methods
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/feature/Features.html#emptySupportedFeatures()"/>
        /// </summary>

        /// <returns><see cref="Org.Apache.Kafka.Common.Feature.Features"/></returns>
        public static Org.Apache.Kafka.Common.Feature.Features EmptySupportedFeatures()
        {
            return SExecute<Org.Apache.Kafka.Common.Feature.Features>(LocalBridgeClazz, "emptySupportedFeatures");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/feature/Features.html#fromSupportedFeaturesMap(java.util.Map)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Util.Map"/></param>
        /// <returns><see cref="Org.Apache.Kafka.Common.Feature.Features"/></returns>
        public static Org.Apache.Kafka.Common.Feature.Features FromSupportedFeaturesMap(Java.Util.Map arg0)
        {
            return SExecute<Org.Apache.Kafka.Common.Feature.Features>(LocalBridgeClazz, "fromSupportedFeaturesMap", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/feature/Features.html#supportedFeatures(java.util.Map)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Util.Map"/></param>
        /// <returns><see cref="Org.Apache.Kafka.Common.Feature.Features"/></returns>
        public static Org.Apache.Kafka.Common.Feature.Features SupportedFeatures(Java.Util.Map arg0)
        {
            return SExecute<Org.Apache.Kafka.Common.Feature.Features>(LocalBridgeClazz, "supportedFeatures", arg0);
        }

        #endregion

        #region Instance methods
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/feature/Features.html#empty()"/>
        /// </summary>

        /// <returns><see cref="bool"/></returns>
        public bool Empty()
        {
            return IExecute<bool>("empty");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/feature/Features.html#toMap()"/>
        /// </summary>

        /// <returns><see cref="Java.Util.Map"/></returns>
        public Java.Util.Map ToMap()
        {
            return IExecute<Java.Util.Map>("toMap");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/feature/Features.html#features()"/>
        /// </summary>

        /// <returns><see cref="Java.Util.Map"/></returns>
        public Java.Util.Map FeaturesMethod()
        {
            return IExecute<Java.Util.Map>("features");
        }

        #endregion

        #region Nested classes

        #endregion

        // TODO: complete the class
    }
    #endregion

    #region Features<VersionRangeType>
    public partial class Features<VersionRangeType>
    {
        #region Constructors

        #endregion

        #region Class/Interface conversion operators
        /// <summary>
        /// Converter from <see cref="Org.Apache.Kafka.Common.Feature.Features{VersionRangeType}"/> to <see cref="Org.Apache.Kafka.Common.Feature.Features"/>
        /// </summary>
        public static implicit operator Org.Apache.Kafka.Common.Feature.Features(Org.Apache.Kafka.Common.Feature.Features<VersionRangeType> t) => t.Cast<Org.Apache.Kafka.Common.Feature.Features>();

        #endregion

        #region Fields

        #endregion

        #region Static methods
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/feature/Features.html#emptySupportedFeatures()"/>
        /// </summary>

        /// <returns><see cref="Org.Apache.Kafka.Common.Feature.Features"/></returns>
        public static Org.Apache.Kafka.Common.Feature.Features<Org.Apache.Kafka.Common.Feature.SupportedVersionRange> EmptySupportedFeatures()
        {
            return SExecute<Org.Apache.Kafka.Common.Feature.Features<Org.Apache.Kafka.Common.Feature.SupportedVersionRange>>(LocalBridgeClazz, "emptySupportedFeatures");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/feature/Features.html#fromSupportedFeaturesMap(java.util.Map)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Util.Map"/></param>
        /// <returns><see cref="Org.Apache.Kafka.Common.Feature.Features"/></returns>
        public static Org.Apache.Kafka.Common.Feature.Features<Org.Apache.Kafka.Common.Feature.SupportedVersionRange> FromSupportedFeaturesMap(Java.Util.Map<string, Java.Util.Map<string, short?>> arg0)
        {
            return SExecute<Org.Apache.Kafka.Common.Feature.Features<Org.Apache.Kafka.Common.Feature.SupportedVersionRange>>(LocalBridgeClazz, "fromSupportedFeaturesMap", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/feature/Features.html#supportedFeatures(java.util.Map)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Util.Map"/></param>
        /// <returns><see cref="Org.Apache.Kafka.Common.Feature.Features"/></returns>
        public static Org.Apache.Kafka.Common.Feature.Features<Org.Apache.Kafka.Common.Feature.SupportedVersionRange> SupportedFeatures(Java.Util.Map<string, Org.Apache.Kafka.Common.Feature.SupportedVersionRange> arg0)
        {
            return SExecute<Org.Apache.Kafka.Common.Feature.Features<Org.Apache.Kafka.Common.Feature.SupportedVersionRange>>(LocalBridgeClazz, "supportedFeatures", arg0);
        }

        #endregion

        #region Instance methods
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/feature/Features.html#empty()"/>
        /// </summary>

        /// <returns><see cref="bool"/></returns>
        public bool Empty()
        {
            return IExecute<bool>("empty");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/feature/Features.html#toMap()"/>
        /// </summary>

        /// <returns><see cref="Java.Util.Map"/></returns>
        public Java.Util.Map<string, Java.Util.Map<string, short?>> ToMap()
        {
            return IExecute<Java.Util.Map<string, Java.Util.Map<string, short?>>>("toMap");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/feature/Features.html#features()"/>
        /// </summary>

        /// <returns><see cref="Java.Util.Map"/></returns>
        public Java.Util.Map<string, VersionRangeType> FeaturesMethod()
        {
            return IExecute<Java.Util.Map<string, VersionRangeType>>("features");
        }

        #endregion

        #region Nested classes

        #endregion

        // TODO: complete the class
    }
    #endregion
}