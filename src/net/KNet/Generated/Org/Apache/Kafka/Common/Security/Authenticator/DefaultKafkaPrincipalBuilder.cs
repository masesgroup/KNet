/*
*  Copyright (c) 2021-2025 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 2.6.0.0)
*  using kafka-clients-4.0.0.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Org.Apache.Kafka.Common.Security.Authenticator
{
    #region DefaultKafkaPrincipalBuilder declaration
    /// <summary>
    /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/4.0.0/org/apache/kafka/common/security/authenticator/DefaultKafkaPrincipalBuilder.html"/>
    /// </summary>
    public partial class DefaultKafkaPrincipalBuilder : MASES.JCOBridge.C2JBridge.JVMBridgeBase<DefaultKafkaPrincipalBuilder>
    {
        const string _bridgeClassName = "org.apache.kafka.common.security.authenticator.DefaultKafkaPrincipalBuilder";
        /// <summary>
        /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
        /// </summary>
        public DefaultKafkaPrincipalBuilder() { }
        /// <summary>
        /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
        /// </summary>
        public DefaultKafkaPrincipalBuilder(params object[] args) : base(args) { }

        private static readonly MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType _LocalBridgeClazz = JVMBridgeBase.ClazzOf(_bridgeClassName, false);
        private static MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType LocalBridgeClazz => _LocalBridgeClazz ?? throw new global::System.InvalidOperationException($"Class {_bridgeClassName} was not found.");

        /// <inheritdoc/>
        public override string BridgeClassName => _bridgeClassName;
        /// <inheritdoc/>
        public override bool IsBridgeAbstract => false;
        /// <inheritdoc/>
        public override bool IsBridgeCloseable => false;
        /// <inheritdoc/>
        public override bool IsBridgeInterface => false;
        /// <inheritdoc/>
        public override bool IsBridgeStatic => false;

        // TODO: complete the class

    }
    #endregion

    #region DefaultKafkaPrincipalBuilder implementation
    public partial class DefaultKafkaPrincipalBuilder : Org.Apache.Kafka.Common.Security.Auth.IKafkaPrincipalBuilder, Org.Apache.Kafka.Common.Security.Auth.IKafkaPrincipalSerde
    {
        #region Constructors

        #endregion

        #region Class/Interface conversion operators
        /// <summary>
        /// Converter from <see cref="Org.Apache.Kafka.Common.Security.Authenticator.DefaultKafkaPrincipalBuilder"/> to <see cref="Org.Apache.Kafka.Common.Security.Auth.KafkaPrincipalBuilder"/>
        /// </summary>
        public static implicit operator Org.Apache.Kafka.Common.Security.Auth.KafkaPrincipalBuilder(Org.Apache.Kafka.Common.Security.Authenticator.DefaultKafkaPrincipalBuilder t) => t.Cast<Org.Apache.Kafka.Common.Security.Auth.KafkaPrincipalBuilder>();
        /// <summary>
        /// Converter from <see cref="Org.Apache.Kafka.Common.Security.Authenticator.DefaultKafkaPrincipalBuilder"/> to <see cref="Org.Apache.Kafka.Common.Security.Auth.KafkaPrincipalSerde"/>
        /// </summary>
        public static implicit operator Org.Apache.Kafka.Common.Security.Auth.KafkaPrincipalSerde(Org.Apache.Kafka.Common.Security.Authenticator.DefaultKafkaPrincipalBuilder t) => t.Cast<Org.Apache.Kafka.Common.Security.Auth.KafkaPrincipalSerde>();

        #endregion

        #region Fields

        #endregion

        #region Static methods

        #endregion

        #region Instance methods
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/4.0.0/org/apache/kafka/common/security/authenticator/DefaultKafkaPrincipalBuilder.html#serialize(org.apache.kafka.common.security.auth.KafkaPrincipal)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Common.Security.Auth.KafkaPrincipal"/></param>
        /// <returns><see cref="byte"/></returns>
        public byte[] Serialize(Org.Apache.Kafka.Common.Security.Auth.KafkaPrincipal arg0)
        {
            return IExecuteWithSignatureArray<byte>("serialize", "(Lorg/apache/kafka/common/security/auth/KafkaPrincipal;)[B", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/4.0.0/org/apache/kafka/common/security/authenticator/DefaultKafkaPrincipalBuilder.html#build(org.apache.kafka.common.security.auth.AuthenticationContext)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Common.Security.Auth.AuthenticationContext"/></param>
        /// <returns><see cref="Org.Apache.Kafka.Common.Security.Auth.KafkaPrincipal"/></returns>
        public Org.Apache.Kafka.Common.Security.Auth.KafkaPrincipal Build(Org.Apache.Kafka.Common.Security.Auth.AuthenticationContext arg0)
        {
            return IExecuteWithSignature<Org.Apache.Kafka.Common.Security.Auth.KafkaPrincipal>("build", "(Lorg/apache/kafka/common/security/auth/AuthenticationContext;)Lorg/apache/kafka/common/security/auth/KafkaPrincipal;", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/4.0.0/org/apache/kafka/common/security/authenticator/DefaultKafkaPrincipalBuilder.html#deserialize(byte[])"/>
        /// </summary>
        /// <param name="arg0"><see cref="byte"/></param>
        /// <returns><see cref="Org.Apache.Kafka.Common.Security.Auth.KafkaPrincipal"/></returns>
        public Org.Apache.Kafka.Common.Security.Auth.KafkaPrincipal Deserialize(byte[] arg0)
        {
            return IExecuteWithSignature<Org.Apache.Kafka.Common.Security.Auth.KafkaPrincipal>("deserialize", "([B)Lorg/apache/kafka/common/security/auth/KafkaPrincipal;", new object[] { arg0 });
        }

        #endregion

        #region Nested classes

        #endregion

        // TODO: complete the class
    }
    #endregion
}