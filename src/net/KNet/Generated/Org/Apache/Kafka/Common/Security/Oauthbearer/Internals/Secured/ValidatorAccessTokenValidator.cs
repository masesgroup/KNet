/*
*  Copyright 2023 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 1.5.5.0)
*  using kafka-clients-3.4.0.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Org.Apache.Kafka.Common.Security.Oauthbearer.Internals.Secured
{
    #region ValidatorAccessTokenValidator
    public partial class ValidatorAccessTokenValidator
    {
        #region Constructors
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/security/oauthbearer/internals/secured/ValidatorAccessTokenValidator.html#%3Cinit%3E(java.lang.Integer,java.util.Set,java.lang.String,org.jose4j.keys.resolvers.VerificationKeyResolver,java.lang.String,java.lang.String)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <param name="arg1"><see cref="Java.Util.Set"/></param>
        /// <param name="arg2"><see cref="string"/></param>
        /// <param name="arg3"><see cref="Org.Jose4j.Keys.Resolvers.VerificationKeyResolver"/></param>
        /// <param name="arg4"><see cref="string"/></param>
        /// <param name="arg5"><see cref="string"/></param>
        public ValidatorAccessTokenValidator(int? arg0, Java.Util.Set arg1, string arg2, Org.Jose4j.Keys.Resolvers.VerificationKeyResolver arg3, string arg4, string arg5)
            : base(arg0, arg1, arg2, arg3, arg4, arg5)
        {
        }

        #endregion

        #region Class/Interface conversion operators
        /// <summary>
        /// Converter from <see cref="Org.Apache.Kafka.Common.Security.Oauthbearer.Internals.Secured.ValidatorAccessTokenValidator"/> to <see cref="Org.Apache.Kafka.Common.Security.Oauthbearer.Internals.Secured.AccessTokenValidator"/>
        /// </summary>
        public static implicit operator Org.Apache.Kafka.Common.Security.Oauthbearer.Internals.Secured.AccessTokenValidator(Org.Apache.Kafka.Common.Security.Oauthbearer.Internals.Secured.ValidatorAccessTokenValidator t) => t.Cast<Org.Apache.Kafka.Common.Security.Oauthbearer.Internals.Secured.AccessTokenValidator>();

        #endregion

        #region Fields

        #endregion

        #region Static methods

        #endregion

        #region Instance methods
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/security/oauthbearer/internals/secured/ValidatorAccessTokenValidator.html#validate(java.lang.String)"/>
        /// </summary>
        /// <param name="arg0"><see cref="string"/></param>
        /// <returns><see cref="Org.Apache.Kafka.Common.Security.Oauthbearer.OAuthBearerToken"/></returns>
        /// <exception cref="Org.Apache.Kafka.Common.Security.Oauthbearer.Internals.Secured.ValidateException"/>
        public Org.Apache.Kafka.Common.Security.Oauthbearer.OAuthBearerToken Validate(string arg0)
        {
            return IExecute<Org.Apache.Kafka.Common.Security.Oauthbearer.OAuthBearerToken>("validate", arg0);
        }

        #endregion

        #region Nested classes
        #region ClaimSupplier
        public partial class ClaimSupplier
        {
            #region Constructors

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields

            #endregion

            #region Static methods

            #endregion

            #region Instance methods
            /// <summary>
            /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/security/oauthbearer/internals/secured/ValidatorAccessTokenValidator.ClaimSupplier.html#get()"/> 
            /// </summary>
            public object Get
            {
                get { return IExecute("get"); }
            }

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

        #region ClaimSupplier<T>
        public partial class ClaimSupplier<T>
        {
            #region Constructors

            #endregion

            #region Class/Interface conversion operators
            /// <summary>
            /// Converter from <see cref="Org.Apache.Kafka.Common.Security.Oauthbearer.Internals.Secured.ValidatorAccessTokenValidator.ClaimSupplier{T}"/> to <see cref="Org.Apache.Kafka.Common.Security.Oauthbearer.Internals.Secured.ValidatorAccessTokenValidator.ClaimSupplier"/>
            /// </summary>
            public static implicit operator Org.Apache.Kafka.Common.Security.Oauthbearer.Internals.Secured.ValidatorAccessTokenValidator.ClaimSupplier(Org.Apache.Kafka.Common.Security.Oauthbearer.Internals.Secured.ValidatorAccessTokenValidator.ClaimSupplier<T> t) => t.Cast<Org.Apache.Kafka.Common.Security.Oauthbearer.Internals.Secured.ValidatorAccessTokenValidator.ClaimSupplier>();

            #endregion

            #region Fields

            #endregion

            #region Static methods

            #endregion

            #region Instance methods
            /// <summary>
            /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/security/oauthbearer/internals/secured/ValidatorAccessTokenValidator.ClaimSupplier.html#get()"/> 
            /// </summary>
            public T Get
            {
                get { return IExecute<T>("get"); }
            }

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

    
        #endregion

        // TODO: complete the class
    }
    #endregion
}