/*
*  Copyright 2023 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 1.5.5.0)
*  using kafka-clients-3.4.0.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Org.Apache.Kafka.Common.Network
{
    #region Selector
    public partial class Selector
    {
        #region Constructors
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/network/Selector.html#%3Cinit%3E(int,long,int,org.apache.kafka.common.metrics.Metrics,org.apache.kafka.common.utils.Time,java.lang.String,java.util.Map,boolean,boolean,org.apache.kafka.common.network.ChannelBuilder,org.apache.kafka.common.memory.MemoryPool,org.apache.kafka.common.utils.LogContext)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <param name="arg1"><see cref="long"/></param>
        /// <param name="arg2"><see cref="int"/></param>
        /// <param name="arg3"><see cref="Org.Apache.Kafka.Common.Metrics.Metrics"/></param>
        /// <param name="arg4"><see cref="Org.Apache.Kafka.Common.Utils.Time"/></param>
        /// <param name="arg5"><see cref="string"/></param>
        /// <param name="arg6"><see cref="Java.Util.Map"/></param>
        /// <param name="arg7"><see cref="bool"/></param>
        /// <param name="arg8"><see cref="bool"/></param>
        /// <param name="arg9"><see cref="Org.Apache.Kafka.Common.Network.ChannelBuilder"/></param>
        /// <param name="arg10"><see cref="Org.Apache.Kafka.Common.Memory.MemoryPool"/></param>
        /// <param name="arg11"><see cref="Org.Apache.Kafka.Common.Utils.LogContext"/></param>
        public Selector(int arg0, long arg1, int arg2, Org.Apache.Kafka.Common.Metrics.Metrics arg3, Org.Apache.Kafka.Common.Utils.Time arg4, string arg5, Java.Util.Map arg6, bool arg7, bool arg8, Org.Apache.Kafka.Common.Network.ChannelBuilder arg9, Org.Apache.Kafka.Common.Memory.MemoryPool arg10, Org.Apache.Kafka.Common.Utils.LogContext arg11)
            : base(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11)
        {
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/network/Selector.html#%3Cinit%3E(int,long,int,org.apache.kafka.common.metrics.Metrics,org.apache.kafka.common.utils.Time,java.lang.String,java.util.Map,boolean,org.apache.kafka.common.network.ChannelBuilder,org.apache.kafka.common.utils.LogContext)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <param name="arg1"><see cref="long"/></param>
        /// <param name="arg2"><see cref="int"/></param>
        /// <param name="arg3"><see cref="Org.Apache.Kafka.Common.Metrics.Metrics"/></param>
        /// <param name="arg4"><see cref="Org.Apache.Kafka.Common.Utils.Time"/></param>
        /// <param name="arg5"><see cref="string"/></param>
        /// <param name="arg6"><see cref="Java.Util.Map"/></param>
        /// <param name="arg7"><see cref="bool"/></param>
        /// <param name="arg8"><see cref="Org.Apache.Kafka.Common.Network.ChannelBuilder"/></param>
        /// <param name="arg9"><see cref="Org.Apache.Kafka.Common.Utils.LogContext"/></param>
        public Selector(int arg0, long arg1, int arg2, Org.Apache.Kafka.Common.Metrics.Metrics arg3, Org.Apache.Kafka.Common.Utils.Time arg4, string arg5, Java.Util.Map arg6, bool arg7, Org.Apache.Kafka.Common.Network.ChannelBuilder arg8, Org.Apache.Kafka.Common.Utils.LogContext arg9)
            : base(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9)
        {
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/network/Selector.html#%3Cinit%3E(int,long,org.apache.kafka.common.metrics.Metrics,org.apache.kafka.common.utils.Time,java.lang.String,java.util.Map,boolean,boolean,org.apache.kafka.common.network.ChannelBuilder,org.apache.kafka.common.memory.MemoryPool,org.apache.kafka.common.utils.LogContext)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <param name="arg1"><see cref="long"/></param>
        /// <param name="arg2"><see cref="Org.Apache.Kafka.Common.Metrics.Metrics"/></param>
        /// <param name="arg3"><see cref="Org.Apache.Kafka.Common.Utils.Time"/></param>
        /// <param name="arg4"><see cref="string"/></param>
        /// <param name="arg5"><see cref="Java.Util.Map"/></param>
        /// <param name="arg6"><see cref="bool"/></param>
        /// <param name="arg7"><see cref="bool"/></param>
        /// <param name="arg8"><see cref="Org.Apache.Kafka.Common.Network.ChannelBuilder"/></param>
        /// <param name="arg9"><see cref="Org.Apache.Kafka.Common.Memory.MemoryPool"/></param>
        /// <param name="arg10"><see cref="Org.Apache.Kafka.Common.Utils.LogContext"/></param>
        public Selector(int arg0, long arg1, Org.Apache.Kafka.Common.Metrics.Metrics arg2, Org.Apache.Kafka.Common.Utils.Time arg3, string arg4, Java.Util.Map arg5, bool arg6, bool arg7, Org.Apache.Kafka.Common.Network.ChannelBuilder arg8, Org.Apache.Kafka.Common.Memory.MemoryPool arg9, Org.Apache.Kafka.Common.Utils.LogContext arg10)
            : base(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10)
        {
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/network/Selector.html#%3Cinit%3E(int,long,org.apache.kafka.common.metrics.Metrics,org.apache.kafka.common.utils.Time,java.lang.String,java.util.Map,boolean,org.apache.kafka.common.network.ChannelBuilder,org.apache.kafka.common.utils.LogContext)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <param name="arg1"><see cref="long"/></param>
        /// <param name="arg2"><see cref="Org.Apache.Kafka.Common.Metrics.Metrics"/></param>
        /// <param name="arg3"><see cref="Org.Apache.Kafka.Common.Utils.Time"/></param>
        /// <param name="arg4"><see cref="string"/></param>
        /// <param name="arg5"><see cref="Java.Util.Map"/></param>
        /// <param name="arg6"><see cref="bool"/></param>
        /// <param name="arg7"><see cref="Org.Apache.Kafka.Common.Network.ChannelBuilder"/></param>
        /// <param name="arg8"><see cref="Org.Apache.Kafka.Common.Utils.LogContext"/></param>
        public Selector(int arg0, long arg1, Org.Apache.Kafka.Common.Metrics.Metrics arg2, Org.Apache.Kafka.Common.Utils.Time arg3, string arg4, Java.Util.Map arg5, bool arg6, Org.Apache.Kafka.Common.Network.ChannelBuilder arg7, Org.Apache.Kafka.Common.Utils.LogContext arg8)
            : base(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8)
        {
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/network/Selector.html#%3Cinit%3E(long,int,org.apache.kafka.common.metrics.Metrics,org.apache.kafka.common.utils.Time,java.lang.String,org.apache.kafka.common.network.ChannelBuilder,org.apache.kafka.common.utils.LogContext)"/>
        /// </summary>
        /// <param name="arg0"><see cref="long"/></param>
        /// <param name="arg1"><see cref="int"/></param>
        /// <param name="arg2"><see cref="Org.Apache.Kafka.Common.Metrics.Metrics"/></param>
        /// <param name="arg3"><see cref="Org.Apache.Kafka.Common.Utils.Time"/></param>
        /// <param name="arg4"><see cref="string"/></param>
        /// <param name="arg5"><see cref="Org.Apache.Kafka.Common.Network.ChannelBuilder"/></param>
        /// <param name="arg6"><see cref="Org.Apache.Kafka.Common.Utils.LogContext"/></param>
        public Selector(long arg0, int arg1, Org.Apache.Kafka.Common.Metrics.Metrics arg2, Org.Apache.Kafka.Common.Utils.Time arg3, string arg4, Org.Apache.Kafka.Common.Network.ChannelBuilder arg5, Org.Apache.Kafka.Common.Utils.LogContext arg6)
            : base(arg0, arg1, arg2, arg3, arg4, arg5, arg6)
        {
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/network/Selector.html#%3Cinit%3E(long,org.apache.kafka.common.metrics.Metrics,org.apache.kafka.common.utils.Time,java.lang.String,org.apache.kafka.common.network.ChannelBuilder,org.apache.kafka.common.utils.LogContext)"/>
        /// </summary>
        /// <param name="arg0"><see cref="long"/></param>
        /// <param name="arg1"><see cref="Org.Apache.Kafka.Common.Metrics.Metrics"/></param>
        /// <param name="arg2"><see cref="Org.Apache.Kafka.Common.Utils.Time"/></param>
        /// <param name="arg3"><see cref="string"/></param>
        /// <param name="arg4"><see cref="Org.Apache.Kafka.Common.Network.ChannelBuilder"/></param>
        /// <param name="arg5"><see cref="Org.Apache.Kafka.Common.Utils.LogContext"/></param>
        public Selector(long arg0, Org.Apache.Kafka.Common.Metrics.Metrics arg1, Org.Apache.Kafka.Common.Utils.Time arg2, string arg3, Org.Apache.Kafka.Common.Network.ChannelBuilder arg4, Org.Apache.Kafka.Common.Utils.LogContext arg5)
            : base(arg0, arg1, arg2, arg3, arg4, arg5)
        {
        }

        #endregion

        #region Class/Interface conversion operators
        /// <summary>
        /// Converter from <see cref="Org.Apache.Kafka.Common.Network.Selector"/> to <see cref="Org.Apache.Kafka.Common.Network.Selectable"/>
        /// </summary>
        public static implicit operator Org.Apache.Kafka.Common.Network.Selectable(Org.Apache.Kafka.Common.Network.Selector t) => t.Cast<Org.Apache.Kafka.Common.Network.Selectable>();
        /// <summary>
        /// Converter from <see cref="Org.Apache.Kafka.Common.Network.Selector"/> to <see cref="Java.Lang.AutoCloseable"/>
        /// </summary>
        public static implicit operator Java.Lang.AutoCloseable(Org.Apache.Kafka.Common.Network.Selector t) => t.Cast<Java.Lang.AutoCloseable>();

        #endregion

        #region Fields
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/network/Selector.html#NO_FAILED_AUTHENTICATION_DELAY"/>
        /// </summary>
        public static int NO_FAILED_AUTHENTICATION_DELAY { get { return SGetField<int>(LocalBridgeClazz, "NO_FAILED_AUTHENTICATION_DELAY"); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/network/Selector.html#NO_IDLE_TIMEOUT_MS"/>
        /// </summary>
        public static long NO_IDLE_TIMEOUT_MS { get { return SGetField<long>(LocalBridgeClazz, "NO_IDLE_TIMEOUT_MS"); } }

        #endregion

        #region Static methods

        #endregion

        #region Instance methods
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/network/Selector.html#channels()"/> 
        /// </summary>
        public Java.Util.List<Org.Apache.Kafka.Common.Network.KafkaChannel> Channels
        {
            get { return IExecute<Java.Util.List<Org.Apache.Kafka.Common.Network.KafkaChannel>>("channels"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/network/Selector.html#completedReceives()"/> 
        /// </summary>
        public Java.Util.Collection<Org.Apache.Kafka.Common.Network.NetworkReceive> CompletedReceives
        {
            get { return IExecute<Java.Util.Collection<Org.Apache.Kafka.Common.Network.NetworkReceive>>("completedReceives"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/network/Selector.html#completedSends()"/> 
        /// </summary>
        public Java.Util.List<Org.Apache.Kafka.Common.Network.NetworkSend> CompletedSends
        {
            get { return IExecute<Java.Util.List<Org.Apache.Kafka.Common.Network.NetworkSend>>("completedSends"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/network/Selector.html#connected()"/> 
        /// </summary>
        public Java.Util.List<string> Connected
        {
            get { return IExecute<Java.Util.List<string>>("connected"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/network/Selector.html#disconnected()"/> 
        /// </summary>
        public Java.Util.Map<string, Org.Apache.Kafka.Common.Network.ChannelState> Disconnected
        {
            get { return IExecute<Java.Util.Map<string, Org.Apache.Kafka.Common.Network.ChannelState>>("disconnected"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/network/Selector.html#keys()"/> 
        /// </summary>
        public Java.Util.Set<Java.Nio.Channels.SelectionKey> Keys
        {
            get { return IExecute<Java.Util.Set<Java.Nio.Channels.SelectionKey>>("keys"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/network/Selector.html#lowestPriorityChannel()"/> 
        /// </summary>
        public Org.Apache.Kafka.Common.Network.KafkaChannel LowestPriorityChannel
        {
            get { return IExecute<Org.Apache.Kafka.Common.Network.KafkaChannel>("lowestPriorityChannel"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/network/Selector.html#isChannelReady(java.lang.String)"/>
        /// </summary>
        /// <param name="arg0"><see cref="string"/></param>
        /// <returns><see cref="bool"/></returns>
        public bool IsChannelReady(string arg0)
        {
            return IExecute<bool>("isChannelReady", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/network/Selector.html#channel(java.lang.String)"/>
        /// </summary>
        /// <param name="arg0"><see cref="string"/></param>
        /// <returns><see cref="Org.Apache.Kafka.Common.Network.KafkaChannel"/></returns>
        public Org.Apache.Kafka.Common.Network.KafkaChannel Channel(string arg0)
        {
            return IExecute<Org.Apache.Kafka.Common.Network.KafkaChannel>("channel", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/network/Selector.html#closingChannel(java.lang.String)"/>
        /// </summary>
        /// <param name="arg0"><see cref="string"/></param>
        /// <returns><see cref="Org.Apache.Kafka.Common.Network.KafkaChannel"/></returns>
        public Org.Apache.Kafka.Common.Network.KafkaChannel ClosingChannel(string arg0)
        {
            return IExecute<Org.Apache.Kafka.Common.Network.KafkaChannel>("closingChannel", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/network/Selector.html#clearCompletedReceives()"/>
        /// </summary>
        public void ClearCompletedReceives()
        {
            IExecute("clearCompletedReceives");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/network/Selector.html#clearCompletedSends()"/>
        /// </summary>
        public void ClearCompletedSends()
        {
            IExecute("clearCompletedSends");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/network/Selector.html#close()"/>
        /// </summary>
        public void Close()
        {
            IExecute("close");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/network/Selector.html#close(java.lang.String)"/>
        /// </summary>
        /// <param name="arg0"><see cref="string"/></param>
        public void Close(string arg0)
        {
            IExecute("close", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/network/Selector.html#connect(java.lang.String,java.net.InetSocketAddress,int,int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="string"/></param>
        /// <param name="arg1"><see cref="Java.Net.InetSocketAddress"/></param>
        /// <param name="arg2"><see cref="int"/></param>
        /// <param name="arg3"><see cref="int"/></param>
        /// <exception cref="Java.Io.IOException"/>
        public void Connect(string arg0, Java.Net.InetSocketAddress arg1, int arg2, int arg3)
        {
            IExecute("connect", arg0, arg1, arg2, arg3);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/network/Selector.html#mute(java.lang.String)"/>
        /// </summary>
        /// <param name="arg0"><see cref="string"/></param>
        public void Mute(string arg0)
        {
            IExecute("mute", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/network/Selector.html#muteAll()"/>
        /// </summary>
        public void MuteAll()
        {
            IExecute("muteAll");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/network/Selector.html#poll(long)"/>
        /// </summary>
        /// <param name="arg0"><see cref="long"/></param>
        /// <exception cref="Java.Io.IOException"/>
        public void Poll(long arg0)
        {
            IExecute("poll", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/network/Selector.html#register(java.lang.String,java.nio.channels.SocketChannel)"/>
        /// </summary>
        /// <param name="arg0"><see cref="string"/></param>
        /// <param name="arg1"><see cref="Java.Nio.Channels.SocketChannel"/></param>
        /// <exception cref="Java.Io.IOException"/>
        public void Register(string arg0, Java.Nio.Channels.SocketChannel arg1)
        {
            IExecute("register", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/network/Selector.html#send(org.apache.kafka.common.network.NetworkSend)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Common.Network.NetworkSend"/></param>
        public void Send(Org.Apache.Kafka.Common.Network.NetworkSend arg0)
        {
            IExecute("send", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/network/Selector.html#unmute(java.lang.String)"/>
        /// </summary>
        /// <param name="arg0"><see cref="string"/></param>
        public void Unmute(string arg0)
        {
            IExecute("unmute", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/network/Selector.html#unmuteAll()"/>
        /// </summary>
        public void UnmuteAll()
        {
            IExecute("unmuteAll");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/network/Selector.html#wakeup()"/>
        /// </summary>
        public void Wakeup()
        {
            IExecute("wakeup");
        }

        #endregion

        #region Nested classes

        #endregion

        // TODO: complete the class
    }
    #endregion
}