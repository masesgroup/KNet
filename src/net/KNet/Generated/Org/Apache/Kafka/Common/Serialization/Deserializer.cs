/*
*  Copyright 2023 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 2.0.0.0)
*  using kafka-clients-3.5.0.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Org.Apache.Kafka.Common.Serialization
{
    #region Deserializer
    public partial class Deserializer
    {
        #region Constructors

        #endregion

        #region Class/Interface conversion operators

        #endregion

        #region Fields

        #endregion

        #region Static methods

        #endregion

        #region Instance methods
        /// <summary>
        /// Handlers initializer for <see cref="Deserializer"/>
        /// </summary>
        protected virtual void InitializeHandlers()
        {
            AddEventHandler("deserialize", new System.EventHandler<CLRListenerEventArgs<CLREventData<string>>>(DeserializeEventHandler)); OnDeserialize = Deserialize;
            AddEventHandler("deserialize3", new System.EventHandler<CLRListenerEventArgs<CLREventData<string>>>(Deserialize3EventHandler)); OnDeserialize = Deserialize;
            AddEventHandler("close", new System.EventHandler<CLRListenerEventArgs<CLREventData>>(CloseEventHandler)); OnClose = Close;
            AddEventHandler("configure", new System.EventHandler<CLRListenerEventArgs<CLREventData<Java.Util.Map>>>(ConfigureEventHandler)); OnConfigure = Configure;

        }

        /// <summary>
        /// Handler for <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.5.0/org/apache/kafka/common/serialization/Deserializer.html#deserialize-java.lang.String-byte[]-"/>
        /// </summary>
        public System.Func<string, byte[], object> OnDeserialize { get; set; }

        void DeserializeEventHandler(object sender, CLRListenerEventArgs<CLREventData<string>> data)
        {
            if (OnDeserialize != null)
            {
                var executionResult = OnDeserialize.Invoke(data.EventData.TypedEventData, data.EventData.GetAt<byte[]>(0));
                data.SetReturnValue(executionResult);
            }
        }

        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.5.0/org/apache/kafka/common/serialization/Deserializer.html#deserialize-java.lang.String-byte[]-"/>
        /// </summary>
        /// <param name="arg0"><see cref="string"/></param>
        /// <param name="arg1"><see cref="byte"/></param>
        /// <returns><see cref="object"/></returns>
        public virtual object Deserialize(string arg0, byte[] arg1)
        {
            return default;
        }

        /// <summary>
        /// Handler for <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.5.0/org/apache/kafka/common/serialization/Deserializer.html#deserialize-java.lang.String-org.apache.kafka.common.header.Headers-byte[]-"/>
        /// </summary>
        public System.Func<string, Org.Apache.Kafka.Common.Header.Headers, byte[], object> OnDeserialize3 { get; set; }

        void Deserialize3EventHandler(object sender, CLRListenerEventArgs<CLREventData<string>> data)
        {
            if (OnDeserialize3 != null)
            {
                var executionResult = OnDeserialize3.Invoke(data.EventData.TypedEventData, data.EventData.GetAt<Org.Apache.Kafka.Common.Header.Headers>(0), data.EventData.GetAt<byte[]>(1));
                data.SetReturnValue(executionResult);
            }
        }

        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.5.0/org/apache/kafka/common/serialization/Deserializer.html#deserialize-java.lang.String-org.apache.kafka.common.header.Headers-byte[]-"/>
        /// </summary>
        /// <param name="arg0"><see cref="string"/></param>
        /// <param name="arg1"><see cref="Org.Apache.Kafka.Common.Header.Headers"/></param>
        /// <param name="arg2"><see cref="byte"/></param>
        /// <returns><see cref="object"/></returns>
        public virtual object Deserialize(string arg0, Org.Apache.Kafka.Common.Header.Headers arg1, byte[] arg2)
        {
            return default;
        }

        /// <summary>
        /// Handler for <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.5.0/org/apache/kafka/common/serialization/Deserializer.html#close--"/>
        /// </summary>
        public System.Action OnClose { get; set; }

        void CloseEventHandler(object sender, CLRListenerEventArgs<CLREventData> data)
        {
            if (OnClose != null) OnClose.Invoke();
        }

        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.5.0/org/apache/kafka/common/serialization/Deserializer.html#close--"/>
        /// </summary>
        public virtual void Close()
        {
            
        }

        /// <summary>
        /// Handler for <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.5.0/org/apache/kafka/common/serialization/Deserializer.html#configure-java.util.Map-boolean-"/>
        /// </summary>
        public System.Action<Java.Util.Map, bool> OnConfigure { get; set; }

        void ConfigureEventHandler(object sender, CLRListenerEventArgs<CLREventData<Java.Util.Map>> data)
        {
            if (OnConfigure != null) OnConfigure.Invoke(data.EventData.TypedEventData, data.EventData.GetAt<bool>(0));
        }

        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.5.0/org/apache/kafka/common/serialization/Deserializer.html#configure-java.util.Map-boolean-"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Util.Map"/></param>
        /// <param name="arg1"><see cref="bool"/></param>
        public virtual void Configure(Java.Util.Map arg0, bool arg1)
        {
            
        }

        #endregion

        #region Nested classes

        #endregion

        // TODO: complete the class
    }
    #endregion

    #region IDeserializer<T>
    /// <summary>
    /// .NET interface for org.mases.knet.generated.org.apache.kafka.common.serialization.Deserializer implementing <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.5.0/org/apache/kafka/common/serialization/Deserializer.html"/>
    /// </summary>
    public partial interface IDeserializer<T>
    {
        #region Instance methods

        #endregion

        #region Nested classes

        #endregion

        // TODO: complete the class
    }
    #endregion

    #region Deserializer<T>
    public partial class Deserializer<T> : Org.Apache.Kafka.Common.Serialization.IDeserializer<T>
    {
        #region Constructors

        #endregion

        #region Class/Interface conversion operators

        #endregion

        #region Fields

        #endregion

        #region Static methods

        #endregion

        #region Instance methods
        /// <summary>
        /// Handlers initializer for <see cref="Deserializer"/>
        /// </summary>
        protected virtual void InitializeHandlers()
        {
            AddEventHandler("deserialize", new System.EventHandler<CLRListenerEventArgs<CLREventData<string>>>(DeserializeEventHandler)); OnDeserialize = Deserialize;
            AddEventHandler("deserialize3", new System.EventHandler<CLRListenerEventArgs<CLREventData<string>>>(Deserialize3EventHandler)); OnDeserialize = Deserialize;
            AddEventHandler("close", new System.EventHandler<CLRListenerEventArgs<CLREventData>>(CloseEventHandler)); OnClose = Close;
            AddEventHandler("configure", new System.EventHandler<CLRListenerEventArgs<CLREventData<Java.Util.Map<string, object>>>>(ConfigureEventHandler)); OnConfigure = Configure;

        }

        /// <summary>
        /// Handler for <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.5.0/org/apache/kafka/common/serialization/Deserializer.html#deserialize-java.lang.String-byte[]-"/>
        /// </summary>
        public System.Func<string, byte[], T> OnDeserialize { get; set; }

        void DeserializeEventHandler(object sender, CLRListenerEventArgs<CLREventData<string>> data)
        {
            if (OnDeserialize != null)
            {
                var executionResult = OnDeserialize.Invoke(data.EventData.TypedEventData, data.EventData.GetAt<byte[]>(0));
                data.SetReturnValue(executionResult);
            }
        }

        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.5.0/org/apache/kafka/common/serialization/Deserializer.html#deserialize-java.lang.String-byte[]-"/>
        /// </summary>
        /// <param name="arg0"><see cref="string"/></param>
        /// <param name="arg1"><see cref="byte"/></param>
        /// <returns><typeparamref name="T"/></returns>
        public virtual T Deserialize(string arg0, byte[] arg1)
        {
            return default;
        }

        /// <summary>
        /// Handler for <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.5.0/org/apache/kafka/common/serialization/Deserializer.html#deserialize-java.lang.String-org.apache.kafka.common.header.Headers-byte[]-"/>
        /// </summary>
        public System.Func<string, Org.Apache.Kafka.Common.Header.Headers, byte[], T> OnDeserialize3 { get; set; }

        void Deserialize3EventHandler(object sender, CLRListenerEventArgs<CLREventData<string>> data)
        {
            if (OnDeserialize3 != null)
            {
                var executionResult = OnDeserialize3.Invoke(data.EventData.TypedEventData, data.EventData.GetAt<Org.Apache.Kafka.Common.Header.Headers>(0), data.EventData.GetAt<byte[]>(1));
                data.SetReturnValue(executionResult);
            }
        }

        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.5.0/org/apache/kafka/common/serialization/Deserializer.html#deserialize-java.lang.String-org.apache.kafka.common.header.Headers-byte[]-"/>
        /// </summary>
        /// <param name="arg0"><see cref="string"/></param>
        /// <param name="arg1"><see cref="Org.Apache.Kafka.Common.Header.Headers"/></param>
        /// <param name="arg2"><see cref="byte"/></param>
        /// <returns><typeparamref name="T"/></returns>
        public virtual T Deserialize(string arg0, Org.Apache.Kafka.Common.Header.Headers arg1, byte[] arg2)
        {
            return default;
        }

        /// <summary>
        /// Handler for <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.5.0/org/apache/kafka/common/serialization/Deserializer.html#close--"/>
        /// </summary>
        public System.Action OnClose { get; set; }

        void CloseEventHandler(object sender, CLRListenerEventArgs<CLREventData> data)
        {
            if (OnClose != null) OnClose.Invoke();
        }

        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.5.0/org/apache/kafka/common/serialization/Deserializer.html#close--"/>
        /// </summary>
        public virtual void Close()
        {
            
        }

        /// <summary>
        /// Handler for <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.5.0/org/apache/kafka/common/serialization/Deserializer.html#configure-java.util.Map-boolean-"/>
        /// </summary>
        public System.Action<Java.Util.Map<string, object>, bool> OnConfigure { get; set; }

        void ConfigureEventHandler(object sender, CLRListenerEventArgs<CLREventData<Java.Util.Map<string, object>>> data)
        {
            if (OnConfigure != null) OnConfigure.Invoke(data.EventData.TypedEventData, data.EventData.GetAt<bool>(0));
        }

        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.5.0/org/apache/kafka/common/serialization/Deserializer.html#configure-java.util.Map-boolean-"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Util.Map"/></param>
        /// <param name="arg1"><see cref="bool"/></param>
        public virtual void Configure(Java.Util.Map<string, object> arg0, bool arg1)
        {
            
        }

        #endregion

        #region Nested classes

        #endregion

        // TODO: complete the class
    }
    #endregion
}