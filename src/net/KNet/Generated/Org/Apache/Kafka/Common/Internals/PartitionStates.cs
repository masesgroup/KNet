/*
*  Copyright 2023 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 1.5.5.0)
*  using kafka-clients-3.4.0.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Org.Apache.Kafka.Common.Internals
{
    #region PartitionStates
    public partial class PartitionStates
    {
        #region Constructors

        #endregion

        #region Class/Interface conversion operators

        #endregion

        #region Fields

        #endregion

        #region Static methods

        #endregion

        #region Instance methods
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/internals/PartitionStates.html#partitionSet()"/> 
        /// </summary>
        public Java.Util.Set PartitionSet
        {
            get { return IExecute<Java.Util.Set>("partitionSet"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/internals/PartitionStates.html#partitionStateMap()"/> 
        /// </summary>
        public Java.Util.Map PartitionStateMap
        {
            get { return IExecute<Java.Util.Map>("partitionStateMap"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/internals/PartitionStates.html#partitionStateValues()"/> 
        /// </summary>
        public Java.Util.List PartitionStateValues
        {
            get { return IExecute<Java.Util.List>("partitionStateValues"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/internals/PartitionStates.html#size()"/> 
        /// </summary>
        public int Size
        {
            get { return IExecute<int>("size"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/internals/PartitionStates.html#stateIterator()"/> 
        /// </summary>
        public Java.Util.Iterator StateIterator
        {
            get { return IExecute<Java.Util.Iterator>("stateIterator"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/internals/PartitionStates.html#contains(org.apache.kafka.common.TopicPartition)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Common.TopicPartition"/></param>
        /// <returns><see cref="bool"/></returns>
        public bool Contains(Org.Apache.Kafka.Common.TopicPartition arg0)
        {
            return IExecute<bool>("contains", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/internals/PartitionStates.html#stateValue(org.apache.kafka.common.TopicPartition)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Common.TopicPartition"/></param>
        /// <returns><see cref="object"/></returns>
        public object StateValue(Org.Apache.Kafka.Common.TopicPartition arg0)
        {
            return IExecute("stateValue", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/internals/PartitionStates.html#clear()"/>
        /// </summary>
        public void Clear()
        {
            IExecute("clear");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/internals/PartitionStates.html#forEach(java.util.function.BiConsumer)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Util.Function.BiConsumer"/></param>
        public void ForEach(Java.Util.Function.BiConsumer arg0)
        {
            IExecute("forEach", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/internals/PartitionStates.html#moveToEnd(org.apache.kafka.common.TopicPartition)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Common.TopicPartition"/></param>
        public void MoveToEnd(Org.Apache.Kafka.Common.TopicPartition arg0)
        {
            IExecute("moveToEnd", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/internals/PartitionStates.html#remove(org.apache.kafka.common.TopicPartition)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Common.TopicPartition"/></param>
        public void Remove(Org.Apache.Kafka.Common.TopicPartition arg0)
        {
            IExecute("remove", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/internals/PartitionStates.html#set(java.util.Map)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Util.Map"/></param>
        public void Set(Java.Util.Map arg0)
        {
            IExecute("set", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/internals/PartitionStates.html#update(org.apache.kafka.common.TopicPartition,java.lang.Object)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Common.TopicPartition"/></param>
        /// <param name="arg1"><see cref="object"/></param>
        public void Update(Org.Apache.Kafka.Common.TopicPartition arg0, object arg1)
        {
            IExecute("update", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/internals/PartitionStates.html#updateAndMoveToEnd(org.apache.kafka.common.TopicPartition,java.lang.Object)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Common.TopicPartition"/></param>
        /// <param name="arg1"><see cref="object"/></param>
        public void UpdateAndMoveToEnd(Org.Apache.Kafka.Common.TopicPartition arg0, object arg1)
        {
            IExecute("updateAndMoveToEnd", arg0, arg1);
        }

        #endregion

        #region Nested classes
        #region PartitionState
        public partial class PartitionState
        {
            #region Constructors
            /// <summary>
            /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/internals/PartitionStates.PartitionState.html#%3Cinit%3E(org.apache.kafka.common.TopicPartition,java.lang.Object)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Org.Apache.Kafka.Common.TopicPartition"/></param>
            /// <param name="arg1"><see cref="object"/></param>
            public PartitionState(Org.Apache.Kafka.Common.TopicPartition arg0, object arg1)
                : base(arg0, arg1)
            {
            }

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields

            #endregion

            #region Static methods

            #endregion

            #region Instance methods
            /// <summary>
            /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/internals/PartitionStates.PartitionState.html#topicPartition()"/> 
            /// </summary>
            public Org.Apache.Kafka.Common.TopicPartition TopicPartition
            {
                get { return IExecute<Org.Apache.Kafka.Common.TopicPartition>("topicPartition"); }
            }
            /// <summary>
            /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/internals/PartitionStates.PartitionState.html#value()"/> 
            /// </summary>
            public object Value
            {
                get { return IExecute("value"); }
            }

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

        #region PartitionState<S>
        public partial class PartitionState<S>
        {
            #region Constructors
            /// <summary>
            /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/internals/PartitionStates.PartitionState.html#%3Cinit%3E(org.apache.kafka.common.TopicPartition,java.lang.Object)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Org.Apache.Kafka.Common.TopicPartition"/></param>
            /// <param name="arg1"><typeparamref name="S"/></param>
            public PartitionState(Org.Apache.Kafka.Common.TopicPartition arg0, S arg1)
                : base(arg0, arg1)
            {
            }

            #endregion

            #region Class/Interface conversion operators
            /// <summary>
            /// Converter from <see cref="Org.Apache.Kafka.Common.Internals.PartitionStates.PartitionState{S}"/> to <see cref="Org.Apache.Kafka.Common.Internals.PartitionStates.PartitionState"/>
            /// </summary>
            public static implicit operator Org.Apache.Kafka.Common.Internals.PartitionStates.PartitionState(Org.Apache.Kafka.Common.Internals.PartitionStates.PartitionState<S> t) => t.Cast<Org.Apache.Kafka.Common.Internals.PartitionStates.PartitionState>();

            #endregion

            #region Fields

            #endregion

            #region Static methods

            #endregion

            #region Instance methods
            /// <summary>
            /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/internals/PartitionStates.PartitionState.html#topicPartition()"/> 
            /// </summary>
            public Org.Apache.Kafka.Common.TopicPartition TopicPartition
            {
                get { return IExecute<Org.Apache.Kafka.Common.TopicPartition>("topicPartition"); }
            }
            /// <summary>
            /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/internals/PartitionStates.PartitionState.html#value()"/> 
            /// </summary>
            public S Value
            {
                get { return IExecute<S>("value"); }
            }

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

    
        #endregion

        // TODO: complete the class
    }
    #endregion

    #region PartitionStates<S>
    public partial class PartitionStates<S>
    {
        #region Constructors

        #endregion

        #region Class/Interface conversion operators
        /// <summary>
        /// Converter from <see cref="Org.Apache.Kafka.Common.Internals.PartitionStates{S}"/> to <see cref="Org.Apache.Kafka.Common.Internals.PartitionStates"/>
        /// </summary>
        public static implicit operator Org.Apache.Kafka.Common.Internals.PartitionStates(Org.Apache.Kafka.Common.Internals.PartitionStates<S> t) => t.Cast<Org.Apache.Kafka.Common.Internals.PartitionStates>();

        #endregion

        #region Fields

        #endregion

        #region Static methods

        #endregion

        #region Instance methods
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/internals/PartitionStates.html#partitionSet()"/> 
        /// </summary>
        public Java.Util.Set<Org.Apache.Kafka.Common.TopicPartition> PartitionSet
        {
            get { return IExecute<Java.Util.Set<Org.Apache.Kafka.Common.TopicPartition>>("partitionSet"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/internals/PartitionStates.html#partitionStateMap()"/> 
        /// </summary>
        public Java.Util.Map<Org.Apache.Kafka.Common.TopicPartition, S> PartitionStateMap
        {
            get { return IExecute<Java.Util.Map<Org.Apache.Kafka.Common.TopicPartition, S>>("partitionStateMap"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/internals/PartitionStates.html#partitionStateValues()"/> 
        /// </summary>
        public Java.Util.List<S> PartitionStateValues
        {
            get { return IExecute<Java.Util.List<S>>("partitionStateValues"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/internals/PartitionStates.html#size()"/> 
        /// </summary>
        public int Size
        {
            get { return IExecute<int>("size"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/internals/PartitionStates.html#stateIterator()"/> 
        /// </summary>
        public Java.Util.Iterator<S> StateIterator
        {
            get { return IExecute<Java.Util.Iterator<S>>("stateIterator"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/internals/PartitionStates.html#contains(org.apache.kafka.common.TopicPartition)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Common.TopicPartition"/></param>
        /// <returns><see cref="bool"/></returns>
        public bool Contains(Org.Apache.Kafka.Common.TopicPartition arg0)
        {
            return IExecute<bool>("contains", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/internals/PartitionStates.html#stateValue(org.apache.kafka.common.TopicPartition)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Common.TopicPartition"/></param>
        /// <returns><typeparamref name="S"/></returns>
        public S StateValue(Org.Apache.Kafka.Common.TopicPartition arg0)
        {
            return IExecute<S>("stateValue", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/internals/PartitionStates.html#clear()"/>
        /// </summary>
        public void Clear()
        {
            IExecute("clear");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/internals/PartitionStates.html#forEach(java.util.function.BiConsumer)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Util.Function.BiConsumer"/></param>
        public void ForEach(Java.Util.Function.BiConsumer<Org.Apache.Kafka.Common.TopicPartition, S> arg0)
        {
            IExecute("forEach", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/internals/PartitionStates.html#moveToEnd(org.apache.kafka.common.TopicPartition)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Common.TopicPartition"/></param>
        public void MoveToEnd(Org.Apache.Kafka.Common.TopicPartition arg0)
        {
            IExecute("moveToEnd", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/internals/PartitionStates.html#remove(org.apache.kafka.common.TopicPartition)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Common.TopicPartition"/></param>
        public void Remove(Org.Apache.Kafka.Common.TopicPartition arg0)
        {
            IExecute("remove", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/internals/PartitionStates.html#set(java.util.Map)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Util.Map"/></param>
        public void Set(Java.Util.Map<Org.Apache.Kafka.Common.TopicPartition, S> arg0)
        {
            IExecute("set", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/internals/PartitionStates.html#update(org.apache.kafka.common.TopicPartition,java.lang.Object)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Common.TopicPartition"/></param>
        /// <param name="arg1"><typeparamref name="S"/></param>
        public void Update(Org.Apache.Kafka.Common.TopicPartition arg0, S arg1)
        {
            IExecute("update", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/internals/PartitionStates.html#updateAndMoveToEnd(org.apache.kafka.common.TopicPartition,java.lang.Object)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Common.TopicPartition"/></param>
        /// <param name="arg1"><typeparamref name="S"/></param>
        public void UpdateAndMoveToEnd(Org.Apache.Kafka.Common.TopicPartition arg0, S arg1)
        {
            IExecute("updateAndMoveToEnd", arg0, arg1);
        }

        #endregion

        #region Nested classes

        #endregion

        // TODO: complete the class
    }
    #endregion
}