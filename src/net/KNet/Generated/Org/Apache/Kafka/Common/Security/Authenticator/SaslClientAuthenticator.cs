/*
*  Copyright (c) 2021-2025 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 2.6.3.0)
*  using kafka-clients-4.0.0.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Org.Apache.Kafka.Common.Security.Authenticator
{
    #region SaslClientAuthenticator declaration
    /// <summary>
    /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/4.0.0/org/apache/kafka/common/security/authenticator/SaslClientAuthenticator.html"/>
    /// </summary>
    public partial class SaslClientAuthenticator : MASES.JCOBridge.C2JBridge.JVMBridgeBase<SaslClientAuthenticator>
    {
        const string _bridgeClassName = "org.apache.kafka.common.security.authenticator.SaslClientAuthenticator";
        /// <summary>
        /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
        /// </summary>
        public SaslClientAuthenticator() { }
        /// <summary>
        /// Internal constructor: used internally from JCOBridge
        /// </summary>
        [global::System.Obsolete("This public initializer is needed for JCOBridge internal use, other uses can produce unidentible behaviors.")]
        public SaslClientAuthenticator(IJVMBridgeBaseInitializer initializer) : base(initializer) { }
        /// <summary>
        /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
        /// </summary>
        public SaslClientAuthenticator(params object[] args) : base(args) { }

        private static readonly global::System.Exception _LocalBridgeClazzException = null;
        private static readonly MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType _LocalBridgeClazz = JVMBridgeBase.ClazzOf(_bridgeClassName, out _LocalBridgeClazzException, false);
        private static MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType LocalBridgeClazz => _LocalBridgeClazz ?? throw _LocalBridgeClazzException ?? new global::System.InvalidOperationException($"Class {_bridgeClassName} was not found.");

        /// <inheritdoc/>
        public override string BridgeClassName => _bridgeClassName;
        /// <inheritdoc/>
        public override bool IsBridgeAbstract => false;
        /// <inheritdoc/>
        public override bool IsBridgeCloseable => true;
        /// <inheritdoc/>
        public override bool IsBridgeInterface => false;
        /// <inheritdoc/>
        public override bool IsBridgeStatic => false;

        // TODO: complete the class
        #region SaslState declaration
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/4.0.0/org/apache/kafka/common/security/authenticator/SaslClientAuthenticator.SaslState.html"/>
        /// </summary>
        public partial class SaslState : Java.Lang.Enum<Org.Apache.Kafka.Common.Security.Authenticator.SaslClientAuthenticator.SaslState>
        {
            const string _bridgeClassName = "org.apache.kafka.common.security.authenticator.SaslClientAuthenticator$SaslState";
            /// <summary>
            /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
            /// </summary>
            public SaslState() { }
            /// <summary>
            /// Internal constructor: used internally from JCOBridge
            /// </summary>
            [global::System.Obsolete("This public initializer is needed for JCOBridge internal use, other uses can produce unidentible behaviors.")]
            public SaslState(IJVMBridgeBaseInitializer initializer) : base(initializer) { }
            /// <summary>
            /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
            /// </summary>
            public SaslState(params object[] args) : base(args) { }

            private static readonly global::System.Exception _LocalBridgeClazzException = null;
            private static readonly MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType _LocalBridgeClazz = JVMBridgeBase.ClazzOf(_bridgeClassName, out _LocalBridgeClazzException, false);
            private static MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType LocalBridgeClazz => _LocalBridgeClazz ?? throw _LocalBridgeClazzException ?? new global::System.InvalidOperationException($"Class {_bridgeClassName} was not found.");

            /// <inheritdoc/>
            public override string BridgeClassName => _bridgeClassName;
            /// <inheritdoc/>
            public override bool IsBridgeAbstract => false;
            /// <inheritdoc/>
            public override bool IsBridgeCloseable => false;
            /// <inheritdoc/>
            public override bool IsBridgeInterface => false;
            /// <inheritdoc/>
            public override bool IsBridgeStatic => true;

            // TODO: complete the class

        }
        #endregion

    
    }
    #endregion

    #region SaslClientAuthenticator implementation
    public partial class SaslClientAuthenticator
    {
        #region Constructors

        #endregion

        #region Class/Interface conversion operators

        #endregion

        #region Fields
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/4.0.0/org/apache/kafka/common/security/authenticator/SaslClientAuthenticator.html#MAX_RESERVED_CORRELATION_ID"/>
        /// </summary>
        public static int MAX_RESERVED_CORRELATION_ID { get { if (!_MAX_RESERVED_CORRELATION_IDReady) { _MAX_RESERVED_CORRELATION_IDContent = SGetField<int>(LocalBridgeClazz, "MAX_RESERVED_CORRELATION_ID"); _MAX_RESERVED_CORRELATION_IDReady = true; } return _MAX_RESERVED_CORRELATION_IDContent; } }
        private static int _MAX_RESERVED_CORRELATION_IDContent = default;
        private static bool _MAX_RESERVED_CORRELATION_IDReady = false; // this is used because in case of generics 
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/4.0.0/org/apache/kafka/common/security/authenticator/SaslClientAuthenticator.html#MIN_RESERVED_CORRELATION_ID"/>
        /// </summary>
        public static int MIN_RESERVED_CORRELATION_ID { get { if (!_MIN_RESERVED_CORRELATION_IDReady) { _MIN_RESERVED_CORRELATION_IDContent = SGetField<int>(LocalBridgeClazz, "MIN_RESERVED_CORRELATION_ID"); _MIN_RESERVED_CORRELATION_IDReady = true; } return _MIN_RESERVED_CORRELATION_IDContent; } }
        private static int _MIN_RESERVED_CORRELATION_IDContent = default;
        private static bool _MIN_RESERVED_CORRELATION_IDReady = false; // this is used because in case of generics 

        #endregion

        #region Static methods
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/4.0.0/org/apache/kafka/common/security/authenticator/SaslClientAuthenticator.html#isReserved(int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <returns><see cref="bool"/></returns>
        public static bool IsReserved(int arg0)
        {
            return SExecuteWithSignature<bool>(LocalBridgeClazz, "isReserved", "(I)Z", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/4.0.0/org/apache/kafka/common/security/authenticator/SaslClientAuthenticator.html#firstPrincipal(javax.security.auth.Subject)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Javax.Security.Auth.Subject"/></param>
        /// <returns><see cref="Java.Lang.String"/></returns>
        public static Java.Lang.String FirstPrincipal(Javax.Security.Auth.Subject arg0)
        {
            return SExecuteWithSignature<Java.Lang.String>(LocalBridgeClazz, "firstPrincipal", "(Ljavax/security/auth/Subject;)Ljava/lang/String;", arg0);
        }

        #endregion

        #region Instance methods
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/4.0.0/org/apache/kafka/common/security/authenticator/SaslClientAuthenticator.html#complete()"/>
        /// </summary>
        /// <returns><see cref="bool"/></returns>
        public bool Complete()
        {
            return IExecuteWithSignature<bool>("complete", "()Z");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/4.0.0/org/apache/kafka/common/security/authenticator/SaslClientAuthenticator.html#clientSessionReauthenticationTimeNanos()"/>
        /// </summary>
        /// <returns><see cref="Java.Lang.Long"/></returns>
        public Java.Lang.Long ClientSessionReauthenticationTimeNanos()
        {
            return IExecuteWithSignature<Java.Lang.Long>("clientSessionReauthenticationTimeNanos", "()Ljava/lang/Long;");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/4.0.0/org/apache/kafka/common/security/authenticator/SaslClientAuthenticator.html#reauthenticationLatencyMs()"/>
        /// </summary>
        /// <returns><see cref="Java.Lang.Long"/></returns>
        public Java.Lang.Long ReauthenticationLatencyMs()
        {
            return IExecuteWithSignature<Java.Lang.Long>("reauthenticationLatencyMs", "()Ljava/lang/Long;");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/4.0.0/org/apache/kafka/common/security/authenticator/SaslClientAuthenticator.html#principalSerde()"/>
        /// </summary>
        /// <returns><see cref="Java.Util.Optional"/></returns>
        public Java.Util.Optional<Org.Apache.Kafka.Common.Security.Auth.KafkaPrincipalSerde> PrincipalSerde()
        {
            return IExecuteWithSignature<Java.Util.Optional<Org.Apache.Kafka.Common.Security.Auth.KafkaPrincipalSerde>>("principalSerde", "()Ljava/util/Optional;");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/4.0.0/org/apache/kafka/common/security/authenticator/SaslClientAuthenticator.html#principal()"/>
        /// </summary>
        /// <returns><see cref="Org.Apache.Kafka.Common.Security.Auth.KafkaPrincipal"/></returns>
        public Org.Apache.Kafka.Common.Security.Auth.KafkaPrincipal Principal()
        {
            return IExecuteWithSignature<Org.Apache.Kafka.Common.Security.Auth.KafkaPrincipal>("principal", "()Lorg/apache/kafka/common/security/auth/KafkaPrincipal;");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/4.0.0/org/apache/kafka/common/security/authenticator/SaslClientAuthenticator.html#authenticate()"/>
        /// </summary>
        /// <exception cref="Java.Io.IOException"/>
        public void Authenticate()
        {
            IExecuteWithSignature("authenticate", "()V");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/4.0.0/org/apache/kafka/common/security/authenticator/SaslClientAuthenticator.html#close()"/>
        /// </summary>
        /// <exception cref="Java.Io.IOException"/>
        public void Close()
        {
            IExecuteWithSignature("close", "()V");
        }

        #endregion

        #region Nested classes
        #region SaslState implementation
        public partial class SaslState
        {
            #region Constructors

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields
            /// <summary>
            /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/4.0.0/org/apache/kafka/common/security/authenticator/SaslClientAuthenticator.SaslState.html#CLIENT_COMPLETE"/>
            /// </summary>
            public static Org.Apache.Kafka.Common.Security.Authenticator.SaslClientAuthenticator.SaslState CLIENT_COMPLETE { get { if (!_CLIENT_COMPLETEReady) { _CLIENT_COMPLETEContent = SGetField<Org.Apache.Kafka.Common.Security.Authenticator.SaslClientAuthenticator.SaslState>(LocalBridgeClazz, "CLIENT_COMPLETE"); _CLIENT_COMPLETEReady = true; } return _CLIENT_COMPLETEContent; } }
            private static Org.Apache.Kafka.Common.Security.Authenticator.SaslClientAuthenticator.SaslState _CLIENT_COMPLETEContent = default;
            private static bool _CLIENT_COMPLETEReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/4.0.0/org/apache/kafka/common/security/authenticator/SaslClientAuthenticator.SaslState.html#COMPLETE"/>
            /// </summary>
            public static Org.Apache.Kafka.Common.Security.Authenticator.SaslClientAuthenticator.SaslState COMPLETE { get { if (!_COMPLETEReady) { _COMPLETEContent = SGetField<Org.Apache.Kafka.Common.Security.Authenticator.SaslClientAuthenticator.SaslState>(LocalBridgeClazz, "COMPLETE"); _COMPLETEReady = true; } return _COMPLETEContent; } }
            private static Org.Apache.Kafka.Common.Security.Authenticator.SaslClientAuthenticator.SaslState _COMPLETEContent = default;
            private static bool _COMPLETEReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/4.0.0/org/apache/kafka/common/security/authenticator/SaslClientAuthenticator.SaslState.html#FAILED"/>
            /// </summary>
            public static Org.Apache.Kafka.Common.Security.Authenticator.SaslClientAuthenticator.SaslState FAILED { get { if (!_FAILEDReady) { _FAILEDContent = SGetField<Org.Apache.Kafka.Common.Security.Authenticator.SaslClientAuthenticator.SaslState>(LocalBridgeClazz, "FAILED"); _FAILEDReady = true; } return _FAILEDContent; } }
            private static Org.Apache.Kafka.Common.Security.Authenticator.SaslClientAuthenticator.SaslState _FAILEDContent = default;
            private static bool _FAILEDReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/4.0.0/org/apache/kafka/common/security/authenticator/SaslClientAuthenticator.SaslState.html#INITIAL"/>
            /// </summary>
            public static Org.Apache.Kafka.Common.Security.Authenticator.SaslClientAuthenticator.SaslState INITIAL { get { if (!_INITIALReady) { _INITIALContent = SGetField<Org.Apache.Kafka.Common.Security.Authenticator.SaslClientAuthenticator.SaslState>(LocalBridgeClazz, "INITIAL"); _INITIALReady = true; } return _INITIALContent; } }
            private static Org.Apache.Kafka.Common.Security.Authenticator.SaslClientAuthenticator.SaslState _INITIALContent = default;
            private static bool _INITIALReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/4.0.0/org/apache/kafka/common/security/authenticator/SaslClientAuthenticator.SaslState.html#INTERMEDIATE"/>
            /// </summary>
            public static Org.Apache.Kafka.Common.Security.Authenticator.SaslClientAuthenticator.SaslState INTERMEDIATE { get { if (!_INTERMEDIATEReady) { _INTERMEDIATEContent = SGetField<Org.Apache.Kafka.Common.Security.Authenticator.SaslClientAuthenticator.SaslState>(LocalBridgeClazz, "INTERMEDIATE"); _INTERMEDIATEReady = true; } return _INTERMEDIATEContent; } }
            private static Org.Apache.Kafka.Common.Security.Authenticator.SaslClientAuthenticator.SaslState _INTERMEDIATEContent = default;
            private static bool _INTERMEDIATEReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/4.0.0/org/apache/kafka/common/security/authenticator/SaslClientAuthenticator.SaslState.html#REAUTH_INITIAL"/>
            /// </summary>
            public static Org.Apache.Kafka.Common.Security.Authenticator.SaslClientAuthenticator.SaslState REAUTH_INITIAL { get { if (!_REAUTH_INITIALReady) { _REAUTH_INITIALContent = SGetField<Org.Apache.Kafka.Common.Security.Authenticator.SaslClientAuthenticator.SaslState>(LocalBridgeClazz, "REAUTH_INITIAL"); _REAUTH_INITIALReady = true; } return _REAUTH_INITIALContent; } }
            private static Org.Apache.Kafka.Common.Security.Authenticator.SaslClientAuthenticator.SaslState _REAUTH_INITIALContent = default;
            private static bool _REAUTH_INITIALReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/4.0.0/org/apache/kafka/common/security/authenticator/SaslClientAuthenticator.SaslState.html#REAUTH_PROCESS_ORIG_APIVERSIONS_RESPONSE"/>
            /// </summary>
            public static Org.Apache.Kafka.Common.Security.Authenticator.SaslClientAuthenticator.SaslState REAUTH_PROCESS_ORIG_APIVERSIONS_RESPONSE { get { if (!_REAUTH_PROCESS_ORIG_APIVERSIONS_RESPONSEReady) { _REAUTH_PROCESS_ORIG_APIVERSIONS_RESPONSEContent = SGetField<Org.Apache.Kafka.Common.Security.Authenticator.SaslClientAuthenticator.SaslState>(LocalBridgeClazz, "REAUTH_PROCESS_ORIG_APIVERSIONS_RESPONSE"); _REAUTH_PROCESS_ORIG_APIVERSIONS_RESPONSEReady = true; } return _REAUTH_PROCESS_ORIG_APIVERSIONS_RESPONSEContent; } }
            private static Org.Apache.Kafka.Common.Security.Authenticator.SaslClientAuthenticator.SaslState _REAUTH_PROCESS_ORIG_APIVERSIONS_RESPONSEContent = default;
            private static bool _REAUTH_PROCESS_ORIG_APIVERSIONS_RESPONSEReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/4.0.0/org/apache/kafka/common/security/authenticator/SaslClientAuthenticator.SaslState.html#REAUTH_RECEIVE_HANDSHAKE_OR_OTHER_RESPONSE"/>
            /// </summary>
            public static Org.Apache.Kafka.Common.Security.Authenticator.SaslClientAuthenticator.SaslState REAUTH_RECEIVE_HANDSHAKE_OR_OTHER_RESPONSE { get { if (!_REAUTH_RECEIVE_HANDSHAKE_OR_OTHER_RESPONSEReady) { _REAUTH_RECEIVE_HANDSHAKE_OR_OTHER_RESPONSEContent = SGetField<Org.Apache.Kafka.Common.Security.Authenticator.SaslClientAuthenticator.SaslState>(LocalBridgeClazz, "REAUTH_RECEIVE_HANDSHAKE_OR_OTHER_RESPONSE"); _REAUTH_RECEIVE_HANDSHAKE_OR_OTHER_RESPONSEReady = true; } return _REAUTH_RECEIVE_HANDSHAKE_OR_OTHER_RESPONSEContent; } }
            private static Org.Apache.Kafka.Common.Security.Authenticator.SaslClientAuthenticator.SaslState _REAUTH_RECEIVE_HANDSHAKE_OR_OTHER_RESPONSEContent = default;
            private static bool _REAUTH_RECEIVE_HANDSHAKE_OR_OTHER_RESPONSEReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/4.0.0/org/apache/kafka/common/security/authenticator/SaslClientAuthenticator.SaslState.html#REAUTH_SEND_HANDSHAKE_REQUEST"/>
            /// </summary>
            public static Org.Apache.Kafka.Common.Security.Authenticator.SaslClientAuthenticator.SaslState REAUTH_SEND_HANDSHAKE_REQUEST { get { if (!_REAUTH_SEND_HANDSHAKE_REQUESTReady) { _REAUTH_SEND_HANDSHAKE_REQUESTContent = SGetField<Org.Apache.Kafka.Common.Security.Authenticator.SaslClientAuthenticator.SaslState>(LocalBridgeClazz, "REAUTH_SEND_HANDSHAKE_REQUEST"); _REAUTH_SEND_HANDSHAKE_REQUESTReady = true; } return _REAUTH_SEND_HANDSHAKE_REQUESTContent; } }
            private static Org.Apache.Kafka.Common.Security.Authenticator.SaslClientAuthenticator.SaslState _REAUTH_SEND_HANDSHAKE_REQUESTContent = default;
            private static bool _REAUTH_SEND_HANDSHAKE_REQUESTReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/4.0.0/org/apache/kafka/common/security/authenticator/SaslClientAuthenticator.SaslState.html#RECEIVE_APIVERSIONS_RESPONSE"/>
            /// </summary>
            public static Org.Apache.Kafka.Common.Security.Authenticator.SaslClientAuthenticator.SaslState RECEIVE_APIVERSIONS_RESPONSE { get { if (!_RECEIVE_APIVERSIONS_RESPONSEReady) { _RECEIVE_APIVERSIONS_RESPONSEContent = SGetField<Org.Apache.Kafka.Common.Security.Authenticator.SaslClientAuthenticator.SaslState>(LocalBridgeClazz, "RECEIVE_APIVERSIONS_RESPONSE"); _RECEIVE_APIVERSIONS_RESPONSEReady = true; } return _RECEIVE_APIVERSIONS_RESPONSEContent; } }
            private static Org.Apache.Kafka.Common.Security.Authenticator.SaslClientAuthenticator.SaslState _RECEIVE_APIVERSIONS_RESPONSEContent = default;
            private static bool _RECEIVE_APIVERSIONS_RESPONSEReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/4.0.0/org/apache/kafka/common/security/authenticator/SaslClientAuthenticator.SaslState.html#RECEIVE_HANDSHAKE_RESPONSE"/>
            /// </summary>
            public static Org.Apache.Kafka.Common.Security.Authenticator.SaslClientAuthenticator.SaslState RECEIVE_HANDSHAKE_RESPONSE { get { if (!_RECEIVE_HANDSHAKE_RESPONSEReady) { _RECEIVE_HANDSHAKE_RESPONSEContent = SGetField<Org.Apache.Kafka.Common.Security.Authenticator.SaslClientAuthenticator.SaslState>(LocalBridgeClazz, "RECEIVE_HANDSHAKE_RESPONSE"); _RECEIVE_HANDSHAKE_RESPONSEReady = true; } return _RECEIVE_HANDSHAKE_RESPONSEContent; } }
            private static Org.Apache.Kafka.Common.Security.Authenticator.SaslClientAuthenticator.SaslState _RECEIVE_HANDSHAKE_RESPONSEContent = default;
            private static bool _RECEIVE_HANDSHAKE_RESPONSEReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/4.0.0/org/apache/kafka/common/security/authenticator/SaslClientAuthenticator.SaslState.html#SEND_APIVERSIONS_REQUEST"/>
            /// </summary>
            public static Org.Apache.Kafka.Common.Security.Authenticator.SaslClientAuthenticator.SaslState SEND_APIVERSIONS_REQUEST { get { if (!_SEND_APIVERSIONS_REQUESTReady) { _SEND_APIVERSIONS_REQUESTContent = SGetField<Org.Apache.Kafka.Common.Security.Authenticator.SaslClientAuthenticator.SaslState>(LocalBridgeClazz, "SEND_APIVERSIONS_REQUEST"); _SEND_APIVERSIONS_REQUESTReady = true; } return _SEND_APIVERSIONS_REQUESTContent; } }
            private static Org.Apache.Kafka.Common.Security.Authenticator.SaslClientAuthenticator.SaslState _SEND_APIVERSIONS_REQUESTContent = default;
            private static bool _SEND_APIVERSIONS_REQUESTReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/4.0.0/org/apache/kafka/common/security/authenticator/SaslClientAuthenticator.SaslState.html#SEND_HANDSHAKE_REQUEST"/>
            /// </summary>
            public static Org.Apache.Kafka.Common.Security.Authenticator.SaslClientAuthenticator.SaslState SEND_HANDSHAKE_REQUEST { get { if (!_SEND_HANDSHAKE_REQUESTReady) { _SEND_HANDSHAKE_REQUESTContent = SGetField<Org.Apache.Kafka.Common.Security.Authenticator.SaslClientAuthenticator.SaslState>(LocalBridgeClazz, "SEND_HANDSHAKE_REQUEST"); _SEND_HANDSHAKE_REQUESTReady = true; } return _SEND_HANDSHAKE_REQUESTContent; } }
            private static Org.Apache.Kafka.Common.Security.Authenticator.SaslClientAuthenticator.SaslState _SEND_HANDSHAKE_REQUESTContent = default;
            private static bool _SEND_HANDSHAKE_REQUESTReady = false; // this is used because in case of generics 

            #endregion

            #region Static methods
            /// <summary>
            /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/4.0.0/org/apache/kafka/common/security/authenticator/SaslClientAuthenticator.SaslState.html#valueOf(java.lang.String)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Java.Lang.String"/></param>
            /// <returns><see cref="Org.Apache.Kafka.Common.Security.Authenticator.SaslClientAuthenticator.SaslState"/></returns>
            public static Org.Apache.Kafka.Common.Security.Authenticator.SaslClientAuthenticator.SaslState ValueOf(Java.Lang.String arg0)
            {
                return SExecuteWithSignature<Org.Apache.Kafka.Common.Security.Authenticator.SaslClientAuthenticator.SaslState>(LocalBridgeClazz, "valueOf", "(Ljava/lang/String;)Lorg/apache/kafka/common/security/authenticator/SaslClientAuthenticator$SaslState;", arg0);
            }
            /// <summary>
            /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/4.0.0/org/apache/kafka/common/security/authenticator/SaslClientAuthenticator.SaslState.html#values()"/>
            /// </summary>
            /// <returns><see cref="Org.Apache.Kafka.Common.Security.Authenticator.SaslClientAuthenticator.SaslState"/></returns>
            public static Org.Apache.Kafka.Common.Security.Authenticator.SaslClientAuthenticator.SaslState[] Values()
            {
                return SExecuteWithSignatureArray<Org.Apache.Kafka.Common.Security.Authenticator.SaslClientAuthenticator.SaslState>(LocalBridgeClazz, "values", "()[Lorg/apache/kafka/common/security/authenticator/SaslClientAuthenticator$SaslState;");
            }

            #endregion

            #region Instance methods

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

    
        #endregion

        // TODO: complete the class
    }
    #endregion
}