/*
*  Copyright 2023 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 1.5.5.0)
*  using kafka-clients-3.4.0.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Org.Apache.Kafka.Common.Acl
{
    #region AclOperation
    public partial class AclOperation
    {
        #region Constructors

        #endregion

        #region Class/Interface conversion operators

        #endregion

        #region Fields
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/acl/AclOperation.html#ALL"/>
        /// </summary>
        public static Org.Apache.Kafka.Common.Acl.AclOperation ALL { get { return SGetField<Org.Apache.Kafka.Common.Acl.AclOperation>(LocalBridgeClazz, "ALL"); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/acl/AclOperation.html#ALTER"/>
        /// </summary>
        public static Org.Apache.Kafka.Common.Acl.AclOperation ALTER { get { return SGetField<Org.Apache.Kafka.Common.Acl.AclOperation>(LocalBridgeClazz, "ALTER"); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/acl/AclOperation.html#ALTER_CONFIGS"/>
        /// </summary>
        public static Org.Apache.Kafka.Common.Acl.AclOperation ALTER_CONFIGS { get { return SGetField<Org.Apache.Kafka.Common.Acl.AclOperation>(LocalBridgeClazz, "ALTER_CONFIGS"); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/acl/AclOperation.html#ANY"/>
        /// </summary>
        public static Org.Apache.Kafka.Common.Acl.AclOperation ANY { get { return SGetField<Org.Apache.Kafka.Common.Acl.AclOperation>(LocalBridgeClazz, "ANY"); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/acl/AclOperation.html#CLUSTER_ACTION"/>
        /// </summary>
        public static Org.Apache.Kafka.Common.Acl.AclOperation CLUSTER_ACTION { get { return SGetField<Org.Apache.Kafka.Common.Acl.AclOperation>(LocalBridgeClazz, "CLUSTER_ACTION"); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/acl/AclOperation.html#CREATE"/>
        /// </summary>
        public static Org.Apache.Kafka.Common.Acl.AclOperation CREATE { get { return SGetField<Org.Apache.Kafka.Common.Acl.AclOperation>(LocalBridgeClazz, "CREATE"); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/acl/AclOperation.html#CREATE_TOKENS"/>
        /// </summary>
        public static Org.Apache.Kafka.Common.Acl.AclOperation CREATE_TOKENS { get { return SGetField<Org.Apache.Kafka.Common.Acl.AclOperation>(LocalBridgeClazz, "CREATE_TOKENS"); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/acl/AclOperation.html#DELETE"/>
        /// </summary>
        public static Org.Apache.Kafka.Common.Acl.AclOperation DELETE { get { return SGetField<Org.Apache.Kafka.Common.Acl.AclOperation>(LocalBridgeClazz, "DELETE"); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/acl/AclOperation.html#DESCRIBE"/>
        /// </summary>
        public static Org.Apache.Kafka.Common.Acl.AclOperation DESCRIBE { get { return SGetField<Org.Apache.Kafka.Common.Acl.AclOperation>(LocalBridgeClazz, "DESCRIBE"); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/acl/AclOperation.html#DESCRIBE_CONFIGS"/>
        /// </summary>
        public static Org.Apache.Kafka.Common.Acl.AclOperation DESCRIBE_CONFIGS { get { return SGetField<Org.Apache.Kafka.Common.Acl.AclOperation>(LocalBridgeClazz, "DESCRIBE_CONFIGS"); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/acl/AclOperation.html#DESCRIBE_TOKENS"/>
        /// </summary>
        public static Org.Apache.Kafka.Common.Acl.AclOperation DESCRIBE_TOKENS { get { return SGetField<Org.Apache.Kafka.Common.Acl.AclOperation>(LocalBridgeClazz, "DESCRIBE_TOKENS"); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/acl/AclOperation.html#IDEMPOTENT_WRITE"/>
        /// </summary>
        public static Org.Apache.Kafka.Common.Acl.AclOperation IDEMPOTENT_WRITE { get { return SGetField<Org.Apache.Kafka.Common.Acl.AclOperation>(LocalBridgeClazz, "IDEMPOTENT_WRITE"); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/acl/AclOperation.html#READ"/>
        /// </summary>
        public static Org.Apache.Kafka.Common.Acl.AclOperation READ { get { return SGetField<Org.Apache.Kafka.Common.Acl.AclOperation>(LocalBridgeClazz, "READ"); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/acl/AclOperation.html#UNKNOWN"/>
        /// </summary>
        public static Org.Apache.Kafka.Common.Acl.AclOperation UNKNOWN { get { return SGetField<Org.Apache.Kafka.Common.Acl.AclOperation>(LocalBridgeClazz, "UNKNOWN"); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/acl/AclOperation.html#WRITE"/>
        /// </summary>
        public static Org.Apache.Kafka.Common.Acl.AclOperation WRITE { get { return SGetField<Org.Apache.Kafka.Common.Acl.AclOperation>(LocalBridgeClazz, "WRITE"); } }

        #endregion

        #region Static methods
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/acl/AclOperation.html#values()"/> 
        /// </summary>
        public static Org.Apache.Kafka.Common.Acl.AclOperation[] Values
        {
            get { return SExecuteArray<Org.Apache.Kafka.Common.Acl.AclOperation>(LocalBridgeClazz, "values"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/acl/AclOperation.html#fromCode(byte)"/>
        /// </summary>
        /// <param name="arg0"><see cref="byte"/></param>
        /// <returns><see cref="Org.Apache.Kafka.Common.Acl.AclOperation"/></returns>
        public static Org.Apache.Kafka.Common.Acl.AclOperation FromCode(byte arg0)
        {
            return SExecute<Org.Apache.Kafka.Common.Acl.AclOperation>(LocalBridgeClazz, "fromCode", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/acl/AclOperation.html#fromString(java.lang.String)"/>
        /// </summary>
        /// <param name="arg0"><see cref="string"/></param>
        /// <returns><see cref="Org.Apache.Kafka.Common.Acl.AclOperation"/></returns>
        /// <exception cref="Java.Lang.IllegalArgumentException"/>
        public static Org.Apache.Kafka.Common.Acl.AclOperation FromString(string arg0)
        {
            return SExecute<Org.Apache.Kafka.Common.Acl.AclOperation>(LocalBridgeClazz, "fromString", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/acl/AclOperation.html#valueOf(java.lang.String)"/>
        /// </summary>
        /// <param name="arg0"><see cref="string"/></param>
        /// <returns><see cref="Org.Apache.Kafka.Common.Acl.AclOperation"/></returns>
        public static Org.Apache.Kafka.Common.Acl.AclOperation ValueOf(string arg0)
        {
            return SExecute<Org.Apache.Kafka.Common.Acl.AclOperation>(LocalBridgeClazz, "valueOf", arg0);
        }

        #endregion

        #region Instance methods
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/acl/AclOperation.html#code()"/> 
        /// </summary>
        public byte Code
        {
            get { return IExecute<byte>("code"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/acl/AclOperation.html#isUnknown()"/> 
        /// </summary>
        public bool IsUnknown
        {
            get { return IExecute<bool>("isUnknown"); }
        }

        #endregion

        #region Nested classes

        #endregion

        // TODO: complete the class
    }
    #endregion
}