/*
*  Copyright 2023 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 1.5.5.0)
*  using kafka-clients-3.4.0.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Org.Apache.Kafka.Common.Security.Scram.Internals
{
    #region ScramFormatter
    public partial class ScramFormatter
    {
        #region Constructors
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/security/scram/internals/ScramFormatter.html#%3Cinit%3E(org.apache.kafka.common.security.scram.internals.ScramMechanism)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Common.Security.Scram.Internals.ScramMechanism"/></param>
        /// <exception cref="Java.Security.NoSuchAlgorithmException"/>
        public ScramFormatter(Org.Apache.Kafka.Common.Security.Scram.Internals.ScramMechanism arg0)
            : base(arg0)
        {
        }

        #endregion

        #region Class/Interface conversion operators

        #endregion

        #region Fields

        #endregion

        #region Static methods
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/security/scram/internals/ScramFormatter.html#normalize(java.lang.String)"/>
        /// </summary>
        /// <param name="arg0"><see cref="string"/></param>
        /// <returns><see cref="byte"/></returns>
        public static byte[] Normalize(string arg0)
        {
            return SExecuteArray<byte>(LocalBridgeClazz, "normalize", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/security/scram/internals/ScramFormatter.html#secureRandomBytes(java.security.SecureRandom)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Security.SecureRandom"/></param>
        /// <returns><see cref="byte"/></returns>
        public static byte[] SecureRandomBytes(Java.Security.SecureRandom arg0)
        {
            return SExecuteArray<byte>(LocalBridgeClazz, "secureRandomBytes", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/security/scram/internals/ScramFormatter.html#toBytes(java.lang.String)"/>
        /// </summary>
        /// <param name="arg0"><see cref="string"/></param>
        /// <returns><see cref="byte"/></returns>
        public static byte[] ToBytes(string arg0)
        {
            return SExecuteArray<byte>(LocalBridgeClazz, "toBytes", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/security/scram/internals/ScramFormatter.html#xor(byte[],byte[])"/>
        /// </summary>
        /// <param name="arg0"><see cref="byte"/></param>
        /// <param name="arg1"><see cref="byte"/></param>
        /// <returns><see cref="byte"/></returns>
        public static byte[] Xor(byte[] arg0, byte[] arg1)
        {
            return SExecuteArray<byte>(LocalBridgeClazz, "xor", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/security/scram/internals/ScramFormatter.html#authMessage(java.lang.String,java.lang.String,java.lang.String)"/>
        /// </summary>
        /// <param name="arg0"><see cref="string"/></param>
        /// <param name="arg1"><see cref="string"/></param>
        /// <param name="arg2"><see cref="string"/></param>
        /// <returns><see cref="string"/></returns>
        public static string AuthMessage(string arg0, string arg1, string arg2)
        {
            return SExecute<string>(LocalBridgeClazz, "authMessage", arg0, arg1, arg2);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/security/scram/internals/ScramFormatter.html#saslName(java.lang.String)"/>
        /// </summary>
        /// <param name="arg0"><see cref="string"/></param>
        /// <returns><see cref="string"/></returns>
        public static string SaslName(string arg0)
        {
            return SExecute<string>(LocalBridgeClazz, "saslName", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/security/scram/internals/ScramFormatter.html#secureRandomString(java.security.SecureRandom)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Security.SecureRandom"/></param>
        /// <returns><see cref="string"/></returns>
        public static string SecureRandomString(Java.Security.SecureRandom arg0)
        {
            return SExecute<string>(LocalBridgeClazz, "secureRandomString", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/security/scram/internals/ScramFormatter.html#username(java.lang.String)"/>
        /// </summary>
        /// <param name="arg0"><see cref="string"/></param>
        /// <returns><see cref="string"/></returns>
        public static string Username(string arg0)
        {
            return SExecute<string>(LocalBridgeClazz, "username", arg0);
        }

        #endregion

        #region Instance methods
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/security/scram/internals/ScramFormatter.html#clientKey(byte[])"/>
        /// </summary>
        /// <param name="arg0"><see cref="byte"/></param>
        /// <returns><see cref="byte"/></returns>
        /// <exception cref="Java.Security.InvalidKeyException"/>
        public byte[] ClientKey(byte[] arg0)
        {
            return IExecuteArray<byte>("clientKey", new object[] { arg0 });
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/security/scram/internals/ScramFormatter.html#clientProof(byte[],org.apache.kafka.common.security.scram.internals.ScramMessages.ClientFirstMessage,org.apache.kafka.common.security.scram.internals.ScramMessages.ServerFirstMessage,org.apache.kafka.common.security.scram.internals.ScramMessages.ClientFinalMessage)"/>
        /// </summary>
        /// <param name="arg0"><see cref="byte"/></param>
        /// <param name="arg1"><see cref="Org.Apache.Kafka.Common.Security.Scram.Internals.ScramMessages.ClientFirstMessage"/></param>
        /// <param name="arg2"><see cref="Org.Apache.Kafka.Common.Security.Scram.Internals.ScramMessages.ServerFirstMessage"/></param>
        /// <param name="arg3"><see cref="Org.Apache.Kafka.Common.Security.Scram.Internals.ScramMessages.ClientFinalMessage"/></param>
        /// <returns><see cref="byte"/></returns>
        /// <exception cref="Java.Security.InvalidKeyException"/>
        public byte[] ClientProof(byte[] arg0, Org.Apache.Kafka.Common.Security.Scram.Internals.ScramMessages.ClientFirstMessage arg1, Org.Apache.Kafka.Common.Security.Scram.Internals.ScramMessages.ServerFirstMessage arg2, Org.Apache.Kafka.Common.Security.Scram.Internals.ScramMessages.ClientFinalMessage arg3)
        {
            return IExecuteArray<byte>("clientProof", arg0, arg1, arg2, arg3);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/security/scram/internals/ScramFormatter.html#clientSignature(byte[],org.apache.kafka.common.security.scram.internals.ScramMessages.ClientFirstMessage,org.apache.kafka.common.security.scram.internals.ScramMessages.ServerFirstMessage,org.apache.kafka.common.security.scram.internals.ScramMessages.ClientFinalMessage)"/>
        /// </summary>
        /// <param name="arg0"><see cref="byte"/></param>
        /// <param name="arg1"><see cref="Org.Apache.Kafka.Common.Security.Scram.Internals.ScramMessages.ClientFirstMessage"/></param>
        /// <param name="arg2"><see cref="Org.Apache.Kafka.Common.Security.Scram.Internals.ScramMessages.ServerFirstMessage"/></param>
        /// <param name="arg3"><see cref="Org.Apache.Kafka.Common.Security.Scram.Internals.ScramMessages.ClientFinalMessage"/></param>
        /// <returns><see cref="byte"/></returns>
        /// <exception cref="Java.Security.InvalidKeyException"/>
        public byte[] ClientSignature(byte[] arg0, Org.Apache.Kafka.Common.Security.Scram.Internals.ScramMessages.ClientFirstMessage arg1, Org.Apache.Kafka.Common.Security.Scram.Internals.ScramMessages.ServerFirstMessage arg2, Org.Apache.Kafka.Common.Security.Scram.Internals.ScramMessages.ClientFinalMessage arg3)
        {
            return IExecuteArray<byte>("clientSignature", arg0, arg1, arg2, arg3);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/security/scram/internals/ScramFormatter.html#hash(byte[])"/>
        /// </summary>
        /// <param name="arg0"><see cref="byte"/></param>
        /// <returns><see cref="byte"/></returns>
        public byte[] Hash(byte[] arg0)
        {
            return IExecuteArray<byte>("hash", new object[] { arg0 });
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/security/scram/internals/ScramFormatter.html#hi(byte[],byte[],int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="byte"/></param>
        /// <param name="arg1"><see cref="byte"/></param>
        /// <param name="arg2"><see cref="int"/></param>
        /// <returns><see cref="byte"/></returns>
        /// <exception cref="Java.Security.InvalidKeyException"/>
        public byte[] Hi(byte[] arg0, byte[] arg1, int arg2)
        {
            return IExecuteArray<byte>("hi", arg0, arg1, arg2);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/security/scram/internals/ScramFormatter.html#hmac(byte[],byte[])"/>
        /// </summary>
        /// <param name="arg0"><see cref="byte"/></param>
        /// <param name="arg1"><see cref="byte"/></param>
        /// <returns><see cref="byte"/></returns>
        /// <exception cref="Java.Security.InvalidKeyException"/>
        public byte[] Hmac(byte[] arg0, byte[] arg1)
        {
            return IExecuteArray<byte>("hmac", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/security/scram/internals/ScramFormatter.html#saltedPassword(java.lang.String,byte[],int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="string"/></param>
        /// <param name="arg1"><see cref="byte"/></param>
        /// <param name="arg2"><see cref="int"/></param>
        /// <returns><see cref="byte"/></returns>
        /// <exception cref="Java.Security.InvalidKeyException"/>
        public byte[] SaltedPassword(string arg0, byte[] arg1, int arg2)
        {
            return IExecuteArray<byte>("saltedPassword", arg0, arg1, arg2);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/security/scram/internals/ScramFormatter.html#secureRandomBytes()"/>
        /// </summary>

        /// <returns><see cref="byte"/></returns>
        public byte[] SecureRandomBytes()
        {
            return IExecuteArray<byte>("secureRandomBytes");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/security/scram/internals/ScramFormatter.html#serverKey(byte[])"/>
        /// </summary>
        /// <param name="arg0"><see cref="byte"/></param>
        /// <returns><see cref="byte"/></returns>
        /// <exception cref="Java.Security.InvalidKeyException"/>
        public byte[] ServerKey(byte[] arg0)
        {
            return IExecuteArray<byte>("serverKey", new object[] { arg0 });
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/security/scram/internals/ScramFormatter.html#serverSignature(byte[],org.apache.kafka.common.security.scram.internals.ScramMessages.ClientFirstMessage,org.apache.kafka.common.security.scram.internals.ScramMessages.ServerFirstMessage,org.apache.kafka.common.security.scram.internals.ScramMessages.ClientFinalMessage)"/>
        /// </summary>
        /// <param name="arg0"><see cref="byte"/></param>
        /// <param name="arg1"><see cref="Org.Apache.Kafka.Common.Security.Scram.Internals.ScramMessages.ClientFirstMessage"/></param>
        /// <param name="arg2"><see cref="Org.Apache.Kafka.Common.Security.Scram.Internals.ScramMessages.ServerFirstMessage"/></param>
        /// <param name="arg3"><see cref="Org.Apache.Kafka.Common.Security.Scram.Internals.ScramMessages.ClientFinalMessage"/></param>
        /// <returns><see cref="byte"/></returns>
        /// <exception cref="Java.Security.InvalidKeyException"/>
        public byte[] ServerSignature(byte[] arg0, Org.Apache.Kafka.Common.Security.Scram.Internals.ScramMessages.ClientFirstMessage arg1, Org.Apache.Kafka.Common.Security.Scram.Internals.ScramMessages.ServerFirstMessage arg2, Org.Apache.Kafka.Common.Security.Scram.Internals.ScramMessages.ClientFinalMessage arg3)
        {
            return IExecuteArray<byte>("serverSignature", arg0, arg1, arg2, arg3);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/security/scram/internals/ScramFormatter.html#storedKey(byte[],byte[])"/>
        /// </summary>
        /// <param name="arg0"><see cref="byte"/></param>
        /// <param name="arg1"><see cref="byte"/></param>
        /// <returns><see cref="byte"/></returns>
        public byte[] StoredKey(byte[] arg0, byte[] arg1)
        {
            return IExecuteArray<byte>("storedKey", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/security/scram/internals/ScramFormatter.html#storedKey(byte[])"/>
        /// </summary>
        /// <param name="arg0"><see cref="byte"/></param>
        /// <returns><see cref="byte"/></returns>
        public byte[] StoredKey(byte[] arg0)
        {
            return IExecuteArray<byte>("storedKey", new object[] { arg0 });
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/security/scram/internals/ScramFormatter.html#secureRandomString()"/>
        /// </summary>

        /// <returns><see cref="string"/></returns>
        public string SecureRandomString()
        {
            return IExecute<string>("secureRandomString");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/security/scram/internals/ScramFormatter.html#generateCredential(byte[],byte[],int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="byte"/></param>
        /// <param name="arg1"><see cref="byte"/></param>
        /// <param name="arg2"><see cref="int"/></param>
        /// <returns><see cref="Org.Apache.Kafka.Common.Security.Scram.ScramCredential"/></returns>
        public Org.Apache.Kafka.Common.Security.Scram.ScramCredential GenerateCredential(byte[] arg0, byte[] arg1, int arg2)
        {
            return IExecute<Org.Apache.Kafka.Common.Security.Scram.ScramCredential>("generateCredential", arg0, arg1, arg2);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/security/scram/internals/ScramFormatter.html#generateCredential(java.lang.String,int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="string"/></param>
        /// <param name="arg1"><see cref="int"/></param>
        /// <returns><see cref="Org.Apache.Kafka.Common.Security.Scram.ScramCredential"/></returns>
        public Org.Apache.Kafka.Common.Security.Scram.ScramCredential GenerateCredential(string arg0, int arg1)
        {
            return IExecute<Org.Apache.Kafka.Common.Security.Scram.ScramCredential>("generateCredential", arg0, arg1);
        }

        #endregion

        #region Nested classes

        #endregion

        // TODO: complete the class
    }
    #endregion
}