/*
*  Copyright 2023 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 1.5.5.0)
*  using kafka-clients-3.4.0.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Org.Apache.Kafka.Common.Requests
{
    #region AbstractRequest
    public partial class AbstractRequest
    {
        #region Constructors
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/requests/AbstractRequest.html#%3Cinit%3E(org.apache.kafka.common.protocol.ApiKeys,short)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Common.Protocol.ApiKeys"/></param>
        /// <param name="arg1"><see cref="short"/></param>
        public AbstractRequest(Org.Apache.Kafka.Common.Protocol.ApiKeys arg0, short arg1)
            : base(arg0, arg1)
        {
        }

        #endregion

        #region Class/Interface conversion operators
        /// <summary>
        /// Converter from <see cref="Org.Apache.Kafka.Common.Requests.AbstractRequest"/> to <see cref="Org.Apache.Kafka.Common.Requests.AbstractRequestResponse"/>
        /// </summary>
        public static implicit operator Org.Apache.Kafka.Common.Requests.AbstractRequestResponse(Org.Apache.Kafka.Common.Requests.AbstractRequest t) => t.Cast<Org.Apache.Kafka.Common.Requests.AbstractRequestResponse>();

        #endregion

        #region Fields

        #endregion

        #region Static methods
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/requests/AbstractRequest.html#parseRequest(org.apache.kafka.common.protocol.ApiKeys,short,java.nio.ByteBuffer)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Common.Protocol.ApiKeys"/></param>
        /// <param name="arg1"><see cref="short"/></param>
        /// <param name="arg2"><see cref="Java.Nio.ByteBuffer"/></param>
        /// <returns><see cref="Org.Apache.Kafka.Common.Requests.RequestAndSize"/></returns>
        public static Org.Apache.Kafka.Common.Requests.RequestAndSize ParseRequest(Org.Apache.Kafka.Common.Protocol.ApiKeys arg0, short arg1, Java.Nio.ByteBuffer arg2)
        {
            return SExecute<Org.Apache.Kafka.Common.Requests.RequestAndSize>(LocalBridgeClazz, "parseRequest", arg0, arg1, arg2);
        }

        #endregion

        #region Instance methods
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/requests/AbstractRequest.html#apiKey()"/> 
        /// </summary>
        public Org.Apache.Kafka.Common.Protocol.ApiKeys ApiKey
        {
            get { return IExecute<Org.Apache.Kafka.Common.Protocol.ApiKeys>("apiKey"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/requests/AbstractRequest.html#serialize()"/> 
        /// </summary>
        public Java.Nio.ByteBuffer Serialize
        {
            get { return IExecute<Java.Nio.ByteBuffer>("serialize"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/requests/AbstractRequest.html#version()"/> 
        /// </summary>
        public short Version
        {
            get { return IExecute<short>("version"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/requests/AbstractRequest.html#getErrorResponse(int,java.lang.Throwable)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <param name="arg1"><see cref="Java.Lang.Throwable"/></param>
        /// <returns><see cref="Org.Apache.Kafka.Common.Requests.AbstractResponse"/></returns>
        public Org.Apache.Kafka.Common.Requests.AbstractResponse GetErrorResponse(int arg0, Java.Lang.Throwable arg1)
        {
            return IExecute<Org.Apache.Kafka.Common.Requests.AbstractResponse>("getErrorResponse", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/requests/AbstractRequest.html#serializeWithHeader(org.apache.kafka.common.requests.RequestHeader)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Common.Requests.RequestHeader"/></param>
        /// <returns><see cref="Java.Nio.ByteBuffer"/></returns>
        public Java.Nio.ByteBuffer SerializeWithHeader(Org.Apache.Kafka.Common.Requests.RequestHeader arg0)
        {
            return IExecute<Java.Nio.ByteBuffer>("serializeWithHeader", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/requests/AbstractRequest.html#toSend(org.apache.kafka.common.requests.RequestHeader)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Common.Requests.RequestHeader"/></param>
        /// <returns><see cref="Org.Apache.Kafka.Common.Network.Send"/></returns>
        public Org.Apache.Kafka.Common.Network.Send ToSend(Org.Apache.Kafka.Common.Requests.RequestHeader arg0)
        {
            return IExecute<Org.Apache.Kafka.Common.Network.Send>("toSend", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/requests/AbstractRequest.html#toString(boolean)"/>
        /// </summary>
        /// <param name="arg0"><see cref="bool"/></param>
        /// <returns><see cref="string"/></returns>
        public string ToString(bool arg0)
        {
            return IExecute<string>("toString", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/requests/AbstractRequest.html#errorCounts(java.lang.Throwable)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.Throwable"/></param>
        /// <returns><see cref="Java.Util.Map"/></returns>
        public Java.Util.Map<Org.Apache.Kafka.Common.Protocol.Errors, int?> ErrorCounts(Java.Lang.Throwable arg0)
        {
            return IExecute<Java.Util.Map<Org.Apache.Kafka.Common.Protocol.Errors, int?>>("errorCounts", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/requests/AbstractRequest.html#getErrorResponse(java.lang.Throwable)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.Throwable"/></param>
        /// <returns><see cref="Org.Apache.Kafka.Common.Requests.AbstractResponse"/></returns>
        public Org.Apache.Kafka.Common.Requests.AbstractResponse GetErrorResponse(Java.Lang.Throwable arg0)
        {
            return IExecute<Org.Apache.Kafka.Common.Requests.AbstractResponse>("getErrorResponse", arg0);
        }

        #endregion

        #region Nested classes
        #region Builder
        public partial class Builder
        {
            #region Constructors
            /// <summary>
            /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/requests/AbstractRequest.Builder.html#%3Cinit%3E(org.apache.kafka.common.protocol.ApiKeys,short,short)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Org.Apache.Kafka.Common.Protocol.ApiKeys"/></param>
            /// <param name="arg1"><see cref="short"/></param>
            /// <param name="arg2"><see cref="short"/></param>
            public Builder(Org.Apache.Kafka.Common.Protocol.ApiKeys arg0, short arg1, short arg2)
                : base(arg0, arg1, arg2)
            {
            }
            /// <summary>
            /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/requests/AbstractRequest.Builder.html#%3Cinit%3E(org.apache.kafka.common.protocol.ApiKeys,short)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Org.Apache.Kafka.Common.Protocol.ApiKeys"/></param>
            /// <param name="arg1"><see cref="short"/></param>
            public Builder(Org.Apache.Kafka.Common.Protocol.ApiKeys arg0, short arg1)
                : base(arg0, arg1)
            {
            }
            /// <summary>
            /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/requests/AbstractRequest.Builder.html#%3Cinit%3E(org.apache.kafka.common.protocol.ApiKeys)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Org.Apache.Kafka.Common.Protocol.ApiKeys"/></param>
            public Builder(Org.Apache.Kafka.Common.Protocol.ApiKeys arg0)
                : base(arg0)
            {
            }

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields

            #endregion

            #region Static methods

            #endregion

            #region Instance methods
            /// <summary>
            /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/requests/AbstractRequest.Builder.html#apiKey()"/> 
            /// </summary>
            public Org.Apache.Kafka.Common.Protocol.ApiKeys ApiKey
            {
                get { return IExecute<Org.Apache.Kafka.Common.Protocol.ApiKeys>("apiKey"); }
            }
            /// <summary>
            /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/requests/AbstractRequest.Builder.html#latestAllowedVersion()"/> 
            /// </summary>
            public short LatestAllowedVersion
            {
                get { return IExecute<short>("latestAllowedVersion"); }
            }
            /// <summary>
            /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/requests/AbstractRequest.Builder.html#oldestAllowedVersion()"/> 
            /// </summary>
            public short OldestAllowedVersion
            {
                get { return IExecute<short>("oldestAllowedVersion"); }
            }
            /// <summary>
            /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/requests/AbstractRequest.Builder.html#build(short)"/>
            /// </summary>
            /// <param name="arg0"><see cref="short"/></param>
            /// <returns><see cref="Org.Apache.Kafka.Common.Requests.AbstractRequest"/></returns>
            public Org.Apache.Kafka.Common.Requests.AbstractRequest Build(short arg0)
            {
                return IExecute<Org.Apache.Kafka.Common.Requests.AbstractRequest>("build", arg0);
            }
            /// <summary>
            /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/requests/AbstractRequest.Builder.html#build()"/>
            /// </summary>

            /// <returns><see cref="Org.Apache.Kafka.Common.Requests.AbstractRequest"/></returns>
            public Org.Apache.Kafka.Common.Requests.AbstractRequest Build()
            {
                return IExecute<Org.Apache.Kafka.Common.Requests.AbstractRequest>("build");
            }

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

        #region Builder<T>
        public partial class Builder<T>
        {
            #region Constructors
            /// <summary>
            /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/requests/AbstractRequest.Builder.html#%3Cinit%3E(org.apache.kafka.common.protocol.ApiKeys,short,short)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Org.Apache.Kafka.Common.Protocol.ApiKeys"/></param>
            /// <param name="arg1"><see cref="short"/></param>
            /// <param name="arg2"><see cref="short"/></param>
            public Builder(Org.Apache.Kafka.Common.Protocol.ApiKeys arg0, short arg1, short arg2)
                : base(arg0, arg1, arg2)
            {
            }
            /// <summary>
            /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/requests/AbstractRequest.Builder.html#%3Cinit%3E(org.apache.kafka.common.protocol.ApiKeys,short)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Org.Apache.Kafka.Common.Protocol.ApiKeys"/></param>
            /// <param name="arg1"><see cref="short"/></param>
            public Builder(Org.Apache.Kafka.Common.Protocol.ApiKeys arg0, short arg1)
                : base(arg0, arg1)
            {
            }
            /// <summary>
            /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/requests/AbstractRequest.Builder.html#%3Cinit%3E(org.apache.kafka.common.protocol.ApiKeys)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Org.Apache.Kafka.Common.Protocol.ApiKeys"/></param>
            public Builder(Org.Apache.Kafka.Common.Protocol.ApiKeys arg0)
                : base(arg0)
            {
            }

            #endregion

            #region Class/Interface conversion operators
            /// <summary>
            /// Converter from <see cref="Org.Apache.Kafka.Common.Requests.AbstractRequest.Builder{T}"/> to <see cref="Org.Apache.Kafka.Common.Requests.AbstractRequest.Builder"/>
            /// </summary>
            public static implicit operator Org.Apache.Kafka.Common.Requests.AbstractRequest.Builder(Org.Apache.Kafka.Common.Requests.AbstractRequest.Builder<T> t) => t.Cast<Org.Apache.Kafka.Common.Requests.AbstractRequest.Builder>();

            #endregion

            #region Fields

            #endregion

            #region Static methods

            #endregion

            #region Instance methods
            /// <summary>
            /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/requests/AbstractRequest.Builder.html#apiKey()"/> 
            /// </summary>
            public Org.Apache.Kafka.Common.Protocol.ApiKeys ApiKey
            {
                get { return IExecute<Org.Apache.Kafka.Common.Protocol.ApiKeys>("apiKey"); }
            }
            /// <summary>
            /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/requests/AbstractRequest.Builder.html#latestAllowedVersion()"/> 
            /// </summary>
            public short LatestAllowedVersion
            {
                get { return IExecute<short>("latestAllowedVersion"); }
            }
            /// <summary>
            /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/requests/AbstractRequest.Builder.html#oldestAllowedVersion()"/> 
            /// </summary>
            public short OldestAllowedVersion
            {
                get { return IExecute<short>("oldestAllowedVersion"); }
            }
            /// <summary>
            /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/requests/AbstractRequest.Builder.html#build(short)"/>
            /// </summary>
            /// <param name="arg0"><see cref="short"/></param>
            /// <returns><typeparamref name="T"/></returns>
            public T Build(short arg0)
            {
                return IExecute<T>("build", arg0);
            }
            /// <summary>
            /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/requests/AbstractRequest.Builder.html#build()"/>
            /// </summary>

            /// <returns><typeparamref name="T"/></returns>
            public T Build()
            {
                return IExecute<T>("build");
            }

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

    
        #endregion

        // TODO: complete the class
    }
    #endregion
}