/*
*  Copyright 2023 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 1.5.5.0)
*  using kafka-clients-3.4.0.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Org.Apache.Kafka.Common.Requests
{
    #region RequestContext
    public partial class RequestContext
    {
        #region Constructors
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/requests/RequestContext.html#%3Cinit%3E(org.apache.kafka.common.requests.RequestHeader,java.lang.String,java.net.InetAddress,org.apache.kafka.common.security.auth.KafkaPrincipal,org.apache.kafka.common.network.ListenerName,org.apache.kafka.common.security.auth.SecurityProtocol,org.apache.kafka.common.network.ClientInformation,boolean,java.util.Optional)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Common.Requests.RequestHeader"/></param>
        /// <param name="arg1"><see cref="string"/></param>
        /// <param name="arg2"><see cref="Java.Net.InetAddress"/></param>
        /// <param name="arg3"><see cref="Org.Apache.Kafka.Common.Security.Auth.KafkaPrincipal"/></param>
        /// <param name="arg4"><see cref="Org.Apache.Kafka.Common.Network.ListenerName"/></param>
        /// <param name="arg5"><see cref="Org.Apache.Kafka.Common.Security.Auth.SecurityProtocol"/></param>
        /// <param name="arg6"><see cref="Org.Apache.Kafka.Common.Network.ClientInformation"/></param>
        /// <param name="arg7"><see cref="bool"/></param>
        /// <param name="arg8"><see cref="Java.Util.Optional"/></param>
        public RequestContext(Org.Apache.Kafka.Common.Requests.RequestHeader arg0, string arg1, Java.Net.InetAddress arg2, Org.Apache.Kafka.Common.Security.Auth.KafkaPrincipal arg3, Org.Apache.Kafka.Common.Network.ListenerName arg4, Org.Apache.Kafka.Common.Security.Auth.SecurityProtocol arg5, Org.Apache.Kafka.Common.Network.ClientInformation arg6, bool arg7, Java.Util.Optional arg8)
            : base(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8)
        {
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/requests/RequestContext.html#%3Cinit%3E(org.apache.kafka.common.requests.RequestHeader,java.lang.String,java.net.InetAddress,org.apache.kafka.common.security.auth.KafkaPrincipal,org.apache.kafka.common.network.ListenerName,org.apache.kafka.common.security.auth.SecurityProtocol,org.apache.kafka.common.network.ClientInformation,boolean)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Common.Requests.RequestHeader"/></param>
        /// <param name="arg1"><see cref="string"/></param>
        /// <param name="arg2"><see cref="Java.Net.InetAddress"/></param>
        /// <param name="arg3"><see cref="Org.Apache.Kafka.Common.Security.Auth.KafkaPrincipal"/></param>
        /// <param name="arg4"><see cref="Org.Apache.Kafka.Common.Network.ListenerName"/></param>
        /// <param name="arg5"><see cref="Org.Apache.Kafka.Common.Security.Auth.SecurityProtocol"/></param>
        /// <param name="arg6"><see cref="Org.Apache.Kafka.Common.Network.ClientInformation"/></param>
        /// <param name="arg7"><see cref="bool"/></param>
        public RequestContext(Org.Apache.Kafka.Common.Requests.RequestHeader arg0, string arg1, Java.Net.InetAddress arg2, Org.Apache.Kafka.Common.Security.Auth.KafkaPrincipal arg3, Org.Apache.Kafka.Common.Network.ListenerName arg4, Org.Apache.Kafka.Common.Security.Auth.SecurityProtocol arg5, Org.Apache.Kafka.Common.Network.ClientInformation arg6, bool arg7)
            : base(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7)
        {
        }

        #endregion

        #region Class/Interface conversion operators
        /// <summary>
        /// Converter from <see cref="Org.Apache.Kafka.Common.Requests.RequestContext"/> to <see cref="Org.Apache.Kafka.Server.Authorizer.AuthorizableRequestContext"/>
        /// </summary>
        public static implicit operator Org.Apache.Kafka.Server.Authorizer.AuthorizableRequestContext(Org.Apache.Kafka.Common.Requests.RequestContext t) => t.Cast<Org.Apache.Kafka.Server.Authorizer.AuthorizableRequestContext>();

        #endregion

        #region Fields
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/requests/RequestContext.html#fromPrivilegedListener"/>
        /// </summary>
        public bool fromPrivilegedListener { get { return IGetField<bool>("fromPrivilegedListener"); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/requests/RequestContext.html#connectionId"/>
        /// </summary>
        public string connectionId { get { return IGetField<string>("connectionId"); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/requests/RequestContext.html#clientAddress"/>
        /// </summary>
        public Java.Net.InetAddress clientAddress { get { return IGetField<Java.Net.InetAddress>("clientAddress"); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/requests/RequestContext.html#principalSerde"/>
        /// </summary>
        public Java.Util.Optional principalSerde { get { return IGetField<Java.Util.Optional>("principalSerde"); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/requests/RequestContext.html#clientInformation"/>
        /// </summary>
        public Org.Apache.Kafka.Common.Network.ClientInformation clientInformation { get { return IGetField<Org.Apache.Kafka.Common.Network.ClientInformation>("clientInformation"); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/requests/RequestContext.html#listenerName"/>
        /// </summary>
        public Org.Apache.Kafka.Common.Network.ListenerName listenerName { get { return IGetField<Org.Apache.Kafka.Common.Network.ListenerName>("listenerName"); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/requests/RequestContext.html#header"/>
        /// </summary>
        public Org.Apache.Kafka.Common.Requests.RequestHeader header { get { return IGetField<Org.Apache.Kafka.Common.Requests.RequestHeader>("header"); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/requests/RequestContext.html#principal"/>
        /// </summary>
        public Org.Apache.Kafka.Common.Security.Auth.KafkaPrincipal principal { get { return IGetField<Org.Apache.Kafka.Common.Security.Auth.KafkaPrincipal>("principal"); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/requests/RequestContext.html#securityProtocol"/>
        /// </summary>
        public Org.Apache.Kafka.Common.Security.Auth.SecurityProtocol securityProtocol { get { return IGetField<Org.Apache.Kafka.Common.Security.Auth.SecurityProtocol>("securityProtocol"); } }

        #endregion

        #region Static methods

        #endregion

        #region Instance methods
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/requests/RequestContext.html#apiVersion()"/> 
        /// </summary>
        public short ApiVersion
        {
            get { return IExecute<short>("apiVersion"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/requests/RequestContext.html#clientAddress()"/> 
        /// </summary>
        public Java.Net.InetAddress ClientAddress
        {
            get { return IExecute<Java.Net.InetAddress>("clientAddress"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/requests/RequestContext.html#clientId()"/> 
        /// </summary>
        public string ClientId
        {
            get { return IExecute<string>("clientId"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/requests/RequestContext.html#correlationId()"/> 
        /// </summary>
        public int CorrelationId
        {
            get { return IExecute<int>("correlationId"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/requests/RequestContext.html#listenerName()"/> 
        /// </summary>
        public string ListenerName
        {
            get { return IExecute<string>("listenerName"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/requests/RequestContext.html#principal()"/> 
        /// </summary>
        public Org.Apache.Kafka.Common.Security.Auth.KafkaPrincipal Principal
        {
            get { return IExecute<Org.Apache.Kafka.Common.Security.Auth.KafkaPrincipal>("principal"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/requests/RequestContext.html#requestType()"/> 
        /// </summary>
        public int RequestType
        {
            get { return IExecute<int>("requestType"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/requests/RequestContext.html#requestVersion()"/> 
        /// </summary>
        public int RequestVersion
        {
            get { return IExecute<int>("requestVersion"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/requests/RequestContext.html#securityProtocol()"/> 
        /// </summary>
        public Org.Apache.Kafka.Common.Security.Auth.SecurityProtocol SecurityProtocol
        {
            get { return IExecute<Org.Apache.Kafka.Common.Security.Auth.SecurityProtocol>("securityProtocol"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/requests/RequestContext.html#buildResponseEnvelopePayload(org.apache.kafka.common.requests.AbstractResponse)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Common.Requests.AbstractResponse"/></param>
        /// <returns><see cref="Java.Nio.ByteBuffer"/></returns>
        public Java.Nio.ByteBuffer BuildResponseEnvelopePayload(Org.Apache.Kafka.Common.Requests.AbstractResponse arg0)
        {
            return IExecute<Java.Nio.ByteBuffer>("buildResponseEnvelopePayload", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/requests/RequestContext.html#buildResponseSend(org.apache.kafka.common.requests.AbstractResponse)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Common.Requests.AbstractResponse"/></param>
        /// <returns><see cref="Org.Apache.Kafka.Common.Network.Send"/></returns>
        public Org.Apache.Kafka.Common.Network.Send BuildResponseSend(Org.Apache.Kafka.Common.Requests.AbstractResponse arg0)
        {
            return IExecute<Org.Apache.Kafka.Common.Network.Send>("buildResponseSend", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/requests/RequestContext.html#parseRequest(java.nio.ByteBuffer)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Nio.ByteBuffer"/></param>
        /// <returns><see cref="Org.Apache.Kafka.Common.Requests.RequestAndSize"/></returns>
        public Org.Apache.Kafka.Common.Requests.RequestAndSize ParseRequest(Java.Nio.ByteBuffer arg0)
        {
            return IExecute<Org.Apache.Kafka.Common.Requests.RequestAndSize>("parseRequest", arg0);
        }

        #endregion

        #region Nested classes

        #endregion

        // TODO: complete the class
    }
    #endregion
}