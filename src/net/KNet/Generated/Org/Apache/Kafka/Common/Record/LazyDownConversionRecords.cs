/*
*  Copyright 2023 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 1.5.5.0)
*  using kafka-clients-3.4.0.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Org.Apache.Kafka.Common.Record
{
    #region LazyDownConversionRecords
    public partial class LazyDownConversionRecords
    {
        #region Constructors
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/record/LazyDownConversionRecords.html#%3Cinit%3E(org.apache.kafka.common.TopicPartition,org.apache.kafka.common.record.Records,byte,long,org.apache.kafka.common.utils.Time)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Common.TopicPartition"/></param>
        /// <param name="arg1"><see cref="Org.Apache.Kafka.Common.Record.Records"/></param>
        /// <param name="arg2"><see cref="byte"/></param>
        /// <param name="arg3"><see cref="long"/></param>
        /// <param name="arg4"><see cref="Org.Apache.Kafka.Common.Utils.Time"/></param>
        public LazyDownConversionRecords(Org.Apache.Kafka.Common.TopicPartition arg0, Org.Apache.Kafka.Common.Record.Records arg1, byte arg2, long arg3, Org.Apache.Kafka.Common.Utils.Time arg4)
            : base(arg0, arg1, arg2, arg3, arg4)
        {
        }

        #endregion

        #region Class/Interface conversion operators
        /// <summary>
        /// Converter from <see cref="Org.Apache.Kafka.Common.Record.LazyDownConversionRecords"/> to <see cref="Org.Apache.Kafka.Common.Record.BaseRecords"/>
        /// </summary>
        public static implicit operator Org.Apache.Kafka.Common.Record.BaseRecords(Org.Apache.Kafka.Common.Record.LazyDownConversionRecords t) => t.Cast<Org.Apache.Kafka.Common.Record.BaseRecords>();

        #endregion

        #region Fields

        #endregion

        #region Static methods

        #endregion

        #region Instance methods
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/record/LazyDownConversionRecords.html#sizeInBytes()"/> 
        /// </summary>
        public int SizeInBytes
        {
            get { return IExecute<int>("sizeInBytes"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/record/LazyDownConversionRecords.html#topicPartition()"/> 
        /// </summary>
        public Org.Apache.Kafka.Common.TopicPartition TopicPartition
        {
            get { return IExecute<Org.Apache.Kafka.Common.TopicPartition>("topicPartition"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/record/LazyDownConversionRecords.html#toSend()"/> 
        /// </summary>
        public Org.Apache.Kafka.Common.Record.RecordsSend ToSend
        {
            get { return IExecute<Org.Apache.Kafka.Common.Record.RecordsSend>("toSend"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/record/LazyDownConversionRecords.html#iterator(long)"/>
        /// </summary>
        /// <param name="arg0"><see cref="long"/></param>
        /// <typeparam name="ReturnExtendsobject"></typeparam>
        /// <returns><see cref="Java.Util.Iterator"/></returns>
        public Java.Util.Iterator<Org.Apache.Kafka.Common.Record.ConvertedRecords<ReturnExtendsobject>> IteratorMethod<ReturnExtendsobject>(long arg0)
        {
            return IExecute<Java.Util.Iterator<Org.Apache.Kafka.Common.Record.ConvertedRecords<ReturnExtendsobject>>>("iterator", arg0);
        }

        #endregion

        #region Nested classes

        #endregion

        // TODO: complete the class
    }
    #endregion
}