/*
*  Copyright 2023 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 1.5.5.0)
*  using kafka-clients-3.4.0.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Org.Apache.Kafka.Common.Network
{
    #region ByteBufferSend
    public partial class ByteBufferSend
    {
        #region Constructors
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/network/ByteBufferSend.html#%3Cinit%3E(java.nio.ByteBuffer[])"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Nio.ByteBuffer"/></param>
        public ByteBufferSend(params Java.Nio.ByteBuffer[] arg0)
            : base(arg0)
        {
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/network/ByteBufferSend.html#%3Cinit%3E(java.nio.ByteBuffer[],long)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Nio.ByteBuffer"/></param>
        /// <param name="arg1"><see cref="long"/></param>
        public ByteBufferSend(Java.Nio.ByteBuffer[] arg0, long arg1)
            : base(arg0, arg1)
        {
        }

        #endregion

        #region Class/Interface conversion operators
        /// <summary>
        /// Converter from <see cref="Org.Apache.Kafka.Common.Network.ByteBufferSend"/> to <see cref="Org.Apache.Kafka.Common.Network.Send"/>
        /// </summary>
        public static implicit operator Org.Apache.Kafka.Common.Network.Send(Org.Apache.Kafka.Common.Network.ByteBufferSend t) => t.Cast<Org.Apache.Kafka.Common.Network.Send>();

        #endregion

        #region Fields

        #endregion

        #region Static methods
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/network/ByteBufferSend.html#sizePrefixed(java.nio.ByteBuffer)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Nio.ByteBuffer"/></param>
        /// <returns><see cref="Org.Apache.Kafka.Common.Network.ByteBufferSend"/></returns>
        public static Org.Apache.Kafka.Common.Network.ByteBufferSend SizePrefixed(Java.Nio.ByteBuffer arg0)
        {
            return SExecute<Org.Apache.Kafka.Common.Network.ByteBufferSend>(LocalBridgeClazz, "sizePrefixed", arg0);
        }

        #endregion

        #region Instance methods
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/network/ByteBufferSend.html#completed()"/> 
        /// </summary>
        public bool Completed
        {
            get { return IExecute<bool>("completed"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/network/ByteBufferSend.html#remaining()"/> 
        /// </summary>
        public long Remaining
        {
            get { return IExecute<long>("remaining"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/network/ByteBufferSend.html#size()"/> 
        /// </summary>
        public long Size
        {
            get { return IExecute<long>("size"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/network/ByteBufferSend.html#writeTo(org.apache.kafka.common.network.TransferableChannel)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Common.Network.TransferableChannel"/></param>
        /// <returns><see cref="long"/></returns>
        /// <exception cref="Java.Io.IOException"/>
        public long WriteTo(Org.Apache.Kafka.Common.Network.TransferableChannel arg0)
        {
            return IExecute<long>("writeTo", arg0);
        }

        #endregion

        #region Nested classes

        #endregion

        // TODO: complete the class
    }
    #endregion
}