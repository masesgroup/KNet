/*
*  Copyright 2023 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 1.5.5.0)
*  using kafka-clients-3.4.0.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Org.Apache.Kafka.Common.Security.Oauthbearer.Internals.Unsecured
{
    #region OAuthBearerValidationUtils
    public partial class OAuthBearerValidationUtils
    {
        #region Constructors

        #endregion

        #region Class/Interface conversion operators

        #endregion

        #region Fields

        #endregion

        #region Static methods
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/security/oauthbearer/internals/unsecured/OAuthBearerValidationUtils.html#validateClaimForExistenceAndType(org.apache.kafka.common.security.oauthbearer.internals.unsecured.OAuthBearerUnsecuredJws,boolean,java.lang.String,java.lang.Class[])"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Common.Security.Oauthbearer.Internals.Unsecured.OAuthBearerUnsecuredJws"/></param>
        /// <param name="arg1"><see cref="bool"/></param>
        /// <param name="arg2"><see cref="string"/></param>
        /// <param name="arg3"><see cref="Java.Lang.Class"/></param>
        /// <typeparam name="Arg3Extendsobject"></typeparam>
        /// <returns><see cref="Org.Apache.Kafka.Common.Security.Oauthbearer.Internals.Unsecured.OAuthBearerValidationResult"/></returns>
        public static Org.Apache.Kafka.Common.Security.Oauthbearer.Internals.Unsecured.OAuthBearerValidationResult ValidateClaimForExistenceAndType<Arg3Extendsobject>(Org.Apache.Kafka.Common.Security.Oauthbearer.Internals.Unsecured.OAuthBearerUnsecuredJws arg0, bool arg1, string arg2, params Java.Lang.Class[] arg3)
        {
            if (arg3.Length == 0) return SExecute<Org.Apache.Kafka.Common.Security.Oauthbearer.Internals.Unsecured.OAuthBearerValidationResult>(LocalBridgeClazz, "validateClaimForExistenceAndType", arg0, arg1, arg2); else return SExecute<Org.Apache.Kafka.Common.Security.Oauthbearer.Internals.Unsecured.OAuthBearerValidationResult>(LocalBridgeClazz, "validateClaimForExistenceAndType", arg0, arg1, arg2, arg3);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/security/oauthbearer/internals/unsecured/OAuthBearerValidationUtils.html#validateExpirationTime(org.apache.kafka.common.security.oauthbearer.internals.unsecured.OAuthBearerUnsecuredJws,long,int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Common.Security.Oauthbearer.Internals.Unsecured.OAuthBearerUnsecuredJws"/></param>
        /// <param name="arg1"><see cref="long"/></param>
        /// <param name="arg2"><see cref="int"/></param>
        /// <returns><see cref="Org.Apache.Kafka.Common.Security.Oauthbearer.Internals.Unsecured.OAuthBearerValidationResult"/></returns>
        /// <exception cref="Org.Apache.Kafka.Common.Security.Oauthbearer.Internals.Unsecured.OAuthBearerConfigException"/>
        public static Org.Apache.Kafka.Common.Security.Oauthbearer.Internals.Unsecured.OAuthBearerValidationResult ValidateExpirationTime(Org.Apache.Kafka.Common.Security.Oauthbearer.Internals.Unsecured.OAuthBearerUnsecuredJws arg0, long arg1, int arg2)
        {
            return SExecute<Org.Apache.Kafka.Common.Security.Oauthbearer.Internals.Unsecured.OAuthBearerValidationResult>(LocalBridgeClazz, "validateExpirationTime", arg0, arg1, arg2);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/security/oauthbearer/internals/unsecured/OAuthBearerValidationUtils.html#validateIssuedAt(org.apache.kafka.common.security.oauthbearer.internals.unsecured.OAuthBearerUnsecuredJws,boolean,long,int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Common.Security.Oauthbearer.Internals.Unsecured.OAuthBearerUnsecuredJws"/></param>
        /// <param name="arg1"><see cref="bool"/></param>
        /// <param name="arg2"><see cref="long"/></param>
        /// <param name="arg3"><see cref="int"/></param>
        /// <returns><see cref="Org.Apache.Kafka.Common.Security.Oauthbearer.Internals.Unsecured.OAuthBearerValidationResult"/></returns>
        /// <exception cref="Org.Apache.Kafka.Common.Security.Oauthbearer.Internals.Unsecured.OAuthBearerConfigException"/>
        public static Org.Apache.Kafka.Common.Security.Oauthbearer.Internals.Unsecured.OAuthBearerValidationResult ValidateIssuedAt(Org.Apache.Kafka.Common.Security.Oauthbearer.Internals.Unsecured.OAuthBearerUnsecuredJws arg0, bool arg1, long arg2, int arg3)
        {
            return SExecute<Org.Apache.Kafka.Common.Security.Oauthbearer.Internals.Unsecured.OAuthBearerValidationResult>(LocalBridgeClazz, "validateIssuedAt", arg0, arg1, arg2, arg3);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/security/oauthbearer/internals/unsecured/OAuthBearerValidationUtils.html#validateScope(org.apache.kafka.common.security.oauthbearer.OAuthBearerToken,java.util.List)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Common.Security.Oauthbearer.OAuthBearerToken"/></param>
        /// <param name="arg1"><see cref="Java.Util.List"/></param>
        /// <returns><see cref="Org.Apache.Kafka.Common.Security.Oauthbearer.Internals.Unsecured.OAuthBearerValidationResult"/></returns>
        public static Org.Apache.Kafka.Common.Security.Oauthbearer.Internals.Unsecured.OAuthBearerValidationResult ValidateScope(Org.Apache.Kafka.Common.Security.Oauthbearer.OAuthBearerToken arg0, Java.Util.List<string> arg1)
        {
            return SExecute<Org.Apache.Kafka.Common.Security.Oauthbearer.Internals.Unsecured.OAuthBearerValidationResult>(LocalBridgeClazz, "validateScope", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/security/oauthbearer/internals/unsecured/OAuthBearerValidationUtils.html#validateTimeConsistency(org.apache.kafka.common.security.oauthbearer.internals.unsecured.OAuthBearerUnsecuredJws)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Common.Security.Oauthbearer.Internals.Unsecured.OAuthBearerUnsecuredJws"/></param>
        /// <returns><see cref="Org.Apache.Kafka.Common.Security.Oauthbearer.Internals.Unsecured.OAuthBearerValidationResult"/></returns>
        public static Org.Apache.Kafka.Common.Security.Oauthbearer.Internals.Unsecured.OAuthBearerValidationResult ValidateTimeConsistency(Org.Apache.Kafka.Common.Security.Oauthbearer.Internals.Unsecured.OAuthBearerUnsecuredJws arg0)
        {
            return SExecute<Org.Apache.Kafka.Common.Security.Oauthbearer.Internals.Unsecured.OAuthBearerValidationResult>(LocalBridgeClazz, "validateTimeConsistency", arg0);
        }

        #endregion

        #region Instance methods

        #endregion

        #region Nested classes

        #endregion

        // TODO: complete the class
    }
    #endregion
}