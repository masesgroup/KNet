/*
*  Copyright 2023 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 1.5.5.0)
*  using kafka-clients-3.4.0.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Org.Apache.Kafka.Common.Replica
{
    #region ReplicaView
    public partial class ReplicaView
    {
        #region Constructors

        #endregion

        #region Class/Interface conversion operators

        #endregion

        #region Fields

        #endregion

        #region Static methods
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/replica/ReplicaView.html#comparator()"/>
        /// </summary>

        /// <returns><see cref="Java.Util.Comparator"/></returns>
        public static Java.Util.Comparator<Org.Apache.Kafka.Common.Replica.ReplicaView> Comparator()
        {
            return SExecute<Java.Util.Comparator<Org.Apache.Kafka.Common.Replica.ReplicaView>>(LocalBridgeClazz, "comparator");
        }

        #endregion

        #region Instance methods
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/replica/ReplicaView.html#logEndOffset()"/>
        /// </summary>

        /// <returns><see cref="long"/></returns>
        public long LogEndOffset()
        {
            return IExecute<long>("logEndOffset");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/replica/ReplicaView.html#timeSinceLastCaughtUpMs()"/>
        /// </summary>

        /// <returns><see cref="long"/></returns>
        public long TimeSinceLastCaughtUpMs()
        {
            return IExecute<long>("timeSinceLastCaughtUpMs");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/replica/ReplicaView.html#endpoint()"/>
        /// </summary>

        /// <returns><see cref="Org.Apache.Kafka.Common.Node"/></returns>
        public Org.Apache.Kafka.Common.Node Endpoint()
        {
            return IExecute<Org.Apache.Kafka.Common.Node>("endpoint");
        }

        #endregion

        #region Nested classes
        #region DefaultReplicaView
        public partial class DefaultReplicaView
        {
            #region Constructors
            /// <summary>
            /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/replica/ReplicaView.DefaultReplicaView.html#%3Cinit%3E(org.apache.kafka.common.Node,long,long)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Org.Apache.Kafka.Common.Node"/></param>
            /// <param name="arg1"><see cref="long"/></param>
            /// <param name="arg2"><see cref="long"/></param>
            public DefaultReplicaView(Org.Apache.Kafka.Common.Node arg0, long arg1, long arg2)
                : base(arg0, arg1, arg2)
            {
            }

            #endregion

            #region Class/Interface conversion operators
            /// <summary>
            /// Converter from <see cref="Org.Apache.Kafka.Common.Replica.ReplicaView.DefaultReplicaView"/> to <see cref="Org.Apache.Kafka.Common.Replica.ReplicaView"/>
            /// </summary>
            public static implicit operator Org.Apache.Kafka.Common.Replica.ReplicaView(Org.Apache.Kafka.Common.Replica.ReplicaView.DefaultReplicaView t) => t.Cast<Org.Apache.Kafka.Common.Replica.ReplicaView>();

            #endregion

            #region Fields

            #endregion

            #region Static methods

            #endregion

            #region Instance methods
            /// <summary>
            /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/replica/ReplicaView.DefaultReplicaView.html#logEndOffset()"/>
            /// </summary>

            /// <returns><see cref="long"/></returns>
            public long LogEndOffset()
            {
                return IExecute<long>("logEndOffset");
            }
            /// <summary>
            /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/replica/ReplicaView.DefaultReplicaView.html#timeSinceLastCaughtUpMs()"/>
            /// </summary>

            /// <returns><see cref="long"/></returns>
            public long TimeSinceLastCaughtUpMs()
            {
                return IExecute<long>("timeSinceLastCaughtUpMs");
            }
            /// <summary>
            /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/replica/ReplicaView.DefaultReplicaView.html#endpoint()"/>
            /// </summary>

            /// <returns><see cref="Org.Apache.Kafka.Common.Node"/></returns>
            public Org.Apache.Kafka.Common.Node Endpoint()
            {
                return IExecute<Org.Apache.Kafka.Common.Node>("endpoint");
            }

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

    
        #endregion

        // TODO: complete the class
    }
    #endregion
}