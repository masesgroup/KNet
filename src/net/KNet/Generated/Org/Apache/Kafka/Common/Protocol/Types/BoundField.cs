/*
*  Copyright 2023 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 1.5.5.0)
*  using kafka-clients-3.4.0.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Org.Apache.Kafka.Common.Protocol.Types
{
    #region BoundField
    public partial class BoundField
    {
        #region Constructors
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/protocol/types/BoundField.html#%3Cinit%3E(org.apache.kafka.common.protocol.types.Field,org.apache.kafka.common.protocol.types.Schema,int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Common.Protocol.Types.Field"/></param>
        /// <param name="arg1"><see cref="Org.Apache.Kafka.Common.Protocol.Types.Schema"/></param>
        /// <param name="arg2"><see cref="int"/></param>
        public BoundField(Org.Apache.Kafka.Common.Protocol.Types.Field arg0, Org.Apache.Kafka.Common.Protocol.Types.Schema arg1, int arg2)
            : base(arg0, arg1, arg2)
        {
        }

        #endregion

        #region Class/Interface conversion operators

        #endregion

        #region Fields
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/protocol/types/BoundField.html#def"/>
        /// </summary>
        public Org.Apache.Kafka.Common.Protocol.Types.Field def { get { return IGetField<Org.Apache.Kafka.Common.Protocol.Types.Field>("def"); } }

        #endregion

        #region Static methods

        #endregion

        #region Instance methods

        #endregion

        #region Nested classes

        #endregion

        // TODO: complete the class
    }
    #endregion
}