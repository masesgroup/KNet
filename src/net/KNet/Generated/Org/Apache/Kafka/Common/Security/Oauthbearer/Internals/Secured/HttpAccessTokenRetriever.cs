/*
*  Copyright 2023 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 1.5.5.0)
*  using kafka-clients-3.4.0.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Org.Apache.Kafka.Common.Security.Oauthbearer.Internals.Secured
{
    #region HttpAccessTokenRetriever
    public partial class HttpAccessTokenRetriever
    {
        #region Constructors
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/security/oauthbearer/internals/secured/HttpAccessTokenRetriever.html#%3Cinit%3E(java.lang.String,java.lang.String,java.lang.String,javax.net.ssl.SSLSocketFactory,java.lang.String,long,long,java.lang.Integer,java.lang.Integer)"/>
        /// </summary>
        /// <param name="arg0"><see cref="string"/></param>
        /// <param name="arg1"><see cref="string"/></param>
        /// <param name="arg2"><see cref="string"/></param>
        /// <param name="arg3"><see cref="Javax.Net.Ssl.SSLSocketFactory"/></param>
        /// <param name="arg4"><see cref="string"/></param>
        /// <param name="arg5"><see cref="long"/></param>
        /// <param name="arg6"><see cref="long"/></param>
        /// <param name="arg7"><see cref="int"/></param>
        /// <param name="arg8"><see cref="int"/></param>
        public HttpAccessTokenRetriever(string arg0, string arg1, string arg2, Javax.Net.Ssl.SSLSocketFactory arg3, string arg4, long arg5, long arg6, int? arg7, int? arg8)
            : base(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8)
        {
        }

        #endregion

        #region Class/Interface conversion operators
        /// <summary>
        /// Converter from <see cref="Org.Apache.Kafka.Common.Security.Oauthbearer.Internals.Secured.HttpAccessTokenRetriever"/> to <see cref="Org.Apache.Kafka.Common.Security.Oauthbearer.Internals.Secured.AccessTokenRetriever"/>
        /// </summary>
        public static implicit operator Org.Apache.Kafka.Common.Security.Oauthbearer.Internals.Secured.AccessTokenRetriever(Org.Apache.Kafka.Common.Security.Oauthbearer.Internals.Secured.HttpAccessTokenRetriever t) => t.Cast<Org.Apache.Kafka.Common.Security.Oauthbearer.Internals.Secured.AccessTokenRetriever>();

        #endregion

        #region Fields
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/security/oauthbearer/internals/secured/HttpAccessTokenRetriever.html#AUTHORIZATION_HEADER"/>
        /// </summary>
        public static string AUTHORIZATION_HEADER { get { return SGetField<string>(LocalBridgeClazz, "AUTHORIZATION_HEADER"); } }

        #endregion

        #region Static methods
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/security/oauthbearer/internals/secured/HttpAccessTokenRetriever.html#post(java.net.HttpURLConnection,java.util.Map,java.lang.String,java.lang.Integer,java.lang.Integer)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Net.HttpURLConnection"/></param>
        /// <param name="arg1"><see cref="Java.Util.Map"/></param>
        /// <param name="arg2"><see cref="string"/></param>
        /// <param name="arg3"><see cref="int"/></param>
        /// <param name="arg4"><see cref="int"/></param>
        /// <returns><see cref="string"/></returns>
        /// <exception cref="Java.Io.IOException"/>
        /// <exception cref="Org.Apache.Kafka.Common.Security.Oauthbearer.Internals.Secured.UnretryableException"/>
        public static string Post(Java.Net.HttpURLConnection arg0, Java.Util.Map<string, string> arg1, string arg2, int? arg3, int? arg4)
        {
            return SExecute<string>(LocalBridgeClazz, "post", arg0, arg1, arg2, arg3, arg4);
        }

        #endregion

        #region Instance methods
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/security/oauthbearer/internals/secured/HttpAccessTokenRetriever.html#retrieve()"/> 
        /// </summary>
        public string Retrieve
        {
            get { return IExecute<string>("retrieve"); }
        }

        #endregion

        #region Nested classes

        #endregion

        // TODO: complete the class
    }
    #endregion
}