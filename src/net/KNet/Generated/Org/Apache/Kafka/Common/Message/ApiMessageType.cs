/*
*  Copyright 2023 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 1.5.5.0)
*  using kafka-clients-3.4.0.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Org.Apache.Kafka.Common.Message
{
    #region ApiMessageType
    public partial class ApiMessageType
    {
        #region Constructors

        #endregion

        #region Class/Interface conversion operators

        #endregion

        #region Fields
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/message/ApiMessageType.html#name"/>
        /// </summary>
        public string name { get { return IGetField<string>("name"); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/message/ApiMessageType.html#ADD_OFFSETS_TO_TXN"/>
        /// </summary>
        public static Org.Apache.Kafka.Common.Message.ApiMessageType ADD_OFFSETS_TO_TXN { get { return SGetField<Org.Apache.Kafka.Common.Message.ApiMessageType>(LocalBridgeClazz, "ADD_OFFSETS_TO_TXN"); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/message/ApiMessageType.html#ADD_PARTITIONS_TO_TXN"/>
        /// </summary>
        public static Org.Apache.Kafka.Common.Message.ApiMessageType ADD_PARTITIONS_TO_TXN { get { return SGetField<Org.Apache.Kafka.Common.Message.ApiMessageType>(LocalBridgeClazz, "ADD_PARTITIONS_TO_TXN"); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/message/ApiMessageType.html#ALLOCATE_PRODUCER_IDS"/>
        /// </summary>
        public static Org.Apache.Kafka.Common.Message.ApiMessageType ALLOCATE_PRODUCER_IDS { get { return SGetField<Org.Apache.Kafka.Common.Message.ApiMessageType>(LocalBridgeClazz, "ALLOCATE_PRODUCER_IDS"); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/message/ApiMessageType.html#ALTER_CLIENT_QUOTAS"/>
        /// </summary>
        public static Org.Apache.Kafka.Common.Message.ApiMessageType ALTER_CLIENT_QUOTAS { get { return SGetField<Org.Apache.Kafka.Common.Message.ApiMessageType>(LocalBridgeClazz, "ALTER_CLIENT_QUOTAS"); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/message/ApiMessageType.html#ALTER_CONFIGS"/>
        /// </summary>
        public static Org.Apache.Kafka.Common.Message.ApiMessageType ALTER_CONFIGS { get { return SGetField<Org.Apache.Kafka.Common.Message.ApiMessageType>(LocalBridgeClazz, "ALTER_CONFIGS"); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/message/ApiMessageType.html#ALTER_PARTITION"/>
        /// </summary>
        public static Org.Apache.Kafka.Common.Message.ApiMessageType ALTER_PARTITION { get { return SGetField<Org.Apache.Kafka.Common.Message.ApiMessageType>(LocalBridgeClazz, "ALTER_PARTITION"); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/message/ApiMessageType.html#ALTER_PARTITION_REASSIGNMENTS"/>
        /// </summary>
        public static Org.Apache.Kafka.Common.Message.ApiMessageType ALTER_PARTITION_REASSIGNMENTS { get { return SGetField<Org.Apache.Kafka.Common.Message.ApiMessageType>(LocalBridgeClazz, "ALTER_PARTITION_REASSIGNMENTS"); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/message/ApiMessageType.html#ALTER_REPLICA_LOG_DIRS"/>
        /// </summary>
        public static Org.Apache.Kafka.Common.Message.ApiMessageType ALTER_REPLICA_LOG_DIRS { get { return SGetField<Org.Apache.Kafka.Common.Message.ApiMessageType>(LocalBridgeClazz, "ALTER_REPLICA_LOG_DIRS"); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/message/ApiMessageType.html#ALTER_USER_SCRAM_CREDENTIALS"/>
        /// </summary>
        public static Org.Apache.Kafka.Common.Message.ApiMessageType ALTER_USER_SCRAM_CREDENTIALS { get { return SGetField<Org.Apache.Kafka.Common.Message.ApiMessageType>(LocalBridgeClazz, "ALTER_USER_SCRAM_CREDENTIALS"); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/message/ApiMessageType.html#API_VERSIONS"/>
        /// </summary>
        public static Org.Apache.Kafka.Common.Message.ApiMessageType API_VERSIONS { get { return SGetField<Org.Apache.Kafka.Common.Message.ApiMessageType>(LocalBridgeClazz, "API_VERSIONS"); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/message/ApiMessageType.html#BEGIN_QUORUM_EPOCH"/>
        /// </summary>
        public static Org.Apache.Kafka.Common.Message.ApiMessageType BEGIN_QUORUM_EPOCH { get { return SGetField<Org.Apache.Kafka.Common.Message.ApiMessageType>(LocalBridgeClazz, "BEGIN_QUORUM_EPOCH"); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/message/ApiMessageType.html#BROKER_HEARTBEAT"/>
        /// </summary>
        public static Org.Apache.Kafka.Common.Message.ApiMessageType BROKER_HEARTBEAT { get { return SGetField<Org.Apache.Kafka.Common.Message.ApiMessageType>(LocalBridgeClazz, "BROKER_HEARTBEAT"); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/message/ApiMessageType.html#BROKER_REGISTRATION"/>
        /// </summary>
        public static Org.Apache.Kafka.Common.Message.ApiMessageType BROKER_REGISTRATION { get { return SGetField<Org.Apache.Kafka.Common.Message.ApiMessageType>(LocalBridgeClazz, "BROKER_REGISTRATION"); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/message/ApiMessageType.html#CONTROLLED_SHUTDOWN"/>
        /// </summary>
        public static Org.Apache.Kafka.Common.Message.ApiMessageType CONTROLLED_SHUTDOWN { get { return SGetField<Org.Apache.Kafka.Common.Message.ApiMessageType>(LocalBridgeClazz, "CONTROLLED_SHUTDOWN"); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/message/ApiMessageType.html#CREATE_ACLS"/>
        /// </summary>
        public static Org.Apache.Kafka.Common.Message.ApiMessageType CREATE_ACLS { get { return SGetField<Org.Apache.Kafka.Common.Message.ApiMessageType>(LocalBridgeClazz, "CREATE_ACLS"); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/message/ApiMessageType.html#CREATE_DELEGATION_TOKEN"/>
        /// </summary>
        public static Org.Apache.Kafka.Common.Message.ApiMessageType CREATE_DELEGATION_TOKEN { get { return SGetField<Org.Apache.Kafka.Common.Message.ApiMessageType>(LocalBridgeClazz, "CREATE_DELEGATION_TOKEN"); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/message/ApiMessageType.html#CREATE_PARTITIONS"/>
        /// </summary>
        public static Org.Apache.Kafka.Common.Message.ApiMessageType CREATE_PARTITIONS { get { return SGetField<Org.Apache.Kafka.Common.Message.ApiMessageType>(LocalBridgeClazz, "CREATE_PARTITIONS"); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/message/ApiMessageType.html#CREATE_TOPICS"/>
        /// </summary>
        public static Org.Apache.Kafka.Common.Message.ApiMessageType CREATE_TOPICS { get { return SGetField<Org.Apache.Kafka.Common.Message.ApiMessageType>(LocalBridgeClazz, "CREATE_TOPICS"); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/message/ApiMessageType.html#DELETE_ACLS"/>
        /// </summary>
        public static Org.Apache.Kafka.Common.Message.ApiMessageType DELETE_ACLS { get { return SGetField<Org.Apache.Kafka.Common.Message.ApiMessageType>(LocalBridgeClazz, "DELETE_ACLS"); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/message/ApiMessageType.html#DELETE_GROUPS"/>
        /// </summary>
        public static Org.Apache.Kafka.Common.Message.ApiMessageType DELETE_GROUPS { get { return SGetField<Org.Apache.Kafka.Common.Message.ApiMessageType>(LocalBridgeClazz, "DELETE_GROUPS"); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/message/ApiMessageType.html#DELETE_RECORDS"/>
        /// </summary>
        public static Org.Apache.Kafka.Common.Message.ApiMessageType DELETE_RECORDS { get { return SGetField<Org.Apache.Kafka.Common.Message.ApiMessageType>(LocalBridgeClazz, "DELETE_RECORDS"); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/message/ApiMessageType.html#DELETE_TOPICS"/>
        /// </summary>
        public static Org.Apache.Kafka.Common.Message.ApiMessageType DELETE_TOPICS { get { return SGetField<Org.Apache.Kafka.Common.Message.ApiMessageType>(LocalBridgeClazz, "DELETE_TOPICS"); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/message/ApiMessageType.html#DESCRIBE_ACLS"/>
        /// </summary>
        public static Org.Apache.Kafka.Common.Message.ApiMessageType DESCRIBE_ACLS { get { return SGetField<Org.Apache.Kafka.Common.Message.ApiMessageType>(LocalBridgeClazz, "DESCRIBE_ACLS"); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/message/ApiMessageType.html#DESCRIBE_CLIENT_QUOTAS"/>
        /// </summary>
        public static Org.Apache.Kafka.Common.Message.ApiMessageType DESCRIBE_CLIENT_QUOTAS { get { return SGetField<Org.Apache.Kafka.Common.Message.ApiMessageType>(LocalBridgeClazz, "DESCRIBE_CLIENT_QUOTAS"); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/message/ApiMessageType.html#DESCRIBE_CLUSTER"/>
        /// </summary>
        public static Org.Apache.Kafka.Common.Message.ApiMessageType DESCRIBE_CLUSTER { get { return SGetField<Org.Apache.Kafka.Common.Message.ApiMessageType>(LocalBridgeClazz, "DESCRIBE_CLUSTER"); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/message/ApiMessageType.html#DESCRIBE_CONFIGS"/>
        /// </summary>
        public static Org.Apache.Kafka.Common.Message.ApiMessageType DESCRIBE_CONFIGS { get { return SGetField<Org.Apache.Kafka.Common.Message.ApiMessageType>(LocalBridgeClazz, "DESCRIBE_CONFIGS"); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/message/ApiMessageType.html#DESCRIBE_DELEGATION_TOKEN"/>
        /// </summary>
        public static Org.Apache.Kafka.Common.Message.ApiMessageType DESCRIBE_DELEGATION_TOKEN { get { return SGetField<Org.Apache.Kafka.Common.Message.ApiMessageType>(LocalBridgeClazz, "DESCRIBE_DELEGATION_TOKEN"); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/message/ApiMessageType.html#DESCRIBE_GROUPS"/>
        /// </summary>
        public static Org.Apache.Kafka.Common.Message.ApiMessageType DESCRIBE_GROUPS { get { return SGetField<Org.Apache.Kafka.Common.Message.ApiMessageType>(LocalBridgeClazz, "DESCRIBE_GROUPS"); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/message/ApiMessageType.html#DESCRIBE_LOG_DIRS"/>
        /// </summary>
        public static Org.Apache.Kafka.Common.Message.ApiMessageType DESCRIBE_LOG_DIRS { get { return SGetField<Org.Apache.Kafka.Common.Message.ApiMessageType>(LocalBridgeClazz, "DESCRIBE_LOG_DIRS"); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/message/ApiMessageType.html#DESCRIBE_PRODUCERS"/>
        /// </summary>
        public static Org.Apache.Kafka.Common.Message.ApiMessageType DESCRIBE_PRODUCERS { get { return SGetField<Org.Apache.Kafka.Common.Message.ApiMessageType>(LocalBridgeClazz, "DESCRIBE_PRODUCERS"); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/message/ApiMessageType.html#DESCRIBE_QUORUM"/>
        /// </summary>
        public static Org.Apache.Kafka.Common.Message.ApiMessageType DESCRIBE_QUORUM { get { return SGetField<Org.Apache.Kafka.Common.Message.ApiMessageType>(LocalBridgeClazz, "DESCRIBE_QUORUM"); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/message/ApiMessageType.html#DESCRIBE_TRANSACTIONS"/>
        /// </summary>
        public static Org.Apache.Kafka.Common.Message.ApiMessageType DESCRIBE_TRANSACTIONS { get { return SGetField<Org.Apache.Kafka.Common.Message.ApiMessageType>(LocalBridgeClazz, "DESCRIBE_TRANSACTIONS"); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/message/ApiMessageType.html#DESCRIBE_USER_SCRAM_CREDENTIALS"/>
        /// </summary>
        public static Org.Apache.Kafka.Common.Message.ApiMessageType DESCRIBE_USER_SCRAM_CREDENTIALS { get { return SGetField<Org.Apache.Kafka.Common.Message.ApiMessageType>(LocalBridgeClazz, "DESCRIBE_USER_SCRAM_CREDENTIALS"); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/message/ApiMessageType.html#ELECT_LEADERS"/>
        /// </summary>
        public static Org.Apache.Kafka.Common.Message.ApiMessageType ELECT_LEADERS { get { return SGetField<Org.Apache.Kafka.Common.Message.ApiMessageType>(LocalBridgeClazz, "ELECT_LEADERS"); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/message/ApiMessageType.html#END_QUORUM_EPOCH"/>
        /// </summary>
        public static Org.Apache.Kafka.Common.Message.ApiMessageType END_QUORUM_EPOCH { get { return SGetField<Org.Apache.Kafka.Common.Message.ApiMessageType>(LocalBridgeClazz, "END_QUORUM_EPOCH"); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/message/ApiMessageType.html#END_TXN"/>
        /// </summary>
        public static Org.Apache.Kafka.Common.Message.ApiMessageType END_TXN { get { return SGetField<Org.Apache.Kafka.Common.Message.ApiMessageType>(LocalBridgeClazz, "END_TXN"); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/message/ApiMessageType.html#ENVELOPE"/>
        /// </summary>
        public static Org.Apache.Kafka.Common.Message.ApiMessageType ENVELOPE { get { return SGetField<Org.Apache.Kafka.Common.Message.ApiMessageType>(LocalBridgeClazz, "ENVELOPE"); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/message/ApiMessageType.html#EXPIRE_DELEGATION_TOKEN"/>
        /// </summary>
        public static Org.Apache.Kafka.Common.Message.ApiMessageType EXPIRE_DELEGATION_TOKEN { get { return SGetField<Org.Apache.Kafka.Common.Message.ApiMessageType>(LocalBridgeClazz, "EXPIRE_DELEGATION_TOKEN"); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/message/ApiMessageType.html#FETCH"/>
        /// </summary>
        public static Org.Apache.Kafka.Common.Message.ApiMessageType FETCH { get { return SGetField<Org.Apache.Kafka.Common.Message.ApiMessageType>(LocalBridgeClazz, "FETCH"); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/message/ApiMessageType.html#FETCH_SNAPSHOT"/>
        /// </summary>
        public static Org.Apache.Kafka.Common.Message.ApiMessageType FETCH_SNAPSHOT { get { return SGetField<Org.Apache.Kafka.Common.Message.ApiMessageType>(LocalBridgeClazz, "FETCH_SNAPSHOT"); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/message/ApiMessageType.html#FIND_COORDINATOR"/>
        /// </summary>
        public static Org.Apache.Kafka.Common.Message.ApiMessageType FIND_COORDINATOR { get { return SGetField<Org.Apache.Kafka.Common.Message.ApiMessageType>(LocalBridgeClazz, "FIND_COORDINATOR"); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/message/ApiMessageType.html#HEARTBEAT"/>
        /// </summary>
        public static Org.Apache.Kafka.Common.Message.ApiMessageType HEARTBEAT { get { return SGetField<Org.Apache.Kafka.Common.Message.ApiMessageType>(LocalBridgeClazz, "HEARTBEAT"); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/message/ApiMessageType.html#INCREMENTAL_ALTER_CONFIGS"/>
        /// </summary>
        public static Org.Apache.Kafka.Common.Message.ApiMessageType INCREMENTAL_ALTER_CONFIGS { get { return SGetField<Org.Apache.Kafka.Common.Message.ApiMessageType>(LocalBridgeClazz, "INCREMENTAL_ALTER_CONFIGS"); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/message/ApiMessageType.html#INIT_PRODUCER_ID"/>
        /// </summary>
        public static Org.Apache.Kafka.Common.Message.ApiMessageType INIT_PRODUCER_ID { get { return SGetField<Org.Apache.Kafka.Common.Message.ApiMessageType>(LocalBridgeClazz, "INIT_PRODUCER_ID"); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/message/ApiMessageType.html#JOIN_GROUP"/>
        /// </summary>
        public static Org.Apache.Kafka.Common.Message.ApiMessageType JOIN_GROUP { get { return SGetField<Org.Apache.Kafka.Common.Message.ApiMessageType>(LocalBridgeClazz, "JOIN_GROUP"); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/message/ApiMessageType.html#LEADER_AND_ISR"/>
        /// </summary>
        public static Org.Apache.Kafka.Common.Message.ApiMessageType LEADER_AND_ISR { get { return SGetField<Org.Apache.Kafka.Common.Message.ApiMessageType>(LocalBridgeClazz, "LEADER_AND_ISR"); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/message/ApiMessageType.html#LEAVE_GROUP"/>
        /// </summary>
        public static Org.Apache.Kafka.Common.Message.ApiMessageType LEAVE_GROUP { get { return SGetField<Org.Apache.Kafka.Common.Message.ApiMessageType>(LocalBridgeClazz, "LEAVE_GROUP"); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/message/ApiMessageType.html#LIST_GROUPS"/>
        /// </summary>
        public static Org.Apache.Kafka.Common.Message.ApiMessageType LIST_GROUPS { get { return SGetField<Org.Apache.Kafka.Common.Message.ApiMessageType>(LocalBridgeClazz, "LIST_GROUPS"); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/message/ApiMessageType.html#LIST_OFFSETS"/>
        /// </summary>
        public static Org.Apache.Kafka.Common.Message.ApiMessageType LIST_OFFSETS { get { return SGetField<Org.Apache.Kafka.Common.Message.ApiMessageType>(LocalBridgeClazz, "LIST_OFFSETS"); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/message/ApiMessageType.html#LIST_PARTITION_REASSIGNMENTS"/>
        /// </summary>
        public static Org.Apache.Kafka.Common.Message.ApiMessageType LIST_PARTITION_REASSIGNMENTS { get { return SGetField<Org.Apache.Kafka.Common.Message.ApiMessageType>(LocalBridgeClazz, "LIST_PARTITION_REASSIGNMENTS"); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/message/ApiMessageType.html#LIST_TRANSACTIONS"/>
        /// </summary>
        public static Org.Apache.Kafka.Common.Message.ApiMessageType LIST_TRANSACTIONS { get { return SGetField<Org.Apache.Kafka.Common.Message.ApiMessageType>(LocalBridgeClazz, "LIST_TRANSACTIONS"); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/message/ApiMessageType.html#METADATA"/>
        /// </summary>
        public static Org.Apache.Kafka.Common.Message.ApiMessageType METADATA { get { return SGetField<Org.Apache.Kafka.Common.Message.ApiMessageType>(LocalBridgeClazz, "METADATA"); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/message/ApiMessageType.html#OFFSET_COMMIT"/>
        /// </summary>
        public static Org.Apache.Kafka.Common.Message.ApiMessageType OFFSET_COMMIT { get { return SGetField<Org.Apache.Kafka.Common.Message.ApiMessageType>(LocalBridgeClazz, "OFFSET_COMMIT"); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/message/ApiMessageType.html#OFFSET_DELETE"/>
        /// </summary>
        public static Org.Apache.Kafka.Common.Message.ApiMessageType OFFSET_DELETE { get { return SGetField<Org.Apache.Kafka.Common.Message.ApiMessageType>(LocalBridgeClazz, "OFFSET_DELETE"); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/message/ApiMessageType.html#OFFSET_FETCH"/>
        /// </summary>
        public static Org.Apache.Kafka.Common.Message.ApiMessageType OFFSET_FETCH { get { return SGetField<Org.Apache.Kafka.Common.Message.ApiMessageType>(LocalBridgeClazz, "OFFSET_FETCH"); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/message/ApiMessageType.html#OFFSET_FOR_LEADER_EPOCH"/>
        /// </summary>
        public static Org.Apache.Kafka.Common.Message.ApiMessageType OFFSET_FOR_LEADER_EPOCH { get { return SGetField<Org.Apache.Kafka.Common.Message.ApiMessageType>(LocalBridgeClazz, "OFFSET_FOR_LEADER_EPOCH"); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/message/ApiMessageType.html#PRODUCE"/>
        /// </summary>
        public static Org.Apache.Kafka.Common.Message.ApiMessageType PRODUCE { get { return SGetField<Org.Apache.Kafka.Common.Message.ApiMessageType>(LocalBridgeClazz, "PRODUCE"); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/message/ApiMessageType.html#RENEW_DELEGATION_TOKEN"/>
        /// </summary>
        public static Org.Apache.Kafka.Common.Message.ApiMessageType RENEW_DELEGATION_TOKEN { get { return SGetField<Org.Apache.Kafka.Common.Message.ApiMessageType>(LocalBridgeClazz, "RENEW_DELEGATION_TOKEN"); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/message/ApiMessageType.html#SASL_AUTHENTICATE"/>
        /// </summary>
        public static Org.Apache.Kafka.Common.Message.ApiMessageType SASL_AUTHENTICATE { get { return SGetField<Org.Apache.Kafka.Common.Message.ApiMessageType>(LocalBridgeClazz, "SASL_AUTHENTICATE"); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/message/ApiMessageType.html#SASL_HANDSHAKE"/>
        /// </summary>
        public static Org.Apache.Kafka.Common.Message.ApiMessageType SASL_HANDSHAKE { get { return SGetField<Org.Apache.Kafka.Common.Message.ApiMessageType>(LocalBridgeClazz, "SASL_HANDSHAKE"); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/message/ApiMessageType.html#STOP_REPLICA"/>
        /// </summary>
        public static Org.Apache.Kafka.Common.Message.ApiMessageType STOP_REPLICA { get { return SGetField<Org.Apache.Kafka.Common.Message.ApiMessageType>(LocalBridgeClazz, "STOP_REPLICA"); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/message/ApiMessageType.html#SYNC_GROUP"/>
        /// </summary>
        public static Org.Apache.Kafka.Common.Message.ApiMessageType SYNC_GROUP { get { return SGetField<Org.Apache.Kafka.Common.Message.ApiMessageType>(LocalBridgeClazz, "SYNC_GROUP"); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/message/ApiMessageType.html#TXN_OFFSET_COMMIT"/>
        /// </summary>
        public static Org.Apache.Kafka.Common.Message.ApiMessageType TXN_OFFSET_COMMIT { get { return SGetField<Org.Apache.Kafka.Common.Message.ApiMessageType>(LocalBridgeClazz, "TXN_OFFSET_COMMIT"); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/message/ApiMessageType.html#UNREGISTER_BROKER"/>
        /// </summary>
        public static Org.Apache.Kafka.Common.Message.ApiMessageType UNREGISTER_BROKER { get { return SGetField<Org.Apache.Kafka.Common.Message.ApiMessageType>(LocalBridgeClazz, "UNREGISTER_BROKER"); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/message/ApiMessageType.html#UPDATE_FEATURES"/>
        /// </summary>
        public static Org.Apache.Kafka.Common.Message.ApiMessageType UPDATE_FEATURES { get { return SGetField<Org.Apache.Kafka.Common.Message.ApiMessageType>(LocalBridgeClazz, "UPDATE_FEATURES"); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/message/ApiMessageType.html#UPDATE_METADATA"/>
        /// </summary>
        public static Org.Apache.Kafka.Common.Message.ApiMessageType UPDATE_METADATA { get { return SGetField<Org.Apache.Kafka.Common.Message.ApiMessageType>(LocalBridgeClazz, "UPDATE_METADATA"); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/message/ApiMessageType.html#VOTE"/>
        /// </summary>
        public static Org.Apache.Kafka.Common.Message.ApiMessageType VOTE { get { return SGetField<Org.Apache.Kafka.Common.Message.ApiMessageType>(LocalBridgeClazz, "VOTE"); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/message/ApiMessageType.html#WRITE_TXN_MARKERS"/>
        /// </summary>
        public static Org.Apache.Kafka.Common.Message.ApiMessageType WRITE_TXN_MARKERS { get { return SGetField<Org.Apache.Kafka.Common.Message.ApiMessageType>(LocalBridgeClazz, "WRITE_TXN_MARKERS"); } }

        #endregion

        #region Static methods
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/message/ApiMessageType.html#fromApiKey(short)"/>
        /// </summary>
        /// <param name="arg0"><see cref="short"/></param>
        /// <returns><see cref="Org.Apache.Kafka.Common.Message.ApiMessageType"/></returns>
        public static Org.Apache.Kafka.Common.Message.ApiMessageType FromApiKey(short arg0)
        {
            return SExecute<Org.Apache.Kafka.Common.Message.ApiMessageType>(LocalBridgeClazz, "fromApiKey", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/message/ApiMessageType.html#valueOf(java.lang.String)"/>
        /// </summary>
        /// <param name="arg0"><see cref="string"/></param>
        /// <returns><see cref="Org.Apache.Kafka.Common.Message.ApiMessageType"/></returns>
        public static Org.Apache.Kafka.Common.Message.ApiMessageType ValueOf(string arg0)
        {
            return SExecute<Org.Apache.Kafka.Common.Message.ApiMessageType>(LocalBridgeClazz, "valueOf", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/message/ApiMessageType.html#values()"/>
        /// </summary>

        /// <returns><see cref="Org.Apache.Kafka.Common.Message.ApiMessageType"/></returns>
        public static Org.Apache.Kafka.Common.Message.ApiMessageType[] Values()
        {
            return SExecuteArray<Org.Apache.Kafka.Common.Message.ApiMessageType>(LocalBridgeClazz, "values");
        }

        #endregion

        #region Instance methods
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/message/ApiMessageType.html#listeners()"/>
        /// </summary>

        /// <returns><see cref="Java.Util.EnumSet"/></returns>
        public Java.Util.EnumSet Listeners()
        {
            return IExecute<Java.Util.EnumSet>("listeners");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/message/ApiMessageType.html#newRequest()"/>
        /// </summary>

        /// <returns><see cref="Org.Apache.Kafka.Common.Protocol.ApiMessage"/></returns>
        public Org.Apache.Kafka.Common.Protocol.ApiMessage NewRequest()
        {
            return IExecute<Org.Apache.Kafka.Common.Protocol.ApiMessage>("newRequest");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/message/ApiMessageType.html#newResponse()"/>
        /// </summary>

        /// <returns><see cref="Org.Apache.Kafka.Common.Protocol.ApiMessage"/></returns>
        public Org.Apache.Kafka.Common.Protocol.ApiMessage NewResponse()
        {
            return IExecute<Org.Apache.Kafka.Common.Protocol.ApiMessage>("newResponse");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/message/ApiMessageType.html#requestSchemas()"/>
        /// </summary>

        /// <returns><see cref="Org.Apache.Kafka.Common.Protocol.Types.Schema"/></returns>
        public Org.Apache.Kafka.Common.Protocol.Types.Schema[] RequestSchemas()
        {
            return IExecuteArray<Org.Apache.Kafka.Common.Protocol.Types.Schema>("requestSchemas");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/message/ApiMessageType.html#responseSchemas()"/>
        /// </summary>

        /// <returns><see cref="Org.Apache.Kafka.Common.Protocol.Types.Schema"/></returns>
        public Org.Apache.Kafka.Common.Protocol.Types.Schema[] ResponseSchemas()
        {
            return IExecuteArray<Org.Apache.Kafka.Common.Protocol.Types.Schema>("responseSchemas");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/message/ApiMessageType.html#apiKey()"/>
        /// </summary>

        /// <returns><see cref="short"/></returns>
        public short ApiKey()
        {
            return IExecute<short>("apiKey");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/message/ApiMessageType.html#highestSupportedVersion()"/>
        /// </summary>

        /// <returns><see cref="short"/></returns>
        public short HighestSupportedVersion()
        {
            return IExecute<short>("highestSupportedVersion");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/message/ApiMessageType.html#lowestSupportedVersion()"/>
        /// </summary>

        /// <returns><see cref="short"/></returns>
        public short LowestSupportedVersion()
        {
            return IExecute<short>("lowestSupportedVersion");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/message/ApiMessageType.html#requestHeaderVersion(short)"/>
        /// </summary>
        /// <param name="arg0"><see cref="short"/></param>
        /// <returns><see cref="short"/></returns>
        public short RequestHeaderVersion(short arg0)
        {
            return IExecute<short>("requestHeaderVersion", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/message/ApiMessageType.html#responseHeaderVersion(short)"/>
        /// </summary>
        /// <param name="arg0"><see cref="short"/></param>
        /// <returns><see cref="short"/></returns>
        public short ResponseHeaderVersion(short arg0)
        {
            return IExecute<short>("responseHeaderVersion", arg0);
        }

        #endregion

        #region Nested classes
        #region ListenerType
        public partial class ListenerType
        {
            #region Constructors

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields
            /// <summary>
            /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/message/ApiMessageType.ListenerType.html#BROKER"/>
            /// </summary>
            public static Org.Apache.Kafka.Common.Message.ApiMessageType.ListenerType BROKER { get { return SGetField<Org.Apache.Kafka.Common.Message.ApiMessageType.ListenerType>(LocalBridgeClazz, "BROKER"); } }
            /// <summary>
            /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/message/ApiMessageType.ListenerType.html#CONTROLLER"/>
            /// </summary>
            public static Org.Apache.Kafka.Common.Message.ApiMessageType.ListenerType CONTROLLER { get { return SGetField<Org.Apache.Kafka.Common.Message.ApiMessageType.ListenerType>(LocalBridgeClazz, "CONTROLLER"); } }
            /// <summary>
            /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/message/ApiMessageType.ListenerType.html#ZK_BROKER"/>
            /// </summary>
            public static Org.Apache.Kafka.Common.Message.ApiMessageType.ListenerType ZK_BROKER { get { return SGetField<Org.Apache.Kafka.Common.Message.ApiMessageType.ListenerType>(LocalBridgeClazz, "ZK_BROKER"); } }

            #endregion

            #region Static methods
            /// <summary>
            /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/message/ApiMessageType.ListenerType.html#valueOf(java.lang.String)"/>
            /// </summary>
            /// <param name="arg0"><see cref="string"/></param>
            /// <returns><see cref="Org.Apache.Kafka.Common.Message.ApiMessageType.ListenerType"/></returns>
            public static Org.Apache.Kafka.Common.Message.ApiMessageType.ListenerType ValueOf(string arg0)
            {
                return SExecute<Org.Apache.Kafka.Common.Message.ApiMessageType.ListenerType>(LocalBridgeClazz, "valueOf", arg0);
            }
            /// <summary>
            /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/message/ApiMessageType.ListenerType.html#values()"/>
            /// </summary>

            /// <returns><see cref="Org.Apache.Kafka.Common.Message.ApiMessageType.ListenerType"/></returns>
            public static Org.Apache.Kafka.Common.Message.ApiMessageType.ListenerType[] Values()
            {
                return SExecuteArray<Org.Apache.Kafka.Common.Message.ApiMessageType.ListenerType>(LocalBridgeClazz, "values");
            }

            #endregion

            #region Instance methods

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

    
        #endregion

        // TODO: complete the class
    }
    #endregion
}