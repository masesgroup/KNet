/*
*  Copyright 2023 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 1.5.5.0)
*  using kafka-clients-3.4.0.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Org.Apache.Kafka.Common.Security.Scram.Internals
{
    #region ScramMechanism
    public partial class ScramMechanism
    {
        #region Constructors

        #endregion

        #region Class/Interface conversion operators

        #endregion

        #region Fields
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/security/scram/internals/ScramMechanism.html#SCRAM_SHA_256"/>
        /// </summary>
        public static Org.Apache.Kafka.Common.Security.Scram.Internals.ScramMechanism SCRAM_SHA_256 { get { return SGetField<Org.Apache.Kafka.Common.Security.Scram.Internals.ScramMechanism>(LocalBridgeClazz, "SCRAM_SHA_256"); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/security/scram/internals/ScramMechanism.html#SCRAM_SHA_512"/>
        /// </summary>
        public static Org.Apache.Kafka.Common.Security.Scram.Internals.ScramMechanism SCRAM_SHA_512 { get { return SGetField<Org.Apache.Kafka.Common.Security.Scram.Internals.ScramMechanism>(LocalBridgeClazz, "SCRAM_SHA_512"); } }

        #endregion

        #region Static methods
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/security/scram/internals/ScramMechanism.html#mechanismNames()"/> 
        /// </summary>
        public static Java.Util.Collection<string> MechanismNames
        {
            get { return SExecute<Java.Util.Collection<string>>(LocalBridgeClazz, "mechanismNames"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/security/scram/internals/ScramMechanism.html#values()"/> 
        /// </summary>
        public static Org.Apache.Kafka.Common.Security.Scram.Internals.ScramMechanism[] Values
        {
            get { return SExecuteArray<Org.Apache.Kafka.Common.Security.Scram.Internals.ScramMechanism>(LocalBridgeClazz, "values"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/security/scram/internals/ScramMechanism.html#isScram(java.lang.String)"/>
        /// </summary>
        /// <param name="arg0"><see cref="string"/></param>
        /// <returns><see cref="bool"/></returns>
        public static bool IsScram(string arg0)
        {
            return SExecute<bool>(LocalBridgeClazz, "isScram", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/security/scram/internals/ScramMechanism.html#forMechanismName(java.lang.String)"/>
        /// </summary>
        /// <param name="arg0"><see cref="string"/></param>
        /// <returns><see cref="Org.Apache.Kafka.Common.Security.Scram.Internals.ScramMechanism"/></returns>
        public static Org.Apache.Kafka.Common.Security.Scram.Internals.ScramMechanism ForMechanismName(string arg0)
        {
            return SExecute<Org.Apache.Kafka.Common.Security.Scram.Internals.ScramMechanism>(LocalBridgeClazz, "forMechanismName", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/security/scram/internals/ScramMechanism.html#valueOf(java.lang.String)"/>
        /// </summary>
        /// <param name="arg0"><see cref="string"/></param>
        /// <returns><see cref="Org.Apache.Kafka.Common.Security.Scram.Internals.ScramMechanism"/></returns>
        public static Org.Apache.Kafka.Common.Security.Scram.Internals.ScramMechanism ValueOf(string arg0)
        {
            return SExecute<Org.Apache.Kafka.Common.Security.Scram.Internals.ScramMechanism>(LocalBridgeClazz, "valueOf", arg0);
        }

        #endregion

        #region Instance methods
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/security/scram/internals/ScramMechanism.html#hashAlgorithm()"/> 
        /// </summary>
        public string HashAlgorithm
        {
            get { return IExecute<string>("hashAlgorithm"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/security/scram/internals/ScramMechanism.html#macAlgorithm()"/> 
        /// </summary>
        public string MacAlgorithm
        {
            get { return IExecute<string>("macAlgorithm"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/security/scram/internals/ScramMechanism.html#mechanismName()"/> 
        /// </summary>
        public string MechanismName
        {
            get { return IExecute<string>("mechanismName"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/security/scram/internals/ScramMechanism.html#minIterations()"/> 
        /// </summary>
        public int MinIterations
        {
            get { return IExecute<int>("minIterations"); }
        }

        #endregion

        #region Nested classes

        #endregion

        // TODO: complete the class
    }
    #endregion
}