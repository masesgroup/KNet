/*
*  Copyright 2023 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 1.5.5.0)
*  using kafka-clients-3.4.0.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Org.Apache.Kafka.Common.Requests
{
    #region MetadataResponse
    public partial class MetadataResponse
    {
        #region Constructors
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/requests/MetadataResponse.html#%3Cinit%3E(org.apache.kafka.common.message.MetadataResponseData,short)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Common.Message.MetadataResponseData"/></param>
        /// <param name="arg1"><see cref="short"/></param>
        public MetadataResponse(Org.Apache.Kafka.Common.Message.MetadataResponseData arg0, short arg1)
            : base(arg0, arg1)
        {
        }

        #endregion

        #region Class/Interface conversion operators

        #endregion

        #region Fields
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/requests/MetadataResponse.html#AUTHORIZED_OPERATIONS_OMITTED"/>
        /// </summary>
        public static int AUTHORIZED_OPERATIONS_OMITTED { get { return SGetField<int>(LocalBridgeClazz, "AUTHORIZED_OPERATIONS_OMITTED"); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/requests/MetadataResponse.html#NO_CONTROLLER_ID"/>
        /// </summary>
        public static int NO_CONTROLLER_ID { get { return SGetField<int>(LocalBridgeClazz, "NO_CONTROLLER_ID"); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/requests/MetadataResponse.html#NO_LEADER_ID"/>
        /// </summary>
        public static int NO_LEADER_ID { get { return SGetField<int>(LocalBridgeClazz, "NO_LEADER_ID"); } }

        #endregion

        #region Static methods
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/requests/MetadataResponse.html#toPartitionInfo(org.apache.kafka.common.requests.MetadataResponse.PartitionMetadata,java.util.Map)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Common.Requests.MetadataResponse.PartitionMetadata"/></param>
        /// <param name="arg1"><see cref="Java.Util.Map"/></param>
        /// <returns><see cref="Org.Apache.Kafka.Common.PartitionInfo"/></returns>
        public static Org.Apache.Kafka.Common.PartitionInfo ToPartitionInfo(Org.Apache.Kafka.Common.Requests.MetadataResponse.PartitionMetadata arg0, Java.Util.Map<int?, Org.Apache.Kafka.Common.Node> arg1)
        {
            return SExecute<Org.Apache.Kafka.Common.PartitionInfo>(LocalBridgeClazz, "toPartitionInfo", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/requests/MetadataResponse.html#parse(java.nio.ByteBuffer,short)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Nio.ByteBuffer"/></param>
        /// <param name="arg1"><see cref="short"/></param>
        /// <returns><see cref="Org.Apache.Kafka.Common.Requests.MetadataResponse"/></returns>
        public static Org.Apache.Kafka.Common.Requests.MetadataResponse Parse(Java.Nio.ByteBuffer arg0, short arg1)
        {
            return SExecute<Org.Apache.Kafka.Common.Requests.MetadataResponse>(LocalBridgeClazz, "parse", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/requests/MetadataResponse.html#prepareResponse(boolean,int,java.util.Collection,java.lang.String,int,java.util.List,int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="bool"/></param>
        /// <param name="arg1"><see cref="int"/></param>
        /// <param name="arg2"><see cref="Java.Util.Collection"/></param>
        /// <param name="arg3"><see cref="string"/></param>
        /// <param name="arg4"><see cref="int"/></param>
        /// <param name="arg5"><see cref="Java.Util.List"/></param>
        /// <param name="arg6"><see cref="int"/></param>
        /// <returns><see cref="Org.Apache.Kafka.Common.Requests.MetadataResponse"/></returns>
        public static Org.Apache.Kafka.Common.Requests.MetadataResponse PrepareResponse(bool arg0, int arg1, Java.Util.Collection<Org.Apache.Kafka.Common.Node> arg2, string arg3, int arg4, Java.Util.List<Org.Apache.Kafka.Common.Message.MetadataResponseData.MetadataResponseTopic> arg5, int arg6)
        {
            return SExecute<Org.Apache.Kafka.Common.Requests.MetadataResponse>(LocalBridgeClazz, "prepareResponse", arg0, arg1, arg2, arg3, arg4, arg5, arg6);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/requests/MetadataResponse.html#prepareResponse(short,int,java.util.Collection,java.lang.String,int,java.util.List,int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="short"/></param>
        /// <param name="arg1"><see cref="int"/></param>
        /// <param name="arg2"><see cref="Java.Util.Collection"/></param>
        /// <param name="arg3"><see cref="string"/></param>
        /// <param name="arg4"><see cref="int"/></param>
        /// <param name="arg5"><see cref="Java.Util.List"/></param>
        /// <param name="arg6"><see cref="int"/></param>
        /// <returns><see cref="Org.Apache.Kafka.Common.Requests.MetadataResponse"/></returns>
        public static Org.Apache.Kafka.Common.Requests.MetadataResponse PrepareResponse(short arg0, int arg1, Java.Util.Collection<Org.Apache.Kafka.Common.Node> arg2, string arg3, int arg4, Java.Util.List<Org.Apache.Kafka.Common.Message.MetadataResponseData.MetadataResponseTopic> arg5, int arg6)
        {
            return SExecute<Org.Apache.Kafka.Common.Requests.MetadataResponse>(LocalBridgeClazz, "prepareResponse", arg0, arg1, arg2, arg3, arg4, arg5, arg6);
        }

        #endregion

        #region Instance methods
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/requests/MetadataResponse.html#hasReliableLeaderEpochs()"/>
        /// </summary>

        /// <returns><see cref="bool"/></returns>
        public bool HasReliableLeaderEpochs()
        {
            return IExecute<bool>("hasReliableLeaderEpochs");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/requests/MetadataResponse.html#clusterAuthorizedOperations()"/>
        /// </summary>

        /// <returns><see cref="int"/></returns>
        public int ClusterAuthorizedOperations()
        {
            return IExecute<int>("clusterAuthorizedOperations");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/requests/MetadataResponse.html#clusterId()"/>
        /// </summary>

        /// <returns><see cref="string"/></returns>
        public string ClusterId()
        {
            return IExecute<string>("clusterId");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/requests/MetadataResponse.html#brokers()"/>
        /// </summary>

        /// <returns><see cref="Java.Util.Collection"/></returns>
        public Java.Util.Collection<Org.Apache.Kafka.Common.Node> Brokers()
        {
            return IExecute<Java.Util.Collection<Org.Apache.Kafka.Common.Node>>("brokers");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/requests/MetadataResponse.html#topicMetadata()"/>
        /// </summary>

        /// <returns><see cref="Java.Util.Collection"/></returns>
        public Java.Util.Collection<Org.Apache.Kafka.Common.Requests.MetadataResponse.TopicMetadata> TopicMetadataMethod()
        {
            return IExecute<Java.Util.Collection<Org.Apache.Kafka.Common.Requests.MetadataResponse.TopicMetadata>>("topicMetadata");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/requests/MetadataResponse.html#brokersById()"/>
        /// </summary>

        /// <returns><see cref="Java.Util.Map"/></returns>
        public Java.Util.Map<int?, Org.Apache.Kafka.Common.Node> BrokersById()
        {
            return IExecute<Java.Util.Map<int?, Org.Apache.Kafka.Common.Node>>("brokersById");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/requests/MetadataResponse.html#errors()"/>
        /// </summary>

        /// <returns><see cref="Java.Util.Map"/></returns>
        public Java.Util.Map<string, Org.Apache.Kafka.Common.Protocol.Errors> Errors()
        {
            return IExecute<Java.Util.Map<string, Org.Apache.Kafka.Common.Protocol.Errors>>("errors");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/requests/MetadataResponse.html#errorsByTopicId()"/>
        /// </summary>

        /// <returns><see cref="Java.Util.Map"/></returns>
        public Java.Util.Map<Org.Apache.Kafka.Common.Uuid, Org.Apache.Kafka.Common.Protocol.Errors> ErrorsByTopicId()
        {
            return IExecute<Java.Util.Map<Org.Apache.Kafka.Common.Uuid, Org.Apache.Kafka.Common.Protocol.Errors>>("errorsByTopicId");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/requests/MetadataResponse.html#topicAuthorizedOperations(java.lang.String)"/>
        /// </summary>
        /// <param name="arg0"><see cref="string"/></param>
        /// <returns><see cref="Java.Util.Optional"/></returns>
        public Java.Util.Optional<int?> TopicAuthorizedOperations(string arg0)
        {
            return IExecute<Java.Util.Optional<int?>>("topicAuthorizedOperations", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/requests/MetadataResponse.html#topicsByError(org.apache.kafka.common.protocol.Errors)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Common.Protocol.Errors"/></param>
        /// <returns><see cref="Java.Util.Set"/></returns>
        public Java.Util.Set<string> TopicsByError(Org.Apache.Kafka.Common.Protocol.Errors arg0)
        {
            return IExecute<Java.Util.Set<string>>("topicsByError", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/requests/MetadataResponse.html#buildCluster()"/>
        /// </summary>

        /// <returns><see cref="Org.Apache.Kafka.Common.Cluster"/></returns>
        public Org.Apache.Kafka.Common.Cluster BuildCluster()
        {
            return IExecute<Org.Apache.Kafka.Common.Cluster>("buildCluster");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/requests/MetadataResponse.html#controller()"/>
        /// </summary>

        /// <returns><see cref="Org.Apache.Kafka.Common.Node"/></returns>
        public Org.Apache.Kafka.Common.Node Controller()
        {
            return IExecute<Org.Apache.Kafka.Common.Node>("controller");
        }

        #endregion

        #region Nested classes
        #region PartitionMetadata
        public partial class PartitionMetadata
        {
            #region Constructors
            /// <summary>
            /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/requests/MetadataResponse.PartitionMetadata.html#%3Cinit%3E(org.apache.kafka.common.protocol.Errors,org.apache.kafka.common.TopicPartition,java.util.Optional,java.util.Optional,java.util.List,java.util.List,java.util.List)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Org.Apache.Kafka.Common.Protocol.Errors"/></param>
            /// <param name="arg1"><see cref="Org.Apache.Kafka.Common.TopicPartition"/></param>
            /// <param name="arg2"><see cref="Java.Util.Optional"/></param>
            /// <param name="arg3"><see cref="Java.Util.Optional"/></param>
            /// <param name="arg4"><see cref="Java.Util.List"/></param>
            /// <param name="arg5"><see cref="Java.Util.List"/></param>
            /// <param name="arg6"><see cref="Java.Util.List"/></param>
            public PartitionMetadata(Org.Apache.Kafka.Common.Protocol.Errors arg0, Org.Apache.Kafka.Common.TopicPartition arg1, Java.Util.Optional<int?> arg2, Java.Util.Optional<int?> arg3, Java.Util.List<int?> arg4, Java.Util.List<int?> arg5, Java.Util.List<int?> arg6)
                : base(arg0, arg1, arg2, arg3, arg4, arg5, arg6)
            {
            }

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields
            /// <summary>
            /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/requests/MetadataResponse.PartitionMetadata.html#inSyncReplicaIds"/>
            /// </summary>
            public Java.Util.List inSyncReplicaIds { get { return IGetField<Java.Util.List>("inSyncReplicaIds"); } }
            /// <summary>
            /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/requests/MetadataResponse.PartitionMetadata.html#offlineReplicaIds"/>
            /// </summary>
            public Java.Util.List offlineReplicaIds { get { return IGetField<Java.Util.List>("offlineReplicaIds"); } }
            /// <summary>
            /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/requests/MetadataResponse.PartitionMetadata.html#replicaIds"/>
            /// </summary>
            public Java.Util.List replicaIds { get { return IGetField<Java.Util.List>("replicaIds"); } }
            /// <summary>
            /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/requests/MetadataResponse.PartitionMetadata.html#leaderEpoch"/>
            /// </summary>
            public Java.Util.Optional leaderEpoch { get { return IGetField<Java.Util.Optional>("leaderEpoch"); } }
            /// <summary>
            /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/requests/MetadataResponse.PartitionMetadata.html#leaderId"/>
            /// </summary>
            public Java.Util.Optional leaderId { get { return IGetField<Java.Util.Optional>("leaderId"); } }
            /// <summary>
            /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/requests/MetadataResponse.PartitionMetadata.html#error"/>
            /// </summary>
            public Org.Apache.Kafka.Common.Protocol.Errors error { get { return IGetField<Org.Apache.Kafka.Common.Protocol.Errors>("error"); } }
            /// <summary>
            /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/requests/MetadataResponse.PartitionMetadata.html#topicPartition"/>
            /// </summary>
            public Org.Apache.Kafka.Common.TopicPartition topicPartition { get { return IGetField<Org.Apache.Kafka.Common.TopicPartition>("topicPartition"); } }

            #endregion

            #region Static methods

            #endregion

            #region Instance methods
            /// <summary>
            /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/requests/MetadataResponse.PartitionMetadata.html#partition()"/>
            /// </summary>

            /// <returns><see cref="int"/></returns>
            public int Partition()
            {
                return IExecute<int>("partition");
            }
            /// <summary>
            /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/requests/MetadataResponse.PartitionMetadata.html#topic()"/>
            /// </summary>

            /// <returns><see cref="string"/></returns>
            public string Topic()
            {
                return IExecute<string>("topic");
            }
            /// <summary>
            /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/requests/MetadataResponse.PartitionMetadata.html#withoutLeaderEpoch()"/>
            /// </summary>

            /// <returns><see cref="Org.Apache.Kafka.Common.Requests.MetadataResponse.PartitionMetadata"/></returns>
            public Org.Apache.Kafka.Common.Requests.MetadataResponse.PartitionMetadata WithoutLeaderEpoch()
            {
                return IExecute<Org.Apache.Kafka.Common.Requests.MetadataResponse.PartitionMetadata>("withoutLeaderEpoch");
            }

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

        #region TopicMetadata
        public partial class TopicMetadata
        {
            #region Constructors
            /// <summary>
            /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/requests/MetadataResponse.TopicMetadata.html#%3Cinit%3E(org.apache.kafka.common.protocol.Errors,java.lang.String,boolean,java.util.List)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Org.Apache.Kafka.Common.Protocol.Errors"/></param>
            /// <param name="arg1"><see cref="string"/></param>
            /// <param name="arg2"><see cref="bool"/></param>
            /// <param name="arg3"><see cref="Java.Util.List"/></param>
            public TopicMetadata(Org.Apache.Kafka.Common.Protocol.Errors arg0, string arg1, bool arg2, Java.Util.List<Org.Apache.Kafka.Common.Requests.MetadataResponse.PartitionMetadata> arg3)
                : base(arg0, arg1, arg2, arg3)
            {
            }
            /// <summary>
            /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/requests/MetadataResponse.TopicMetadata.html#%3Cinit%3E(org.apache.kafka.common.protocol.Errors,java.lang.String,org.apache.kafka.common.Uuid,boolean,java.util.List,int)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Org.Apache.Kafka.Common.Protocol.Errors"/></param>
            /// <param name="arg1"><see cref="string"/></param>
            /// <param name="arg2"><see cref="Org.Apache.Kafka.Common.Uuid"/></param>
            /// <param name="arg3"><see cref="bool"/></param>
            /// <param name="arg4"><see cref="Java.Util.List"/></param>
            /// <param name="arg5"><see cref="int"/></param>
            public TopicMetadata(Org.Apache.Kafka.Common.Protocol.Errors arg0, string arg1, Org.Apache.Kafka.Common.Uuid arg2, bool arg3, Java.Util.List<Org.Apache.Kafka.Common.Requests.MetadataResponse.PartitionMetadata> arg4, int arg5)
                : base(arg0, arg1, arg2, arg3, arg4, arg5)
            {
            }

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields

            #endregion

            #region Static methods

            #endregion

            #region Instance methods
            /// <summary>
            /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/requests/MetadataResponse.TopicMetadata.html#isInternal()"/>
            /// </summary>

            /// <returns><see cref="bool"/></returns>
            public bool IsInternal()
            {
                return IExecute<bool>("isInternal");
            }
            /// <summary>
            /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/requests/MetadataResponse.TopicMetadata.html#authorizedOperations()"/>
            /// </summary>

            /// <returns><see cref="int"/></returns>
            public int AuthorizedOperations()
            {
                return IExecute<int>("authorizedOperations");
            }
            /// <summary>
            /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/requests/MetadataResponse.TopicMetadata.html#topic()"/>
            /// </summary>

            /// <returns><see cref="string"/></returns>
            public string Topic()
            {
                return IExecute<string>("topic");
            }
            /// <summary>
            /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/requests/MetadataResponse.TopicMetadata.html#partitionMetadata()"/>
            /// </summary>

            /// <returns><see cref="Java.Util.List"/></returns>
            public Java.Util.List<Org.Apache.Kafka.Common.Requests.MetadataResponse.PartitionMetadata> PartitionMetadataMethod()
            {
                return IExecute<Java.Util.List<Org.Apache.Kafka.Common.Requests.MetadataResponse.PartitionMetadata>>("partitionMetadata");
            }
            /// <summary>
            /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/requests/MetadataResponse.TopicMetadata.html#error()"/>
            /// </summary>

            /// <returns><see cref="Org.Apache.Kafka.Common.Protocol.Errors"/></returns>
            public Org.Apache.Kafka.Common.Protocol.Errors Error()
            {
                return IExecute<Org.Apache.Kafka.Common.Protocol.Errors>("error");
            }
            /// <summary>
            /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/requests/MetadataResponse.TopicMetadata.html#topicId()"/>
            /// </summary>

            /// <returns><see cref="Org.Apache.Kafka.Common.Uuid"/></returns>
            public Org.Apache.Kafka.Common.Uuid TopicId()
            {
                return IExecute<Org.Apache.Kafka.Common.Uuid>("topicId");
            }
            /// <summary>
            /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/requests/MetadataResponse.TopicMetadata.html#authorizedOperations(int)"/>
            /// </summary>
            /// <param name="arg0"><see cref="int"/></param>
            public void AuthorizedOperations(int arg0)
            {
                IExecute("authorizedOperations", arg0);
            }

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

    
        #endregion

        // TODO: complete the class
    }
    #endregion
}