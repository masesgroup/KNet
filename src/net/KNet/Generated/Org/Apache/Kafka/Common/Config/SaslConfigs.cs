/*
*  Copyright 2023 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 2.1.0.0)
*  using kafka-clients-3.6.0.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Org.Apache.Kafka.Common.Config
{
    #region SaslConfigs
    public partial class SaslConfigs
    {
        #region Constructors

        #endregion

        #region Class/Interface conversion operators

        #endregion

        #region Fields
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.6.0/org/apache/kafka/common/config/SaslConfigs.html#DEFAULT_KERBEROS_TICKET_RENEW_JITTER"/>
        /// </summary>
        public static double DEFAULT_KERBEROS_TICKET_RENEW_JITTER { get { return SGetField<double>(LocalBridgeClazz, "DEFAULT_KERBEROS_TICKET_RENEW_JITTER"); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.6.0/org/apache/kafka/common/config/SaslConfigs.html#DEFAULT_KERBEROS_TICKET_RENEW_WINDOW_FACTOR"/>
        /// </summary>
        public static double DEFAULT_KERBEROS_TICKET_RENEW_WINDOW_FACTOR { get { return SGetField<double>(LocalBridgeClazz, "DEFAULT_KERBEROS_TICKET_RENEW_WINDOW_FACTOR"); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.6.0/org/apache/kafka/common/config/SaslConfigs.html#DEFAULT_LOGIN_REFRESH_WINDOW_FACTOR"/>
        /// </summary>
        public static double DEFAULT_LOGIN_REFRESH_WINDOW_FACTOR { get { return SGetField<double>(LocalBridgeClazz, "DEFAULT_LOGIN_REFRESH_WINDOW_FACTOR"); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.6.0/org/apache/kafka/common/config/SaslConfigs.html#DEFAULT_LOGIN_REFRESH_WINDOW_JITTER"/>
        /// </summary>
        public static double DEFAULT_LOGIN_REFRESH_WINDOW_JITTER { get { return SGetField<double>(LocalBridgeClazz, "DEFAULT_LOGIN_REFRESH_WINDOW_JITTER"); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.6.0/org/apache/kafka/common/config/SaslConfigs.html#DEFAULT_SASL_OAUTHBEARER_CLOCK_SKEW_SECONDS"/>
        /// </summary>
        public static int DEFAULT_SASL_OAUTHBEARER_CLOCK_SKEW_SECONDS { get { return SGetField<int>(LocalBridgeClazz, "DEFAULT_SASL_OAUTHBEARER_CLOCK_SKEW_SECONDS"); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.6.0/org/apache/kafka/common/config/SaslConfigs.html#DEFAULT_KERBEROS_KINIT_CMD"/>
        /// </summary>
        public static string DEFAULT_KERBEROS_KINIT_CMD { get { return SGetField<string>(LocalBridgeClazz, "DEFAULT_KERBEROS_KINIT_CMD"); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.6.0/org/apache/kafka/common/config/SaslConfigs.html#DEFAULT_SASL_MECHANISM"/>
        /// </summary>
        public static string DEFAULT_SASL_MECHANISM { get { return SGetField<string>(LocalBridgeClazz, "DEFAULT_SASL_MECHANISM"); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.6.0/org/apache/kafka/common/config/SaslConfigs.html#DEFAULT_SASL_OAUTHBEARER_SCOPE_CLAIM_NAME"/>
        /// </summary>
        public static string DEFAULT_SASL_OAUTHBEARER_SCOPE_CLAIM_NAME { get { return SGetField<string>(LocalBridgeClazz, "DEFAULT_SASL_OAUTHBEARER_SCOPE_CLAIM_NAME"); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.6.0/org/apache/kafka/common/config/SaslConfigs.html#DEFAULT_SASL_OAUTHBEARER_SUB_CLAIM_NAME"/>
        /// </summary>
        public static string DEFAULT_SASL_OAUTHBEARER_SUB_CLAIM_NAME { get { return SGetField<string>(LocalBridgeClazz, "DEFAULT_SASL_OAUTHBEARER_SUB_CLAIM_NAME"); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.6.0/org/apache/kafka/common/config/SaslConfigs.html#GSSAPI_MECHANISM"/>
        /// </summary>
        public static string GSSAPI_MECHANISM { get { return SGetField<string>(LocalBridgeClazz, "GSSAPI_MECHANISM"); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.6.0/org/apache/kafka/common/config/SaslConfigs.html#SASL_CLIENT_CALLBACK_HANDLER_CLASS"/>
        /// </summary>
        public static string SASL_CLIENT_CALLBACK_HANDLER_CLASS { get { return SGetField<string>(LocalBridgeClazz, "SASL_CLIENT_CALLBACK_HANDLER_CLASS"); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.6.0/org/apache/kafka/common/config/SaslConfigs.html#SASL_CLIENT_CALLBACK_HANDLER_CLASS_DOC"/>
        /// </summary>
        public static string SASL_CLIENT_CALLBACK_HANDLER_CLASS_DOC { get { return SGetField<string>(LocalBridgeClazz, "SASL_CLIENT_CALLBACK_HANDLER_CLASS_DOC"); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.6.0/org/apache/kafka/common/config/SaslConfigs.html#SASL_JAAS_CONFIG"/>
        /// </summary>
        public static string SASL_JAAS_CONFIG { get { return SGetField<string>(LocalBridgeClazz, "SASL_JAAS_CONFIG"); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.6.0/org/apache/kafka/common/config/SaslConfigs.html#SASL_JAAS_CONFIG_DOC"/>
        /// </summary>
        public static string SASL_JAAS_CONFIG_DOC { get { return SGetField<string>(LocalBridgeClazz, "SASL_JAAS_CONFIG_DOC"); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.6.0/org/apache/kafka/common/config/SaslConfigs.html#SASL_KERBEROS_KINIT_CMD"/>
        /// </summary>
        public static string SASL_KERBEROS_KINIT_CMD { get { return SGetField<string>(LocalBridgeClazz, "SASL_KERBEROS_KINIT_CMD"); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.6.0/org/apache/kafka/common/config/SaslConfigs.html#SASL_KERBEROS_KINIT_CMD_DOC"/>
        /// </summary>
        public static string SASL_KERBEROS_KINIT_CMD_DOC { get { return SGetField<string>(LocalBridgeClazz, "SASL_KERBEROS_KINIT_CMD_DOC"); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.6.0/org/apache/kafka/common/config/SaslConfigs.html#SASL_KERBEROS_MIN_TIME_BEFORE_RELOGIN"/>
        /// </summary>
        public static string SASL_KERBEROS_MIN_TIME_BEFORE_RELOGIN { get { return SGetField<string>(LocalBridgeClazz, "SASL_KERBEROS_MIN_TIME_BEFORE_RELOGIN"); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.6.0/org/apache/kafka/common/config/SaslConfigs.html#SASL_KERBEROS_MIN_TIME_BEFORE_RELOGIN_DOC"/>
        /// </summary>
        public static string SASL_KERBEROS_MIN_TIME_BEFORE_RELOGIN_DOC { get { return SGetField<string>(LocalBridgeClazz, "SASL_KERBEROS_MIN_TIME_BEFORE_RELOGIN_DOC"); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.6.0/org/apache/kafka/common/config/SaslConfigs.html#SASL_KERBEROS_SERVICE_NAME"/>
        /// </summary>
        public static string SASL_KERBEROS_SERVICE_NAME { get { return SGetField<string>(LocalBridgeClazz, "SASL_KERBEROS_SERVICE_NAME"); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.6.0/org/apache/kafka/common/config/SaslConfigs.html#SASL_KERBEROS_SERVICE_NAME_DOC"/>
        /// </summary>
        public static string SASL_KERBEROS_SERVICE_NAME_DOC { get { return SGetField<string>(LocalBridgeClazz, "SASL_KERBEROS_SERVICE_NAME_DOC"); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.6.0/org/apache/kafka/common/config/SaslConfigs.html#SASL_KERBEROS_TICKET_RENEW_JITTER"/>
        /// </summary>
        public static string SASL_KERBEROS_TICKET_RENEW_JITTER { get { return SGetField<string>(LocalBridgeClazz, "SASL_KERBEROS_TICKET_RENEW_JITTER"); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.6.0/org/apache/kafka/common/config/SaslConfigs.html#SASL_KERBEROS_TICKET_RENEW_JITTER_DOC"/>
        /// </summary>
        public static string SASL_KERBEROS_TICKET_RENEW_JITTER_DOC { get { return SGetField<string>(LocalBridgeClazz, "SASL_KERBEROS_TICKET_RENEW_JITTER_DOC"); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.6.0/org/apache/kafka/common/config/SaslConfigs.html#SASL_KERBEROS_TICKET_RENEW_WINDOW_FACTOR"/>
        /// </summary>
        public static string SASL_KERBEROS_TICKET_RENEW_WINDOW_FACTOR { get { return SGetField<string>(LocalBridgeClazz, "SASL_KERBEROS_TICKET_RENEW_WINDOW_FACTOR"); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.6.0/org/apache/kafka/common/config/SaslConfigs.html#SASL_KERBEROS_TICKET_RENEW_WINDOW_FACTOR_DOC"/>
        /// </summary>
        public static string SASL_KERBEROS_TICKET_RENEW_WINDOW_FACTOR_DOC { get { return SGetField<string>(LocalBridgeClazz, "SASL_KERBEROS_TICKET_RENEW_WINDOW_FACTOR_DOC"); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.6.0/org/apache/kafka/common/config/SaslConfigs.html#SASL_LOGIN_CALLBACK_HANDLER_CLASS"/>
        /// </summary>
        public static string SASL_LOGIN_CALLBACK_HANDLER_CLASS { get { return SGetField<string>(LocalBridgeClazz, "SASL_LOGIN_CALLBACK_HANDLER_CLASS"); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.6.0/org/apache/kafka/common/config/SaslConfigs.html#SASL_LOGIN_CALLBACK_HANDLER_CLASS_DOC"/>
        /// </summary>
        public static string SASL_LOGIN_CALLBACK_HANDLER_CLASS_DOC { get { return SGetField<string>(LocalBridgeClazz, "SASL_LOGIN_CALLBACK_HANDLER_CLASS_DOC"); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.6.0/org/apache/kafka/common/config/SaslConfigs.html#SASL_LOGIN_CLASS"/>
        /// </summary>
        public static string SASL_LOGIN_CLASS { get { return SGetField<string>(LocalBridgeClazz, "SASL_LOGIN_CLASS"); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.6.0/org/apache/kafka/common/config/SaslConfigs.html#SASL_LOGIN_CLASS_DOC"/>
        /// </summary>
        public static string SASL_LOGIN_CLASS_DOC { get { return SGetField<string>(LocalBridgeClazz, "SASL_LOGIN_CLASS_DOC"); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.6.0/org/apache/kafka/common/config/SaslConfigs.html#SASL_LOGIN_CONNECT_TIMEOUT_MS"/>
        /// </summary>
        public static string SASL_LOGIN_CONNECT_TIMEOUT_MS { get { return SGetField<string>(LocalBridgeClazz, "SASL_LOGIN_CONNECT_TIMEOUT_MS"); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.6.0/org/apache/kafka/common/config/SaslConfigs.html#SASL_LOGIN_CONNECT_TIMEOUT_MS_DOC"/>
        /// </summary>
        public static string SASL_LOGIN_CONNECT_TIMEOUT_MS_DOC { get { return SGetField<string>(LocalBridgeClazz, "SASL_LOGIN_CONNECT_TIMEOUT_MS_DOC"); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.6.0/org/apache/kafka/common/config/SaslConfigs.html#SASL_LOGIN_READ_TIMEOUT_MS"/>
        /// </summary>
        public static string SASL_LOGIN_READ_TIMEOUT_MS { get { return SGetField<string>(LocalBridgeClazz, "SASL_LOGIN_READ_TIMEOUT_MS"); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.6.0/org/apache/kafka/common/config/SaslConfigs.html#SASL_LOGIN_READ_TIMEOUT_MS_DOC"/>
        /// </summary>
        public static string SASL_LOGIN_READ_TIMEOUT_MS_DOC { get { return SGetField<string>(LocalBridgeClazz, "SASL_LOGIN_READ_TIMEOUT_MS_DOC"); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.6.0/org/apache/kafka/common/config/SaslConfigs.html#SASL_LOGIN_REFRESH_BUFFER_SECONDS"/>
        /// </summary>
        public static string SASL_LOGIN_REFRESH_BUFFER_SECONDS { get { return SGetField<string>(LocalBridgeClazz, "SASL_LOGIN_REFRESH_BUFFER_SECONDS"); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.6.0/org/apache/kafka/common/config/SaslConfigs.html#SASL_LOGIN_REFRESH_BUFFER_SECONDS_DOC"/>
        /// </summary>
        public static string SASL_LOGIN_REFRESH_BUFFER_SECONDS_DOC { get { return SGetField<string>(LocalBridgeClazz, "SASL_LOGIN_REFRESH_BUFFER_SECONDS_DOC"); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.6.0/org/apache/kafka/common/config/SaslConfigs.html#SASL_LOGIN_REFRESH_MIN_PERIOD_SECONDS"/>
        /// </summary>
        public static string SASL_LOGIN_REFRESH_MIN_PERIOD_SECONDS { get { return SGetField<string>(LocalBridgeClazz, "SASL_LOGIN_REFRESH_MIN_PERIOD_SECONDS"); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.6.0/org/apache/kafka/common/config/SaslConfigs.html#SASL_LOGIN_REFRESH_MIN_PERIOD_SECONDS_DOC"/>
        /// </summary>
        public static string SASL_LOGIN_REFRESH_MIN_PERIOD_SECONDS_DOC { get { return SGetField<string>(LocalBridgeClazz, "SASL_LOGIN_REFRESH_MIN_PERIOD_SECONDS_DOC"); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.6.0/org/apache/kafka/common/config/SaslConfigs.html#SASL_LOGIN_REFRESH_WINDOW_FACTOR"/>
        /// </summary>
        public static string SASL_LOGIN_REFRESH_WINDOW_FACTOR { get { return SGetField<string>(LocalBridgeClazz, "SASL_LOGIN_REFRESH_WINDOW_FACTOR"); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.6.0/org/apache/kafka/common/config/SaslConfigs.html#SASL_LOGIN_REFRESH_WINDOW_FACTOR_DOC"/>
        /// </summary>
        public static string SASL_LOGIN_REFRESH_WINDOW_FACTOR_DOC { get { return SGetField<string>(LocalBridgeClazz, "SASL_LOGIN_REFRESH_WINDOW_FACTOR_DOC"); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.6.0/org/apache/kafka/common/config/SaslConfigs.html#SASL_LOGIN_REFRESH_WINDOW_JITTER"/>
        /// </summary>
        public static string SASL_LOGIN_REFRESH_WINDOW_JITTER { get { return SGetField<string>(LocalBridgeClazz, "SASL_LOGIN_REFRESH_WINDOW_JITTER"); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.6.0/org/apache/kafka/common/config/SaslConfigs.html#SASL_LOGIN_REFRESH_WINDOW_JITTER_DOC"/>
        /// </summary>
        public static string SASL_LOGIN_REFRESH_WINDOW_JITTER_DOC { get { return SGetField<string>(LocalBridgeClazz, "SASL_LOGIN_REFRESH_WINDOW_JITTER_DOC"); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.6.0/org/apache/kafka/common/config/SaslConfigs.html#SASL_LOGIN_RETRY_BACKOFF_MAX_MS"/>
        /// </summary>
        public static string SASL_LOGIN_RETRY_BACKOFF_MAX_MS { get { return SGetField<string>(LocalBridgeClazz, "SASL_LOGIN_RETRY_BACKOFF_MAX_MS"); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.6.0/org/apache/kafka/common/config/SaslConfigs.html#SASL_LOGIN_RETRY_BACKOFF_MAX_MS_DOC"/>
        /// </summary>
        public static string SASL_LOGIN_RETRY_BACKOFF_MAX_MS_DOC { get { return SGetField<string>(LocalBridgeClazz, "SASL_LOGIN_RETRY_BACKOFF_MAX_MS_DOC"); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.6.0/org/apache/kafka/common/config/SaslConfigs.html#SASL_LOGIN_RETRY_BACKOFF_MS"/>
        /// </summary>
        public static string SASL_LOGIN_RETRY_BACKOFF_MS { get { return SGetField<string>(LocalBridgeClazz, "SASL_LOGIN_RETRY_BACKOFF_MS"); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.6.0/org/apache/kafka/common/config/SaslConfigs.html#SASL_LOGIN_RETRY_BACKOFF_MS_DOC"/>
        /// </summary>
        public static string SASL_LOGIN_RETRY_BACKOFF_MS_DOC { get { return SGetField<string>(LocalBridgeClazz, "SASL_LOGIN_RETRY_BACKOFF_MS_DOC"); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.6.0/org/apache/kafka/common/config/SaslConfigs.html#SASL_MECHANISM"/>
        /// </summary>
        public static string SASL_MECHANISM { get { return SGetField<string>(LocalBridgeClazz, "SASL_MECHANISM"); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.6.0/org/apache/kafka/common/config/SaslConfigs.html#SASL_MECHANISM_DOC"/>
        /// </summary>
        public static string SASL_MECHANISM_DOC { get { return SGetField<string>(LocalBridgeClazz, "SASL_MECHANISM_DOC"); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.6.0/org/apache/kafka/common/config/SaslConfigs.html#SASL_OAUTHBEARER_CLOCK_SKEW_SECONDS"/>
        /// </summary>
        public static string SASL_OAUTHBEARER_CLOCK_SKEW_SECONDS { get { return SGetField<string>(LocalBridgeClazz, "SASL_OAUTHBEARER_CLOCK_SKEW_SECONDS"); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.6.0/org/apache/kafka/common/config/SaslConfigs.html#SASL_OAUTHBEARER_CLOCK_SKEW_SECONDS_DOC"/>
        /// </summary>
        public static string SASL_OAUTHBEARER_CLOCK_SKEW_SECONDS_DOC { get { return SGetField<string>(LocalBridgeClazz, "SASL_OAUTHBEARER_CLOCK_SKEW_SECONDS_DOC"); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.6.0/org/apache/kafka/common/config/SaslConfigs.html#SASL_OAUTHBEARER_EXPECTED_AUDIENCE"/>
        /// </summary>
        public static string SASL_OAUTHBEARER_EXPECTED_AUDIENCE { get { return SGetField<string>(LocalBridgeClazz, "SASL_OAUTHBEARER_EXPECTED_AUDIENCE"); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.6.0/org/apache/kafka/common/config/SaslConfigs.html#SASL_OAUTHBEARER_EXPECTED_AUDIENCE_DOC"/>
        /// </summary>
        public static string SASL_OAUTHBEARER_EXPECTED_AUDIENCE_DOC { get { return SGetField<string>(LocalBridgeClazz, "SASL_OAUTHBEARER_EXPECTED_AUDIENCE_DOC"); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.6.0/org/apache/kafka/common/config/SaslConfigs.html#SASL_OAUTHBEARER_EXPECTED_ISSUER"/>
        /// </summary>
        public static string SASL_OAUTHBEARER_EXPECTED_ISSUER { get { return SGetField<string>(LocalBridgeClazz, "SASL_OAUTHBEARER_EXPECTED_ISSUER"); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.6.0/org/apache/kafka/common/config/SaslConfigs.html#SASL_OAUTHBEARER_EXPECTED_ISSUER_DOC"/>
        /// </summary>
        public static string SASL_OAUTHBEARER_EXPECTED_ISSUER_DOC { get { return SGetField<string>(LocalBridgeClazz, "SASL_OAUTHBEARER_EXPECTED_ISSUER_DOC"); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.6.0/org/apache/kafka/common/config/SaslConfigs.html#SASL_OAUTHBEARER_JWKS_ENDPOINT_REFRESH_MS"/>
        /// </summary>
        public static string SASL_OAUTHBEARER_JWKS_ENDPOINT_REFRESH_MS { get { return SGetField<string>(LocalBridgeClazz, "SASL_OAUTHBEARER_JWKS_ENDPOINT_REFRESH_MS"); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.6.0/org/apache/kafka/common/config/SaslConfigs.html#SASL_OAUTHBEARER_JWKS_ENDPOINT_REFRESH_MS_DOC"/>
        /// </summary>
        public static string SASL_OAUTHBEARER_JWKS_ENDPOINT_REFRESH_MS_DOC { get { return SGetField<string>(LocalBridgeClazz, "SASL_OAUTHBEARER_JWKS_ENDPOINT_REFRESH_MS_DOC"); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.6.0/org/apache/kafka/common/config/SaslConfigs.html#SASL_OAUTHBEARER_JWKS_ENDPOINT_RETRY_BACKOFF_MAX_MS"/>
        /// </summary>
        public static string SASL_OAUTHBEARER_JWKS_ENDPOINT_RETRY_BACKOFF_MAX_MS { get { return SGetField<string>(LocalBridgeClazz, "SASL_OAUTHBEARER_JWKS_ENDPOINT_RETRY_BACKOFF_MAX_MS"); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.6.0/org/apache/kafka/common/config/SaslConfigs.html#SASL_OAUTHBEARER_JWKS_ENDPOINT_RETRY_BACKOFF_MAX_MS_DOC"/>
        /// </summary>
        public static string SASL_OAUTHBEARER_JWKS_ENDPOINT_RETRY_BACKOFF_MAX_MS_DOC { get { return SGetField<string>(LocalBridgeClazz, "SASL_OAUTHBEARER_JWKS_ENDPOINT_RETRY_BACKOFF_MAX_MS_DOC"); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.6.0/org/apache/kafka/common/config/SaslConfigs.html#SASL_OAUTHBEARER_JWKS_ENDPOINT_RETRY_BACKOFF_MS"/>
        /// </summary>
        public static string SASL_OAUTHBEARER_JWKS_ENDPOINT_RETRY_BACKOFF_MS { get { return SGetField<string>(LocalBridgeClazz, "SASL_OAUTHBEARER_JWKS_ENDPOINT_RETRY_BACKOFF_MS"); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.6.0/org/apache/kafka/common/config/SaslConfigs.html#SASL_OAUTHBEARER_JWKS_ENDPOINT_RETRY_BACKOFF_MS_DOC"/>
        /// </summary>
        public static string SASL_OAUTHBEARER_JWKS_ENDPOINT_RETRY_BACKOFF_MS_DOC { get { return SGetField<string>(LocalBridgeClazz, "SASL_OAUTHBEARER_JWKS_ENDPOINT_RETRY_BACKOFF_MS_DOC"); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.6.0/org/apache/kafka/common/config/SaslConfigs.html#SASL_OAUTHBEARER_JWKS_ENDPOINT_URL"/>
        /// </summary>
        public static string SASL_OAUTHBEARER_JWKS_ENDPOINT_URL { get { return SGetField<string>(LocalBridgeClazz, "SASL_OAUTHBEARER_JWKS_ENDPOINT_URL"); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.6.0/org/apache/kafka/common/config/SaslConfigs.html#SASL_OAUTHBEARER_JWKS_ENDPOINT_URL_DOC"/>
        /// </summary>
        public static string SASL_OAUTHBEARER_JWKS_ENDPOINT_URL_DOC { get { return SGetField<string>(LocalBridgeClazz, "SASL_OAUTHBEARER_JWKS_ENDPOINT_URL_DOC"); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.6.0/org/apache/kafka/common/config/SaslConfigs.html#SASL_OAUTHBEARER_SCOPE_CLAIM_NAME"/>
        /// </summary>
        public static string SASL_OAUTHBEARER_SCOPE_CLAIM_NAME { get { return SGetField<string>(LocalBridgeClazz, "SASL_OAUTHBEARER_SCOPE_CLAIM_NAME"); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.6.0/org/apache/kafka/common/config/SaslConfigs.html#SASL_OAUTHBEARER_SCOPE_CLAIM_NAME_DOC"/>
        /// </summary>
        public static string SASL_OAUTHBEARER_SCOPE_CLAIM_NAME_DOC { get { return SGetField<string>(LocalBridgeClazz, "SASL_OAUTHBEARER_SCOPE_CLAIM_NAME_DOC"); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.6.0/org/apache/kafka/common/config/SaslConfigs.html#SASL_OAUTHBEARER_SUB_CLAIM_NAME"/>
        /// </summary>
        public static string SASL_OAUTHBEARER_SUB_CLAIM_NAME { get { return SGetField<string>(LocalBridgeClazz, "SASL_OAUTHBEARER_SUB_CLAIM_NAME"); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.6.0/org/apache/kafka/common/config/SaslConfigs.html#SASL_OAUTHBEARER_SUB_CLAIM_NAME_DOC"/>
        /// </summary>
        public static string SASL_OAUTHBEARER_SUB_CLAIM_NAME_DOC { get { return SGetField<string>(LocalBridgeClazz, "SASL_OAUTHBEARER_SUB_CLAIM_NAME_DOC"); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.6.0/org/apache/kafka/common/config/SaslConfigs.html#SASL_OAUTHBEARER_TOKEN_ENDPOINT_URL"/>
        /// </summary>
        public static string SASL_OAUTHBEARER_TOKEN_ENDPOINT_URL { get { return SGetField<string>(LocalBridgeClazz, "SASL_OAUTHBEARER_TOKEN_ENDPOINT_URL"); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.6.0/org/apache/kafka/common/config/SaslConfigs.html#SASL_OAUTHBEARER_TOKEN_ENDPOINT_URL_DOC"/>
        /// </summary>
        public static string SASL_OAUTHBEARER_TOKEN_ENDPOINT_URL_DOC { get { return SGetField<string>(LocalBridgeClazz, "SASL_OAUTHBEARER_TOKEN_ENDPOINT_URL_DOC"); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.6.0/org/apache/kafka/common/config/SaslConfigs.html#DEFAULT_KERBEROS_MIN_TIME_BEFORE_RELOGIN"/>
        /// </summary>
        public static long DEFAULT_KERBEROS_MIN_TIME_BEFORE_RELOGIN { get { return SGetField<long>(LocalBridgeClazz, "DEFAULT_KERBEROS_MIN_TIME_BEFORE_RELOGIN"); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.6.0/org/apache/kafka/common/config/SaslConfigs.html#DEFAULT_SASL_LOGIN_RETRY_BACKOFF_MAX_MS"/>
        /// </summary>
        public static long DEFAULT_SASL_LOGIN_RETRY_BACKOFF_MAX_MS { get { return SGetField<long>(LocalBridgeClazz, "DEFAULT_SASL_LOGIN_RETRY_BACKOFF_MAX_MS"); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.6.0/org/apache/kafka/common/config/SaslConfigs.html#DEFAULT_SASL_LOGIN_RETRY_BACKOFF_MS"/>
        /// </summary>
        public static long DEFAULT_SASL_LOGIN_RETRY_BACKOFF_MS { get { return SGetField<long>(LocalBridgeClazz, "DEFAULT_SASL_LOGIN_RETRY_BACKOFF_MS"); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.6.0/org/apache/kafka/common/config/SaslConfigs.html#DEFAULT_SASL_OAUTHBEARER_JWKS_ENDPOINT_REFRESH_MS"/>
        /// </summary>
        public static long DEFAULT_SASL_OAUTHBEARER_JWKS_ENDPOINT_REFRESH_MS { get { return SGetField<long>(LocalBridgeClazz, "DEFAULT_SASL_OAUTHBEARER_JWKS_ENDPOINT_REFRESH_MS"); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.6.0/org/apache/kafka/common/config/SaslConfigs.html#DEFAULT_SASL_OAUTHBEARER_JWKS_ENDPOINT_RETRY_BACKOFF_MAX_MS"/>
        /// </summary>
        public static long DEFAULT_SASL_OAUTHBEARER_JWKS_ENDPOINT_RETRY_BACKOFF_MAX_MS { get { return SGetField<long>(LocalBridgeClazz, "DEFAULT_SASL_OAUTHBEARER_JWKS_ENDPOINT_RETRY_BACKOFF_MAX_MS"); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.6.0/org/apache/kafka/common/config/SaslConfigs.html#DEFAULT_SASL_OAUTHBEARER_JWKS_ENDPOINT_RETRY_BACKOFF_MS"/>
        /// </summary>
        public static long DEFAULT_SASL_OAUTHBEARER_JWKS_ENDPOINT_RETRY_BACKOFF_MS { get { return SGetField<long>(LocalBridgeClazz, "DEFAULT_SASL_OAUTHBEARER_JWKS_ENDPOINT_RETRY_BACKOFF_MS"); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.6.0/org/apache/kafka/common/config/SaslConfigs.html#DEFAULT_LOGIN_REFRESH_BUFFER_SECONDS"/>
        /// </summary>
        public static short DEFAULT_LOGIN_REFRESH_BUFFER_SECONDS { get { return SGetField<short>(LocalBridgeClazz, "DEFAULT_LOGIN_REFRESH_BUFFER_SECONDS"); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.6.0/org/apache/kafka/common/config/SaslConfigs.html#DEFAULT_LOGIN_REFRESH_MIN_PERIOD_SECONDS"/>
        /// </summary>
        public static short DEFAULT_LOGIN_REFRESH_MIN_PERIOD_SECONDS { get { return SGetField<short>(LocalBridgeClazz, "DEFAULT_LOGIN_REFRESH_MIN_PERIOD_SECONDS"); } }

        #endregion

        #region Static methods
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.6.0/org/apache/kafka/common/config/SaslConfigs.html#addClientSaslSupport-org.apache.kafka.common.config.ConfigDef-"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Common.Config.ConfigDef"/></param>
        public static void AddClientSaslSupport(Org.Apache.Kafka.Common.Config.ConfigDef arg0)
        {
            SExecute(LocalBridgeClazz, "addClientSaslSupport", arg0);
        }

        #endregion

        #region Instance methods

        #endregion

        #region Nested classes

        #endregion

        // TODO: complete the class
    }
    #endregion
}