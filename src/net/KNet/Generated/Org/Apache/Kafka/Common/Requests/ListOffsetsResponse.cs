/*
*  Copyright 2023 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 1.5.5.0)
*  using kafka-clients-3.4.0.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Org.Apache.Kafka.Common.Requests
{
    #region ListOffsetsResponse
    public partial class ListOffsetsResponse
    {
        #region Constructors
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/requests/ListOffsetsResponse.html#%3Cinit%3E(org.apache.kafka.common.message.ListOffsetsResponseData)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Common.Message.ListOffsetsResponseData"/></param>
        public ListOffsetsResponse(Org.Apache.Kafka.Common.Message.ListOffsetsResponseData arg0)
            : base(arg0)
        {
        }

        #endregion

        #region Class/Interface conversion operators

        #endregion

        #region Fields
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/requests/ListOffsetsResponse.html#UNKNOWN_EPOCH"/>
        /// </summary>
        public static int UNKNOWN_EPOCH { get { return SGetField<int>(LocalBridgeClazz, "UNKNOWN_EPOCH"); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/requests/ListOffsetsResponse.html#UNKNOWN_OFFSET"/>
        /// </summary>
        public static long UNKNOWN_OFFSET { get { return SGetField<long>(LocalBridgeClazz, "UNKNOWN_OFFSET"); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/requests/ListOffsetsResponse.html#UNKNOWN_TIMESTAMP"/>
        /// </summary>
        public static long UNKNOWN_TIMESTAMP { get { return SGetField<long>(LocalBridgeClazz, "UNKNOWN_TIMESTAMP"); } }

        #endregion

        #region Static methods
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/requests/ListOffsetsResponse.html#singletonListOffsetsTopicResponse(org.apache.kafka.common.TopicPartition,org.apache.kafka.common.protocol.Errors,long,long,int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Common.TopicPartition"/></param>
        /// <param name="arg1"><see cref="Org.Apache.Kafka.Common.Protocol.Errors"/></param>
        /// <param name="arg2"><see cref="long"/></param>
        /// <param name="arg3"><see cref="long"/></param>
        /// <param name="arg4"><see cref="int"/></param>
        /// <returns><see cref="Org.Apache.Kafka.Common.Message.ListOffsetsResponseData.ListOffsetsTopicResponse"/></returns>
        public static Org.Apache.Kafka.Common.Message.ListOffsetsResponseData.ListOffsetsTopicResponse SingletonListOffsetsTopicResponse(Org.Apache.Kafka.Common.TopicPartition arg0, Org.Apache.Kafka.Common.Protocol.Errors arg1, long arg2, long arg3, int arg4)
        {
            return SExecute<Org.Apache.Kafka.Common.Message.ListOffsetsResponseData.ListOffsetsTopicResponse>(LocalBridgeClazz, "singletonListOffsetsTopicResponse", arg0, arg1, arg2, arg3, arg4);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/requests/ListOffsetsResponse.html#parse(java.nio.ByteBuffer,short)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Nio.ByteBuffer"/></param>
        /// <param name="arg1"><see cref="short"/></param>
        /// <returns><see cref="Org.Apache.Kafka.Common.Requests.ListOffsetsResponse"/></returns>
        public static Org.Apache.Kafka.Common.Requests.ListOffsetsResponse Parse(Java.Nio.ByteBuffer arg0, short arg1)
        {
            return SExecute<Org.Apache.Kafka.Common.Requests.ListOffsetsResponse>(LocalBridgeClazz, "parse", arg0, arg1);
        }

        #endregion

        #region Instance methods
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/requests/ListOffsetsResponse.html#topics()"/>
        /// </summary>

        /// <returns><see cref="Java.Util.List"/></returns>
        public Java.Util.List<Org.Apache.Kafka.Common.Message.ListOffsetsResponseData.ListOffsetsTopicResponse> Topics()
        {
            return IExecute<Java.Util.List<Org.Apache.Kafka.Common.Message.ListOffsetsResponseData.ListOffsetsTopicResponse>>("topics");
        }

        #endregion

        #region Nested classes

        #endregion

        // TODO: complete the class
    }
    #endregion
}