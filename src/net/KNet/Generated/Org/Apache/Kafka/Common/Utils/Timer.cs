/*
*  Copyright 2023 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 1.5.5.0)
*  using kafka-clients-3.4.0.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Org.Apache.Kafka.Common.Utils
{
    #region Timer
    public partial class Timer
    {
        #region Constructors

        #endregion

        #region Class/Interface conversion operators

        #endregion

        #region Fields

        #endregion

        #region Static methods

        #endregion

        #region Instance methods
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/utils/Timer.html#currentTimeMs()"/> 
        /// </summary>
        public long CurrentTimeMs
        {
            get { return IExecute<long>("currentTimeMs"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/utils/Timer.html#elapsedMs()"/> 
        /// </summary>
        public long ElapsedMs
        {
            get { return IExecute<long>("elapsedMs"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/utils/Timer.html#isExpired()"/> 
        /// </summary>
        public bool IsExpired
        {
            get { return IExecute<bool>("isExpired"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/utils/Timer.html#notExpired()"/> 
        /// </summary>
        public bool NotExpired
        {
            get { return IExecute<bool>("notExpired"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/utils/Timer.html#remainingMs()"/> 
        /// </summary>
        public long RemainingMs
        {
            get { return IExecute<long>("remainingMs"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/utils/Timer.html#timeoutMs()"/> 
        /// </summary>
        public long TimeoutMs
        {
            get { return IExecute<long>("timeoutMs"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/utils/Timer.html#reset(long)"/>
        /// </summary>
        /// <param name="arg0"><see cref="long"/></param>
        public void Reset(long arg0)
        {
            IExecute("reset", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/utils/Timer.html#resetDeadline(long)"/>
        /// </summary>
        /// <param name="arg0"><see cref="long"/></param>
        public void ResetDeadline(long arg0)
        {
            IExecute("resetDeadline", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/utils/Timer.html#sleep(long)"/>
        /// </summary>
        /// <param name="arg0"><see cref="long"/></param>
        public void Sleep(long arg0)
        {
            IExecute("sleep", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/utils/Timer.html#update()"/>
        /// </summary>
        public void Update()
        {
            IExecute("update");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/utils/Timer.html#update(long)"/>
        /// </summary>
        /// <param name="arg0"><see cref="long"/></param>
        public void Update(long arg0)
        {
            IExecute("update", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/utils/Timer.html#updateAndReset(long)"/>
        /// </summary>
        /// <param name="arg0"><see cref="long"/></param>
        public void UpdateAndReset(long arg0)
        {
            IExecute("updateAndReset", arg0);
        }

        #endregion

        #region Nested classes

        #endregion

        // TODO: complete the class
    }
    #endregion
}