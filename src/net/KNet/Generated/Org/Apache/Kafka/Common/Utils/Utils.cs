/*
*  Copyright 2023 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 2.1.0.0)
*  using kafka-clients-3.6.0.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Org.Apache.Kafka.Common.Utils
{
    #region Utils
    public partial class Utils
    {
        #region Constructors

        #endregion

        #region Class/Interface conversion operators

        #endregion

        #region Fields
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.6.0/org/apache/kafka/common/utils/Utils.html#NL"/>
        /// </summary>
        public static string NL { get { return SGetField<string>(LocalBridgeClazz, "NL"); } }

        #endregion

        #region Static methods
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.6.0/org/apache/kafka/common/utils/Utils.html#getContextOrKafkaClassLoader--"/> 
        /// </summary>
        public static Java.Lang.ClassLoader ContextOrKafkaClassLoader
        {
            get { return SExecute<Java.Lang.ClassLoader>(LocalBridgeClazz, "getContextOrKafkaClassLoader"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.6.0/org/apache/kafka/common/utils/Utils.html#getKafkaClassLoader--"/> 
        /// </summary>
        public static Java.Lang.ClassLoader KafkaClassLoader
        {
            get { return SExecute<Java.Lang.ClassLoader>(LocalBridgeClazz, "getKafkaClassLoader"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.6.0/org/apache/kafka/common/utils/Utils.html#diff-java.util.function.Supplier-java.util.Set-java.util.Set-"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Util.Function.Supplier"/></param>
        /// <param name="arg1"><see cref="Java.Util.Set"/></param>
        /// <param name="arg2"><see cref="Java.Util.Set"/></param>
        /// <typeparam name="E"></typeparam>
        /// <returns><see cref="Java.Util.Set"/></returns>
        public static Java.Util.Set<E> Diff<E>(Java.Util.Function.Supplier<Java.Util.Set<E>> arg0, Java.Util.Set<E> arg1, Java.Util.Set<E> arg2)
        {
            return SExecute<Java.Util.Set<E>>(LocalBridgeClazz, "diff", arg0, arg1, arg2);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.6.0/org/apache/kafka/common/utils/Utils.html#intersection-java.util.function.Supplier-java.util.Set-java.util.Set[]-"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Util.Function.Supplier"/></param>
        /// <param name="arg1"><see cref="Java.Util.Set"/></param>
        /// <param name="arg2"><see cref="Java.Util.Set"/></param>
        /// <typeparam name="E"></typeparam>
        /// <returns><see cref="Java.Util.Set"/></returns>
        public static Java.Util.Set<E> Intersection<E>(Java.Util.Function.Supplier<Java.Util.Set<E>> arg0, Java.Util.Set<E> arg1, params Java.Util.Set<E>[] arg2)
        {
            if (arg2.Length == 0) return SExecute<Java.Util.Set<E>>(LocalBridgeClazz, "intersection", arg0, arg1); else return SExecute<Java.Util.Set<E>>(LocalBridgeClazz, "intersection", arg0, arg1, arg2);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.6.0/org/apache/kafka/common/utils/Utils.html#union-java.util.function.Supplier-java.util.Set[]-"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Util.Function.Supplier"/></param>
        /// <param name="arg1"><see cref="Java.Util.Set"/></param>
        /// <typeparam name="E"></typeparam>
        /// <returns><see cref="Java.Util.Set"/></returns>
        public static Java.Util.Set<E> Union<E>(Java.Util.Function.Supplier<Java.Util.Set<E>> arg0, params Java.Util.Set<E>[] arg1)
        {
            if (arg1.Length == 0) return SExecute<Java.Util.Set<E>>(LocalBridgeClazz, "union", arg0); else return SExecute<Java.Util.Set<E>>(LocalBridgeClazz, "union", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.6.0/org/apache/kafka/common/utils/Utils.html#entriesToMap-java.util.function.Supplier-"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Util.Function.Supplier"/></param>
        /// <typeparam name="K"></typeparam>
        /// <typeparam name="V"></typeparam>
        /// <typeparam name="M"><see cref="Java.Util.Map{K, V}"/></typeparam>
        /// <returns><see cref="Java.Util.Stream.Collector"/></returns>
        public static Java.Util.Stream.Collector<Java.Util.Map.Entry<K, V>, M, M> EntriesToMap<K, V, M>(Java.Util.Function.Supplier<M> arg0) where M: Java.Util.Map<K, V>
        {
            return SExecute<Java.Util.Stream.Collector<Java.Util.Map.Entry<K, V>, M, M>>(LocalBridgeClazz, "entriesToMap", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.6.0/org/apache/kafka/common/utils/Utils.html#mkString-java.util.Map-java.lang.String-java.lang.String-java.lang.String-java.lang.String-"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Util.Map"/></param>
        /// <param name="arg1"><see cref="string"/></param>
        /// <param name="arg2"><see cref="string"/></param>
        /// <param name="arg3"><see cref="string"/></param>
        /// <param name="arg4"><see cref="string"/></param>
        /// <typeparam name="K"></typeparam>
        /// <typeparam name="V"></typeparam>
        /// <returns><see cref="string"/></returns>
        public static string MkString<K, V>(Java.Util.Map<K, V> arg0, string arg1, string arg2, string arg3, string arg4)
        {
            return SExecute<string>(LocalBridgeClazz, "mkString", arg0, arg1, arg2, arg3, arg4);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.6.0/org/apache/kafka/common/utils/Utils.html#filterMap-java.util.Map-java.util.function.Predicate-"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Util.Map"/></param>
        /// <param name="arg1"><see cref="Java.Util.Function.Predicate"/></param>
        /// <typeparam name="K"></typeparam>
        /// <typeparam name="V"></typeparam>
        /// <returns><see cref="Java.Util.Map"/></returns>
        public static Java.Util.Map<K, V> FilterMap<K, V>(Java.Util.Map<K, V> arg0, Java.Util.Function.Predicate<Java.Util.Map.Entry<K, V>> arg1)
        {
            return SExecute<Java.Util.Map<K, V>>(LocalBridgeClazz, "filterMap", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.6.0/org/apache/kafka/common/utils/Utils.html#mkMap-java.util.Map.Entry[]-"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Util.Map.Entry"/></param>
        /// <typeparam name="K"></typeparam>
        /// <typeparam name="V"></typeparam>
        /// <returns><see cref="Java.Util.Map"/></returns>
        public static Java.Util.Map<K, V> MkMap<K, V>(params Java.Util.Map.Entry<K, V>[] arg0)
        {
            if (arg0.Length == 0) return SExecute<Java.Util.Map<K, V>>(LocalBridgeClazz, "mkMap"); else return SExecute<Java.Util.Map<K, V>>(LocalBridgeClazz, "mkMap", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.6.0/org/apache/kafka/common/utils/Utils.html#mkEntry-java.lang.Object-java.lang.Object-"/>
        /// </summary>
        /// <param name="arg0"><typeparamref name="K"/></param>
        /// <param name="arg1"><typeparamref name="V"/></param>
        /// <typeparam name="K"></typeparam>
        /// <typeparam name="V"></typeparam>
        /// <returns><see cref="Java.Util.Map.Entry"/></returns>
        public static Java.Util.Map.Entry<K, V> MkEntry<K, V>(K arg0, V arg1)
        {
            return SExecute<Java.Util.Map.Entry<K, V>>(LocalBridgeClazz, "mkEntry", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.6.0/org/apache/kafka/common/utils/Utils.html#covariantCast-java.util.Iterator-"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Util.Iterator"/></param>
        /// <typeparam name="S"></typeparam>
        /// <typeparam name="Arg0ExtendsS"><typeparamref name="S"/></typeparam>
        /// <returns><see cref="Java.Util.Iterator"/></returns>
        public static Java.Util.Iterator<S> CovariantCast<S, Arg0ExtendsS>(Java.Util.Iterator<Arg0ExtendsS> arg0) where Arg0ExtendsS: S
        {
            return SExecute<Java.Util.Iterator<S>>(LocalBridgeClazz, "covariantCast", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.6.0/org/apache/kafka/common/utils/Utils.html#loadClass-java.lang.String-java.lang.Class-"/>
        /// </summary>
        /// <param name="arg0"><see cref="string"/></param>
        /// <param name="arg1"><see cref="Java.Lang.Class"/></param>
        /// <typeparam name="ReturnExtendsT"><typeparamref name="T"/></typeparam>
        /// <typeparam name="T"></typeparam>
        /// <returns><see cref="Java.Lang.Class"/></returns>
        /// <exception cref="Java.Lang.ClassNotFoundException"/>
        public static Java.Lang.Class LoadClass<ReturnExtendsT, T>(string arg0, Java.Lang.Class arg1) where ReturnExtendsT: T
        {
            return SExecute<Java.Lang.Class>(LocalBridgeClazz, "loadClass", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.6.0/org/apache/kafka/common/utils/Utils.html#join-java.util.Collection-java.lang.String-"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Util.Collection"/></param>
        /// <param name="arg1"><see cref="string"/></param>
        /// <typeparam name="T"></typeparam>
        /// <returns><see cref="string"/></returns>
        public static string Join<T>(Java.Util.Collection<T> arg0, string arg1)
        {
            return SExecute<string>(LocalBridgeClazz, "join", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.6.0/org/apache/kafka/common/utils/Utils.html#join-java.lang.Object[]-java.lang.String-"/>
        /// </summary>
        /// <param name="arg0"><typeparamref name="T"/></param>
        /// <param name="arg1"><see cref="string"/></param>
        /// <typeparam name="T"></typeparam>
        /// <returns><see cref="string"/></returns>
        public static string Join<T>(T[] arg0, string arg1)
        {
            return SExecute<string>(LocalBridgeClazz, "join", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.6.0/org/apache/kafka/common/utils/Utils.html#mkString-java.util.stream.Stream-java.lang.String-java.lang.String-java.lang.String-"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Util.Stream.Stream"/></param>
        /// <param name="arg1"><see cref="string"/></param>
        /// <param name="arg2"><see cref="string"/></param>
        /// <param name="arg3"><see cref="string"/></param>
        /// <typeparam name="T"></typeparam>
        /// <returns><see cref="string"/></returns>
        public static string MkString<T>(Java.Util.Stream.Stream<T> arg0, string arg1, string arg2, string arg3)
        {
            return SExecute<string>(LocalBridgeClazz, "mkString", arg0, arg1, arg2, arg3);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.6.0/org/apache/kafka/common/utils/Utils.html#safe-java.util.List-"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Util.List"/></param>
        /// <typeparam name="T"></typeparam>
        /// <returns><see cref="Java.Util.List"/></returns>
        public static Java.Util.List<T> Safe<T>(Java.Util.List<T> arg0)
        {
            return SExecute<Java.Util.List<T>>(LocalBridgeClazz, "safe", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.6.0/org/apache/kafka/common/utils/Utils.html#sorted-java.util.Collection-"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Util.Collection"/></param>
        /// <typeparam name="T"></typeparam>
        /// <returns><see cref="Java.Util.List"/></returns>
        public static Java.Util.List<T> Sorted<T>(Java.Util.Collection<T> arg0)
        {
            return SExecute<Java.Util.List<T>>(LocalBridgeClazz, "sorted", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.6.0/org/apache/kafka/common/utils/Utils.html#toList-java.lang.Iterable-"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.Iterable"/></param>
        /// <typeparam name="T"></typeparam>
        /// <returns><see cref="Java.Util.List"/></returns>
        public static Java.Util.List<T> ToList<T>(Java.Lang.Iterable<T> arg0)
        {
            return SExecute<Java.Util.List<T>>(LocalBridgeClazz, "toList", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.6.0/org/apache/kafka/common/utils/Utils.html#toList-java.util.Iterator-java.util.function.Predicate-"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Util.Iterator"/></param>
        /// <param name="arg1"><see cref="Java.Util.Function.Predicate"/></param>
        /// <typeparam name="T"></typeparam>
        /// <returns><see cref="Java.Util.List"/></returns>
        public static Java.Util.List<T> ToList<T>(Java.Util.Iterator<T> arg0, Java.Util.Function.Predicate<T> arg1)
        {
            return SExecute<Java.Util.List<T>>(LocalBridgeClazz, "toList", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.6.0/org/apache/kafka/common/utils/Utils.html#toList-java.util.Iterator-"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Util.Iterator"/></param>
        /// <typeparam name="T"></typeparam>
        /// <returns><see cref="Java.Util.List"/></returns>
        public static Java.Util.List<T> ToList<T>(Java.Util.Iterator<T> arg0)
        {
            return SExecute<Java.Util.List<T>>(LocalBridgeClazz, "toList", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.6.0/org/apache/kafka/common/utils/Utils.html#mkSet-java.lang.Object[]-"/>
        /// </summary>
        /// <param name="arg0"><typeparamref name="T"/></param>
        /// <typeparam name="T"></typeparam>
        /// <returns><see cref="Java.Util.Set"/></returns>
        public static Java.Util.Set<T> MkSet<T>(params T[] arg0)
        {
            if (arg0.Length == 0) return SExecute<Java.Util.Set<T>>(LocalBridgeClazz, "mkSet"); else return SExecute<Java.Util.Set<T>>(LocalBridgeClazz, "mkSet", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.6.0/org/apache/kafka/common/utils/Utils.html#mkSortedSet-java.lang.Comparable[]-"/>
        /// </summary>
        /// <param name="arg0"><typeparamref name="T"/></param>
        /// <typeparam name="T"><see cref="Java.Lang.Comparable{T}"/></typeparam>
        /// <returns><see cref="Java.Util.SortedSet"/></returns>
        public static Java.Util.SortedSet<T> MkSortedSet<T>(params T[] arg0) where T: Java.Lang.Comparable<T>
        {
            if (arg0.Length == 0) return SExecute<Java.Util.SortedSet<T>>(LocalBridgeClazz, "mkSortedSet"); else return SExecute<Java.Util.SortedSet<T>>(LocalBridgeClazz, "mkSortedSet", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.6.0/org/apache/kafka/common/utils/Utils.html#newInstance-java.lang.Class-java.lang.Class-"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.Class"/></param>
        /// <param name="arg1"><see cref="Java.Lang.Class"/></param>
        /// <typeparam name="T"></typeparam>
        /// <returns><typeparamref name="T"/></returns>
        public static T NewInstance<T>(Java.Lang.Class arg0, Java.Lang.Class arg1)
        {
            return SExecute<T>(LocalBridgeClazz, "newInstance", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.6.0/org/apache/kafka/common/utils/Utils.html#newInstance-java.lang.Class-"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.Class"/></param>
        /// <typeparam name="T"></typeparam>
        /// <returns><typeparamref name="T"/></returns>
        public static T NewInstance<T>(Java.Lang.Class arg0)
        {
            return SExecute<T>(LocalBridgeClazz, "newInstance", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.6.0/org/apache/kafka/common/utils/Utils.html#newInstance-java.lang.String-java.lang.Class-"/>
        /// </summary>
        /// <param name="arg0"><see cref="string"/></param>
        /// <param name="arg1"><see cref="Java.Lang.Class"/></param>
        /// <typeparam name="T"></typeparam>
        /// <returns><typeparamref name="T"/></returns>
        /// <exception cref="Java.Lang.ClassNotFoundException"/>
        public static T NewInstance<T>(string arg0, Java.Lang.Class arg1)
        {
            return SExecute<T>(LocalBridgeClazz, "newInstance", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.6.0/org/apache/kafka/common/utils/Utils.html#newParameterizedInstance-java.lang.String-java.lang.Object[]-"/>
        /// </summary>
        /// <param name="arg0"><see cref="string"/></param>
        /// <param name="arg1"><see cref="object"/></param>
        /// <typeparam name="T"></typeparam>
        /// <returns><typeparamref name="T"/></returns>
        /// <exception cref="Java.Lang.ClassNotFoundException"/>
        public static T NewParameterizedInstance<T>(string arg0, params object[] arg1)
        {
            if (arg1.Length == 0) return SExecute<T>(LocalBridgeClazz, "newParameterizedInstance", arg0); else return SExecute<T>(LocalBridgeClazz, "newParameterizedInstance", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.6.0/org/apache/kafka/common/utils/Utils.html#entriesWithPrefix-java.util.Map-java.lang.String-boolean-"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Util.Map"/></param>
        /// <param name="arg1"><see cref="string"/></param>
        /// <param name="arg2"><see cref="bool"/></param>
        /// <typeparam name="V"></typeparam>
        /// <returns><see cref="Java.Util.Map"/></returns>
        public static Java.Util.Map<string, V> EntriesWithPrefix<V>(Java.Util.Map<string, V> arg0, string arg1, bool arg2)
        {
            return SExecute<Java.Util.Map<string, V>>(LocalBridgeClazz, "entriesWithPrefix", arg0, arg1, arg2);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.6.0/org/apache/kafka/common/utils/Utils.html#entriesWithPrefix-java.util.Map-java.lang.String-"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Util.Map"/></param>
        /// <param name="arg1"><see cref="string"/></param>
        /// <typeparam name="V"></typeparam>
        /// <returns><see cref="Java.Util.Map"/></returns>
        public static Java.Util.Map<string, V> EntriesWithPrefix<V>(Java.Util.Map<string, V> arg0, string arg1)
        {
            return SExecute<Java.Util.Map<string, V>>(LocalBridgeClazz, "entriesWithPrefix", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.6.0/org/apache/kafka/common/utils/Utils.html#isBlank-java.lang.String-"/>
        /// </summary>
        /// <param name="arg0"><see cref="string"/></param>
        /// <returns><see cref="bool"/></returns>
        public static bool IsBlank(string arg0)
        {
            return SExecute<bool>(LocalBridgeClazz, "isBlank", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.6.0/org/apache/kafka/common/utils/Utils.html#isEqualConstantTime-char[]-char[]-"/>
        /// </summary>
        /// <param name="arg0"><see cref="char"/></param>
        /// <param name="arg1"><see cref="char"/></param>
        /// <returns><see cref="bool"/></returns>
        public static bool IsEqualConstantTime(char[] arg0, char[] arg1)
        {
            return SExecute<bool>(LocalBridgeClazz, "isEqualConstantTime", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.6.0/org/apache/kafka/common/utils/Utils.html#validHostPattern-java.lang.String-"/>
        /// </summary>
        /// <param name="arg0"><see cref="string"/></param>
        /// <returns><see cref="bool"/></returns>
        public static bool ValidHostPattern(string arg0)
        {
            return SExecute<bool>(LocalBridgeClazz, "validHostPattern", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.6.0/org/apache/kafka/common/utils/Utils.html#copyArray-byte[]-"/>
        /// </summary>
        /// <param name="arg0"><see cref="byte"/></param>
        /// <returns><see cref="byte"/></returns>
        public static byte[] CopyArray(byte[] arg0)
        {
            return SExecuteArray<byte>(LocalBridgeClazz, "copyArray", new object[] { arg0 });
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.6.0/org/apache/kafka/common/utils/Utils.html#getNullableArray-java.nio.ByteBuffer-int-"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Nio.ByteBuffer"/></param>
        /// <param name="arg1"><see cref="int"/></param>
        /// <returns><see cref="byte"/></returns>
        public static byte[] GetNullableArray(Java.Nio.ByteBuffer arg0, int arg1)
        {
            return SExecuteArray<byte>(LocalBridgeClazz, "getNullableArray", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.6.0/org/apache/kafka/common/utils/Utils.html#getNullableSizePrefixedArray-java.nio.ByteBuffer-"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Nio.ByteBuffer"/></param>
        /// <returns><see cref="byte"/></returns>
        public static byte[] GetNullableSizePrefixedArray(Java.Nio.ByteBuffer arg0)
        {
            return SExecuteArray<byte>(LocalBridgeClazz, "getNullableSizePrefixedArray", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.6.0/org/apache/kafka/common/utils/Utils.html#readBytes-java.nio.ByteBuffer-int-int-"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Nio.ByteBuffer"/></param>
        /// <param name="arg1"><see cref="int"/></param>
        /// <param name="arg2"><see cref="int"/></param>
        /// <returns><see cref="byte"/></returns>
        public static byte[] ReadBytes(Java.Nio.ByteBuffer arg0, int arg1, int arg2)
        {
            return SExecuteArray<byte>(LocalBridgeClazz, "readBytes", arg0, arg1, arg2);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.6.0/org/apache/kafka/common/utils/Utils.html#readBytes-java.nio.ByteBuffer-"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Nio.ByteBuffer"/></param>
        /// <returns><see cref="byte"/></returns>
        public static byte[] ReadBytes(Java.Nio.ByteBuffer arg0)
        {
            return SExecuteArray<byte>(LocalBridgeClazz, "readBytes", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.6.0/org/apache/kafka/common/utils/Utils.html#toArray-java.nio.ByteBuffer-int-int-"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Nio.ByteBuffer"/></param>
        /// <param name="arg1"><see cref="int"/></param>
        /// <param name="arg2"><see cref="int"/></param>
        /// <returns><see cref="byte"/></returns>
        public static byte[] ToArray(Java.Nio.ByteBuffer arg0, int arg1, int arg2)
        {
            return SExecuteArray<byte>(LocalBridgeClazz, "toArray", arg0, arg1, arg2);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.6.0/org/apache/kafka/common/utils/Utils.html#toArray-java.nio.ByteBuffer-int-"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Nio.ByteBuffer"/></param>
        /// <param name="arg1"><see cref="int"/></param>
        /// <returns><see cref="byte"/></returns>
        public static byte[] ToArray(Java.Nio.ByteBuffer arg0, int arg1)
        {
            return SExecuteArray<byte>(LocalBridgeClazz, "toArray", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.6.0/org/apache/kafka/common/utils/Utils.html#toArray-java.nio.ByteBuffer-"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Nio.ByteBuffer"/></param>
        /// <returns><see cref="byte"/></returns>
        public static byte[] ToArray(Java.Nio.ByteBuffer arg0)
        {
            return SExecuteArray<byte>(LocalBridgeClazz, "toArray", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.6.0/org/apache/kafka/common/utils/Utils.html#toNullableArray-java.nio.ByteBuffer-"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Nio.ByteBuffer"/></param>
        /// <returns><see cref="byte"/></returns>
        public static byte[] ToNullableArray(Java.Nio.ByteBuffer arg0)
        {
            return SExecuteArray<byte>(LocalBridgeClazz, "toNullableArray", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.6.0/org/apache/kafka/common/utils/Utils.html#utf8-java.lang.String-"/>
        /// </summary>
        /// <param name="arg0"><see cref="string"/></param>
        /// <returns><see cref="byte"/></returns>
        public static byte[] Utf8(string arg0)
        {
            return SExecuteArray<byte>(LocalBridgeClazz, "utf8", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.6.0/org/apache/kafka/common/utils/Utils.html#abs-int-"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <returns><see cref="int"/></returns>
        public static int Abs(int arg0)
        {
            return SExecute<int>(LocalBridgeClazz, "abs", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.6.0/org/apache/kafka/common/utils/Utils.html#murmur2-byte[]-"/>
        /// </summary>
        /// <param name="arg0"><see cref="byte"/></param>
        /// <returns><see cref="int"/></returns>
        public static int Murmur2(byte[] arg0)
        {
            return SExecute<int>(LocalBridgeClazz, "murmur2", new object[] { arg0 });
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.6.0/org/apache/kafka/common/utils/Utils.html#readFully-java.io.InputStream-java.nio.ByteBuffer-"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Io.InputStream"/></param>
        /// <param name="arg1"><see cref="Java.Nio.ByteBuffer"/></param>
        /// <returns><see cref="int"/></returns>
        /// <exception cref="Java.Io.IOException"/>
        public static int ReadFully(Java.Io.InputStream arg0, Java.Nio.ByteBuffer arg1)
        {
            return SExecute<int>(LocalBridgeClazz, "readFully", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.6.0/org/apache/kafka/common/utils/Utils.html#to32BitField-java.util.Set-"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Util.Set"/></param>
        /// <returns><see cref="int"/></returns>
        public static int To32BitField(Java.Util.Set<Java.Lang.Byte> arg0)
        {
            return SExecute<int>(LocalBridgeClazz, "to32BitField", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.6.0/org/apache/kafka/common/utils/Utils.html#toPositive-int-"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <returns><see cref="int"/></returns>
        public static int ToPositive(int arg0)
        {
            return SExecute<int>(LocalBridgeClazz, "toPositive", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.6.0/org/apache/kafka/common/utils/Utils.html#utf8Length-java.lang.CharSequence-"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.CharSequence"/></param>
        /// <returns><see cref="int"/></returns>
        public static int Utf8Length(Java.Lang.CharSequence arg0)
        {
            return SExecute<int>(LocalBridgeClazz, "utf8Length", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.6.0/org/apache/kafka/common/utils/Utils.html#getPort-java.lang.String-"/>
        /// </summary>
        /// <param name="arg0"><see cref="string"/></param>
        /// <returns><see cref="Java.Lang.Integer"/></returns>
        public static Java.Lang.Integer GetPort(string arg0)
        {
            return SExecute<Java.Lang.Integer>(LocalBridgeClazz, "getPort", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.6.0/org/apache/kafka/common/utils/Utils.html#formatAddress-java.lang.String-java.lang.Integer-"/>
        /// </summary>
        /// <param name="arg0"><see cref="string"/></param>
        /// <param name="arg1"><see cref="Java.Lang.Integer"/></param>
        /// <returns><see cref="string"/></returns>
        public static string FormatAddress(string arg0, Java.Lang.Integer arg1)
        {
            return SExecute<string>(LocalBridgeClazz, "formatAddress", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.6.0/org/apache/kafka/common/utils/Utils.html#formatBytes-long-"/>
        /// </summary>
        /// <param name="arg0"><see cref="long"/></param>
        /// <returns><see cref="string"/></returns>
        public static string FormatBytes(long arg0)
        {
            return SExecute<string>(LocalBridgeClazz, "formatBytes", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.6.0/org/apache/kafka/common/utils/Utils.html#getHost-java.lang.String-"/>
        /// </summary>
        /// <param name="arg0"><see cref="string"/></param>
        /// <returns><see cref="string"/></returns>
        public static string GetHost(string arg0)
        {
            return SExecute<string>(LocalBridgeClazz, "getHost", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.6.0/org/apache/kafka/common/utils/Utils.html#readFileAsString-java.lang.String-"/>
        /// </summary>
        /// <param name="arg0"><see cref="string"/></param>
        /// <returns><see cref="string"/></returns>
        /// <exception cref="Java.Io.IOException"/>
        public static string ReadFileAsString(string arg0)
        {
            return SExecute<string>(LocalBridgeClazz, "readFileAsString", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.6.0/org/apache/kafka/common/utils/Utils.html#replaceSuffix-java.lang.String-java.lang.String-java.lang.String-"/>
        /// </summary>
        /// <param name="arg0"><see cref="string"/></param>
        /// <param name="arg1"><see cref="string"/></param>
        /// <param name="arg2"><see cref="string"/></param>
        /// <returns><see cref="string"/></returns>
        public static string ReplaceSuffix(string arg0, string arg1, string arg2)
        {
            return SExecute<string>(LocalBridgeClazz, "replaceSuffix", arg0, arg1, arg2);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.6.0/org/apache/kafka/common/utils/Utils.html#stackTrace-java.lang.Throwable-"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.Throwable"/></param>
        /// <returns><see cref="string"/></returns>
        public static string StackTrace(MASES.JCOBridge.C2JBridge.JVMBridgeException arg0)
        {
            return SExecute<string>(LocalBridgeClazz, "stackTrace", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.6.0/org/apache/kafka/common/utils/Utils.html#toLogDateTimeFormat-long-"/>
        /// </summary>
        /// <param name="arg0"><see cref="long"/></param>
        /// <returns><see cref="string"/></returns>
        public static string ToLogDateTimeFormat(long arg0)
        {
            return SExecute<string>(LocalBridgeClazz, "toLogDateTimeFormat", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.6.0/org/apache/kafka/common/utils/Utils.html#utf8-byte[]-"/>
        /// </summary>
        /// <param name="arg0"><see cref="byte"/></param>
        /// <returns><see cref="string"/></returns>
        public static string Utf8(byte[] arg0)
        {
            return SExecute<string>(LocalBridgeClazz, "utf8", new object[] { arg0 });
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.6.0/org/apache/kafka/common/utils/Utils.html#utf8-java.nio.ByteBuffer-int-int-"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Nio.ByteBuffer"/></param>
        /// <param name="arg1"><see cref="int"/></param>
        /// <param name="arg2"><see cref="int"/></param>
        /// <returns><see cref="string"/></returns>
        public static string Utf8(Java.Nio.ByteBuffer arg0, int arg1, int arg2)
        {
            return SExecute<string>(LocalBridgeClazz, "utf8", arg0, arg1, arg2);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.6.0/org/apache/kafka/common/utils/Utils.html#utf8-java.nio.ByteBuffer-int-"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Nio.ByteBuffer"/></param>
        /// <param name="arg1"><see cref="int"/></param>
        /// <returns><see cref="string"/></returns>
        public static string Utf8(Java.Nio.ByteBuffer arg0, int arg1)
        {
            return SExecute<string>(LocalBridgeClazz, "utf8", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.6.0/org/apache/kafka/common/utils/Utils.html#utf8-java.nio.ByteBuffer-"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Nio.ByteBuffer"/></param>
        /// <returns><see cref="string"/></returns>
        public static string Utf8(Java.Nio.ByteBuffer arg0)
        {
            return SExecute<string>(LocalBridgeClazz, "utf8", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.6.0/org/apache/kafka/common/utils/Utils.html#enumOptions-java.lang.Class-"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.Class"/></param>
        /// <returns><see cref="string"/></returns>
        public static string[] EnumOptions(Java.Lang.Class arg0)
        {
            return SExecuteArray<string>(LocalBridgeClazz, "enumOptions", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.6.0/org/apache/kafka/common/utils/Utils.html#ensureCapacity-java.nio.ByteBuffer-int-"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Nio.ByteBuffer"/></param>
        /// <param name="arg1"><see cref="int"/></param>
        /// <returns><see cref="Java.Nio.ByteBuffer"/></returns>
        public static Java.Nio.ByteBuffer EnsureCapacity(Java.Nio.ByteBuffer arg0, int arg1)
        {
            return SExecute<Java.Nio.ByteBuffer>(LocalBridgeClazz, "ensureCapacity", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.6.0/org/apache/kafka/common/utils/Utils.html#readBytes-java.nio.ByteBuffer-int-"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Nio.ByteBuffer"/></param>
        /// <param name="arg1"><see cref="int"/></param>
        /// <returns><see cref="Java.Nio.ByteBuffer"/></returns>
        public static Java.Nio.ByteBuffer ReadBytes(Java.Nio.ByteBuffer arg0, int arg1)
        {
            return SExecute<Java.Nio.ByteBuffer>(LocalBridgeClazz, "readBytes", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.6.0/org/apache/kafka/common/utils/Utils.html#sizeDelimited-java.nio.ByteBuffer-int-"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Nio.ByteBuffer"/></param>
        /// <param name="arg1"><see cref="int"/></param>
        /// <returns><see cref="Java.Nio.ByteBuffer"/></returns>
        public static Java.Nio.ByteBuffer SizeDelimited(Java.Nio.ByteBuffer arg0, int arg1)
        {
            return SExecute<Java.Nio.ByteBuffer>(LocalBridgeClazz, "sizeDelimited", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.6.0/org/apache/kafka/common/utils/Utils.html#wrapNullable-byte[]-"/>
        /// </summary>
        /// <param name="arg0"><see cref="byte"/></param>
        /// <returns><see cref="Java.Nio.ByteBuffer"/></returns>
        public static Java.Nio.ByteBuffer WrapNullable(byte[] arg0)
        {
            return SExecute<Java.Nio.ByteBuffer>(LocalBridgeClazz, "wrapNullable", new object[] { arg0 });
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.6.0/org/apache/kafka/common/utils/Utils.html#propsToMap-java.util.Properties-"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Util.Properties"/></param>
        /// <returns><see cref="Java.Util.Map"/></returns>
        public static Java.Util.Map<string, object> PropsToMap(Java.Util.Properties arg0)
        {
            return SExecute<Java.Util.Map<string, object>>(LocalBridgeClazz, "propsToMap", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.6.0/org/apache/kafka/common/utils/Utils.html#parseMap-java.lang.String-java.lang.String-java.lang.String-"/>
        /// </summary>
        /// <param name="arg0"><see cref="string"/></param>
        /// <param name="arg1"><see cref="string"/></param>
        /// <param name="arg2"><see cref="string"/></param>
        /// <returns><see cref="Java.Util.Map"/></returns>
        public static Java.Util.Map<string, string> ParseMap(string arg0, string arg1, string arg2)
        {
            return SExecute<Java.Util.Map<string, string>>(LocalBridgeClazz, "parseMap", arg0, arg1, arg2);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.6.0/org/apache/kafka/common/utils/Utils.html#propsToStringMap-java.util.Properties-"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Util.Properties"/></param>
        /// <returns><see cref="Java.Util.Map"/></returns>
        public static Java.Util.Map<string, string> PropsToStringMap(Java.Util.Properties arg0)
        {
            return SExecute<Java.Util.Map<string, string>>(LocalBridgeClazz, "propsToStringMap", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.6.0/org/apache/kafka/common/utils/Utils.html#loadProps-java.lang.String-java.util.List-"/>
        /// </summary>
        /// <param name="arg0"><see cref="string"/></param>
        /// <param name="arg1"><see cref="Java.Util.List"/></param>
        /// <returns><see cref="Java.Util.Properties"/></returns>
        /// <exception cref="Java.Io.IOException"/>
        public static Java.Util.Properties LoadProps(string arg0, Java.Util.List<string> arg1)
        {
            return SExecute<Java.Util.Properties>(LocalBridgeClazz, "loadProps", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.6.0/org/apache/kafka/common/utils/Utils.html#loadProps-java.lang.String-"/>
        /// </summary>
        /// <param name="arg0"><see cref="string"/></param>
        /// <returns><see cref="Java.Util.Properties"/></returns>
        /// <exception cref="Java.Io.IOException"/>
        public static Java.Util.Properties LoadProps(string arg0)
        {
            return SExecute<Java.Util.Properties>(LocalBridgeClazz, "loadProps", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.6.0/org/apache/kafka/common/utils/Utils.html#mkObjectProperties-java.util.Map-"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Util.Map"/></param>
        /// <returns><see cref="Java.Util.Properties"/></returns>
        public static Java.Util.Properties MkObjectProperties(Java.Util.Map<string, object> arg0)
        {
            return SExecute<Java.Util.Properties>(LocalBridgeClazz, "mkObjectProperties", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.6.0/org/apache/kafka/common/utils/Utils.html#mkProperties-java.util.Map-"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Util.Map"/></param>
        /// <returns><see cref="Java.Util.Properties"/></returns>
        public static Java.Util.Properties MkProperties(Java.Util.Map<string, string> arg0)
        {
            return SExecute<Java.Util.Properties>(LocalBridgeClazz, "mkProperties", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.6.0/org/apache/kafka/common/utils/Utils.html#from32BitField-int-"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <returns><see cref="Java.Util.Set"/></returns>
        public static Java.Util.Set<Java.Lang.Byte> From32BitField(int arg0)
        {
            return SExecute<Java.Util.Set<Java.Lang.Byte>>(LocalBridgeClazz, "from32BitField", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.6.0/org/apache/kafka/common/utils/Utils.html#getDateTime-java.lang.String-"/>
        /// </summary>
        /// <param name="arg0"><see cref="string"/></param>
        /// <returns><see cref="long"/></returns>
        /// <exception cref="Java.Text.ParseException"/>
        /// <exception cref="Java.Lang.IllegalArgumentException"/>
        public static long GetDateTime(string arg0)
        {
            return SExecute<long>(LocalBridgeClazz, "getDateTime", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.6.0/org/apache/kafka/common/utils/Utils.html#max-long-long[]-"/>
        /// </summary>
        /// <param name="arg0"><see cref="long"/></param>
        /// <param name="arg1"><see cref="long"/></param>
        /// <returns><see cref="long"/></returns>
        public static long Max(long arg0, params long[] arg1)
        {
            if (arg1.Length == 0) return SExecute<long>(LocalBridgeClazz, "max", arg0); else return SExecute<long>(LocalBridgeClazz, "max", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.6.0/org/apache/kafka/common/utils/Utils.html#min-long-long[]-"/>
        /// </summary>
        /// <param name="arg0"><see cref="long"/></param>
        /// <param name="arg1"><see cref="long"/></param>
        /// <returns><see cref="long"/></returns>
        public static long Min(long arg0, params long[] arg1)
        {
            if (arg1.Length == 0) return SExecute<long>(LocalBridgeClazz, "min", arg0); else return SExecute<long>(LocalBridgeClazz, "min", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.6.0/org/apache/kafka/common/utils/Utils.html#min-short-short-"/>
        /// </summary>
        /// <param name="arg0"><see cref="short"/></param>
        /// <param name="arg1"><see cref="short"/></param>
        /// <returns><see cref="short"/></returns>
        public static short Min(short arg0, short arg1)
        {
            return SExecute<short>(LocalBridgeClazz, "min", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.6.0/org/apache/kafka/common/utils/Utils.html#atomicMoveWithFallback-java.nio.file.Path-java.nio.file.Path-boolean-"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Nio.File.Path"/></param>
        /// <param name="arg1"><see cref="Java.Nio.File.Path"/></param>
        /// <param name="arg2"><see cref="bool"/></param>
        /// <exception cref="Java.Io.IOException"/>
        public static void AtomicMoveWithFallback(Java.Nio.File.Path arg0, Java.Nio.File.Path arg1, bool arg2)
        {
            SExecute(LocalBridgeClazz, "atomicMoveWithFallback", arg0, arg1, arg2);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.6.0/org/apache/kafka/common/utils/Utils.html#atomicMoveWithFallback-java.nio.file.Path-java.nio.file.Path-"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Nio.File.Path"/></param>
        /// <param name="arg1"><see cref="Java.Nio.File.Path"/></param>
        /// <exception cref="Java.Io.IOException"/>
        public static void AtomicMoveWithFallback(Java.Nio.File.Path arg0, Java.Nio.File.Path arg1)
        {
            SExecute(LocalBridgeClazz, "atomicMoveWithFallback", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.6.0/org/apache/kafka/common/utils/Utils.html#closeAll-java.io.Closeable[]-"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Io.Closeable"/></param>
        /// <exception cref="Java.Io.IOException"/>
        public static void CloseAll(params Java.Io.Closeable[] arg0)
        {
            if (arg0.Length == 0) SExecute(LocalBridgeClazz, "closeAll"); else SExecute(LocalBridgeClazz, "closeAll", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.6.0/org/apache/kafka/common/utils/Utils.html#closeAllQuietly-java.util.concurrent.atomic.AtomicReference-java.lang.String-java.lang.AutoCloseable[]-"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Util.Concurrent.Atomic.AtomicReference"/></param>
        /// <param name="arg1"><see cref="string"/></param>
        /// <param name="arg2"><see cref="Java.Lang.AutoCloseable"/></param>
        public static void CloseAllQuietly(Java.Util.Concurrent.Atomic.AtomicReference<Java.Lang.Throwable> arg0, string arg1, params Java.Lang.AutoCloseable[] arg2)
        {
            if (arg2.Length == 0) SExecute(LocalBridgeClazz, "closeAllQuietly", arg0, arg1); else SExecute(LocalBridgeClazz, "closeAllQuietly", arg0, arg1, arg2);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.6.0/org/apache/kafka/common/utils/Utils.html#closeQuietly-java.lang.AutoCloseable-java.lang.String-java.util.concurrent.atomic.AtomicReference-"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.AutoCloseable"/></param>
        /// <param name="arg1"><see cref="string"/></param>
        /// <param name="arg2"><see cref="Java.Util.Concurrent.Atomic.AtomicReference"/></param>
        public static void CloseQuietly(Java.Lang.AutoCloseable arg0, string arg1, Java.Util.Concurrent.Atomic.AtomicReference<Java.Lang.Throwable> arg2)
        {
            SExecute(LocalBridgeClazz, "closeQuietly", arg0, arg1, arg2);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.6.0/org/apache/kafka/common/utils/Utils.html#closeQuietly-java.lang.AutoCloseable-java.lang.String-"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.AutoCloseable"/></param>
        /// <param name="arg1"><see cref="string"/></param>
        public static void CloseQuietly(Java.Lang.AutoCloseable arg0, string arg1)
        {
            SExecute(LocalBridgeClazz, "closeQuietly", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.6.0/org/apache/kafka/common/utils/Utils.html#delete-java.io.File-"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Io.File"/></param>
        /// <exception cref="Java.Io.IOException"/>
        public static void Delete(Java.Io.File arg0)
        {
            SExecute(LocalBridgeClazz, "delete", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.6.0/org/apache/kafka/common/utils/Utils.html#flushDir-java.nio.file.Path-"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Nio.File.Path"/></param>
        /// <exception cref="Java.Io.IOException"/>
        public static void FlushDir(Java.Nio.File.Path arg0)
        {
            SExecute(LocalBridgeClazz, "flushDir", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.6.0/org/apache/kafka/common/utils/Utils.html#flushDirIfExists-java.nio.file.Path-"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Nio.File.Path"/></param>
        /// <exception cref="Java.Io.IOException"/>
        public static void FlushDirIfExists(Java.Nio.File.Path arg0)
        {
            SExecute(LocalBridgeClazz, "flushDirIfExists", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.6.0/org/apache/kafka/common/utils/Utils.html#readFully-java.nio.channels.FileChannel-java.nio.ByteBuffer-long-"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Nio.Channels.FileChannel"/></param>
        /// <param name="arg1"><see cref="Java.Nio.ByteBuffer"/></param>
        /// <param name="arg2"><see cref="long"/></param>
        /// <exception cref="Java.Io.IOException"/>
        public static void ReadFully(Java.Nio.Channels.FileChannel arg0, Java.Nio.ByteBuffer arg1, long arg2)
        {
            SExecute(LocalBridgeClazz, "readFully", arg0, arg1, arg2);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.6.0/org/apache/kafka/common/utils/Utils.html#readFullyOrFail-java.nio.channels.FileChannel-java.nio.ByteBuffer-long-java.lang.String-"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Nio.Channels.FileChannel"/></param>
        /// <param name="arg1"><see cref="Java.Nio.ByteBuffer"/></param>
        /// <param name="arg2"><see cref="long"/></param>
        /// <param name="arg3"><see cref="string"/></param>
        /// <exception cref="Java.Io.IOException"/>
        public static void ReadFullyOrFail(Java.Nio.Channels.FileChannel arg0, Java.Nio.ByteBuffer arg1, long arg2, string arg3)
        {
            SExecute(LocalBridgeClazz, "readFullyOrFail", arg0, arg1, arg2, arg3);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.6.0/org/apache/kafka/common/utils/Utils.html#sleep-long-"/>
        /// </summary>
        /// <param name="arg0"><see cref="long"/></param>
        public static void Sleep(long arg0)
        {
            SExecute(LocalBridgeClazz, "sleep", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.6.0/org/apache/kafka/common/utils/Utils.html#writeFully-java.nio.channels.FileChannel-java.nio.ByteBuffer-"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Nio.Channels.FileChannel"/></param>
        /// <param name="arg1"><see cref="Java.Nio.ByteBuffer"/></param>
        /// <exception cref="Java.Io.IOException"/>
        public static void WriteFully(Java.Nio.Channels.FileChannel arg0, Java.Nio.ByteBuffer arg1)
        {
            SExecute(LocalBridgeClazz, "writeFully", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.6.0/org/apache/kafka/common/utils/Utils.html#writeTo-java.io.DataOutput-java.nio.ByteBuffer-int-"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Io.DataOutput"/></param>
        /// <param name="arg1"><see cref="Java.Nio.ByteBuffer"/></param>
        /// <param name="arg2"><see cref="int"/></param>
        /// <exception cref="Java.Io.IOException"/>
        public static void WriteTo(Java.Io.DataOutput arg0, Java.Nio.ByteBuffer arg1, int arg2)
        {
            SExecute(LocalBridgeClazz, "writeTo", arg0, arg1, arg2);
        }

        #endregion

        #region Instance methods

        #endregion

        #region Nested classes
        #region UncheckedCloseable
        public partial class UncheckedCloseable
        {
            #region Constructors

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields

            #endregion

            #region Static methods

            #endregion

            #region Instance methods
            /// <summary>
            /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.6.0/org/apache/kafka/common/utils/Utils.UncheckedCloseable.html#close--"/>
            /// </summary>
            public void Close()
            {
                IExecute("close");
            }

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

    
        #endregion

        // TODO: complete the class
    }
    #endregion
}