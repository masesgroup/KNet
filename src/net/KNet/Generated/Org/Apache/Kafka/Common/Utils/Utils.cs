/*
*  Copyright (c) 2021-2025 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 2.6.4.0)
*  using kafka-clients-4.1.0.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Org.Apache.Kafka.Common.Utils
{
    #region Utils declaration
    /// <summary>
    /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/4.1.0/org/apache/kafka/common/utils/Utils.html"/>
    /// </summary>
    public partial class Utils : MASES.JCOBridge.C2JBridge.JVMBridgeBase<Utils>
    {
        const string _bridgeClassName = "org.apache.kafka.common.utils.Utils";
        /// <summary>
        /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
        /// </summary>
        public Utils() { }
        /// <summary>
        /// Internal constructor: used internally from JCOBridge
        /// </summary>
        [global::System.Obsolete("This public initializer is needed for JCOBridge internal use, other uses can produce unidentible behaviors.")]
        public Utils(IJVMBridgeBaseInitializer initializer) : base(initializer) { }
        /// <summary>
        /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
        /// </summary>
        public Utils(params object[] args) : base(args) { }

        private static readonly global::System.Exception _LocalBridgeClazzException = null;
        private static readonly MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType _LocalBridgeClazz = JVMBridgeBase.ClazzOf(_bridgeClassName, out _LocalBridgeClazzException, false);
        private static MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType LocalBridgeClazz => _LocalBridgeClazz ?? throw _LocalBridgeClazzException ?? new global::System.InvalidOperationException($"Class {_bridgeClassName} was not found.");

        /// <inheritdoc/>
        public override string BridgeClassName => _bridgeClassName;
        /// <inheritdoc/>
        public override bool IsBridgeAbstract => false;
        /// <inheritdoc/>
        public override bool IsBridgeCloseable => false;
        /// <inheritdoc/>
        public override bool IsBridgeInterface => false;
        /// <inheritdoc/>
        public override bool IsBridgeStatic => false;

        // TODO: complete the class
        #region SwallowAction declaration
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/4.1.0/org/apache/kafka/common/utils/Utils.SwallowAction.html"/>
        /// </summary>
        public partial class SwallowAction : MASES.JCOBridge.C2JBridge.JVMBridgeBase<SwallowAction>
        {
            const string _bridgeClassName = "org.apache.kafka.common.utils.Utils$SwallowAction";
            /// <summary>
            /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
            /// </summary>
            [global::System.Obsolete("SwallowAction class represents, in .NET, an instance of a JVM interface or abstract class. This public initializer is needed for JCOBridge internal use, other uses can produce unidentible behaviors.")]
            public SwallowAction() { }
            /// <summary>
            /// Internal constructor: used internally from JCOBridge
            /// </summary>
            [global::System.Obsolete("This public initializer is needed for JCOBridge internal use, other uses can produce unidentible behaviors.")]
            public SwallowAction(IJVMBridgeBaseInitializer initializer) : base(initializer) { }
            /// <summary>
            /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
            /// </summary>
            [global::System.Obsolete("SwallowAction class represents, in .NET, an instance of a JVM interface or abstract class. This public initializer is needed for JCOBridge internal use, other uses can produce unidentible behaviors.")]
            public SwallowAction(params object[] args) : base(args) { }

            private static readonly global::System.Exception _LocalBridgeClazzException = null;
            private static readonly MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType _LocalBridgeClazz = JVMBridgeBase.ClazzOf(_bridgeClassName, out _LocalBridgeClazzException, false);
            private static MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType LocalBridgeClazz => _LocalBridgeClazz ?? throw _LocalBridgeClazzException ?? new global::System.InvalidOperationException($"Class {_bridgeClassName} was not found.");

            /// <inheritdoc/>
            public override string BridgeClassName => _bridgeClassName;
            /// <inheritdoc/>
            public override bool IsBridgeAbstract => true;
            /// <inheritdoc/>
            public override bool IsBridgeCloseable => false;
            /// <inheritdoc/>
            public override bool IsBridgeInterface => true;
            /// <inheritdoc/>
            public override bool IsBridgeStatic => true;

            // TODO: complete the class

        }
        #endregion

        #region ThrowingRunnable declaration
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/4.1.0/org/apache/kafka/common/utils/Utils.ThrowingRunnable.html"/>
        /// </summary>
        public partial class ThrowingRunnable : MASES.JCOBridge.C2JBridge.JVMBridgeBase<ThrowingRunnable>
        {
            const string _bridgeClassName = "org.apache.kafka.common.utils.Utils$ThrowingRunnable";
            /// <summary>
            /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
            /// </summary>
            [global::System.Obsolete("ThrowingRunnable class represents, in .NET, an instance of a JVM interface or abstract class. This public initializer is needed for JCOBridge internal use, other uses can produce unidentible behaviors.")]
            public ThrowingRunnable() { }
            /// <summary>
            /// Internal constructor: used internally from JCOBridge
            /// </summary>
            [global::System.Obsolete("This public initializer is needed for JCOBridge internal use, other uses can produce unidentible behaviors.")]
            public ThrowingRunnable(IJVMBridgeBaseInitializer initializer) : base(initializer) { }
            /// <summary>
            /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
            /// </summary>
            [global::System.Obsolete("ThrowingRunnable class represents, in .NET, an instance of a JVM interface or abstract class. This public initializer is needed for JCOBridge internal use, other uses can produce unidentible behaviors.")]
            public ThrowingRunnable(params object[] args) : base(args) { }

            private static readonly global::System.Exception _LocalBridgeClazzException = null;
            private static readonly MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType _LocalBridgeClazz = JVMBridgeBase.ClazzOf(_bridgeClassName, out _LocalBridgeClazzException, false);
            private static MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType LocalBridgeClazz => _LocalBridgeClazz ?? throw _LocalBridgeClazzException ?? new global::System.InvalidOperationException($"Class {_bridgeClassName} was not found.");

            /// <inheritdoc/>
            public override string BridgeClassName => _bridgeClassName;
            /// <inheritdoc/>
            public override bool IsBridgeAbstract => true;
            /// <inheritdoc/>
            public override bool IsBridgeCloseable => false;
            /// <inheritdoc/>
            public override bool IsBridgeInterface => true;
            /// <inheritdoc/>
            public override bool IsBridgeStatic => true;

            // TODO: complete the class

        }
        #endregion

        #region UncheckedCloseable declaration
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/4.1.0/org/apache/kafka/common/utils/Utils.UncheckedCloseable.html"/>
        /// </summary>
        public partial class UncheckedCloseable : Java.Lang.AutoCloseable
        {
            const string _bridgeClassName = "org.apache.kafka.common.utils.Utils$UncheckedCloseable";
            /// <summary>
            /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
            /// </summary>
            [global::System.Obsolete("UncheckedCloseable class represents, in .NET, an instance of a JVM interface or abstract class. This public initializer is needed for JCOBridge internal use, other uses can produce unidentible behaviors.")]
            public UncheckedCloseable() { }
            /// <summary>
            /// Internal constructor: used internally from JCOBridge
            /// </summary>
            [global::System.Obsolete("This public initializer is needed for JCOBridge internal use, other uses can produce unidentible behaviors.")]
            public UncheckedCloseable(IJVMBridgeBaseInitializer initializer) : base(initializer) { }
            /// <summary>
            /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
            /// </summary>
            [global::System.Obsolete("UncheckedCloseable class represents, in .NET, an instance of a JVM interface or abstract class. This public initializer is needed for JCOBridge internal use, other uses can produce unidentible behaviors.")]
            public UncheckedCloseable(params object[] args) : base(args) { }

            private static readonly global::System.Exception _LocalBridgeClazzException = null;
            private static readonly MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType _LocalBridgeClazz = JVMBridgeBase.ClazzOf(_bridgeClassName, out _LocalBridgeClazzException, false);
            private static MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType LocalBridgeClazz => _LocalBridgeClazz ?? throw _LocalBridgeClazzException ?? new global::System.InvalidOperationException($"Class {_bridgeClassName} was not found.");

            /// <inheritdoc/>
            public override string BridgeClassName => _bridgeClassName;
            /// <inheritdoc/>
            public override bool IsBridgeAbstract => true;
            /// <inheritdoc/>
            public override bool IsBridgeCloseable => true;
            /// <inheritdoc/>
            public override bool IsBridgeInterface => true;
            /// <inheritdoc/>
            public override bool IsBridgeStatic => true;

            // TODO: complete the class

        }
        #endregion

    
    }
    #endregion

    #region Utils implementation
    public partial class Utils
    {
        #region Constructors

        #endregion

        #region Class/Interface conversion operators

        #endregion

        #region Fields
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/4.1.0/org/apache/kafka/common/utils/Utils.html#NL"/>
        /// </summary>
        public static Java.Lang.String NL { get { if (!_NLReady) { _NLContent = SGetField<Java.Lang.String>(LocalBridgeClazz, "NL"); _NLReady = true; } return _NLContent; } }
        private static Java.Lang.String _NLContent = default;
        private static bool _NLReady = false; // this is used because in case of generics 

        #endregion

        #region Static methods
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/4.1.0/org/apache/kafka/common/utils/Utils.html#getContextOrKafkaClassLoader()"/> 
        /// </summary>
        public static Java.Lang.ClassLoader ContextOrKafkaClassLoader
        {
            get { return SExecuteWithSignature<Java.Lang.ClassLoader>(LocalBridgeClazz, "getContextOrKafkaClassLoader", "()Ljava/lang/ClassLoader;"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/4.1.0/org/apache/kafka/common/utils/Utils.html#getKafkaClassLoader()"/> 
        /// </summary>
        public static Java.Lang.ClassLoader KafkaClassLoader
        {
            get { return SExecuteWithSignature<Java.Lang.ClassLoader>(LocalBridgeClazz, "getKafkaClassLoader", "()Ljava/lang/ClassLoader;"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/4.1.0/org/apache/kafka/common/utils/Utils.html#diff(java.util.function.Supplier,java.util.Set,java.util.Set)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Util.Function.Supplier"/></param>
        /// <param name="arg1"><see cref="Java.Util.Set"/></param>
        /// <param name="arg2"><see cref="Java.Util.Set"/></param>
        /// <typeparam name="E"></typeparam>
        /// <returns><see cref="Java.Util.Set"/></returns>
        public static Java.Util.Set<E> Diff<E>(Java.Util.Function.Supplier<Java.Util.Set<E>> arg0, Java.Util.Set<E> arg1, Java.Util.Set<E> arg2)
        {
            return SExecuteWithSignature<Java.Util.Set<E>>(LocalBridgeClazz, "diff", "(Ljava/util/function/Supplier;Ljava/util/Set;Ljava/util/Set;)Ljava/util/Set;", arg0, arg1, arg2);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/4.1.0/org/apache/kafka/common/utils/Utils.html#intersection(java.util.function.Supplier,java.util.Set,java.util.Set...)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Util.Function.Supplier"/></param>
        /// <param name="arg1"><see cref="Java.Util.Set"/></param>
        /// <param name="arg2"><see cref="Java.Util.Set"/></param>
        /// <typeparam name="E"></typeparam>
        /// <returns><see cref="Java.Util.Set"/></returns>
        public static Java.Util.Set<E> Intersection<E>(Java.Util.Function.Supplier<Java.Util.Set<E>> arg0, Java.Util.Set<E> arg1, params Java.Util.Set<E>[] arg2)
        {
            if (arg2.Length == 0) return SExecuteWithSignature<Java.Util.Set<E>>(LocalBridgeClazz, "intersection", "(Ljava/util/function/Supplier;Ljava/util/Set;[Ljava/util/Set;)Ljava/util/Set;", arg0, arg1); else return SExecuteWithSignature<Java.Util.Set<E>>(LocalBridgeClazz, "intersection", "(Ljava/util/function/Supplier;Ljava/util/Set;[Ljava/util/Set;)Ljava/util/Set;", arg0, arg1, arg2);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/4.1.0/org/apache/kafka/common/utils/Utils.html#union(java.util.function.Supplier,java.util.Set...)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Util.Function.Supplier"/></param>
        /// <param name="arg1"><see cref="Java.Util.Set"/></param>
        /// <typeparam name="E"></typeparam>
        /// <returns><see cref="Java.Util.Set"/></returns>
        public static Java.Util.Set<E> Union<E>(Java.Util.Function.Supplier<Java.Util.Set<E>> arg0, params Java.Util.Set<E>[] arg1)
        {
            if (arg1.Length == 0) return SExecuteWithSignature<Java.Util.Set<E>>(LocalBridgeClazz, "union", "(Ljava/util/function/Supplier;[Ljava/util/Set;)Ljava/util/Set;", arg0); else return SExecuteWithSignature<Java.Util.Set<E>>(LocalBridgeClazz, "union", "(Ljava/util/function/Supplier;[Ljava/util/Set;)Ljava/util/Set;", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/4.1.0/org/apache/kafka/common/utils/Utils.html#entriesToMap(java.util.function.Supplier)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Util.Function.Supplier"/></param>
        /// <typeparam name="K"></typeparam>
        /// <typeparam name="V"></typeparam>
        /// <typeparam name="M"><see cref="Java.Util.Map{K, V}"/></typeparam>
        /// <returns><see cref="Java.Util.Stream.Collector"/></returns>
        public static Java.Util.Stream.Collector<Java.Util.Map.Entry<K, V>, M, M> EntriesToMap<K, V, M>(Java.Util.Function.Supplier<M> arg0) where M : Java.Util.Map<K, V>
        {
            return SExecuteWithSignature<Java.Util.Stream.Collector<Java.Util.Map.Entry<K, V>, M, M>>(LocalBridgeClazz, "entriesToMap", "(Ljava/util/function/Supplier;)Ljava/util/stream/Collector;", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/4.1.0/org/apache/kafka/common/utils/Utils.html#mkString(java.util.Map,java.lang.String,java.lang.String,java.lang.String,java.lang.String)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Util.Map"/></param>
        /// <param name="arg1"><see cref="Java.Lang.String"/></param>
        /// <param name="arg2"><see cref="Java.Lang.String"/></param>
        /// <param name="arg3"><see cref="Java.Lang.String"/></param>
        /// <param name="arg4"><see cref="Java.Lang.String"/></param>
        /// <typeparam name="K"></typeparam>
        /// <typeparam name="V"></typeparam>
        /// <returns><see cref="Java.Lang.String"/></returns>
        public static Java.Lang.String MkString<K, V>(Java.Util.Map<K, V> arg0, Java.Lang.String arg1, Java.Lang.String arg2, Java.Lang.String arg3, Java.Lang.String arg4)
        {
            return SExecuteWithSignature<Java.Lang.String>(LocalBridgeClazz, "mkString", "(Ljava/util/Map;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;", arg0, arg1, arg2, arg3, arg4);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/4.1.0/org/apache/kafka/common/utils/Utils.html#filterMap(java.util.Map,java.util.function.Predicate)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Util.Map"/></param>
        /// <param name="arg1"><see cref="Java.Util.Function.Predicate"/></param>
        /// <typeparam name="K"></typeparam>
        /// <typeparam name="V"></typeparam>
        /// <returns><see cref="Java.Util.Map"/></returns>
        public static Java.Util.Map<K, V> FilterMap<K, V>(Java.Util.Map<K, V> arg0, Java.Util.Function.Predicate<Java.Util.Map.Entry<K, V>> arg1)
        {
            return SExecuteWithSignature<Java.Util.Map<K, V>>(LocalBridgeClazz, "filterMap", "(Ljava/util/Map;Ljava/util/function/Predicate;)Ljava/util/Map;", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/4.1.0/org/apache/kafka/common/utils/Utils.html#mkMap(java.util.Map.Entry...)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Util.Map.Entry"/></param>
        /// <typeparam name="K"></typeparam>
        /// <typeparam name="V"></typeparam>
        /// <returns><see cref="Java.Util.Map"/></returns>
        public static Java.Util.Map<K, V> MkMap<K, V>(params Java.Util.Map.Entry<K, V>[] arg0)
        {
            if (arg0.Length == 0) return SExecuteWithSignature<Java.Util.Map<K, V>>(LocalBridgeClazz, "mkMap", "([Ljava/util/Map$Entry;)Ljava/util/Map;"); else return SExecuteWithSignature<Java.Util.Map<K, V>>(LocalBridgeClazz, "mkMap", "([Ljava/util/Map$Entry;)Ljava/util/Map;", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/4.1.0/org/apache/kafka/common/utils/Utils.html#mkEntry(java.lang.Object,java.lang.Object)"/>
        /// </summary>
        /// <param name="arg0"><typeparamref name="K"/></param>
        /// <param name="arg1"><typeparamref name="V"/></param>
        /// <typeparam name="K"></typeparam>
        /// <typeparam name="V"></typeparam>
        /// <returns><see cref="Java.Util.Map.Entry"/></returns>
        public static Java.Util.Map.Entry<K, V> MkEntry<K, V>(K arg0, V arg1)
        {
            return SExecuteWithSignature<Java.Util.Map.Entry<K, V>>(LocalBridgeClazz, "mkEntry", "(Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/Map$Entry;", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/4.1.0/org/apache/kafka/common/utils/Utils.html#sorted(java.util.Collection)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Util.Collection"/></param>
        /// <typeparam name="T"></typeparam>
        /// <returns><see cref="Java.Util.List"/></returns>
        public static Java.Util.List<T> Sorted<T>(Java.Util.Collection<T> arg0)
        {
            return SExecuteWithSignature<Java.Util.List<T>>(LocalBridgeClazz, "sorted", "(Ljava/util/Collection;)Ljava/util/List;", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/4.1.0/org/apache/kafka/common/utils/Utils.html#mkSortedSet(java.lang.Comparable...)"/>
        /// </summary>
        /// <param name="arg0"><typeparamref name="T"/></param>
        /// <typeparam name="T"><see cref="Java.Lang.Comparable{T}"/></typeparam>
        /// <returns><see cref="Java.Util.SortedSet"/></returns>
        public static Java.Util.SortedSet<T> MkSortedSet<T>(params T[] arg0) where T : Java.Lang.Comparable<T>
        {
            if (arg0.Length == 0) return SExecuteWithSignature<Java.Util.SortedSet<T>>(LocalBridgeClazz, "mkSortedSet", "([Ljava/lang/Comparable;)Ljava/util/SortedSet;"); else return SExecuteWithSignature<Java.Util.SortedSet<T>>(LocalBridgeClazz, "mkSortedSet", "([Ljava/lang/Comparable;)Ljava/util/SortedSet;", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/4.1.0/org/apache/kafka/common/utils/Utils.html#loadClass(java.lang.String,java.lang.Class)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        /// <param name="arg1"><see cref="Java.Lang.Class"/></param>
        /// <typeparam name="ReturnExtendsT"><typeparamref name="T"/></typeparam>
        /// <typeparam name="T"></typeparam>
        /// <returns><see cref="Java.Lang.Class"/></returns>
        /// <exception cref="Java.Lang.ClassNotFoundException"/>
        public static Java.Lang.Class LoadClass<ReturnExtendsT, T>(Java.Lang.String arg0, Java.Lang.Class arg1) where ReturnExtendsT : T
        {
            return SExecuteWithSignature<Java.Lang.Class>(LocalBridgeClazz, "loadClass", "(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Class;", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/4.1.0/org/apache/kafka/common/utils/Utils.html#safe(java.util.List)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Util.List"/></param>
        /// <typeparam name="T"></typeparam>
        /// <returns><see cref="Java.Util.List"/></returns>
        public static Java.Util.List<T> Safe<T>(Java.Util.List<T> arg0)
        {
            return SExecuteWithSignature<Java.Util.List<T>>(LocalBridgeClazz, "safe", "(Ljava/util/List;)Ljava/util/List;", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/4.1.0/org/apache/kafka/common/utils/Utils.html#toList(java.lang.Iterable)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.Iterable"/></param>
        /// <typeparam name="T"></typeparam>
        /// <returns><see cref="Java.Util.List"/></returns>
        public static Java.Util.List<T> ToList<T>(Java.Lang.Iterable<T> arg0)
        {
            return SExecuteWithSignature<Java.Util.List<T>>(LocalBridgeClazz, "toList", "(Ljava/lang/Iterable;)Ljava/util/List;", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/4.1.0/org/apache/kafka/common/utils/Utils.html#toList(java.util.Iterator,java.util.function.Predicate)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Util.Iterator"/></param>
        /// <param name="arg1"><see cref="Java.Util.Function.Predicate"/></param>
        /// <typeparam name="T"></typeparam>
        /// <returns><see cref="Java.Util.List"/></returns>
        public static Java.Util.List<T> ToList<T>(Java.Util.Iterator<T> arg0, Java.Util.Function.Predicate<T> arg1)
        {
            return SExecuteWithSignature<Java.Util.List<T>>(LocalBridgeClazz, "toList", "(Ljava/util/Iterator;Ljava/util/function/Predicate;)Ljava/util/List;", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/4.1.0/org/apache/kafka/common/utils/Utils.html#toList(java.util.Iterator)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Util.Iterator"/></param>
        /// <typeparam name="T"></typeparam>
        /// <returns><see cref="Java.Util.List"/></returns>
        public static Java.Util.List<T> ToList<T>(Java.Util.Iterator<T> arg0)
        {
            return SExecuteWithSignature<Java.Util.List<T>>(LocalBridgeClazz, "toList", "(Ljava/util/Iterator;)Ljava/util/List;", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/4.1.0/org/apache/kafka/common/utils/Utils.html#newInstance(java.lang.Class,java.lang.Class)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.Class"/></param>
        /// <param name="arg1"><see cref="Java.Lang.Class"/></param>
        /// <typeparam name="T"></typeparam>
        /// <returns><typeparamref name="T"/></returns>
        public static T NewInstance<T>(Java.Lang.Class arg0, Java.Lang.Class arg1)
        {
            return SExecuteWithSignature<T>(LocalBridgeClazz, "newInstance", "(Ljava/lang/Class;Ljava/lang/Class;)Ljava/lang/Object;", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/4.1.0/org/apache/kafka/common/utils/Utils.html#newInstance(java.lang.Class)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.Class"/></param>
        /// <typeparam name="T"></typeparam>
        /// <returns><typeparamref name="T"/></returns>
        public static T NewInstance<T>(Java.Lang.Class arg0)
        {
            return SExecuteWithSignature<T>(LocalBridgeClazz, "newInstance", "(Ljava/lang/Class;)Ljava/lang/Object;", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/4.1.0/org/apache/kafka/common/utils/Utils.html#newInstance(java.lang.String,java.lang.Class)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        /// <param name="arg1"><see cref="Java.Lang.Class"/></param>
        /// <typeparam name="T"></typeparam>
        /// <returns><typeparamref name="T"/></returns>
        /// <exception cref="Java.Lang.ClassNotFoundException"/>
        public static T NewInstance<T>(Java.Lang.String arg0, Java.Lang.Class arg1)
        {
            return SExecuteWithSignature<T>(LocalBridgeClazz, "newInstance", "(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/4.1.0/org/apache/kafka/common/utils/Utils.html#newParameterizedInstance(java.lang.String,java.lang.Object...)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        /// <param name="arg1"><see cref="object"/></param>
        /// <typeparam name="T"></typeparam>
        /// <returns><typeparamref name="T"/></returns>
        /// <exception cref="Java.Lang.ClassNotFoundException"/>
        public static T NewParameterizedInstance<T>(Java.Lang.String arg0, params object[] arg1)
        {
            if (arg1.Length == 0) return SExecuteWithSignature<T>(LocalBridgeClazz, "newParameterizedInstance", "(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;", arg0); else return SExecuteWithSignature<T>(LocalBridgeClazz, "newParameterizedInstance", "(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/4.1.0/org/apache/kafka/common/utils/Utils.html#entriesWithPrefix(java.util.Map,java.lang.String,boolean,boolean)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Util.Map"/></param>
        /// <param name="arg1"><see cref="Java.Lang.String"/></param>
        /// <param name="arg2"><see cref="bool"/></param>
        /// <param name="arg3"><see cref="bool"/></param>
        /// <typeparam name="V"></typeparam>
        /// <returns><see cref="Java.Util.Map"/></returns>
        public static Java.Util.Map<Java.Lang.String, V> EntriesWithPrefix<V>(Java.Util.Map<Java.Lang.String, V> arg0, Java.Lang.String arg1, bool arg2, bool arg3)
        {
            return SExecuteWithSignature<Java.Util.Map<Java.Lang.String, V>>(LocalBridgeClazz, "entriesWithPrefix", "(Ljava/util/Map;Ljava/lang/String;ZZ)Ljava/util/Map;", arg0, arg1, arg2, arg3);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/4.1.0/org/apache/kafka/common/utils/Utils.html#entriesWithPrefix(java.util.Map,java.lang.String,boolean)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Util.Map"/></param>
        /// <param name="arg1"><see cref="Java.Lang.String"/></param>
        /// <param name="arg2"><see cref="bool"/></param>
        /// <typeparam name="V"></typeparam>
        /// <returns><see cref="Java.Util.Map"/></returns>
        public static Java.Util.Map<Java.Lang.String, V> EntriesWithPrefix<V>(Java.Util.Map<Java.Lang.String, V> arg0, Java.Lang.String arg1, bool arg2)
        {
            return SExecuteWithSignature<Java.Util.Map<Java.Lang.String, V>>(LocalBridgeClazz, "entriesWithPrefix", "(Ljava/util/Map;Ljava/lang/String;Z)Ljava/util/Map;", arg0, arg1, arg2);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/4.1.0/org/apache/kafka/common/utils/Utils.html#entriesWithPrefix(java.util.Map,java.lang.String)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Util.Map"/></param>
        /// <param name="arg1"><see cref="Java.Lang.String"/></param>
        /// <typeparam name="V"></typeparam>
        /// <returns><see cref="Java.Util.Map"/></returns>
        public static Java.Util.Map<Java.Lang.String, V> EntriesWithPrefix<V>(Java.Util.Map<Java.Lang.String, V> arg0, Java.Lang.String arg1)
        {
            return SExecuteWithSignature<Java.Util.Map<Java.Lang.String, V>>(LocalBridgeClazz, "entriesWithPrefix", "(Ljava/util/Map;Ljava/lang/String;)Ljava/util/Map;", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/4.1.0/org/apache/kafka/common/utils/Utils.html#isBlank(java.lang.String)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        /// <returns><see cref="bool"/></returns>
        public static bool IsBlank(Java.Lang.String arg0)
        {
            return SExecuteWithSignature<bool>(LocalBridgeClazz, "isBlank", "(Ljava/lang/String;)Z", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/4.1.0/org/apache/kafka/common/utils/Utils.html#isEqualConstantTime(char[],char[])"/>
        /// </summary>
        /// <param name="arg0"><see cref="char"/></param>
        /// <param name="arg1"><see cref="char"/></param>
        /// <returns><see cref="bool"/></returns>
        public static bool IsEqualConstantTime(char[] arg0, char[] arg1)
        {
            return SExecuteWithSignature<bool>(LocalBridgeClazz, "isEqualConstantTime", "([C[C)Z", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/4.1.0/org/apache/kafka/common/utils/Utils.html#validHostPattern(java.lang.String)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        /// <returns><see cref="bool"/></returns>
        public static bool ValidHostPattern(Java.Lang.String arg0)
        {
            return SExecuteWithSignature<bool>(LocalBridgeClazz, "validHostPattern", "(Ljava/lang/String;)Z", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/4.1.0/org/apache/kafka/common/utils/Utils.html#copyArray(byte[])"/>
        /// </summary>
        /// <param name="arg0"><see cref="byte"/></param>
        /// <returns><see cref="byte"/></returns>
        public static byte[] CopyArray(byte[] arg0)
        {
            return SExecuteWithSignatureArray<byte>(LocalBridgeClazz, "copyArray", "([B)[B", new object[] { arg0 });
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/4.1.0/org/apache/kafka/common/utils/Utils.html#getNullableArray(java.nio.ByteBuffer,int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Nio.ByteBuffer"/></param>
        /// <param name="arg1"><see cref="int"/></param>
        /// <returns><see cref="byte"/></returns>
        public static byte[] GetNullableArray(Java.Nio.ByteBuffer arg0, int arg1)
        {
            return SExecuteWithSignatureArray<byte>(LocalBridgeClazz, "getNullableArray", "(Ljava/nio/ByteBuffer;I)[B", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/4.1.0/org/apache/kafka/common/utils/Utils.html#getNullableSizePrefixedArray(java.nio.ByteBuffer)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Nio.ByteBuffer"/></param>
        /// <returns><see cref="byte"/></returns>
        public static byte[] GetNullableSizePrefixedArray(Java.Nio.ByteBuffer arg0)
        {
            return SExecuteWithSignatureArray<byte>(LocalBridgeClazz, "getNullableSizePrefixedArray", "(Ljava/nio/ByteBuffer;)[B", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/4.1.0/org/apache/kafka/common/utils/Utils.html#readBytes(java.nio.ByteBuffer,int,int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Nio.ByteBuffer"/></param>
        /// <param name="arg1"><see cref="int"/></param>
        /// <param name="arg2"><see cref="int"/></param>
        /// <returns><see cref="byte"/></returns>
        public static byte[] ReadBytes(Java.Nio.ByteBuffer arg0, int arg1, int arg2)
        {
            return SExecuteWithSignatureArray<byte>(LocalBridgeClazz, "readBytes", "(Ljava/nio/ByteBuffer;II)[B", arg0, arg1, arg2);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/4.1.0/org/apache/kafka/common/utils/Utils.html#readBytes(java.nio.ByteBuffer)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Nio.ByteBuffer"/></param>
        /// <returns><see cref="byte"/></returns>
        public static byte[] ReadBytes(Java.Nio.ByteBuffer arg0)
        {
            return SExecuteWithSignatureArray<byte>(LocalBridgeClazz, "readBytes", "(Ljava/nio/ByteBuffer;)[B", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/4.1.0/org/apache/kafka/common/utils/Utils.html#toArray(java.nio.ByteBuffer,int,int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Nio.ByteBuffer"/></param>
        /// <param name="arg1"><see cref="int"/></param>
        /// <param name="arg2"><see cref="int"/></param>
        /// <returns><see cref="byte"/></returns>
        public static byte[] ToArray(Java.Nio.ByteBuffer arg0, int arg1, int arg2)
        {
            return SExecuteWithSignatureArray<byte>(LocalBridgeClazz, "toArray", "(Ljava/nio/ByteBuffer;II)[B", arg0, arg1, arg2);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/4.1.0/org/apache/kafka/common/utils/Utils.html#toArray(java.nio.ByteBuffer,int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Nio.ByteBuffer"/></param>
        /// <param name="arg1"><see cref="int"/></param>
        /// <returns><see cref="byte"/></returns>
        public static byte[] ToArray(Java.Nio.ByteBuffer arg0, int arg1)
        {
            return SExecuteWithSignatureArray<byte>(LocalBridgeClazz, "toArray", "(Ljava/nio/ByteBuffer;I)[B", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/4.1.0/org/apache/kafka/common/utils/Utils.html#toArray(java.nio.ByteBuffer)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Nio.ByteBuffer"/></param>
        /// <returns><see cref="byte"/></returns>
        public static byte[] ToArray(Java.Nio.ByteBuffer arg0)
        {
            return SExecuteWithSignatureArray<byte>(LocalBridgeClazz, "toArray", "(Ljava/nio/ByteBuffer;)[B", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/4.1.0/org/apache/kafka/common/utils/Utils.html#toNullableArray(java.nio.ByteBuffer)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Nio.ByteBuffer"/></param>
        /// <returns><see cref="byte"/></returns>
        public static byte[] ToNullableArray(Java.Nio.ByteBuffer arg0)
        {
            return SExecuteWithSignatureArray<byte>(LocalBridgeClazz, "toNullableArray", "(Ljava/nio/ByteBuffer;)[B", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/4.1.0/org/apache/kafka/common/utils/Utils.html#utf8(java.lang.String)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        /// <returns><see cref="byte"/></returns>
        public static byte[] Utf8(Java.Lang.String arg0)
        {
            return SExecuteWithSignatureArray<byte>(LocalBridgeClazz, "utf8", "(Ljava/lang/String;)[B", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/4.1.0/org/apache/kafka/common/utils/Utils.html#abs(int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <returns><see cref="int"/></returns>
        public static int Abs(int arg0)
        {
            return SExecuteWithSignature<int>(LocalBridgeClazz, "abs", "(I)I", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/4.1.0/org/apache/kafka/common/utils/Utils.html#murmur2(byte[])"/>
        /// </summary>
        /// <param name="arg0"><see cref="byte"/></param>
        /// <returns><see cref="int"/></returns>
        public static int Murmur2(byte[] arg0)
        {
            return SExecuteWithSignature<int>(LocalBridgeClazz, "murmur2", "([B)I", new object[] { arg0 });
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/4.1.0/org/apache/kafka/common/utils/Utils.html#readFully(java.io.InputStream,java.nio.ByteBuffer)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Io.InputStream"/></param>
        /// <param name="arg1"><see cref="Java.Nio.ByteBuffer"/></param>
        /// <returns><see cref="int"/></returns>
        /// <exception cref="Java.Io.IOException"/>
        public static int ReadFully(Java.Io.InputStream arg0, Java.Nio.ByteBuffer arg1)
        {
            return SExecuteWithSignature<int>(LocalBridgeClazz, "readFully", "(Ljava/io/InputStream;Ljava/nio/ByteBuffer;)I", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/4.1.0/org/apache/kafka/common/utils/Utils.html#to32BitField(java.util.Set)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Util.Set"/></param>
        /// <returns><see cref="int"/></returns>
        public static int To32BitField(Java.Util.Set<Java.Lang.Byte> arg0)
        {
            return SExecuteWithSignature<int>(LocalBridgeClazz, "to32BitField", "(Ljava/util/Set;)I", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/4.1.0/org/apache/kafka/common/utils/Utils.html#toPositive(int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <returns><see cref="int"/></returns>
        public static int ToPositive(int arg0)
        {
            return SExecuteWithSignature<int>(LocalBridgeClazz, "toPositive", "(I)I", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/4.1.0/org/apache/kafka/common/utils/Utils.html#utf8Length(java.lang.CharSequence)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.CharSequence"/></param>
        /// <returns><see cref="int"/></returns>
        public static int Utf8Length(Java.Lang.CharSequence arg0)
        {
            return SExecuteWithSignature<int>(LocalBridgeClazz, "utf8Length", "(Ljava/lang/CharSequence;)I", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/4.1.0/org/apache/kafka/common/utils/Utils.html#getPort(java.lang.String)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        /// <returns><see cref="Java.Lang.Integer"/></returns>
        public static Java.Lang.Integer GetPort(Java.Lang.String arg0)
        {
            return SExecuteWithSignature<Java.Lang.Integer>(LocalBridgeClazz, "getPort", "(Ljava/lang/String;)Ljava/lang/Integer;", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/4.1.0/org/apache/kafka/common/utils/Utils.html#formatAddress(java.lang.String,java.lang.Integer)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        /// <param name="arg1"><see cref="Java.Lang.Integer"/></param>
        /// <returns><see cref="Java.Lang.String"/></returns>
        public static Java.Lang.String FormatAddress(Java.Lang.String arg0, Java.Lang.Integer arg1)
        {
            return SExecuteWithSignature<Java.Lang.String>(LocalBridgeClazz, "formatAddress", "(Ljava/lang/String;Ljava/lang/Integer;)Ljava/lang/String;", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/4.1.0/org/apache/kafka/common/utils/Utils.html#formatBytes(long)"/>
        /// </summary>
        /// <param name="arg0"><see cref="long"/></param>
        /// <returns><see cref="Java.Lang.String"/></returns>
        public static Java.Lang.String FormatBytes(long arg0)
        {
            return SExecuteWithSignature<Java.Lang.String>(LocalBridgeClazz, "formatBytes", "(J)Ljava/lang/String;", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/4.1.0/org/apache/kafka/common/utils/Utils.html#getHost(java.lang.String)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        /// <returns><see cref="Java.Lang.String"/></returns>
        public static Java.Lang.String GetHost(Java.Lang.String arg0)
        {
            return SExecuteWithSignature<Java.Lang.String>(LocalBridgeClazz, "getHost", "(Ljava/lang/String;)Ljava/lang/String;", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/4.1.0/org/apache/kafka/common/utils/Utils.html#readFileAsString(java.lang.String)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        /// <returns><see cref="Java.Lang.String"/></returns>
        /// <exception cref="Java.Io.IOException"/>
        public static Java.Lang.String ReadFileAsString(Java.Lang.String arg0)
        {
            return SExecuteWithSignature<Java.Lang.String>(LocalBridgeClazz, "readFileAsString", "(Ljava/lang/String;)Ljava/lang/String;", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/4.1.0/org/apache/kafka/common/utils/Utils.html#replaceSuffix(java.lang.String,java.lang.String,java.lang.String)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        /// <param name="arg1"><see cref="Java.Lang.String"/></param>
        /// <param name="arg2"><see cref="Java.Lang.String"/></param>
        /// <returns><see cref="Java.Lang.String"/></returns>
        public static Java.Lang.String ReplaceSuffix(Java.Lang.String arg0, Java.Lang.String arg1, Java.Lang.String arg2)
        {
            return SExecuteWithSignature<Java.Lang.String>(LocalBridgeClazz, "replaceSuffix", "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;", arg0, arg1, arg2);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/4.1.0/org/apache/kafka/common/utils/Utils.html#stackTrace(java.lang.Throwable)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.Throwable"/></param>
        /// <returns><see cref="Java.Lang.String"/></returns>
        public static Java.Lang.String StackTrace(MASES.JCOBridge.C2JBridge.JVMBridgeException arg0)
        {
            return SExecuteWithSignature<Java.Lang.String>(LocalBridgeClazz, "stackTrace", "(Ljava/lang/Throwable;)Ljava/lang/String;", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/4.1.0/org/apache/kafka/common/utils/Utils.html#toLogDateTimeFormat(long)"/>
        /// </summary>
        /// <param name="arg0"><see cref="long"/></param>
        /// <returns><see cref="Java.Lang.String"/></returns>
        public static Java.Lang.String ToLogDateTimeFormat(long arg0)
        {
            return SExecuteWithSignature<Java.Lang.String>(LocalBridgeClazz, "toLogDateTimeFormat", "(J)Ljava/lang/String;", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/4.1.0/org/apache/kafka/common/utils/Utils.html#utf8(byte[])"/>
        /// </summary>
        /// <param name="arg0"><see cref="byte"/></param>
        /// <returns><see cref="Java.Lang.String"/></returns>
        public static Java.Lang.String Utf8(byte[] arg0)
        {
            return SExecuteWithSignature<Java.Lang.String>(LocalBridgeClazz, "utf8", "([B)Ljava/lang/String;", new object[] { arg0 });
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/4.1.0/org/apache/kafka/common/utils/Utils.html#utf8(java.nio.ByteBuffer,int,int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Nio.ByteBuffer"/></param>
        /// <param name="arg1"><see cref="int"/></param>
        /// <param name="arg2"><see cref="int"/></param>
        /// <returns><see cref="Java.Lang.String"/></returns>
        public static Java.Lang.String Utf8(Java.Nio.ByteBuffer arg0, int arg1, int arg2)
        {
            return SExecuteWithSignature<Java.Lang.String>(LocalBridgeClazz, "utf8", "(Ljava/nio/ByteBuffer;II)Ljava/lang/String;", arg0, arg1, arg2);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/4.1.0/org/apache/kafka/common/utils/Utils.html#utf8(java.nio.ByteBuffer,int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Nio.ByteBuffer"/></param>
        /// <param name="arg1"><see cref="int"/></param>
        /// <returns><see cref="Java.Lang.String"/></returns>
        public static Java.Lang.String Utf8(Java.Nio.ByteBuffer arg0, int arg1)
        {
            return SExecuteWithSignature<Java.Lang.String>(LocalBridgeClazz, "utf8", "(Ljava/nio/ByteBuffer;I)Ljava/lang/String;", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/4.1.0/org/apache/kafka/common/utils/Utils.html#utf8(java.nio.ByteBuffer)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Nio.ByteBuffer"/></param>
        /// <returns><see cref="Java.Lang.String"/></returns>
        public static Java.Lang.String Utf8(Java.Nio.ByteBuffer arg0)
        {
            return SExecuteWithSignature<Java.Lang.String>(LocalBridgeClazz, "utf8", "(Ljava/nio/ByteBuffer;)Ljava/lang/String;", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/4.1.0/org/apache/kafka/common/utils/Utils.html#enumOptions(java.lang.Class)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.Class"/></param>
        /// <returns><see cref="Java.Lang.String"/></returns>
        public static Java.Lang.String[] EnumOptions(Java.Lang.Class arg0)
        {
            return SExecuteWithSignatureArray<Java.Lang.String>(LocalBridgeClazz, "enumOptions", "(Ljava/lang/Class;)[Ljava/lang/String;", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/4.1.0/org/apache/kafka/common/utils/Utils.html#ensureCapacity(java.nio.ByteBuffer,int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Nio.ByteBuffer"/></param>
        /// <param name="arg1"><see cref="int"/></param>
        /// <returns><see cref="Java.Nio.ByteBuffer"/></returns>
        public static Java.Nio.ByteBuffer EnsureCapacity(Java.Nio.ByteBuffer arg0, int arg1)
        {
            return SExecuteWithSignature<Java.Nio.ByteBuffer>(LocalBridgeClazz, "ensureCapacity", "(Ljava/nio/ByteBuffer;I)Ljava/nio/ByteBuffer;", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/4.1.0/org/apache/kafka/common/utils/Utils.html#readBytes(java.nio.ByteBuffer,int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Nio.ByteBuffer"/></param>
        /// <param name="arg1"><see cref="int"/></param>
        /// <returns><see cref="Java.Nio.ByteBuffer"/></returns>
        public static Java.Nio.ByteBuffer ReadBytes(Java.Nio.ByteBuffer arg0, int arg1)
        {
            return SExecuteWithSignature<Java.Nio.ByteBuffer>(LocalBridgeClazz, "readBytes", "(Ljava/nio/ByteBuffer;I)Ljava/nio/ByteBuffer;", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/4.1.0/org/apache/kafka/common/utils/Utils.html#sizeDelimited(java.nio.ByteBuffer,int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Nio.ByteBuffer"/></param>
        /// <param name="arg1"><see cref="int"/></param>
        /// <returns><see cref="Java.Nio.ByteBuffer"/></returns>
        public static Java.Nio.ByteBuffer SizeDelimited(Java.Nio.ByteBuffer arg0, int arg1)
        {
            return SExecuteWithSignature<Java.Nio.ByteBuffer>(LocalBridgeClazz, "sizeDelimited", "(Ljava/nio/ByteBuffer;I)Ljava/nio/ByteBuffer;", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/4.1.0/org/apache/kafka/common/utils/Utils.html#wrapNullable(byte[])"/>
        /// </summary>
        /// <param name="arg0"><see cref="byte"/></param>
        /// <returns><see cref="Java.Nio.ByteBuffer"/></returns>
        public static Java.Nio.ByteBuffer WrapNullable(byte[] arg0)
        {
            return SExecuteWithSignature<Java.Nio.ByteBuffer>(LocalBridgeClazz, "wrapNullable", "([B)Ljava/nio/ByteBuffer;", new object[] { arg0 });
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/4.1.0/org/apache/kafka/common/utils/Utils.html#castToStringObjectMap(java.util.Map)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Util.Map"/></param>
        /// <returns><see cref="Java.Util.Map"/></returns>
        public static Java.Util.Map<Java.Lang.String, object> CastToStringObjectMap(Java.Util.Map<object, object> arg0)
        {
            return SExecuteWithSignature<Java.Util.Map<Java.Lang.String, object>>(LocalBridgeClazz, "castToStringObjectMap", "(Ljava/util/Map;)Ljava/util/Map;", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/4.1.0/org/apache/kafka/common/utils/Utils.html#propsToMap(java.util.Properties)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Util.Properties"/></param>
        /// <returns><see cref="Java.Util.Map"/></returns>
        public static Java.Util.Map<Java.Lang.String, object> PropsToMap(Java.Util.Properties arg0)
        {
            return SExecuteWithSignature<Java.Util.Map<Java.Lang.String, object>>(LocalBridgeClazz, "propsToMap", "(Ljava/util/Properties;)Ljava/util/Map;", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/4.1.0/org/apache/kafka/common/utils/Utils.html#parseMap(java.lang.String,java.lang.String,java.lang.String)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        /// <param name="arg1"><see cref="Java.Lang.String"/></param>
        /// <param name="arg2"><see cref="Java.Lang.String"/></param>
        /// <returns><see cref="Java.Util.Map"/></returns>
        public static Java.Util.Map<Java.Lang.String, Java.Lang.String> ParseMap(Java.Lang.String arg0, Java.Lang.String arg1, Java.Lang.String arg2)
        {
            return SExecuteWithSignature<Java.Util.Map<Java.Lang.String, Java.Lang.String>>(LocalBridgeClazz, "parseMap", "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/util/Map;", arg0, arg1, arg2);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/4.1.0/org/apache/kafka/common/utils/Utils.html#propsToStringMap(java.util.Properties)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Util.Properties"/></param>
        /// <returns><see cref="Java.Util.Map"/></returns>
        public static Java.Util.Map<Java.Lang.String, Java.Lang.String> PropsToStringMap(Java.Util.Properties arg0)
        {
            return SExecuteWithSignature<Java.Util.Map<Java.Lang.String, Java.Lang.String>>(LocalBridgeClazz, "propsToStringMap", "(Ljava/util/Properties;)Ljava/util/Map;", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/4.1.0/org/apache/kafka/common/utils/Utils.html#loadProps(java.lang.String,java.util.List)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        /// <param name="arg1"><see cref="Java.Util.List"/></param>
        /// <returns><see cref="Java.Util.Properties"/></returns>
        /// <exception cref="Java.Io.IOException"/>
        public static Java.Util.Properties LoadProps(Java.Lang.String arg0, Java.Util.List<Java.Lang.String> arg1)
        {
            return SExecuteWithSignature<Java.Util.Properties>(LocalBridgeClazz, "loadProps", "(Ljava/lang/String;Ljava/util/List;)Ljava/util/Properties;", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/4.1.0/org/apache/kafka/common/utils/Utils.html#loadProps(java.lang.String)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        /// <returns><see cref="Java.Util.Properties"/></returns>
        /// <exception cref="Java.Io.IOException"/>
        public static Java.Util.Properties LoadProps(Java.Lang.String arg0)
        {
            return SExecuteWithSignature<Java.Util.Properties>(LocalBridgeClazz, "loadProps", "(Ljava/lang/String;)Ljava/util/Properties;", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/4.1.0/org/apache/kafka/common/utils/Utils.html#mkObjectProperties(java.util.Map)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Util.Map"/></param>
        /// <returns><see cref="Java.Util.Properties"/></returns>
        public static Java.Util.Properties MkObjectProperties(Java.Util.Map<Java.Lang.String, object> arg0)
        {
            return SExecuteWithSignature<Java.Util.Properties>(LocalBridgeClazz, "mkObjectProperties", "(Ljava/util/Map;)Ljava/util/Properties;", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/4.1.0/org/apache/kafka/common/utils/Utils.html#mkProperties(java.util.Map)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Util.Map"/></param>
        /// <returns><see cref="Java.Util.Properties"/></returns>
        public static Java.Util.Properties MkProperties(Java.Util.Map<Java.Lang.String, Java.Lang.String> arg0)
        {
            return SExecuteWithSignature<Java.Util.Properties>(LocalBridgeClazz, "mkProperties", "(Ljava/util/Map;)Ljava/util/Properties;", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/4.1.0/org/apache/kafka/common/utils/Utils.html#from32BitField(int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <returns><see cref="Java.Util.Set"/></returns>
        public static Java.Util.Set<Java.Lang.Byte> From32BitField(int arg0)
        {
            return SExecuteWithSignature<Java.Util.Set<Java.Lang.Byte>>(LocalBridgeClazz, "from32BitField", "(I)Ljava/util/Set;", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/4.1.0/org/apache/kafka/common/utils/Utils.html#getDateTime(java.lang.String)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        /// <returns><see cref="long"/></returns>
        /// <exception cref="Java.Text.ParseException"/>
        /// <exception cref="Java.Lang.IllegalArgumentException"/>
        public static long GetDateTime(Java.Lang.String arg0)
        {
            return SExecuteWithSignature<long>(LocalBridgeClazz, "getDateTime", "(Ljava/lang/String;)J", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/4.1.0/org/apache/kafka/common/utils/Utils.html#max(long,long...)"/>
        /// </summary>
        /// <param name="arg0"><see cref="long"/></param>
        /// <param name="arg1"><see cref="long"/></param>
        /// <returns><see cref="long"/></returns>
        public static long Max(long arg0, params long[] arg1)
        {
            if (arg1.Length == 0) return SExecuteWithSignature<long>(LocalBridgeClazz, "max", "(J[J)J", arg0); else return SExecuteWithSignature<long>(LocalBridgeClazz, "max", "(J[J)J", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/4.1.0/org/apache/kafka/common/utils/Utils.html#min(long,long...)"/>
        /// </summary>
        /// <param name="arg0"><see cref="long"/></param>
        /// <param name="arg1"><see cref="long"/></param>
        /// <returns><see cref="long"/></returns>
        public static long Min(long arg0, params long[] arg1)
        {
            if (arg1.Length == 0) return SExecuteWithSignature<long>(LocalBridgeClazz, "min", "(J[J)J", arg0); else return SExecuteWithSignature<long>(LocalBridgeClazz, "min", "(J[J)J", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/4.1.0/org/apache/kafka/common/utils/Utils.html#mergeConfigs(java.util.List)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Util.List"/></param>
        /// <returns><see cref="Org.Apache.Kafka.Common.Config.ConfigDef"/></returns>
        public static Org.Apache.Kafka.Common.Config.ConfigDef MergeConfigs(Java.Util.List<Org.Apache.Kafka.Common.Config.ConfigDef> arg0)
        {
            return SExecuteWithSignature<Org.Apache.Kafka.Common.Config.ConfigDef>(LocalBridgeClazz, "mergeConfigs", "(Ljava/util/List;)Lorg/apache/kafka/common/config/ConfigDef;", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/4.1.0/org/apache/kafka/common/utils/Utils.html#min(short,short)"/>
        /// </summary>
        /// <param name="arg0"><see cref="short"/></param>
        /// <param name="arg1"><see cref="short"/></param>
        /// <returns><see cref="short"/></returns>
        public static short Min(short arg0, short arg1)
        {
            return SExecuteWithSignature<short>(LocalBridgeClazz, "min", "(SS)S", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/4.1.0/org/apache/kafka/common/utils/Utils.html#atomicMoveWithFallback(java.nio.file.Path,java.nio.file.Path,boolean)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Nio.File.Path"/></param>
        /// <param name="arg1"><see cref="Java.Nio.File.Path"/></param>
        /// <param name="arg2"><see cref="bool"/></param>
        /// <exception cref="Java.Io.IOException"/>
        public static void AtomicMoveWithFallback(Java.Nio.File.Path arg0, Java.Nio.File.Path arg1, bool arg2)
        {
            SExecuteWithSignature(LocalBridgeClazz, "atomicMoveWithFallback", "(Ljava/nio/file/Path;Ljava/nio/file/Path;Z)V", arg0, arg1, arg2);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/4.1.0/org/apache/kafka/common/utils/Utils.html#atomicMoveWithFallback(java.nio.file.Path,java.nio.file.Path)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Nio.File.Path"/></param>
        /// <param name="arg1"><see cref="Java.Nio.File.Path"/></param>
        /// <exception cref="Java.Io.IOException"/>
        public static void AtomicMoveWithFallback(Java.Nio.File.Path arg0, Java.Nio.File.Path arg1)
        {
            SExecuteWithSignature(LocalBridgeClazz, "atomicMoveWithFallback", "(Ljava/nio/file/Path;Ljava/nio/file/Path;)V", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/4.1.0/org/apache/kafka/common/utils/Utils.html#closeAll(java.io.Closeable...)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Io.Closeable"/></param>
        /// <exception cref="Java.Io.IOException"/>
        public static void CloseAll(params Java.Io.Closeable[] arg0)
        {
            if (arg0.Length == 0) SExecuteWithSignature(LocalBridgeClazz, "closeAll", "([Ljava/io/Closeable;)V"); else SExecuteWithSignature(LocalBridgeClazz, "closeAll", "([Ljava/io/Closeable;)V", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/4.1.0/org/apache/kafka/common/utils/Utils.html#closeAllQuietly(java.util.concurrent.atomic.AtomicReference,java.lang.String,java.lang.AutoCloseable...)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Util.Concurrent.Atomic.AtomicReference"/></param>
        /// <param name="arg1"><see cref="Java.Lang.String"/></param>
        /// <param name="arg2"><see cref="Java.Lang.AutoCloseable"/></param>
        public static void CloseAllQuietly(Java.Util.Concurrent.Atomic.AtomicReference<Java.Lang.Throwable> arg0, Java.Lang.String arg1, params Java.Lang.AutoCloseable[] arg2)
        {
            if (arg2.Length == 0) SExecuteWithSignature(LocalBridgeClazz, "closeAllQuietly", "(Ljava/util/concurrent/atomic/AtomicReference;Ljava/lang/String;[Ljava/lang/AutoCloseable;)V", arg0, arg1); else SExecuteWithSignature(LocalBridgeClazz, "closeAllQuietly", "(Ljava/util/concurrent/atomic/AtomicReference;Ljava/lang/String;[Ljava/lang/AutoCloseable;)V", arg0, arg1, arg2);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/4.1.0/org/apache/kafka/common/utils/Utils.html#closeQuietly(java.lang.AutoCloseable,java.lang.String,java.util.concurrent.atomic.AtomicReference)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.AutoCloseable"/></param>
        /// <param name="arg1"><see cref="Java.Lang.String"/></param>
        /// <param name="arg2"><see cref="Java.Util.Concurrent.Atomic.AtomicReference"/></param>
        public static void CloseQuietly(Java.Lang.AutoCloseable arg0, Java.Lang.String arg1, Java.Util.Concurrent.Atomic.AtomicReference<Java.Lang.Throwable> arg2)
        {
            SExecuteWithSignature(LocalBridgeClazz, "closeQuietly", "(Ljava/lang/AutoCloseable;Ljava/lang/String;Ljava/util/concurrent/atomic/AtomicReference;)V", arg0, arg1, arg2);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/4.1.0/org/apache/kafka/common/utils/Utils.html#closeQuietly(java.lang.AutoCloseable,java.lang.String)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.AutoCloseable"/></param>
        /// <param name="arg1"><see cref="Java.Lang.String"/></param>
        public static void CloseQuietly(Java.Lang.AutoCloseable arg0, Java.Lang.String arg1)
        {
            SExecuteWithSignature(LocalBridgeClazz, "closeQuietly", "(Ljava/lang/AutoCloseable;Ljava/lang/String;)V", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/4.1.0/org/apache/kafka/common/utils/Utils.html#delete(java.io.File)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Io.File"/></param>
        /// <exception cref="Java.Io.IOException"/>
        public static void Delete(Java.Io.File arg0)
        {
            SExecuteWithSignature(LocalBridgeClazz, "delete", "(Ljava/io/File;)V", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/4.1.0/org/apache/kafka/common/utils/Utils.html#ensureConcreteSubclass(java.lang.Class,java.lang.Class)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.Class"/></param>
        /// <param name="arg1"><see cref="Java.Lang.Class"/></param>
        public static void EnsureConcreteSubclass(Java.Lang.Class arg0, Java.Lang.Class arg1)
        {
            SExecute(LocalBridgeClazz, "ensureConcreteSubclass", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/4.1.0/org/apache/kafka/common/utils/Utils.html#flushDir(java.nio.file.Path)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Nio.File.Path"/></param>
        /// <exception cref="Java.Io.IOException"/>
        public static void FlushDir(Java.Nio.File.Path arg0)
        {
            SExecuteWithSignature(LocalBridgeClazz, "flushDir", "(Ljava/nio/file/Path;)V", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/4.1.0/org/apache/kafka/common/utils/Utils.html#flushDirIfExists(java.nio.file.Path)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Nio.File.Path"/></param>
        /// <exception cref="Java.Io.IOException"/>
        public static void FlushDirIfExists(Java.Nio.File.Path arg0)
        {
            SExecuteWithSignature(LocalBridgeClazz, "flushDirIfExists", "(Ljava/nio/file/Path;)V", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/4.1.0/org/apache/kafka/common/utils/Utils.html#flushFileIfExists(java.nio.file.Path)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Nio.File.Path"/></param>
        /// <exception cref="Java.Io.IOException"/>
        public static void FlushFileIfExists(Java.Nio.File.Path arg0)
        {
            SExecuteWithSignature(LocalBridgeClazz, "flushFileIfExists", "(Ljava/nio/file/Path;)V", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/4.1.0/org/apache/kafka/common/utils/Utils.html#maybeCloseQuietly(java.lang.Object,java.lang.String)"/>
        /// </summary>
        /// <param name="arg0"><see cref="object"/></param>
        /// <param name="arg1"><see cref="Java.Lang.String"/></param>
        public static void MaybeCloseQuietly(object arg0, Java.Lang.String arg1)
        {
            SExecuteWithSignature(LocalBridgeClazz, "maybeCloseQuietly", "(Ljava/lang/Object;Ljava/lang/String;)V", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/4.1.0/org/apache/kafka/common/utils/Utils.html#readFully(java.nio.channels.FileChannel,java.nio.ByteBuffer,long)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Nio.Channels.FileChannel"/></param>
        /// <param name="arg1"><see cref="Java.Nio.ByteBuffer"/></param>
        /// <param name="arg2"><see cref="long"/></param>
        /// <exception cref="Java.Io.IOException"/>
        public static void ReadFully(Java.Nio.Channels.FileChannel arg0, Java.Nio.ByteBuffer arg1, long arg2)
        {
            SExecuteWithSignature(LocalBridgeClazz, "readFully", "(Ljava/nio/channels/FileChannel;Ljava/nio/ByteBuffer;J)V", arg0, arg1, arg2);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/4.1.0/org/apache/kafka/common/utils/Utils.html#readFullyOrFail(java.nio.channels.FileChannel,java.nio.ByteBuffer,long,java.lang.String)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Nio.Channels.FileChannel"/></param>
        /// <param name="arg1"><see cref="Java.Nio.ByteBuffer"/></param>
        /// <param name="arg2"><see cref="long"/></param>
        /// <param name="arg3"><see cref="Java.Lang.String"/></param>
        /// <exception cref="Java.Io.IOException"/>
        public static void ReadFullyOrFail(Java.Nio.Channels.FileChannel arg0, Java.Nio.ByteBuffer arg1, long arg2, Java.Lang.String arg3)
        {
            SExecuteWithSignature(LocalBridgeClazz, "readFullyOrFail", "(Ljava/nio/channels/FileChannel;Ljava/nio/ByteBuffer;JLjava/lang/String;)V", arg0, arg1, arg2, arg3);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/4.1.0/org/apache/kafka/common/utils/Utils.html#require(boolean,java.lang.String)"/>
        /// </summary>
        /// <param name="arg0"><see cref="bool"/></param>
        /// <param name="arg1"><see cref="Java.Lang.String"/></param>
        public static void Require(bool arg0, Java.Lang.String arg1)
        {
            SExecuteWithSignature(LocalBridgeClazz, "require", "(ZLjava/lang/String;)V", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/4.1.0/org/apache/kafka/common/utils/Utils.html#require(boolean)"/>
        /// </summary>
        /// <param name="arg0"><see cref="bool"/></param>
        public static void Require(bool arg0)
        {
            SExecuteWithSignature(LocalBridgeClazz, "require", "(Z)V", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/4.1.0/org/apache/kafka/common/utils/Utils.html#sleep(long)"/>
        /// </summary>
        /// <param name="arg0"><see cref="long"/></param>
        public static void Sleep(long arg0)
        {
            SExecuteWithSignature(LocalBridgeClazz, "sleep", "(J)V", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/4.1.0/org/apache/kafka/common/utils/Utils.html#tryAll(java.util.List)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Util.List"/></param>
        /// <exception cref="Java.Lang.Throwable"/>
        public static void TryAll(Java.Util.List<Java.Util.Concurrent.Callable<Java.Lang.Void>> arg0)
        {
            SExecuteWithSignature(LocalBridgeClazz, "tryAll", "(Ljava/util/List;)V", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/4.1.0/org/apache/kafka/common/utils/Utils.html#writeFully(java.nio.channels.FileChannel,java.nio.ByteBuffer)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Nio.Channels.FileChannel"/></param>
        /// <param name="arg1"><see cref="Java.Nio.ByteBuffer"/></param>
        /// <exception cref="Java.Io.IOException"/>
        public static void WriteFully(Java.Nio.Channels.FileChannel arg0, Java.Nio.ByteBuffer arg1)
        {
            SExecuteWithSignature(LocalBridgeClazz, "writeFully", "(Ljava/nio/channels/FileChannel;Ljava/nio/ByteBuffer;)V", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/4.1.0/org/apache/kafka/common/utils/Utils.html#writeTo(java.io.DataOutput,java.nio.ByteBuffer,int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Io.DataOutput"/></param>
        /// <param name="arg1"><see cref="Java.Nio.ByteBuffer"/></param>
        /// <param name="arg2"><see cref="int"/></param>
        /// <exception cref="Java.Io.IOException"/>
        public static void WriteTo(Java.Io.DataOutput arg0, Java.Nio.ByteBuffer arg1, int arg2)
        {
            SExecuteWithSignature(LocalBridgeClazz, "writeTo", "(Ljava/io/DataOutput;Ljava/nio/ByteBuffer;I)V", arg0, arg1, arg2);
        }

        #endregion

        #region Instance methods

        #endregion

        #region Nested classes
        #region SwallowAction implementation
        public partial class SwallowAction
        {
            #region Constructors

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields

            #endregion

            #region Static methods

            #endregion

            #region Instance methods
            /// <summary>
            /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/4.1.0/org/apache/kafka/common/utils/Utils.SwallowAction.html#run()"/>
            /// </summary>
            /// <exception cref="Java.Lang.Throwable"/>
            public void Run()
            {
                IExecuteWithSignature("run", "()V");
            }

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

        #region ThrowingRunnable implementation
        public partial class ThrowingRunnable
        {
            #region Constructors

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields

            #endregion

            #region Static methods

            #endregion

            #region Instance methods
            /// <summary>
            /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/4.1.0/org/apache/kafka/common/utils/Utils.ThrowingRunnable.html#run()"/>
            /// </summary>
            /// <exception cref="Java.Lang.Exception"/>
            public void Run()
            {
                IExecuteWithSignature("run", "()V");
            }

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

        #region UncheckedCloseable implementation
        public partial class UncheckedCloseable
        {
            #region Constructors

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields

            #endregion

            #region Static methods

            #endregion

            #region Instance methods
            /// <summary>
            /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/4.1.0/org/apache/kafka/common/utils/Utils.UncheckedCloseable.html#close()"/>
            /// </summary>
            public void Close()
            {
                IExecuteWithSignature("close", "()V");
            }

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

    
        #endregion

        // TODO: complete the class
    }
    #endregion
}