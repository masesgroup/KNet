/*
*  Copyright 2023 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 1.5.5.0)
*  using kafka-clients-3.4.0.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Org.Apache.Kafka.Common.Requests
{
    #region DescribeGroupsResponse
    public partial class DescribeGroupsResponse
    {
        #region Constructors
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/requests/DescribeGroupsResponse.html#%3Cinit%3E(org.apache.kafka.common.message.DescribeGroupsResponseData)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Common.Message.DescribeGroupsResponseData"/></param>
        public DescribeGroupsResponse(Org.Apache.Kafka.Common.Message.DescribeGroupsResponseData arg0)
            : base(arg0)
        {
        }

        #endregion

        #region Class/Interface conversion operators

        #endregion

        #region Fields
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/requests/DescribeGroupsResponse.html#AUTHORIZED_OPERATIONS_OMITTED"/>
        /// </summary>
        public static int AUTHORIZED_OPERATIONS_OMITTED { get { return SGetField<int>(LocalBridgeClazz, "AUTHORIZED_OPERATIONS_OMITTED"); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/requests/DescribeGroupsResponse.html#UNKNOWN_PROTOCOL"/>
        /// </summary>
        public static string UNKNOWN_PROTOCOL { get { return SGetField<string>(LocalBridgeClazz, "UNKNOWN_PROTOCOL"); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/requests/DescribeGroupsResponse.html#UNKNOWN_PROTOCOL_TYPE"/>
        /// </summary>
        public static string UNKNOWN_PROTOCOL_TYPE { get { return SGetField<string>(LocalBridgeClazz, "UNKNOWN_PROTOCOL_TYPE"); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/requests/DescribeGroupsResponse.html#UNKNOWN_STATE"/>
        /// </summary>
        public static string UNKNOWN_STATE { get { return SGetField<string>(LocalBridgeClazz, "UNKNOWN_STATE"); } }

        #endregion

        #region Static methods
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/requests/DescribeGroupsResponse.html#forError(java.lang.String,org.apache.kafka.common.protocol.Errors)"/>
        /// </summary>
        /// <param name="arg0"><see cref="string"/></param>
        /// <param name="arg1"><see cref="Org.Apache.Kafka.Common.Protocol.Errors"/></param>
        /// <returns><see cref="Org.Apache.Kafka.Common.Message.DescribeGroupsResponseData.DescribedGroup"/></returns>
        public static Org.Apache.Kafka.Common.Message.DescribeGroupsResponseData.DescribedGroup ForError(string arg0, Org.Apache.Kafka.Common.Protocol.Errors arg1)
        {
            return SExecute<Org.Apache.Kafka.Common.Message.DescribeGroupsResponseData.DescribedGroup>(LocalBridgeClazz, "forError", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/requests/DescribeGroupsResponse.html#groupMetadata(java.lang.String,org.apache.kafka.common.protocol.Errors,java.lang.String,java.lang.String,java.lang.String,java.util.List,int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="string"/></param>
        /// <param name="arg1"><see cref="Org.Apache.Kafka.Common.Protocol.Errors"/></param>
        /// <param name="arg2"><see cref="string"/></param>
        /// <param name="arg3"><see cref="string"/></param>
        /// <param name="arg4"><see cref="string"/></param>
        /// <param name="arg5"><see cref="Java.Util.List"/></param>
        /// <param name="arg6"><see cref="int"/></param>
        /// <returns><see cref="Org.Apache.Kafka.Common.Message.DescribeGroupsResponseData.DescribedGroup"/></returns>
        public static Org.Apache.Kafka.Common.Message.DescribeGroupsResponseData.DescribedGroup GroupMetadata(string arg0, Org.Apache.Kafka.Common.Protocol.Errors arg1, string arg2, string arg3, string arg4, Java.Util.List<Org.Apache.Kafka.Common.Message.DescribeGroupsResponseData.DescribedGroupMember> arg5, int arg6)
        {
            return SExecute<Org.Apache.Kafka.Common.Message.DescribeGroupsResponseData.DescribedGroup>(LocalBridgeClazz, "groupMetadata", arg0, arg1, arg2, arg3, arg4, arg5, arg6);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/requests/DescribeGroupsResponse.html#groupMetadata(java.lang.String,org.apache.kafka.common.protocol.Errors,java.lang.String,java.lang.String,java.lang.String,java.util.List,java.util.Set)"/>
        /// </summary>
        /// <param name="arg0"><see cref="string"/></param>
        /// <param name="arg1"><see cref="Org.Apache.Kafka.Common.Protocol.Errors"/></param>
        /// <param name="arg2"><see cref="string"/></param>
        /// <param name="arg3"><see cref="string"/></param>
        /// <param name="arg4"><see cref="string"/></param>
        /// <param name="arg5"><see cref="Java.Util.List"/></param>
        /// <param name="arg6"><see cref="Java.Util.Set"/></param>
        /// <returns><see cref="Org.Apache.Kafka.Common.Message.DescribeGroupsResponseData.DescribedGroup"/></returns>
        public static Org.Apache.Kafka.Common.Message.DescribeGroupsResponseData.DescribedGroup GroupMetadata(string arg0, Org.Apache.Kafka.Common.Protocol.Errors arg1, string arg2, string arg3, string arg4, Java.Util.List<Org.Apache.Kafka.Common.Message.DescribeGroupsResponseData.DescribedGroupMember> arg5, Java.Util.Set<byte?> arg6)
        {
            return SExecute<Org.Apache.Kafka.Common.Message.DescribeGroupsResponseData.DescribedGroup>(LocalBridgeClazz, "groupMetadata", arg0, arg1, arg2, arg3, arg4, arg5, arg6);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/requests/DescribeGroupsResponse.html#groupMember(java.lang.String,java.lang.String,java.lang.String,java.lang.String,byte[],byte[])"/>
        /// </summary>
        /// <param name="arg0"><see cref="string"/></param>
        /// <param name="arg1"><see cref="string"/></param>
        /// <param name="arg2"><see cref="string"/></param>
        /// <param name="arg3"><see cref="string"/></param>
        /// <param name="arg4"><see cref="byte"/></param>
        /// <param name="arg5"><see cref="byte"/></param>
        /// <returns><see cref="Org.Apache.Kafka.Common.Message.DescribeGroupsResponseData.DescribedGroupMember"/></returns>
        public static Org.Apache.Kafka.Common.Message.DescribeGroupsResponseData.DescribedGroupMember GroupMember(string arg0, string arg1, string arg2, string arg3, byte[] arg4, byte[] arg5)
        {
            return SExecute<Org.Apache.Kafka.Common.Message.DescribeGroupsResponseData.DescribedGroupMember>(LocalBridgeClazz, "groupMember", arg0, arg1, arg2, arg3, arg4, arg5);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/requests/DescribeGroupsResponse.html#fromError(int,org.apache.kafka.common.protocol.Errors,java.util.List)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <param name="arg1"><see cref="Org.Apache.Kafka.Common.Protocol.Errors"/></param>
        /// <param name="arg2"><see cref="Java.Util.List"/></param>
        /// <returns><see cref="Org.Apache.Kafka.Common.Requests.DescribeGroupsResponse"/></returns>
        public static Org.Apache.Kafka.Common.Requests.DescribeGroupsResponse FromError(int arg0, Org.Apache.Kafka.Common.Protocol.Errors arg1, Java.Util.List<string> arg2)
        {
            return SExecute<Org.Apache.Kafka.Common.Requests.DescribeGroupsResponse>(LocalBridgeClazz, "fromError", arg0, arg1, arg2);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/requests/DescribeGroupsResponse.html#parse(java.nio.ByteBuffer,short)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Nio.ByteBuffer"/></param>
        /// <param name="arg1"><see cref="short"/></param>
        /// <returns><see cref="Org.Apache.Kafka.Common.Requests.DescribeGroupsResponse"/></returns>
        public static Org.Apache.Kafka.Common.Requests.DescribeGroupsResponse Parse(Java.Nio.ByteBuffer arg0, short arg1)
        {
            return SExecute<Org.Apache.Kafka.Common.Requests.DescribeGroupsResponse>(LocalBridgeClazz, "parse", arg0, arg1);
        }

        #endregion

        #region Instance methods

        #endregion

        #region Nested classes

        #endregion

        // TODO: complete the class
    }
    #endregion
}