/*
*  Copyright 2023 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 1.5.5.0)
*  using kafka-clients-3.4.0.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Org.Apache.Kafka.Common.Requests
{
    #region FetchRequest
    public partial class FetchRequest
    {
        #region Constructors
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/requests/FetchRequest.html#%3Cinit%3E(org.apache.kafka.common.message.FetchRequestData,short)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Common.Message.FetchRequestData"/></param>
        /// <param name="arg1"><see cref="short"/></param>
        public FetchRequest(Org.Apache.Kafka.Common.Message.FetchRequestData arg0, short arg1)
            : base(arg0, arg1)
        {
        }

        #endregion

        #region Class/Interface conversion operators

        #endregion

        #region Fields
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/requests/FetchRequest.html#CONSUMER_REPLICA_ID"/>
        /// </summary>
        public static int CONSUMER_REPLICA_ID { get { return SGetField<int>(LocalBridgeClazz, "CONSUMER_REPLICA_ID"); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/requests/FetchRequest.html#DEFAULT_RESPONSE_MAX_BYTES"/>
        /// </summary>
        public static int DEFAULT_RESPONSE_MAX_BYTES { get { return SGetField<int>(LocalBridgeClazz, "DEFAULT_RESPONSE_MAX_BYTES"); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/requests/FetchRequest.html#INVALID_LOG_START_OFFSET"/>
        /// </summary>
        public static long INVALID_LOG_START_OFFSET { get { return SGetField<long>(LocalBridgeClazz, "INVALID_LOG_START_OFFSET"); } }

        #endregion

        #region Static methods
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/requests/FetchRequest.html#parse(java.nio.ByteBuffer,short)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Nio.ByteBuffer"/></param>
        /// <param name="arg1"><see cref="short"/></param>
        /// <returns><see cref="Org.Apache.Kafka.Common.Requests.FetchRequest"/></returns>
        public static Org.Apache.Kafka.Common.Requests.FetchRequest Parse(Java.Nio.ByteBuffer arg0, short arg1)
        {
            return SExecute<Org.Apache.Kafka.Common.Requests.FetchRequest>(LocalBridgeClazz, "parse", arg0, arg1);
        }

        #endregion

        #region Instance methods
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/requests/FetchRequest.html#isFromFollower()"/>
        /// </summary>

        /// <returns><see cref="bool"/></returns>
        public bool IsFromFollower()
        {
            return IExecute<bool>("isFromFollower");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/requests/FetchRequest.html#maxBytes()"/>
        /// </summary>

        /// <returns><see cref="int"/></returns>
        public int MaxBytes()
        {
            return IExecute<int>("maxBytes");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/requests/FetchRequest.html#maxWait()"/>
        /// </summary>

        /// <returns><see cref="int"/></returns>
        public int MaxWait()
        {
            return IExecute<int>("maxWait");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/requests/FetchRequest.html#minBytes()"/>
        /// </summary>

        /// <returns><see cref="int"/></returns>
        public int MinBytes()
        {
            return IExecute<int>("minBytes");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/requests/FetchRequest.html#replicaId()"/>
        /// </summary>

        /// <returns><see cref="int"/></returns>
        public int ReplicaId()
        {
            return IExecute<int>("replicaId");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/requests/FetchRequest.html#rackId()"/>
        /// </summary>

        /// <returns><see cref="string"/></returns>
        public string RackId()
        {
            return IExecute<string>("rackId");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/requests/FetchRequest.html#forgottenTopics(java.util.Map)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Util.Map"/></param>
        /// <returns><see cref="Java.Util.List"/></returns>
        public Java.Util.List<Org.Apache.Kafka.Common.TopicIdPartition> ForgottenTopics(Java.Util.Map<Org.Apache.Kafka.Common.Uuid, string> arg0)
        {
            return IExecute<Java.Util.List<Org.Apache.Kafka.Common.TopicIdPartition>>("forgottenTopics", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/requests/FetchRequest.html#fetchData(java.util.Map)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Util.Map"/></param>
        /// <returns><see cref="Java.Util.Map"/></returns>
        public Java.Util.Map<Org.Apache.Kafka.Common.TopicIdPartition, Org.Apache.Kafka.Common.Requests.FetchRequest.PartitionData> FetchData(Java.Util.Map<Org.Apache.Kafka.Common.Uuid, string> arg0)
        {
            return IExecute<Java.Util.Map<Org.Apache.Kafka.Common.TopicIdPartition, Org.Apache.Kafka.Common.Requests.FetchRequest.PartitionData>>("fetchData", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/requests/FetchRequest.html#isolationLevel()"/>
        /// </summary>

        /// <returns><see cref="Org.Apache.Kafka.Common.IsolationLevel"/></returns>
        public Org.Apache.Kafka.Common.IsolationLevel IsolationLevel()
        {
            return IExecute<Org.Apache.Kafka.Common.IsolationLevel>("isolationLevel");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/requests/FetchRequest.html#metadata()"/>
        /// </summary>

        /// <returns><see cref="Org.Apache.Kafka.Common.Requests.FetchMetadata"/></returns>
        public Org.Apache.Kafka.Common.Requests.FetchMetadata Metadata()
        {
            return IExecute<Org.Apache.Kafka.Common.Requests.FetchMetadata>("metadata");
        }

        #endregion

        #region Nested classes
        #region Builder
        public partial class Builder
        {
            #region Constructors
            /// <summary>
            /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/requests/FetchRequest.Builder.html#%3Cinit%3E(short,short,int,int,int,java.util.Map)"/>
            /// </summary>
            /// <param name="arg0"><see cref="short"/></param>
            /// <param name="arg1"><see cref="short"/></param>
            /// <param name="arg2"><see cref="int"/></param>
            /// <param name="arg3"><see cref="int"/></param>
            /// <param name="arg4"><see cref="int"/></param>
            /// <param name="arg5"><see cref="Java.Util.Map"/></param>
            public Builder(short arg0, short arg1, int arg2, int arg3, int arg4, Java.Util.Map<Org.Apache.Kafka.Common.TopicPartition, Org.Apache.Kafka.Common.Requests.FetchRequest.PartitionData> arg5)
                : base(arg0, arg1, arg2, arg3, arg4, arg5)
            {
            }

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields

            #endregion

            #region Static methods
            /// <summary>
            /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/requests/FetchRequest.Builder.html#forConsumer(short,int,int,java.util.Map)"/>
            /// </summary>
            /// <param name="arg0"><see cref="short"/></param>
            /// <param name="arg1"><see cref="int"/></param>
            /// <param name="arg2"><see cref="int"/></param>
            /// <param name="arg3"><see cref="Java.Util.Map"/></param>
            /// <returns><see cref="Org.Apache.Kafka.Common.Requests.FetchRequest.Builder"/></returns>
            public static Org.Apache.Kafka.Common.Requests.FetchRequest.Builder ForConsumer(short arg0, int arg1, int arg2, Java.Util.Map<Org.Apache.Kafka.Common.TopicPartition, Org.Apache.Kafka.Common.Requests.FetchRequest.PartitionData> arg3)
            {
                return SExecute<Org.Apache.Kafka.Common.Requests.FetchRequest.Builder>(LocalBridgeClazz, "forConsumer", arg0, arg1, arg2, arg3);
            }
            /// <summary>
            /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/requests/FetchRequest.Builder.html#forReplica(short,int,int,int,java.util.Map)"/>
            /// </summary>
            /// <param name="arg0"><see cref="short"/></param>
            /// <param name="arg1"><see cref="int"/></param>
            /// <param name="arg2"><see cref="int"/></param>
            /// <param name="arg3"><see cref="int"/></param>
            /// <param name="arg4"><see cref="Java.Util.Map"/></param>
            /// <returns><see cref="Org.Apache.Kafka.Common.Requests.FetchRequest.Builder"/></returns>
            public static Org.Apache.Kafka.Common.Requests.FetchRequest.Builder ForReplica(short arg0, int arg1, int arg2, int arg3, Java.Util.Map<Org.Apache.Kafka.Common.TopicPartition, Org.Apache.Kafka.Common.Requests.FetchRequest.PartitionData> arg4)
            {
                return SExecute<Org.Apache.Kafka.Common.Requests.FetchRequest.Builder>(LocalBridgeClazz, "forReplica", arg0, arg1, arg2, arg3, arg4);
            }

            #endregion

            #region Instance methods
            /// <summary>
            /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/requests/FetchRequest.Builder.html#removed()"/>
            /// </summary>

            /// <returns><see cref="Java.Util.List"/></returns>
            public Java.Util.List<Org.Apache.Kafka.Common.TopicIdPartition> Removed()
            {
                return IExecute<Java.Util.List<Org.Apache.Kafka.Common.TopicIdPartition>>("removed");
            }
            /// <summary>
            /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/requests/FetchRequest.Builder.html#replaced()"/>
            /// </summary>

            /// <returns><see cref="Java.Util.List"/></returns>
            public Java.Util.List<Org.Apache.Kafka.Common.TopicIdPartition> Replaced()
            {
                return IExecute<Java.Util.List<Org.Apache.Kafka.Common.TopicIdPartition>>("replaced");
            }
            /// <summary>
            /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/requests/FetchRequest.Builder.html#fetchData()"/>
            /// </summary>

            /// <returns><see cref="Java.Util.Map"/></returns>
            public Java.Util.Map<Org.Apache.Kafka.Common.TopicPartition, Org.Apache.Kafka.Common.Requests.FetchRequest.PartitionData> FetchData()
            {
                return IExecute<Java.Util.Map<Org.Apache.Kafka.Common.TopicPartition, Org.Apache.Kafka.Common.Requests.FetchRequest.PartitionData>>("fetchData");
            }
            /// <summary>
            /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/requests/FetchRequest.Builder.html#isolationLevel(org.apache.kafka.common.IsolationLevel)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Org.Apache.Kafka.Common.IsolationLevel"/></param>
            /// <returns><see cref="Org.Apache.Kafka.Common.Requests.FetchRequest.Builder"/></returns>
            public Org.Apache.Kafka.Common.Requests.FetchRequest.Builder IsolationLevel(Org.Apache.Kafka.Common.IsolationLevel arg0)
            {
                return IExecute<Org.Apache.Kafka.Common.Requests.FetchRequest.Builder>("isolationLevel", arg0);
            }
            /// <summary>
            /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/requests/FetchRequest.Builder.html#metadata(org.apache.kafka.common.requests.FetchMetadata)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Org.Apache.Kafka.Common.Requests.FetchMetadata"/></param>
            /// <returns><see cref="Org.Apache.Kafka.Common.Requests.FetchRequest.Builder"/></returns>
            public Org.Apache.Kafka.Common.Requests.FetchRequest.Builder Metadata(Org.Apache.Kafka.Common.Requests.FetchMetadata arg0)
            {
                return IExecute<Org.Apache.Kafka.Common.Requests.FetchRequest.Builder>("metadata", arg0);
            }
            /// <summary>
            /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/requests/FetchRequest.Builder.html#rackId(java.lang.String)"/>
            /// </summary>
            /// <param name="arg0"><see cref="string"/></param>
            /// <returns><see cref="Org.Apache.Kafka.Common.Requests.FetchRequest.Builder"/></returns>
            public Org.Apache.Kafka.Common.Requests.FetchRequest.Builder RackId(string arg0)
            {
                return IExecute<Org.Apache.Kafka.Common.Requests.FetchRequest.Builder>("rackId", arg0);
            }
            /// <summary>
            /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/requests/FetchRequest.Builder.html#removed(java.util.List)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Java.Util.List"/></param>
            /// <returns><see cref="Org.Apache.Kafka.Common.Requests.FetchRequest.Builder"/></returns>
            public Org.Apache.Kafka.Common.Requests.FetchRequest.Builder Removed(Java.Util.List<Org.Apache.Kafka.Common.TopicIdPartition> arg0)
            {
                return IExecute<Org.Apache.Kafka.Common.Requests.FetchRequest.Builder>("removed", arg0);
            }
            /// <summary>
            /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/requests/FetchRequest.Builder.html#replaced(java.util.List)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Java.Util.List"/></param>
            /// <returns><see cref="Org.Apache.Kafka.Common.Requests.FetchRequest.Builder"/></returns>
            public Org.Apache.Kafka.Common.Requests.FetchRequest.Builder Replaced(Java.Util.List<Org.Apache.Kafka.Common.TopicIdPartition> arg0)
            {
                return IExecute<Org.Apache.Kafka.Common.Requests.FetchRequest.Builder>("replaced", arg0);
            }
            /// <summary>
            /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/requests/FetchRequest.Builder.html#setMaxBytes(int)"/>
            /// </summary>
            /// <param name="arg0"><see cref="int"/></param>
            /// <returns><see cref="Org.Apache.Kafka.Common.Requests.FetchRequest.Builder"/></returns>
            public Org.Apache.Kafka.Common.Requests.FetchRequest.Builder SetMaxBytes(int arg0)
            {
                return IExecute<Org.Apache.Kafka.Common.Requests.FetchRequest.Builder>("setMaxBytes", arg0);
            }

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

        #region PartitionData
        public partial class PartitionData
        {
            #region Constructors
            /// <summary>
            /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/requests/FetchRequest.PartitionData.html#%3Cinit%3E(org.apache.kafka.common.Uuid,long,long,int,java.util.Optional,java.util.Optional)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Org.Apache.Kafka.Common.Uuid"/></param>
            /// <param name="arg1"><see cref="long"/></param>
            /// <param name="arg2"><see cref="long"/></param>
            /// <param name="arg3"><see cref="int"/></param>
            /// <param name="arg4"><see cref="Java.Util.Optional"/></param>
            /// <param name="arg5"><see cref="Java.Util.Optional"/></param>
            public PartitionData(Org.Apache.Kafka.Common.Uuid arg0, long arg1, long arg2, int arg3, Java.Util.Optional<int?> arg4, Java.Util.Optional<int?> arg5)
                : base(arg0, arg1, arg2, arg3, arg4, arg5)
            {
            }
            /// <summary>
            /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/requests/FetchRequest.PartitionData.html#%3Cinit%3E(org.apache.kafka.common.Uuid,long,long,int,java.util.Optional)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Org.Apache.Kafka.Common.Uuid"/></param>
            /// <param name="arg1"><see cref="long"/></param>
            /// <param name="arg2"><see cref="long"/></param>
            /// <param name="arg3"><see cref="int"/></param>
            /// <param name="arg4"><see cref="Java.Util.Optional"/></param>
            public PartitionData(Org.Apache.Kafka.Common.Uuid arg0, long arg1, long arg2, int arg3, Java.Util.Optional<int?> arg4)
                : base(arg0, arg1, arg2, arg3, arg4)
            {
            }

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields
            /// <summary>
            /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/requests/FetchRequest.PartitionData.html#maxBytes"/>
            /// </summary>
            public int maxBytes { get { return IGetField<int>("maxBytes"); } }
            /// <summary>
            /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/requests/FetchRequest.PartitionData.html#currentLeaderEpoch"/>
            /// </summary>
            public Java.Util.Optional currentLeaderEpoch { get { return IGetField<Java.Util.Optional>("currentLeaderEpoch"); } }
            /// <summary>
            /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/requests/FetchRequest.PartitionData.html#lastFetchedEpoch"/>
            /// </summary>
            public Java.Util.Optional lastFetchedEpoch { get { return IGetField<Java.Util.Optional>("lastFetchedEpoch"); } }
            /// <summary>
            /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/requests/FetchRequest.PartitionData.html#fetchOffset"/>
            /// </summary>
            public long fetchOffset { get { return IGetField<long>("fetchOffset"); } }
            /// <summary>
            /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/requests/FetchRequest.PartitionData.html#logStartOffset"/>
            /// </summary>
            public long logStartOffset { get { return IGetField<long>("logStartOffset"); } }
            /// <summary>
            /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/requests/FetchRequest.PartitionData.html#topicId"/>
            /// </summary>
            public Org.Apache.Kafka.Common.Uuid topicId { get { return IGetField<Org.Apache.Kafka.Common.Uuid>("topicId"); } }

            #endregion

            #region Static methods

            #endregion

            #region Instance methods

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

    
        #endregion

        // TODO: complete the class
    }
    #endregion
}