/*
*  Copyright 2023 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 1.5.5.0)
*  using kafka-clients-3.4.0.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Org.Apache.Kafka.Common.Config.Internals
{
    #region QuotaConfigs
    public partial class QuotaConfigs
    {
        #region Constructors

        #endregion

        #region Class/Interface conversion operators

        #endregion

        #region Fields
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/config/internals/QuotaConfigs.html#IP_CONNECTION_RATE_DEFAULT"/>
        /// </summary>
        public static int IP_CONNECTION_RATE_DEFAULT { get { return SGetField<int>(LocalBridgeClazz, "IP_CONNECTION_RATE_DEFAULT"); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/config/internals/QuotaConfigs.html#CONSUMER_BYTE_RATE_DOC"/>
        /// </summary>
        public static string CONSUMER_BYTE_RATE_DOC { get { return SGetField<string>(LocalBridgeClazz, "CONSUMER_BYTE_RATE_DOC"); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/config/internals/QuotaConfigs.html#CONSUMER_BYTE_RATE_OVERRIDE_CONFIG"/>
        /// </summary>
        public static string CONSUMER_BYTE_RATE_OVERRIDE_CONFIG { get { return SGetField<string>(LocalBridgeClazz, "CONSUMER_BYTE_RATE_OVERRIDE_CONFIG"); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/config/internals/QuotaConfigs.html#CONTROLLER_MUTATION_RATE_DOC"/>
        /// </summary>
        public static string CONTROLLER_MUTATION_RATE_DOC { get { return SGetField<string>(LocalBridgeClazz, "CONTROLLER_MUTATION_RATE_DOC"); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/config/internals/QuotaConfigs.html#CONTROLLER_MUTATION_RATE_OVERRIDE_CONFIG"/>
        /// </summary>
        public static string CONTROLLER_MUTATION_RATE_OVERRIDE_CONFIG { get { return SGetField<string>(LocalBridgeClazz, "CONTROLLER_MUTATION_RATE_OVERRIDE_CONFIG"); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/config/internals/QuotaConfigs.html#IP_CONNECTION_RATE_DOC"/>
        /// </summary>
        public static string IP_CONNECTION_RATE_DOC { get { return SGetField<string>(LocalBridgeClazz, "IP_CONNECTION_RATE_DOC"); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/config/internals/QuotaConfigs.html#IP_CONNECTION_RATE_OVERRIDE_CONFIG"/>
        /// </summary>
        public static string IP_CONNECTION_RATE_OVERRIDE_CONFIG { get { return SGetField<string>(LocalBridgeClazz, "IP_CONNECTION_RATE_OVERRIDE_CONFIG"); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/config/internals/QuotaConfigs.html#PRODUCER_BYTE_RATE_DOC"/>
        /// </summary>
        public static string PRODUCER_BYTE_RATE_DOC { get { return SGetField<string>(LocalBridgeClazz, "PRODUCER_BYTE_RATE_DOC"); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/config/internals/QuotaConfigs.html#PRODUCER_BYTE_RATE_OVERRIDE_CONFIG"/>
        /// </summary>
        public static string PRODUCER_BYTE_RATE_OVERRIDE_CONFIG { get { return SGetField<string>(LocalBridgeClazz, "PRODUCER_BYTE_RATE_OVERRIDE_CONFIG"); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/config/internals/QuotaConfigs.html#REQUEST_PERCENTAGE_DOC"/>
        /// </summary>
        public static string REQUEST_PERCENTAGE_DOC { get { return SGetField<string>(LocalBridgeClazz, "REQUEST_PERCENTAGE_DOC"); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/config/internals/QuotaConfigs.html#REQUEST_PERCENTAGE_OVERRIDE_CONFIG"/>
        /// </summary>
        public static string REQUEST_PERCENTAGE_OVERRIDE_CONFIG { get { return SGetField<string>(LocalBridgeClazz, "REQUEST_PERCENTAGE_OVERRIDE_CONFIG"); } }

        #endregion

        #region Static methods
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/config/internals/QuotaConfigs.html#clientConfigs()"/> 
        /// </summary>
        public static Org.Apache.Kafka.Common.Config.ConfigDef ClientConfigs
        {
            get { return SExecute<Org.Apache.Kafka.Common.Config.ConfigDef>(LocalBridgeClazz, "clientConfigs"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/config/internals/QuotaConfigs.html#ipConfigs()"/> 
        /// </summary>
        public static Org.Apache.Kafka.Common.Config.ConfigDef IpConfigs
        {
            get { return SExecute<Org.Apache.Kafka.Common.Config.ConfigDef>(LocalBridgeClazz, "ipConfigs"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/config/internals/QuotaConfigs.html#userConfigs()"/> 
        /// </summary>
        public static Org.Apache.Kafka.Common.Config.ConfigDef UserConfigs
        {
            get { return SExecute<Org.Apache.Kafka.Common.Config.ConfigDef>(LocalBridgeClazz, "userConfigs"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/common/config/internals/QuotaConfigs.html#isClientOrUserConfig(java.lang.String)"/>
        /// </summary>
        /// <param name="arg0"><see cref="string"/></param>
        /// <returns><see cref="bool"/></returns>
        public static bool IsClientOrUserConfig(string arg0)
        {
            return SExecute<bool>(LocalBridgeClazz, "isClientOrUserConfig", arg0);
        }

        #endregion

        #region Instance methods

        #endregion

        #region Nested classes

        #endregion

        // TODO: complete the class
    }
    #endregion
}