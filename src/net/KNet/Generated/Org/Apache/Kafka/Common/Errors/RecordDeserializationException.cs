/*
*  Copyright 2024 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 2.5.6.0)
*  using kafka-clients-3.8.0.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Org.Apache.Kafka.Common.Errors
{
    #region RecordDeserializationException
    public partial class RecordDeserializationException
    {
        #region Constructors

        #endregion

        #region Class/Interface conversion operators

        #endregion

        #region Fields

        #endregion

        #region Static methods

        #endregion

        #region Instance methods

        #endregion

        #region Nested classes
        #region DeserializationExceptionOrigin
        public partial class DeserializationExceptionOrigin
        {
            #region Constructors

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields
            /// <summary>
            /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.8.0/org/apache/kafka/common/errors/RecordDeserializationException.DeserializationExceptionOrigin.html#KEY"/>
            /// </summary>
            public static Org.Apache.Kafka.Common.Errors.RecordDeserializationException.DeserializationExceptionOrigin KEY { get { if (!_KEYReady) { _KEYContent = SGetField<Org.Apache.Kafka.Common.Errors.RecordDeserializationException.DeserializationExceptionOrigin>(LocalBridgeClazz, "KEY"); _KEYReady = true; } return _KEYContent; } }
            private static Org.Apache.Kafka.Common.Errors.RecordDeserializationException.DeserializationExceptionOrigin _KEYContent = default;
            private static bool _KEYReady = false; // this is used because in case of generics 
            /// <summary>
            /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.8.0/org/apache/kafka/common/errors/RecordDeserializationException.DeserializationExceptionOrigin.html#VALUE"/>
            /// </summary>
            public static Org.Apache.Kafka.Common.Errors.RecordDeserializationException.DeserializationExceptionOrigin VALUE { get { if (!_VALUEReady) { _VALUEContent = SGetField<Org.Apache.Kafka.Common.Errors.RecordDeserializationException.DeserializationExceptionOrigin>(LocalBridgeClazz, "VALUE"); _VALUEReady = true; } return _VALUEContent; } }
            private static Org.Apache.Kafka.Common.Errors.RecordDeserializationException.DeserializationExceptionOrigin _VALUEContent = default;
            private static bool _VALUEReady = false; // this is used because in case of generics 

            #endregion

            #region Static methods
            /// <summary>
            /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.8.0/org/apache/kafka/common/errors/RecordDeserializationException.DeserializationExceptionOrigin.html#valueOf-java.lang.String-"/>
            /// </summary>
            /// <param name="arg0"><see cref="Java.Lang.String"/></param>
            /// <returns><see cref="Org.Apache.Kafka.Common.Errors.RecordDeserializationException.DeserializationExceptionOrigin"/></returns>
            public static Org.Apache.Kafka.Common.Errors.RecordDeserializationException.DeserializationExceptionOrigin ValueOf(Java.Lang.String arg0)
            {
                return SExecuteWithSignature<Org.Apache.Kafka.Common.Errors.RecordDeserializationException.DeserializationExceptionOrigin>(LocalBridgeClazz, "valueOf", "(Ljava/lang/String;)Lorg/apache/kafka/common/errors/RecordDeserializationException$DeserializationExceptionOrigin;", arg0);
            }
            /// <summary>
            /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-clients/3.8.0/org/apache/kafka/common/errors/RecordDeserializationException.DeserializationExceptionOrigin.html#values--"/>
            /// </summary>
            /// <returns><see cref="Org.Apache.Kafka.Common.Errors.RecordDeserializationException.DeserializationExceptionOrigin"/></returns>
            public static Org.Apache.Kafka.Common.Errors.RecordDeserializationException.DeserializationExceptionOrigin[] Values()
            {
                return SExecuteWithSignatureArray<Org.Apache.Kafka.Common.Errors.RecordDeserializationException.DeserializationExceptionOrigin>(LocalBridgeClazz, "values", "()[Lorg/apache/kafka/common/errors/RecordDeserializationException$DeserializationExceptionOrigin;");
            }

            #endregion

            #region Instance methods

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

    
        #endregion

        // TODO: complete the class
    }
    #endregion
}