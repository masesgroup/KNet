/*
*  Copyright 2023 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 1.5.5.0)
*  using kafka-streams-3.4.0.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Org.Apache.Kafka.Streams.Processor.Internals
{
    #region ProcessorStateManager
    public partial class ProcessorStateManager
    {
        #region Constructors
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/ProcessorStateManager.html#%3Cinit%3E(org.apache.kafka.streams.processor.TaskId,org.apache.kafka.streams.processor.internals.Task.TaskType,boolean,org.apache.kafka.common.utils.LogContext,org.apache.kafka.streams.processor.internals.StateDirectory,org.apache.kafka.streams.processor.internals.ChangelogRegister,java.util.Map,java.util.Collection,boolean)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Streams.Processor.TaskId"/></param>
        /// <param name="arg1"><see cref="Org.Apache.Kafka.Streams.Processor.Internals.Task.TaskType"/></param>
        /// <param name="arg2"><see cref="bool"/></param>
        /// <param name="arg3"><see cref="Org.Apache.Kafka.Common.Utils.LogContext"/></param>
        /// <param name="arg4"><see cref="Org.Apache.Kafka.Streams.Processor.Internals.StateDirectory"/></param>
        /// <param name="arg5"><see cref="Org.Apache.Kafka.Streams.Processor.Internals.ChangelogRegister"/></param>
        /// <param name="arg6"><see cref="Java.Util.Map"/></param>
        /// <param name="arg7"><see cref="Java.Util.Collection"/></param>
        /// <param name="arg8"><see cref="bool"/></param>
        /// <exception cref="Org.Apache.Kafka.Streams.Errors.ProcessorStateException"/>
        public ProcessorStateManager(Org.Apache.Kafka.Streams.Processor.TaskId arg0, Org.Apache.Kafka.Streams.Processor.Internals.Task.TaskType arg1, bool arg2, Org.Apache.Kafka.Common.Utils.LogContext arg3, Org.Apache.Kafka.Streams.Processor.Internals.StateDirectory arg4, Org.Apache.Kafka.Streams.Processor.Internals.ChangelogRegister arg5, Java.Util.Map arg6, Java.Util.Collection arg7, bool arg8)
            : base(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8)
        {
        }

        #endregion

        #region Class/Interface conversion operators
        /// <summary>
        /// Converter from <see cref="Org.Apache.Kafka.Streams.Processor.Internals.ProcessorStateManager"/> to <see cref="Org.Apache.Kafka.Streams.Processor.Internals.StateManager"/>
        /// </summary>
        public static implicit operator Org.Apache.Kafka.Streams.Processor.Internals.StateManager(Org.Apache.Kafka.Streams.Processor.Internals.ProcessorStateManager t) => t.Cast<Org.Apache.Kafka.Streams.Processor.Internals.StateManager>();

        #endregion

        #region Fields

        #endregion

        #region Static methods
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/ProcessorStateManager.html#storeChangelogTopic(java.lang.String,java.lang.String,java.lang.String)"/>
        /// </summary>
        /// <param name="arg0"><see cref="string"/></param>
        /// <param name="arg1"><see cref="string"/></param>
        /// <param name="arg2"><see cref="string"/></param>
        /// <returns><see cref="string"/></returns>
        public static string StoreChangelogTopic(string arg0, string arg1, string arg2)
        {
            return SExecute<string>(LocalBridgeClazz, "storeChangelogTopic", arg0, arg1, arg2);
        }

        #endregion

        #region Instance methods
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/ProcessorStateManager.html#baseDir()"/> 
        /// </summary>
        public Java.Io.File BaseDir
        {
            get { return IExecute<Java.Io.File>("baseDir"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/ProcessorStateManager.html#changelogOffsets()"/> 
        /// </summary>
        public Java.Util.Map<Org.Apache.Kafka.Common.TopicPartition, long?> ChangelogOffsets
        {
            get { return IExecute<Java.Util.Map<Org.Apache.Kafka.Common.TopicPartition, long?>>("changelogOffsets"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/ProcessorStateManager.html#taskType()"/> 
        /// </summary>
        public Org.Apache.Kafka.Streams.Processor.Internals.Task.TaskType TaskType
        {
            get { return IExecute<Org.Apache.Kafka.Streams.Processor.Internals.Task.TaskType>("taskType"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/ProcessorStateManager.html#changelogFor(java.lang.String)"/>
        /// </summary>
        /// <param name="arg0"><see cref="string"/></param>
        /// <returns><see cref="string"/></returns>
        public string ChangelogFor(string arg0)
        {
            return IExecute<string>("changelogFor", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/ProcessorStateManager.html#registeredChangelogPartitionFor(java.lang.String)"/>
        /// </summary>
        /// <param name="arg0"><see cref="string"/></param>
        /// <returns><see cref="Org.Apache.Kafka.Common.TopicPartition"/></returns>
        public Org.Apache.Kafka.Common.TopicPartition RegisteredChangelogPartitionFor(string arg0)
        {
            return IExecute<Org.Apache.Kafka.Common.TopicPartition>("registeredChangelogPartitionFor", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/ProcessorStateManager.html#getGlobalStore(java.lang.String)"/>
        /// </summary>
        /// <param name="arg0"><see cref="string"/></param>
        /// <returns><see cref="Org.Apache.Kafka.Streams.Processor.StateStore"/></returns>
        public Org.Apache.Kafka.Streams.Processor.StateStore GetGlobalStore(string arg0)
        {
            return IExecute<Org.Apache.Kafka.Streams.Processor.StateStore>("getGlobalStore", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/ProcessorStateManager.html#getStore(java.lang.String)"/>
        /// </summary>
        /// <param name="arg0"><see cref="string"/></param>
        /// <returns><see cref="Org.Apache.Kafka.Streams.Processor.StateStore"/></returns>
        public Org.Apache.Kafka.Streams.Processor.StateStore GetStore(string arg0)
        {
            return IExecute<Org.Apache.Kafka.Streams.Processor.StateStore>("getStore", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/ProcessorStateManager.html#checkpoint()"/>
        /// </summary>
        public void Checkpoint()
        {
            IExecute("checkpoint");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/ProcessorStateManager.html#close()"/>
        /// </summary>

        /// <exception cref="Org.Apache.Kafka.Streams.Errors.ProcessorStateException"/>
        public void Close()
        {
            IExecute("close");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/ProcessorStateManager.html#deleteCheckPointFileIfEOSEnabled()"/>
        /// </summary>

        /// <exception cref="Java.Io.IOException"/>
        public void DeleteCheckPointFileIfEOSEnabled()
        {
            IExecute("deleteCheckPointFileIfEOSEnabled");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/ProcessorStateManager.html#flush()"/>
        /// </summary>
        public void Flush()
        {
            IExecute("flush");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/ProcessorStateManager.html#flushCache()"/>
        /// </summary>
        public void FlushCache()
        {
            IExecute("flushCache");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/ProcessorStateManager.html#registerStore(org.apache.kafka.streams.processor.StateStore,org.apache.kafka.streams.processor.StateRestoreCallback,org.apache.kafka.streams.processor.CommitCallback)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Streams.Processor.StateStore"/></param>
        /// <param name="arg1"><see cref="Org.Apache.Kafka.Streams.Processor.StateRestoreCallback"/></param>
        /// <param name="arg2"><see cref="Org.Apache.Kafka.Streams.Processor.CommitCallback"/></param>
        public void RegisterStore(Org.Apache.Kafka.Streams.Processor.StateStore arg0, Org.Apache.Kafka.Streams.Processor.StateRestoreCallback arg1, Org.Apache.Kafka.Streams.Processor.CommitCallback arg2)
        {
            IExecute("registerStore", arg0, arg1, arg2);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/ProcessorStateManager.html#updateChangelogOffsets(java.util.Map)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Util.Map"/></param>
        public void UpdateChangelogOffsets(Java.Util.Map<Org.Apache.Kafka.Common.TopicPartition, long?> arg0)
        {
            IExecute("updateChangelogOffsets", arg0);
        }

        #endregion

        #region Nested classes
        #region StateStoreMetadata
        public partial class StateStoreMetadata
        {
            #region Constructors

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields

            #endregion

            #region Static methods

            #endregion

            #region Instance methods

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

    
        #endregion

        // TODO: complete the class
    }
    #endregion
}