/*
*  Copyright 2023 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 1.5.5.0)
*  using kafka-streams-3.4.0.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Org.Apache.Kafka.Streams.State.Internals
{
    #region InMemoryTimeOrderedKeyValueBuffer
    public partial class InMemoryTimeOrderedKeyValueBuffer
    {
        #region Constructors

        #endregion

        #region Class/Interface conversion operators
        /// <summary>
        /// Converter from <see cref="Org.Apache.Kafka.Streams.State.Internals.InMemoryTimeOrderedKeyValueBuffer"/> to <see cref="Org.Apache.Kafka.Streams.State.Internals.TimeOrderedKeyValueBuffer"/>
        /// </summary>
        public static implicit operator Org.Apache.Kafka.Streams.State.Internals.TimeOrderedKeyValueBuffer(Org.Apache.Kafka.Streams.State.Internals.InMemoryTimeOrderedKeyValueBuffer t) => t.Cast<Org.Apache.Kafka.Streams.State.Internals.TimeOrderedKeyValueBuffer>();

        #endregion

        #region Fields

        #endregion

        #region Static methods

        #endregion

        #region Instance methods
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/state/internals/InMemoryTimeOrderedKeyValueBuffer.html#bufferSize()"/> 
        /// </summary>
        public long BufferSize
        {
            get { return IExecute<long>("bufferSize"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/state/internals/InMemoryTimeOrderedKeyValueBuffer.html#isOpen()"/> 
        /// </summary>
        public bool IsOpen
        {
            get { return IExecute<bool>("isOpen"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/state/internals/InMemoryTimeOrderedKeyValueBuffer.html#minTimestamp()"/> 
        /// </summary>
        public long MinTimestamp
        {
            get { return IExecute<long>("minTimestamp"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/state/internals/InMemoryTimeOrderedKeyValueBuffer.html#name()"/> 
        /// </summary>
        public string Name
        {
            get { return IExecute<string>("name"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/state/internals/InMemoryTimeOrderedKeyValueBuffer.html#numRecords()"/> 
        /// </summary>
        public int NumRecords
        {
            get { return IExecute<int>("numRecords"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/state/internals/InMemoryTimeOrderedKeyValueBuffer.html#persistent()"/> 
        /// </summary>
        public bool Persistent
        {
            get { return IExecute<bool>("persistent"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/state/internals/InMemoryTimeOrderedKeyValueBuffer.html#getPosition()"/> 
        /// </summary>
        public Org.Apache.Kafka.Streams.Query.Position Position
        {
            get { return IExecute<Org.Apache.Kafka.Streams.Query.Position>("getPosition"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/state/internals/InMemoryTimeOrderedKeyValueBuffer.html#priorValueForBuffered(java.lang.Object)"/>
        /// </summary>
        /// <param name="arg0"><see cref="object"/></param>
        /// <returns><see cref="Org.Apache.Kafka.Streams.State.Internals.Maybe"/></returns>
        public Org.Apache.Kafka.Streams.State.Internals.Maybe PriorValueForBuffered(object arg0)
        {
            return IExecute<Org.Apache.Kafka.Streams.State.Internals.Maybe>("priorValueForBuffered", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/state/internals/InMemoryTimeOrderedKeyValueBuffer.html#close()"/>
        /// </summary>
        public void Close()
        {
            IExecute("close");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/state/internals/InMemoryTimeOrderedKeyValueBuffer.html#evictWhile(java.util.function.Supplier,java.util.function.Consumer)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Util.Function.Supplier"/></param>
        /// <param name="arg1"><see cref="Java.Util.Function.Consumer"/></param>
        public void EvictWhile(Java.Util.Function.Supplier arg0, Java.Util.Function.Consumer arg1)
        {
            IExecute("evictWhile", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/state/internals/InMemoryTimeOrderedKeyValueBuffer.html#flush()"/>
        /// </summary>
        public void Flush()
        {
            IExecute("flush");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/state/internals/InMemoryTimeOrderedKeyValueBuffer.html#init(org.apache.kafka.streams.processor.StateStoreContext,org.apache.kafka.streams.processor.StateStore)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Streams.Processor.StateStoreContext"/></param>
        /// <param name="arg1"><see cref="Org.Apache.Kafka.Streams.Processor.StateStore"/></param>
        public void Init(Org.Apache.Kafka.Streams.Processor.StateStoreContext arg0, Org.Apache.Kafka.Streams.Processor.StateStore arg1)
        {
            IExecute("init", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/state/internals/InMemoryTimeOrderedKeyValueBuffer.html#put(long,org.apache.kafka.streams.processor.api.Record,org.apache.kafka.streams.processor.internals.ProcessorRecordContext)"/>
        /// </summary>
        /// <param name="arg0"><see cref="long"/></param>
        /// <param name="arg1"><see cref="Org.Apache.Kafka.Streams.Processor.Api.Record"/></param>
        /// <param name="arg2"><see cref="Org.Apache.Kafka.Streams.Processor.Internals.ProcessorRecordContext"/></param>
        public void Put(long arg0, Org.Apache.Kafka.Streams.Processor.Api.Record arg1, Org.Apache.Kafka.Streams.Processor.Internals.ProcessorRecordContext arg2)
        {
            IExecute("put", arg0, arg1, arg2);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/state/internals/InMemoryTimeOrderedKeyValueBuffer.html#setSerdesIfNull(org.apache.kafka.streams.processor.internals.SerdeGetter)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Streams.Processor.Internals.SerdeGetter"/></param>
        public void SetSerdesIfNull(Org.Apache.Kafka.Streams.Processor.Internals.SerdeGetter arg0)
        {
            IExecute("setSerdesIfNull", arg0);
        }

        #endregion

        #region Nested classes
        #region Builder
        public partial class Builder
        {
            #region Constructors
            /// <summary>
            /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/state/internals/InMemoryTimeOrderedKeyValueBuffer.Builder.html#%3Cinit%3E(java.lang.String,org.apache.kafka.common.serialization.Serde,org.apache.kafka.common.serialization.Serde)"/>
            /// </summary>
            /// <param name="arg0"><see cref="string"/></param>
            /// <param name="arg1"><see cref="Org.Apache.Kafka.Common.Serialization.Serde"/></param>
            /// <param name="arg2"><see cref="Org.Apache.Kafka.Common.Serialization.Serde"/></param>
            public Builder(string arg0, Org.Apache.Kafka.Common.Serialization.Serde arg1, Org.Apache.Kafka.Common.Serialization.Serde arg2)
                : base(arg0, arg1, arg2)
            {
            }

            #endregion

            #region Class/Interface conversion operators
            /// <summary>
            /// Converter from <see cref="Org.Apache.Kafka.Streams.State.Internals.InMemoryTimeOrderedKeyValueBuffer.Builder"/> to <see cref="Org.Apache.Kafka.Streams.State.StoreBuilder"/>
            /// </summary>
            public static implicit operator Org.Apache.Kafka.Streams.State.StoreBuilder(Org.Apache.Kafka.Streams.State.Internals.InMemoryTimeOrderedKeyValueBuffer.Builder t) => t.Cast<Org.Apache.Kafka.Streams.State.StoreBuilder>();

            #endregion

            #region Fields

            #endregion

            #region Static methods

            #endregion

            #region Instance methods
            /// <summary>
            /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/state/internals/InMemoryTimeOrderedKeyValueBuffer.Builder.html#build()"/> 
            /// </summary>
            public Org.Apache.Kafka.Streams.Processor.StateStore Build
            {
                get { return IExecute<Org.Apache.Kafka.Streams.Processor.StateStore>("build"); }
            }
            /// <summary>
            /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/state/internals/InMemoryTimeOrderedKeyValueBuffer.Builder.html#logConfig()"/> 
            /// </summary>
            public Java.Util.Map LogConfig
            {
                get { return IExecute<Java.Util.Map>("logConfig"); }
            }
            /// <summary>
            /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/state/internals/InMemoryTimeOrderedKeyValueBuffer.Builder.html#loggingEnabled()"/> 
            /// </summary>
            public bool LoggingEnabled
            {
                get { return IExecute<bool>("loggingEnabled"); }
            }
            /// <summary>
            /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/state/internals/InMemoryTimeOrderedKeyValueBuffer.Builder.html#name()"/> 
            /// </summary>
            public string Name
            {
                get { return IExecute<string>("name"); }
            }
            /// <summary>
            /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/state/internals/InMemoryTimeOrderedKeyValueBuffer.Builder.html#withCachingDisabled()"/> 
            /// </summary>
            public Org.Apache.Kafka.Streams.State.StoreBuilder WithCachingDisabled
            {
                get { return IExecute<Org.Apache.Kafka.Streams.State.StoreBuilder>("withCachingDisabled"); }
            }
            /// <summary>
            /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/state/internals/InMemoryTimeOrderedKeyValueBuffer.Builder.html#withCachingEnabled()"/> 
            /// </summary>
            public Org.Apache.Kafka.Streams.State.StoreBuilder WithCachingEnabled
            {
                get { return IExecute<Org.Apache.Kafka.Streams.State.StoreBuilder>("withCachingEnabled"); }
            }
            /// <summary>
            /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/state/internals/InMemoryTimeOrderedKeyValueBuffer.Builder.html#withLoggingDisabled()"/> 
            /// </summary>
            public Org.Apache.Kafka.Streams.State.StoreBuilder WithLoggingDisabled
            {
                get { return IExecute<Org.Apache.Kafka.Streams.State.StoreBuilder>("withLoggingDisabled"); }
            }
            /// <summary>
            /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/state/internals/InMemoryTimeOrderedKeyValueBuffer.Builder.html#withLoggingEnabled(java.util.Map)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Java.Util.Map"/></param>
            /// <returns><see cref="Org.Apache.Kafka.Streams.State.StoreBuilder"/></returns>
            public Org.Apache.Kafka.Streams.State.StoreBuilder WithLoggingEnabled(Java.Util.Map arg0)
            {
                return IExecute<Org.Apache.Kafka.Streams.State.StoreBuilder>("withLoggingEnabled", arg0);
            }

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

        #region Builder<K, V>
        public partial class Builder<K, V>
        {
            #region Constructors
            /// <summary>
            /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/state/internals/InMemoryTimeOrderedKeyValueBuffer.Builder.html#%3Cinit%3E(java.lang.String,org.apache.kafka.common.serialization.Serde,org.apache.kafka.common.serialization.Serde)"/>
            /// </summary>
            /// <param name="arg0"><see cref="string"/></param>
            /// <param name="arg1"><see cref="Org.Apache.Kafka.Common.Serialization.Serde"/></param>
            /// <param name="arg2"><see cref="Org.Apache.Kafka.Common.Serialization.Serde"/></param>
            public Builder(string arg0, Org.Apache.Kafka.Common.Serialization.Serde<K> arg1, Org.Apache.Kafka.Common.Serialization.Serde<V> arg2)
                : base(arg0, arg1, arg2)
            {
            }

            #endregion

            #region Class/Interface conversion operators
            /// <summary>
            /// Converter from <see cref="Org.Apache.Kafka.Streams.State.Internals.InMemoryTimeOrderedKeyValueBuffer.Builder{K, V}"/> to <see cref="Org.Apache.Kafka.Streams.State.StoreBuilder"/>
            /// </summary>
            public static implicit operator Org.Apache.Kafka.Streams.State.StoreBuilder(Org.Apache.Kafka.Streams.State.Internals.InMemoryTimeOrderedKeyValueBuffer.Builder<K, V> t) => t.Cast<Org.Apache.Kafka.Streams.State.StoreBuilder>();
            /// <summary>
            /// Converter from <see cref="Org.Apache.Kafka.Streams.State.Internals.InMemoryTimeOrderedKeyValueBuffer.Builder{K, V}"/> to <see cref="Org.Apache.Kafka.Streams.State.Internals.InMemoryTimeOrderedKeyValueBuffer.Builder"/>
            /// </summary>
            public static implicit operator Org.Apache.Kafka.Streams.State.Internals.InMemoryTimeOrderedKeyValueBuffer.Builder(Org.Apache.Kafka.Streams.State.Internals.InMemoryTimeOrderedKeyValueBuffer.Builder<K, V> t) => t.Cast<Org.Apache.Kafka.Streams.State.Internals.InMemoryTimeOrderedKeyValueBuffer.Builder>();

            #endregion

            #region Fields

            #endregion

            #region Static methods

            #endregion

            #region Instance methods
            /// <summary>
            /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/state/internals/InMemoryTimeOrderedKeyValueBuffer.Builder.html#build()"/> 
            /// </summary>
            public Org.Apache.Kafka.Streams.Processor.StateStore Build
            {
                get { return IExecute<Org.Apache.Kafka.Streams.Processor.StateStore>("build"); }
            }
            /// <summary>
            /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/state/internals/InMemoryTimeOrderedKeyValueBuffer.Builder.html#logConfig()"/> 
            /// </summary>
            public Java.Util.Map<string, string> LogConfig
            {
                get { return IExecute<Java.Util.Map<string, string>>("logConfig"); }
            }
            /// <summary>
            /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/state/internals/InMemoryTimeOrderedKeyValueBuffer.Builder.html#loggingEnabled()"/> 
            /// </summary>
            public bool LoggingEnabled
            {
                get { return IExecute<bool>("loggingEnabled"); }
            }
            /// <summary>
            /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/state/internals/InMemoryTimeOrderedKeyValueBuffer.Builder.html#name()"/> 
            /// </summary>
            public string Name
            {
                get { return IExecute<string>("name"); }
            }
            /// <summary>
            /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/state/internals/InMemoryTimeOrderedKeyValueBuffer.Builder.html#withCachingDisabled()"/> 
            /// </summary>
            public Org.Apache.Kafka.Streams.State.StoreBuilder<Org.Apache.Kafka.Streams.State.Internals.InMemoryTimeOrderedKeyValueBuffer<K, V>> WithCachingDisabled
            {
                get { return IExecute<Org.Apache.Kafka.Streams.State.StoreBuilder<Org.Apache.Kafka.Streams.State.Internals.InMemoryTimeOrderedKeyValueBuffer<K, V>>>("withCachingDisabled"); }
            }
            /// <summary>
            /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/state/internals/InMemoryTimeOrderedKeyValueBuffer.Builder.html#withCachingEnabled()"/> 
            /// </summary>
            public Org.Apache.Kafka.Streams.State.StoreBuilder<Org.Apache.Kafka.Streams.State.Internals.InMemoryTimeOrderedKeyValueBuffer<K, V>> WithCachingEnabled
            {
                get { return IExecute<Org.Apache.Kafka.Streams.State.StoreBuilder<Org.Apache.Kafka.Streams.State.Internals.InMemoryTimeOrderedKeyValueBuffer<K, V>>>("withCachingEnabled"); }
            }
            /// <summary>
            /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/state/internals/InMemoryTimeOrderedKeyValueBuffer.Builder.html#withLoggingDisabled()"/> 
            /// </summary>
            public Org.Apache.Kafka.Streams.State.StoreBuilder<Org.Apache.Kafka.Streams.State.Internals.InMemoryTimeOrderedKeyValueBuffer<K, V>> WithLoggingDisabled
            {
                get { return IExecute<Org.Apache.Kafka.Streams.State.StoreBuilder<Org.Apache.Kafka.Streams.State.Internals.InMemoryTimeOrderedKeyValueBuffer<K, V>>>("withLoggingDisabled"); }
            }
            /// <summary>
            /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/state/internals/InMemoryTimeOrderedKeyValueBuffer.Builder.html#withLoggingEnabled(java.util.Map)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Java.Util.Map"/></param>
            /// <returns><see cref="Org.Apache.Kafka.Streams.State.StoreBuilder"/></returns>
            public Org.Apache.Kafka.Streams.State.StoreBuilder WithLoggingEnabled(Java.Util.Map<string, string> arg0)
            {
                return IExecute<Org.Apache.Kafka.Streams.State.StoreBuilder>("withLoggingEnabled", arg0);
            }

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

    
        #endregion

        // TODO: complete the class
    }
    #endregion

    #region InMemoryTimeOrderedKeyValueBuffer<K, V>
    public partial class InMemoryTimeOrderedKeyValueBuffer<K, V>
    {
        #region Constructors

        #endregion

        #region Class/Interface conversion operators
        /// <summary>
        /// Converter from <see cref="Org.Apache.Kafka.Streams.State.Internals.InMemoryTimeOrderedKeyValueBuffer{K, V}"/> to <see cref="Org.Apache.Kafka.Streams.State.Internals.TimeOrderedKeyValueBuffer{K, V}"/>
        /// </summary>
        public static implicit operator Org.Apache.Kafka.Streams.State.Internals.TimeOrderedKeyValueBuffer<K, V>(Org.Apache.Kafka.Streams.State.Internals.InMemoryTimeOrderedKeyValueBuffer<K, V> t) => t.Cast<Org.Apache.Kafka.Streams.State.Internals.TimeOrderedKeyValueBuffer<K, V>>();
        /// <summary>
        /// Converter from <see cref="Org.Apache.Kafka.Streams.State.Internals.InMemoryTimeOrderedKeyValueBuffer{K, V}"/> to <see cref="Org.Apache.Kafka.Streams.State.Internals.InMemoryTimeOrderedKeyValueBuffer"/>
        /// </summary>
        public static implicit operator Org.Apache.Kafka.Streams.State.Internals.InMemoryTimeOrderedKeyValueBuffer(Org.Apache.Kafka.Streams.State.Internals.InMemoryTimeOrderedKeyValueBuffer<K, V> t) => t.Cast<Org.Apache.Kafka.Streams.State.Internals.InMemoryTimeOrderedKeyValueBuffer>();

        #endregion

        #region Fields

        #endregion

        #region Static methods

        #endregion

        #region Instance methods
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/state/internals/InMemoryTimeOrderedKeyValueBuffer.html#bufferSize()"/> 
        /// </summary>
        public long BufferSize
        {
            get { return IExecute<long>("bufferSize"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/state/internals/InMemoryTimeOrderedKeyValueBuffer.html#isOpen()"/> 
        /// </summary>
        public bool IsOpen
        {
            get { return IExecute<bool>("isOpen"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/state/internals/InMemoryTimeOrderedKeyValueBuffer.html#minTimestamp()"/> 
        /// </summary>
        public long MinTimestamp
        {
            get { return IExecute<long>("minTimestamp"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/state/internals/InMemoryTimeOrderedKeyValueBuffer.html#name()"/> 
        /// </summary>
        public string Name
        {
            get { return IExecute<string>("name"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/state/internals/InMemoryTimeOrderedKeyValueBuffer.html#numRecords()"/> 
        /// </summary>
        public int NumRecords
        {
            get { return IExecute<int>("numRecords"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/state/internals/InMemoryTimeOrderedKeyValueBuffer.html#persistent()"/> 
        /// </summary>
        public bool Persistent
        {
            get { return IExecute<bool>("persistent"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/state/internals/InMemoryTimeOrderedKeyValueBuffer.html#getPosition()"/> 
        /// </summary>
        public Org.Apache.Kafka.Streams.Query.Position Position
        {
            get { return IExecute<Org.Apache.Kafka.Streams.Query.Position>("getPosition"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/state/internals/InMemoryTimeOrderedKeyValueBuffer.html#priorValueForBuffered(java.lang.Object)"/>
        /// </summary>
        /// <param name="arg0"><typeparamref name="K"/></param>
        /// <returns><see cref="Org.Apache.Kafka.Streams.State.Internals.Maybe"/></returns>
        public Org.Apache.Kafka.Streams.State.Internals.Maybe<Org.Apache.Kafka.Streams.State.ValueAndTimestamp<V>> PriorValueForBuffered(K arg0)
        {
            return IExecute<Org.Apache.Kafka.Streams.State.Internals.Maybe<Org.Apache.Kafka.Streams.State.ValueAndTimestamp<V>>>("priorValueForBuffered", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/state/internals/InMemoryTimeOrderedKeyValueBuffer.html#close()"/>
        /// </summary>
        public void Close()
        {
            IExecute("close");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/state/internals/InMemoryTimeOrderedKeyValueBuffer.html#evictWhile(java.util.function.Supplier,java.util.function.Consumer)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Util.Function.Supplier"/></param>
        /// <param name="arg1"><see cref="Java.Util.Function.Consumer"/></param>
        public void EvictWhile(Java.Util.Function.Supplier<bool?> arg0, Java.Util.Function.Consumer<Org.Apache.Kafka.Streams.State.Internals.TimeOrderedKeyValueBuffer.Eviction<K, V>> arg1)
        {
            IExecute("evictWhile", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/state/internals/InMemoryTimeOrderedKeyValueBuffer.html#flush()"/>
        /// </summary>
        public void Flush()
        {
            IExecute("flush");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/state/internals/InMemoryTimeOrderedKeyValueBuffer.html#init(org.apache.kafka.streams.processor.StateStoreContext,org.apache.kafka.streams.processor.StateStore)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Streams.Processor.StateStoreContext"/></param>
        /// <param name="arg1"><see cref="Org.Apache.Kafka.Streams.Processor.StateStore"/></param>
        public void Init(Org.Apache.Kafka.Streams.Processor.StateStoreContext arg0, Org.Apache.Kafka.Streams.Processor.StateStore arg1)
        {
            IExecute("init", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/state/internals/InMemoryTimeOrderedKeyValueBuffer.html#put(long,org.apache.kafka.streams.processor.api.Record,org.apache.kafka.streams.processor.internals.ProcessorRecordContext)"/>
        /// </summary>
        /// <param name="arg0"><see cref="long"/></param>
        /// <param name="arg1"><see cref="Org.Apache.Kafka.Streams.Processor.Api.Record"/></param>
        /// <param name="arg2"><see cref="Org.Apache.Kafka.Streams.Processor.Internals.ProcessorRecordContext"/></param>
        public void Put(long arg0, Org.Apache.Kafka.Streams.Processor.Api.Record<K, Org.Apache.Kafka.Streams.Kstream.Internals.Change<V>> arg1, Org.Apache.Kafka.Streams.Processor.Internals.ProcessorRecordContext arg2)
        {
            IExecute("put", arg0, arg1, arg2);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/state/internals/InMemoryTimeOrderedKeyValueBuffer.html#setSerdesIfNull(org.apache.kafka.streams.processor.internals.SerdeGetter)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Streams.Processor.Internals.SerdeGetter"/></param>
        public void SetSerdesIfNull(Org.Apache.Kafka.Streams.Processor.Internals.SerdeGetter arg0)
        {
            IExecute("setSerdesIfNull", arg0);
        }

        #endregion

        #region Nested classes

        #endregion

        // TODO: complete the class
    }
    #endregion
}