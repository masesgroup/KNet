/*
*  Copyright 2023 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 1.5.5.0)
*  using kafka-streams-3.4.0.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Org.Apache.Kafka.Streams.Processor.Internals
{
    #region ProcessorTopology
    public partial class ProcessorTopology
    {
        #region Constructors
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/ProcessorTopology.html#%3Cinit%3E(java.util.List,java.util.Map,java.util.Map,java.util.List,java.util.List,java.util.Map,java.util.Set)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Util.List"/></param>
        /// <param name="arg1"><see cref="Java.Util.Map"/></param>
        /// <param name="arg2"><see cref="Java.Util.Map"/></param>
        /// <param name="arg3"><see cref="Java.Util.List"/></param>
        /// <param name="arg4"><see cref="Java.Util.List"/></param>
        /// <param name="arg5"><see cref="Java.Util.Map"/></param>
        /// <param name="arg6"><see cref="Java.Util.Set"/></param>
        public ProcessorTopology(Java.Util.List arg0, Java.Util.Map arg1, Java.Util.Map arg2, Java.Util.List arg3, Java.Util.List arg4, Java.Util.Map arg5, Java.Util.Set arg6)
            : base(arg0, arg1, arg2, arg3, arg4, arg5, arg6)
        {
        }

        #endregion

        #region Class/Interface conversion operators

        #endregion

        #region Fields

        #endregion

        #region Static methods

        #endregion

        #region Instance methods
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/ProcessorTopology.html#globalStateStores()"/> 
        /// </summary>
        public Java.Util.List<Org.Apache.Kafka.Streams.Processor.StateStore> GlobalStateStores
        {
            get { return IExecute<Java.Util.List<Org.Apache.Kafka.Streams.Processor.StateStore>>("globalStateStores"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/ProcessorTopology.html#hasPersistentGlobalStore()"/> 
        /// </summary>
        public bool HasPersistentGlobalStore
        {
            get { return IExecute<bool>("hasPersistentGlobalStore"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/ProcessorTopology.html#hasPersistentLocalStore()"/> 
        /// </summary>
        public bool HasPersistentLocalStore
        {
            get { return IExecute<bool>("hasPersistentLocalStore"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/ProcessorTopology.html#processors()"/> 
        /// </summary>
        public Java.Util.List Processors
        {
            get { return IExecute<Java.Util.List>("processors"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/ProcessorTopology.html#sinkTopics()"/> 
        /// </summary>
        public Java.Util.Set<string> SinkTopics
        {
            get { return IExecute<Java.Util.Set<string>>("sinkTopics"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/ProcessorTopology.html#sources()"/> 
        /// </summary>
        public Java.Util.Set Sources
        {
            get { return IExecute<Java.Util.Set>("sources"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/ProcessorTopology.html#sourceTopics()"/> 
        /// </summary>
        public Java.Util.Set<string> SourceTopics
        {
            get { return IExecute<Java.Util.Set<string>>("sourceTopics"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/ProcessorTopology.html#stateStores()"/> 
        /// </summary>
        public Java.Util.List<Org.Apache.Kafka.Streams.Processor.StateStore> StateStores
        {
            get { return IExecute<Java.Util.List<Org.Apache.Kafka.Streams.Processor.StateStore>>("stateStores"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/ProcessorTopology.html#storeToChangelogTopic()"/> 
        /// </summary>
        public Java.Util.Map<string, string> StoreToChangelogTopic
        {
            get { return IExecute<Java.Util.Map<string, string>>("storeToChangelogTopic"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/ProcessorTopology.html#terminalNodes()"/> 
        /// </summary>
        public Java.Util.Set<string> TerminalNodes
        {
            get { return IExecute<Java.Util.Set<string>>("terminalNodes"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/ProcessorTopology.html#toString(java.lang.String)"/>
        /// </summary>
        /// <param name="arg0"><see cref="string"/></param>
        /// <returns><see cref="string"/></returns>
        public string ToString(string arg0)
        {
            return IExecute<string>("toString", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/ProcessorTopology.html#processorConnectedStateStores(java.lang.String)"/>
        /// </summary>
        /// <param name="arg0"><see cref="string"/></param>
        /// <returns><see cref="Java.Util.Set"/></returns>
        public Java.Util.Set<string> ProcessorConnectedStateStores(string arg0)
        {
            return IExecute<Java.Util.Set<string>>("processorConnectedStateStores", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/ProcessorTopology.html#sink(java.lang.String)"/>
        /// </summary>
        /// <param name="arg0"><see cref="string"/></param>
        /// <typeparam name="ReturnExtendsobject"></typeparam>
        /// <returns><see cref="Org.Apache.Kafka.Streams.Processor.Internals.SinkNode"/></returns>
        public Org.Apache.Kafka.Streams.Processor.Internals.SinkNode<ReturnExtendsobject, ReturnExtendsobject> Sink<ReturnExtendsobject>(string arg0)
        {
            return IExecute<Org.Apache.Kafka.Streams.Processor.Internals.SinkNode<ReturnExtendsobject, ReturnExtendsobject>>("sink", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/ProcessorTopology.html#source(java.lang.String)"/>
        /// </summary>
        /// <param name="arg0"><see cref="string"/></param>
        /// <typeparam name="ReturnExtendsobject"></typeparam>
        /// <returns><see cref="Org.Apache.Kafka.Streams.Processor.Internals.SourceNode"/></returns>
        public Org.Apache.Kafka.Streams.Processor.Internals.SourceNode<ReturnExtendsobject, ReturnExtendsobject> Source<ReturnExtendsobject>(string arg0)
        {
            return IExecute<Org.Apache.Kafka.Streams.Processor.Internals.SourceNode<ReturnExtendsobject, ReturnExtendsobject>>("source", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/ProcessorTopology.html#updateSourceTopics(java.util.Map)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Util.Map"/></param>
        public void UpdateSourceTopics(Java.Util.Map<string, Java.Util.List<string>> arg0)
        {
            IExecute("updateSourceTopics", arg0);
        }

        #endregion

        #region Nested classes

        #endregion

        // TODO: complete the class
    }
    #endregion
}