/*
*  Copyright 2023 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 1.5.5.0)
*  using kafka-streams-3.4.0.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Org.Apache.Kafka.Streams.Processor.Internals
{
    #region ProcessorContextUtils
    public partial class ProcessorContextUtils
    {
        #region Constructors

        #endregion

        #region Class/Interface conversion operators

        #endregion

        #region Fields

        #endregion

        #region Static methods
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/ProcessorContextUtils.html#changelogFor(org.apache.kafka.streams.processor.ProcessorContext,java.lang.String,java.lang.Boolean)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Streams.Processor.ProcessorContext"/></param>
        /// <param name="arg1"><see cref="string"/></param>
        /// <param name="arg2"><see cref="bool"/></param>
        /// <returns><see cref="string"/></returns>
        public static string ChangelogFor(Org.Apache.Kafka.Streams.Processor.ProcessorContext arg0, string arg1, bool? arg2)
        {
            return SExecute<string>(LocalBridgeClazz, "changelogFor", arg0, arg1, arg2);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/ProcessorContextUtils.html#changelogFor(org.apache.kafka.streams.processor.StateStoreContext,java.lang.String,java.lang.Boolean)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Streams.Processor.StateStoreContext"/></param>
        /// <param name="arg1"><see cref="string"/></param>
        /// <param name="arg2"><see cref="bool"/></param>
        /// <returns><see cref="string"/></returns>
        public static string ChangelogFor(Org.Apache.Kafka.Streams.Processor.StateStoreContext arg0, string arg1, bool? arg2)
        {
            return SExecute<string>(LocalBridgeClazz, "changelogFor", arg0, arg1, arg2);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/ProcessorContextUtils.html#getPrefix(java.util.Map,java.lang.String)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Util.Map"/></param>
        /// <param name="arg1"><see cref="string"/></param>
        /// <returns><see cref="string"/></returns>
        public static string GetPrefix(Java.Util.Map<string, object> arg0, string arg1)
        {
            return SExecute<string>(LocalBridgeClazz, "getPrefix", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/ProcessorContextUtils.html#currentSystemTime(org.apache.kafka.streams.processor.ProcessorContext)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Streams.Processor.ProcessorContext"/></param>
        /// <returns><see cref="long"/></returns>
        public static long CurrentSystemTime(Org.Apache.Kafka.Streams.Processor.ProcessorContext arg0)
        {
            return SExecute<long>(LocalBridgeClazz, "currentSystemTime", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/ProcessorContextUtils.html#asInternalProcessorContext(org.apache.kafka.streams.processor.ProcessorContext)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Streams.Processor.ProcessorContext"/></param>
        /// <returns><see cref="Org.Apache.Kafka.Streams.Processor.Internals.InternalProcessorContext"/></returns>
        public static Org.Apache.Kafka.Streams.Processor.Internals.InternalProcessorContext AsInternalProcessorContext(Org.Apache.Kafka.Streams.Processor.ProcessorContext arg0)
        {
            return SExecute<Org.Apache.Kafka.Streams.Processor.Internals.InternalProcessorContext>(LocalBridgeClazz, "asInternalProcessorContext", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/ProcessorContextUtils.html#asInternalProcessorContext(org.apache.kafka.streams.processor.StateStoreContext)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Streams.Processor.StateStoreContext"/></param>
        /// <returns><see cref="Org.Apache.Kafka.Streams.Processor.Internals.InternalProcessorContext"/></returns>
        public static Org.Apache.Kafka.Streams.Processor.Internals.InternalProcessorContext AsInternalProcessorContext(Org.Apache.Kafka.Streams.Processor.StateStoreContext arg0)
        {
            return SExecute<Org.Apache.Kafka.Streams.Processor.Internals.InternalProcessorContext>(LocalBridgeClazz, "asInternalProcessorContext", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/ProcessorContextUtils.html#getMetricsImpl(org.apache.kafka.streams.processor.ProcessorContext)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Streams.Processor.ProcessorContext"/></param>
        /// <returns><see cref="Org.Apache.Kafka.Streams.Processor.Internals.Metrics.StreamsMetricsImpl"/></returns>
        public static Org.Apache.Kafka.Streams.Processor.Internals.Metrics.StreamsMetricsImpl GetMetricsImpl(Org.Apache.Kafka.Streams.Processor.ProcessorContext arg0)
        {
            return SExecute<Org.Apache.Kafka.Streams.Processor.Internals.Metrics.StreamsMetricsImpl>(LocalBridgeClazz, "getMetricsImpl", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/ProcessorContextUtils.html#getMetricsImpl(org.apache.kafka.streams.processor.StateStoreContext)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Streams.Processor.StateStoreContext"/></param>
        /// <returns><see cref="Org.Apache.Kafka.Streams.Processor.Internals.Metrics.StreamsMetricsImpl"/></returns>
        public static Org.Apache.Kafka.Streams.Processor.Internals.Metrics.StreamsMetricsImpl GetMetricsImpl(Org.Apache.Kafka.Streams.Processor.StateStoreContext arg0)
        {
            return SExecute<Org.Apache.Kafka.Streams.Processor.Internals.Metrics.StreamsMetricsImpl>(LocalBridgeClazz, "getMetricsImpl", arg0);
        }

        #endregion

        #region Instance methods

        #endregion

        #region Nested classes

        #endregion

        // TODO: complete the class
    }
    #endregion
}