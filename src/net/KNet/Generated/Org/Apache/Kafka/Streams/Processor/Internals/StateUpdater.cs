/*
*  Copyright 2023 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 1.5.5.0)
*  using kafka-streams-3.4.0.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Org.Apache.Kafka.Streams.Processor.Internals
{
    #region StateUpdater
    public partial class StateUpdater
    {
        #region Constructors

        #endregion

        #region Class/Interface conversion operators

        #endregion

        #region Fields

        #endregion

        #region Static methods

        #endregion

        #region Instance methods
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/StateUpdater.html#drainExceptionsAndFailedTasks()"/> 
        /// </summary>
        public Java.Util.List<Org.Apache.Kafka.Streams.Processor.Internals.StateUpdater.ExceptionAndTasks> DrainExceptionsAndFailedTasks
        {
            get { return IExecute<Java.Util.List<Org.Apache.Kafka.Streams.Processor.Internals.StateUpdater.ExceptionAndTasks>>("drainExceptionsAndFailedTasks"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/StateUpdater.html#drainRemovedTasks()"/> 
        /// </summary>
        public Java.Util.Set<Org.Apache.Kafka.Streams.Processor.Internals.Task> DrainRemovedTasks
        {
            get { return IExecute<Java.Util.Set<Org.Apache.Kafka.Streams.Processor.Internals.Task>>("drainRemovedTasks"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/StateUpdater.html#hasExceptionsAndFailedTasks()"/> 
        /// </summary>
        public bool HasExceptionsAndFailedTasks
        {
            get { return IExecute<bool>("hasExceptionsAndFailedTasks"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/StateUpdater.html#hasRemovedTasks()"/> 
        /// </summary>
        public bool HasRemovedTasks
        {
            get { return IExecute<bool>("hasRemovedTasks"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/StateUpdater.html#restoresActiveTasks()"/> 
        /// </summary>
        public bool RestoresActiveTasks
        {
            get { return IExecute<bool>("restoresActiveTasks"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/StateUpdater.html#getStandbyTasks()"/> 
        /// </summary>
        public Java.Util.Set<Org.Apache.Kafka.Streams.Processor.Internals.StandbyTask> StandbyTasks
        {
            get { return IExecute<Java.Util.Set<Org.Apache.Kafka.Streams.Processor.Internals.StandbyTask>>("getStandbyTasks"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/StateUpdater.html#getTasks()"/> 
        /// </summary>
        public Java.Util.Set<Org.Apache.Kafka.Streams.Processor.Internals.Task> Tasks
        {
            get { return IExecute<Java.Util.Set<Org.Apache.Kafka.Streams.Processor.Internals.Task>>("getTasks"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/StateUpdater.html#getUpdatingTasks()"/> 
        /// </summary>
        public Java.Util.Set<Org.Apache.Kafka.Streams.Processor.Internals.Task> UpdatingTasks
        {
            get { return IExecute<Java.Util.Set<Org.Apache.Kafka.Streams.Processor.Internals.Task>>("getUpdatingTasks"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/StateUpdater.html#drainRestoredActiveTasks(java.time.Duration)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Time.Duration"/></param>
        /// <returns><see cref="Java.Util.Set"/></returns>
        public Java.Util.Set<Org.Apache.Kafka.Streams.Processor.Internals.StreamTask> DrainRestoredActiveTasks(Java.Time.Duration arg0)
        {
            return IExecute<Java.Util.Set<Org.Apache.Kafka.Streams.Processor.Internals.StreamTask>>("drainRestoredActiveTasks", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/StateUpdater.html#add(org.apache.kafka.streams.processor.internals.Task)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Streams.Processor.Internals.Task"/></param>
        public void Add(Org.Apache.Kafka.Streams.Processor.Internals.Task arg0)
        {
            IExecute("add", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/StateUpdater.html#remove(org.apache.kafka.streams.processor.TaskId)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Streams.Processor.TaskId"/></param>
        public void Remove(Org.Apache.Kafka.Streams.Processor.TaskId arg0)
        {
            IExecute("remove", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/StateUpdater.html#shutdown(java.time.Duration)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Time.Duration"/></param>
        public void Shutdown(Java.Time.Duration arg0)
        {
            IExecute("shutdown", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/StateUpdater.html#start()"/>
        /// </summary>
        public void Start()
        {
            IExecute("start");
        }

        #endregion

        #region Nested classes
        #region ExceptionAndTasks
        public partial class ExceptionAndTasks
        {
            #region Constructors
            /// <summary>
            /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/StateUpdater.ExceptionAndTasks.html#%3Cinit%3E(java.util.Set,java.lang.RuntimeException)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Java.Util.Set"/></param>
            /// <param name="arg1"><see cref="Java.Lang.RuntimeException"/></param>
            public ExceptionAndTasks(Java.Util.Set arg0, Java.Lang.RuntimeException arg1)
                : base(arg0, arg1)
            {
            }

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields

            #endregion

            #region Static methods

            #endregion

            #region Instance methods
            /// <summary>
            /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/StateUpdater.ExceptionAndTasks.html#exception()"/> 
            /// </summary>
            public Java.Lang.RuntimeException Exception
            {
                get { var obj = IExecute<MASES.JCOBridge.C2JBridge.JVMInterop.IJavaObject>("exception"); return MASES.JCOBridge.C2JBridge.JVMBridgeException.New<Java.Lang.RuntimeException>(obj); }
            }
            /// <summary>
            /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/StateUpdater.ExceptionAndTasks.html#getTasks()"/> 
            /// </summary>
            public Java.Util.Set<Org.Apache.Kafka.Streams.Processor.Internals.Task> Tasks
            {
                get { return IExecute<Java.Util.Set<Org.Apache.Kafka.Streams.Processor.Internals.Task>>("getTasks"); }
            }

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

    
        #endregion

        // TODO: complete the class
    }
    #endregion
}