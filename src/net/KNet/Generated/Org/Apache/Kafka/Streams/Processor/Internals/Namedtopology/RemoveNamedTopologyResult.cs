/*
*  Copyright 2023 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 1.5.5.0)
*  using kafka-streams-3.4.0.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Org.Apache.Kafka.Streams.Processor.Internals.Namedtopology
{
    #region RemoveNamedTopologyResult
    public partial class RemoveNamedTopologyResult
    {
        #region Constructors
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/namedtopology/RemoveNamedTopologyResult.html#%3Cinit%3E(org.apache.kafka.common.internals.KafkaFutureImpl,java.lang.String,java.lang.Runnable)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Common.Internals.KafkaFutureImpl"/></param>
        /// <param name="arg1"><see cref="string"/></param>
        /// <param name="arg2"><see cref="Java.Lang.Runnable"/></param>
        public RemoveNamedTopologyResult(Org.Apache.Kafka.Common.Internals.KafkaFutureImpl arg0, string arg1, Java.Lang.Runnable arg2)
            : base(arg0, arg1, arg2)
        {
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/namedtopology/RemoveNamedTopologyResult.html#%3Cinit%3E(org.apache.kafka.common.internals.KafkaFutureImpl)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Common.Internals.KafkaFutureImpl"/></param>
        public RemoveNamedTopologyResult(Org.Apache.Kafka.Common.Internals.KafkaFutureImpl arg0)
            : base(arg0)
        {
        }

        #endregion

        #region Class/Interface conversion operators

        #endregion

        #region Fields

        #endregion

        #region Static methods

        #endregion

        #region Instance methods
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/namedtopology/RemoveNamedTopologyResult.html#all()"/> 
        /// </summary>
        public Org.Apache.Kafka.Common.KafkaFuture<Java.Lang.Void> All
        {
            get { return IExecute<Org.Apache.Kafka.Common.KafkaFuture<Java.Lang.Void>>("all"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/namedtopology/RemoveNamedTopologyResult.html#removeTopologyFuture()"/> 
        /// </summary>
        public Org.Apache.Kafka.Common.KafkaFuture<Java.Lang.Void> RemoveTopologyFuture
        {
            get { return IExecute<Org.Apache.Kafka.Common.KafkaFuture<Java.Lang.Void>>("removeTopologyFuture"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/namedtopology/RemoveNamedTopologyResult.html#resetOffsetsFuture()"/>
        /// </summary>

        /// <returns><see cref="Org.Apache.Kafka.Common.KafkaFuture"/></returns>
        public Org.Apache.Kafka.Common.KafkaFuture<Java.Lang.Void> ResetOffsetsFutureMethod()
        {
            return IExecute<Org.Apache.Kafka.Common.KafkaFuture<Java.Lang.Void>>("resetOffsetsFuture");
        }

        #endregion

        #region Nested classes

        #endregion

        // TODO: complete the class
    }
    #endregion
}