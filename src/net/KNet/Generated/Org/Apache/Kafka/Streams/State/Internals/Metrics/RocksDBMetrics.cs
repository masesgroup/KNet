/*
*  Copyright 2023 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 1.5.5.0)
*  using kafka-streams-3.4.0.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Org.Apache.Kafka.Streams.State.Internals.Metrics
{
    #region RocksDBMetrics
    public partial class RocksDBMetrics
    {
        #region Constructors

        #endregion

        #region Class/Interface conversion operators

        #endregion

        #region Fields

        #endregion

        #region Static methods
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/state/internals/metrics/RocksDBMetrics.html#blockCacheDataHitRatioSensor(org.apache.kafka.streams.processor.internals.metrics.StreamsMetricsImpl,org.apache.kafka.streams.state.internals.metrics.RocksDBMetrics.RocksDBMetricContext)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Streams.Processor.Internals.Metrics.StreamsMetricsImpl"/></param>
        /// <param name="arg1"><see cref="Org.Apache.Kafka.Streams.State.Internals.Metrics.RocksDBMetrics.RocksDBMetricContext"/></param>
        /// <returns><see cref="Org.Apache.Kafka.Common.Metrics.Sensor"/></returns>
        public static Org.Apache.Kafka.Common.Metrics.Sensor BlockCacheDataHitRatioSensor(Org.Apache.Kafka.Streams.Processor.Internals.Metrics.StreamsMetricsImpl arg0, Org.Apache.Kafka.Streams.State.Internals.Metrics.RocksDBMetrics.RocksDBMetricContext arg1)
        {
            return SExecute<Org.Apache.Kafka.Common.Metrics.Sensor>(LocalBridgeClazz, "blockCacheDataHitRatioSensor", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/state/internals/metrics/RocksDBMetrics.html#blockCacheFilterHitRatioSensor(org.apache.kafka.streams.processor.internals.metrics.StreamsMetricsImpl,org.apache.kafka.streams.state.internals.metrics.RocksDBMetrics.RocksDBMetricContext)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Streams.Processor.Internals.Metrics.StreamsMetricsImpl"/></param>
        /// <param name="arg1"><see cref="Org.Apache.Kafka.Streams.State.Internals.Metrics.RocksDBMetrics.RocksDBMetricContext"/></param>
        /// <returns><see cref="Org.Apache.Kafka.Common.Metrics.Sensor"/></returns>
        public static Org.Apache.Kafka.Common.Metrics.Sensor BlockCacheFilterHitRatioSensor(Org.Apache.Kafka.Streams.Processor.Internals.Metrics.StreamsMetricsImpl arg0, Org.Apache.Kafka.Streams.State.Internals.Metrics.RocksDBMetrics.RocksDBMetricContext arg1)
        {
            return SExecute<Org.Apache.Kafka.Common.Metrics.Sensor>(LocalBridgeClazz, "blockCacheFilterHitRatioSensor", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/state/internals/metrics/RocksDBMetrics.html#blockCacheIndexHitRatioSensor(org.apache.kafka.streams.processor.internals.metrics.StreamsMetricsImpl,org.apache.kafka.streams.state.internals.metrics.RocksDBMetrics.RocksDBMetricContext)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Streams.Processor.Internals.Metrics.StreamsMetricsImpl"/></param>
        /// <param name="arg1"><see cref="Org.Apache.Kafka.Streams.State.Internals.Metrics.RocksDBMetrics.RocksDBMetricContext"/></param>
        /// <returns><see cref="Org.Apache.Kafka.Common.Metrics.Sensor"/></returns>
        public static Org.Apache.Kafka.Common.Metrics.Sensor BlockCacheIndexHitRatioSensor(Org.Apache.Kafka.Streams.Processor.Internals.Metrics.StreamsMetricsImpl arg0, Org.Apache.Kafka.Streams.State.Internals.Metrics.RocksDBMetrics.RocksDBMetricContext arg1)
        {
            return SExecute<Org.Apache.Kafka.Common.Metrics.Sensor>(LocalBridgeClazz, "blockCacheIndexHitRatioSensor", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/state/internals/metrics/RocksDBMetrics.html#bytesReadDuringCompactionSensor(org.apache.kafka.streams.processor.internals.metrics.StreamsMetricsImpl,org.apache.kafka.streams.state.internals.metrics.RocksDBMetrics.RocksDBMetricContext)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Streams.Processor.Internals.Metrics.StreamsMetricsImpl"/></param>
        /// <param name="arg1"><see cref="Org.Apache.Kafka.Streams.State.Internals.Metrics.RocksDBMetrics.RocksDBMetricContext"/></param>
        /// <returns><see cref="Org.Apache.Kafka.Common.Metrics.Sensor"/></returns>
        public static Org.Apache.Kafka.Common.Metrics.Sensor BytesReadDuringCompactionSensor(Org.Apache.Kafka.Streams.Processor.Internals.Metrics.StreamsMetricsImpl arg0, Org.Apache.Kafka.Streams.State.Internals.Metrics.RocksDBMetrics.RocksDBMetricContext arg1)
        {
            return SExecute<Org.Apache.Kafka.Common.Metrics.Sensor>(LocalBridgeClazz, "bytesReadDuringCompactionSensor", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/state/internals/metrics/RocksDBMetrics.html#bytesReadFromDatabaseSensor(org.apache.kafka.streams.processor.internals.metrics.StreamsMetricsImpl,org.apache.kafka.streams.state.internals.metrics.RocksDBMetrics.RocksDBMetricContext)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Streams.Processor.Internals.Metrics.StreamsMetricsImpl"/></param>
        /// <param name="arg1"><see cref="Org.Apache.Kafka.Streams.State.Internals.Metrics.RocksDBMetrics.RocksDBMetricContext"/></param>
        /// <returns><see cref="Org.Apache.Kafka.Common.Metrics.Sensor"/></returns>
        public static Org.Apache.Kafka.Common.Metrics.Sensor BytesReadFromDatabaseSensor(Org.Apache.Kafka.Streams.Processor.Internals.Metrics.StreamsMetricsImpl arg0, Org.Apache.Kafka.Streams.State.Internals.Metrics.RocksDBMetrics.RocksDBMetricContext arg1)
        {
            return SExecute<Org.Apache.Kafka.Common.Metrics.Sensor>(LocalBridgeClazz, "bytesReadFromDatabaseSensor", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/state/internals/metrics/RocksDBMetrics.html#bytesWrittenDuringCompactionSensor(org.apache.kafka.streams.processor.internals.metrics.StreamsMetricsImpl,org.apache.kafka.streams.state.internals.metrics.RocksDBMetrics.RocksDBMetricContext)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Streams.Processor.Internals.Metrics.StreamsMetricsImpl"/></param>
        /// <param name="arg1"><see cref="Org.Apache.Kafka.Streams.State.Internals.Metrics.RocksDBMetrics.RocksDBMetricContext"/></param>
        /// <returns><see cref="Org.Apache.Kafka.Common.Metrics.Sensor"/></returns>
        public static Org.Apache.Kafka.Common.Metrics.Sensor BytesWrittenDuringCompactionSensor(Org.Apache.Kafka.Streams.Processor.Internals.Metrics.StreamsMetricsImpl arg0, Org.Apache.Kafka.Streams.State.Internals.Metrics.RocksDBMetrics.RocksDBMetricContext arg1)
        {
            return SExecute<Org.Apache.Kafka.Common.Metrics.Sensor>(LocalBridgeClazz, "bytesWrittenDuringCompactionSensor", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/state/internals/metrics/RocksDBMetrics.html#bytesWrittenToDatabaseSensor(org.apache.kafka.streams.processor.internals.metrics.StreamsMetricsImpl,org.apache.kafka.streams.state.internals.metrics.RocksDBMetrics.RocksDBMetricContext)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Streams.Processor.Internals.Metrics.StreamsMetricsImpl"/></param>
        /// <param name="arg1"><see cref="Org.Apache.Kafka.Streams.State.Internals.Metrics.RocksDBMetrics.RocksDBMetricContext"/></param>
        /// <returns><see cref="Org.Apache.Kafka.Common.Metrics.Sensor"/></returns>
        public static Org.Apache.Kafka.Common.Metrics.Sensor BytesWrittenToDatabaseSensor(Org.Apache.Kafka.Streams.Processor.Internals.Metrics.StreamsMetricsImpl arg0, Org.Apache.Kafka.Streams.State.Internals.Metrics.RocksDBMetrics.RocksDBMetricContext arg1)
        {
            return SExecute<Org.Apache.Kafka.Common.Metrics.Sensor>(LocalBridgeClazz, "bytesWrittenToDatabaseSensor", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/state/internals/metrics/RocksDBMetrics.html#compactionTimeAvgSensor(org.apache.kafka.streams.processor.internals.metrics.StreamsMetricsImpl,org.apache.kafka.streams.state.internals.metrics.RocksDBMetrics.RocksDBMetricContext)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Streams.Processor.Internals.Metrics.StreamsMetricsImpl"/></param>
        /// <param name="arg1"><see cref="Org.Apache.Kafka.Streams.State.Internals.Metrics.RocksDBMetrics.RocksDBMetricContext"/></param>
        /// <returns><see cref="Org.Apache.Kafka.Common.Metrics.Sensor"/></returns>
        public static Org.Apache.Kafka.Common.Metrics.Sensor CompactionTimeAvgSensor(Org.Apache.Kafka.Streams.Processor.Internals.Metrics.StreamsMetricsImpl arg0, Org.Apache.Kafka.Streams.State.Internals.Metrics.RocksDBMetrics.RocksDBMetricContext arg1)
        {
            return SExecute<Org.Apache.Kafka.Common.Metrics.Sensor>(LocalBridgeClazz, "compactionTimeAvgSensor", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/state/internals/metrics/RocksDBMetrics.html#compactionTimeMaxSensor(org.apache.kafka.streams.processor.internals.metrics.StreamsMetricsImpl,org.apache.kafka.streams.state.internals.metrics.RocksDBMetrics.RocksDBMetricContext)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Streams.Processor.Internals.Metrics.StreamsMetricsImpl"/></param>
        /// <param name="arg1"><see cref="Org.Apache.Kafka.Streams.State.Internals.Metrics.RocksDBMetrics.RocksDBMetricContext"/></param>
        /// <returns><see cref="Org.Apache.Kafka.Common.Metrics.Sensor"/></returns>
        public static Org.Apache.Kafka.Common.Metrics.Sensor CompactionTimeMaxSensor(Org.Apache.Kafka.Streams.Processor.Internals.Metrics.StreamsMetricsImpl arg0, Org.Apache.Kafka.Streams.State.Internals.Metrics.RocksDBMetrics.RocksDBMetricContext arg1)
        {
            return SExecute<Org.Apache.Kafka.Common.Metrics.Sensor>(LocalBridgeClazz, "compactionTimeMaxSensor", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/state/internals/metrics/RocksDBMetrics.html#compactionTimeMinSensor(org.apache.kafka.streams.processor.internals.metrics.StreamsMetricsImpl,org.apache.kafka.streams.state.internals.metrics.RocksDBMetrics.RocksDBMetricContext)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Streams.Processor.Internals.Metrics.StreamsMetricsImpl"/></param>
        /// <param name="arg1"><see cref="Org.Apache.Kafka.Streams.State.Internals.Metrics.RocksDBMetrics.RocksDBMetricContext"/></param>
        /// <returns><see cref="Org.Apache.Kafka.Common.Metrics.Sensor"/></returns>
        public static Org.Apache.Kafka.Common.Metrics.Sensor CompactionTimeMinSensor(Org.Apache.Kafka.Streams.Processor.Internals.Metrics.StreamsMetricsImpl arg0, Org.Apache.Kafka.Streams.State.Internals.Metrics.RocksDBMetrics.RocksDBMetricContext arg1)
        {
            return SExecute<Org.Apache.Kafka.Common.Metrics.Sensor>(LocalBridgeClazz, "compactionTimeMinSensor", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/state/internals/metrics/RocksDBMetrics.html#memtableAvgFlushTimeSensor(org.apache.kafka.streams.processor.internals.metrics.StreamsMetricsImpl,org.apache.kafka.streams.state.internals.metrics.RocksDBMetrics.RocksDBMetricContext)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Streams.Processor.Internals.Metrics.StreamsMetricsImpl"/></param>
        /// <param name="arg1"><see cref="Org.Apache.Kafka.Streams.State.Internals.Metrics.RocksDBMetrics.RocksDBMetricContext"/></param>
        /// <returns><see cref="Org.Apache.Kafka.Common.Metrics.Sensor"/></returns>
        public static Org.Apache.Kafka.Common.Metrics.Sensor MemtableAvgFlushTimeSensor(Org.Apache.Kafka.Streams.Processor.Internals.Metrics.StreamsMetricsImpl arg0, Org.Apache.Kafka.Streams.State.Internals.Metrics.RocksDBMetrics.RocksDBMetricContext arg1)
        {
            return SExecute<Org.Apache.Kafka.Common.Metrics.Sensor>(LocalBridgeClazz, "memtableAvgFlushTimeSensor", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/state/internals/metrics/RocksDBMetrics.html#memtableBytesFlushedSensor(org.apache.kafka.streams.processor.internals.metrics.StreamsMetricsImpl,org.apache.kafka.streams.state.internals.metrics.RocksDBMetrics.RocksDBMetricContext)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Streams.Processor.Internals.Metrics.StreamsMetricsImpl"/></param>
        /// <param name="arg1"><see cref="Org.Apache.Kafka.Streams.State.Internals.Metrics.RocksDBMetrics.RocksDBMetricContext"/></param>
        /// <returns><see cref="Org.Apache.Kafka.Common.Metrics.Sensor"/></returns>
        public static Org.Apache.Kafka.Common.Metrics.Sensor MemtableBytesFlushedSensor(Org.Apache.Kafka.Streams.Processor.Internals.Metrics.StreamsMetricsImpl arg0, Org.Apache.Kafka.Streams.State.Internals.Metrics.RocksDBMetrics.RocksDBMetricContext arg1)
        {
            return SExecute<Org.Apache.Kafka.Common.Metrics.Sensor>(LocalBridgeClazz, "memtableBytesFlushedSensor", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/state/internals/metrics/RocksDBMetrics.html#memtableHitRatioSensor(org.apache.kafka.streams.processor.internals.metrics.StreamsMetricsImpl,org.apache.kafka.streams.state.internals.metrics.RocksDBMetrics.RocksDBMetricContext)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Streams.Processor.Internals.Metrics.StreamsMetricsImpl"/></param>
        /// <param name="arg1"><see cref="Org.Apache.Kafka.Streams.State.Internals.Metrics.RocksDBMetrics.RocksDBMetricContext"/></param>
        /// <returns><see cref="Org.Apache.Kafka.Common.Metrics.Sensor"/></returns>
        public static Org.Apache.Kafka.Common.Metrics.Sensor MemtableHitRatioSensor(Org.Apache.Kafka.Streams.Processor.Internals.Metrics.StreamsMetricsImpl arg0, Org.Apache.Kafka.Streams.State.Internals.Metrics.RocksDBMetrics.RocksDBMetricContext arg1)
        {
            return SExecute<Org.Apache.Kafka.Common.Metrics.Sensor>(LocalBridgeClazz, "memtableHitRatioSensor", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/state/internals/metrics/RocksDBMetrics.html#memtableMaxFlushTimeSensor(org.apache.kafka.streams.processor.internals.metrics.StreamsMetricsImpl,org.apache.kafka.streams.state.internals.metrics.RocksDBMetrics.RocksDBMetricContext)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Streams.Processor.Internals.Metrics.StreamsMetricsImpl"/></param>
        /// <param name="arg1"><see cref="Org.Apache.Kafka.Streams.State.Internals.Metrics.RocksDBMetrics.RocksDBMetricContext"/></param>
        /// <returns><see cref="Org.Apache.Kafka.Common.Metrics.Sensor"/></returns>
        public static Org.Apache.Kafka.Common.Metrics.Sensor MemtableMaxFlushTimeSensor(Org.Apache.Kafka.Streams.Processor.Internals.Metrics.StreamsMetricsImpl arg0, Org.Apache.Kafka.Streams.State.Internals.Metrics.RocksDBMetrics.RocksDBMetricContext arg1)
        {
            return SExecute<Org.Apache.Kafka.Common.Metrics.Sensor>(LocalBridgeClazz, "memtableMaxFlushTimeSensor", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/state/internals/metrics/RocksDBMetrics.html#memtableMinFlushTimeSensor(org.apache.kafka.streams.processor.internals.metrics.StreamsMetricsImpl,org.apache.kafka.streams.state.internals.metrics.RocksDBMetrics.RocksDBMetricContext)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Streams.Processor.Internals.Metrics.StreamsMetricsImpl"/></param>
        /// <param name="arg1"><see cref="Org.Apache.Kafka.Streams.State.Internals.Metrics.RocksDBMetrics.RocksDBMetricContext"/></param>
        /// <returns><see cref="Org.Apache.Kafka.Common.Metrics.Sensor"/></returns>
        public static Org.Apache.Kafka.Common.Metrics.Sensor MemtableMinFlushTimeSensor(Org.Apache.Kafka.Streams.Processor.Internals.Metrics.StreamsMetricsImpl arg0, Org.Apache.Kafka.Streams.State.Internals.Metrics.RocksDBMetrics.RocksDBMetricContext arg1)
        {
            return SExecute<Org.Apache.Kafka.Common.Metrics.Sensor>(LocalBridgeClazz, "memtableMinFlushTimeSensor", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/state/internals/metrics/RocksDBMetrics.html#numberOfFileErrorsSensor(org.apache.kafka.streams.processor.internals.metrics.StreamsMetricsImpl,org.apache.kafka.streams.state.internals.metrics.RocksDBMetrics.RocksDBMetricContext)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Streams.Processor.Internals.Metrics.StreamsMetricsImpl"/></param>
        /// <param name="arg1"><see cref="Org.Apache.Kafka.Streams.State.Internals.Metrics.RocksDBMetrics.RocksDBMetricContext"/></param>
        /// <returns><see cref="Org.Apache.Kafka.Common.Metrics.Sensor"/></returns>
        public static Org.Apache.Kafka.Common.Metrics.Sensor NumberOfFileErrorsSensor(Org.Apache.Kafka.Streams.Processor.Internals.Metrics.StreamsMetricsImpl arg0, Org.Apache.Kafka.Streams.State.Internals.Metrics.RocksDBMetrics.RocksDBMetricContext arg1)
        {
            return SExecute<Org.Apache.Kafka.Common.Metrics.Sensor>(LocalBridgeClazz, "numberOfFileErrorsSensor", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/state/internals/metrics/RocksDBMetrics.html#numberOfOpenFilesSensor(org.apache.kafka.streams.processor.internals.metrics.StreamsMetricsImpl,org.apache.kafka.streams.state.internals.metrics.RocksDBMetrics.RocksDBMetricContext)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Streams.Processor.Internals.Metrics.StreamsMetricsImpl"/></param>
        /// <param name="arg1"><see cref="Org.Apache.Kafka.Streams.State.Internals.Metrics.RocksDBMetrics.RocksDBMetricContext"/></param>
        /// <returns><see cref="Org.Apache.Kafka.Common.Metrics.Sensor"/></returns>
        public static Org.Apache.Kafka.Common.Metrics.Sensor NumberOfOpenFilesSensor(Org.Apache.Kafka.Streams.Processor.Internals.Metrics.StreamsMetricsImpl arg0, Org.Apache.Kafka.Streams.State.Internals.Metrics.RocksDBMetrics.RocksDBMetricContext arg1)
        {
            return SExecute<Org.Apache.Kafka.Common.Metrics.Sensor>(LocalBridgeClazz, "numberOfOpenFilesSensor", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/state/internals/metrics/RocksDBMetrics.html#writeStallDurationSensor(org.apache.kafka.streams.processor.internals.metrics.StreamsMetricsImpl,org.apache.kafka.streams.state.internals.metrics.RocksDBMetrics.RocksDBMetricContext)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Streams.Processor.Internals.Metrics.StreamsMetricsImpl"/></param>
        /// <param name="arg1"><see cref="Org.Apache.Kafka.Streams.State.Internals.Metrics.RocksDBMetrics.RocksDBMetricContext"/></param>
        /// <returns><see cref="Org.Apache.Kafka.Common.Metrics.Sensor"/></returns>
        public static Org.Apache.Kafka.Common.Metrics.Sensor WriteStallDurationSensor(Org.Apache.Kafka.Streams.Processor.Internals.Metrics.StreamsMetricsImpl arg0, Org.Apache.Kafka.Streams.State.Internals.Metrics.RocksDBMetrics.RocksDBMetricContext arg1)
        {
            return SExecute<Org.Apache.Kafka.Common.Metrics.Sensor>(LocalBridgeClazz, "writeStallDurationSensor", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/state/internals/metrics/RocksDBMetrics.html#addBackgroundErrorsMetric(org.apache.kafka.streams.processor.internals.metrics.StreamsMetricsImpl,org.apache.kafka.streams.state.internals.metrics.RocksDBMetrics.RocksDBMetricContext,org.apache.kafka.common.metrics.Gauge)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Streams.Processor.Internals.Metrics.StreamsMetricsImpl"/></param>
        /// <param name="arg1"><see cref="Org.Apache.Kafka.Streams.State.Internals.Metrics.RocksDBMetrics.RocksDBMetricContext"/></param>
        /// <param name="arg2"><see cref="Org.Apache.Kafka.Common.Metrics.Gauge"/></param>
        public static void AddBackgroundErrorsMetric(Org.Apache.Kafka.Streams.Processor.Internals.Metrics.StreamsMetricsImpl arg0, Org.Apache.Kafka.Streams.State.Internals.Metrics.RocksDBMetrics.RocksDBMetricContext arg1, Org.Apache.Kafka.Common.Metrics.Gauge<Java.Math.BigInteger> arg2)
        {
            SExecute(LocalBridgeClazz, "addBackgroundErrorsMetric", arg0, arg1, arg2);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/state/internals/metrics/RocksDBMetrics.html#addBlockCacheCapacityMetric(org.apache.kafka.streams.processor.internals.metrics.StreamsMetricsImpl,org.apache.kafka.streams.state.internals.metrics.RocksDBMetrics.RocksDBMetricContext,org.apache.kafka.common.metrics.Gauge)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Streams.Processor.Internals.Metrics.StreamsMetricsImpl"/></param>
        /// <param name="arg1"><see cref="Org.Apache.Kafka.Streams.State.Internals.Metrics.RocksDBMetrics.RocksDBMetricContext"/></param>
        /// <param name="arg2"><see cref="Org.Apache.Kafka.Common.Metrics.Gauge"/></param>
        public static void AddBlockCacheCapacityMetric(Org.Apache.Kafka.Streams.Processor.Internals.Metrics.StreamsMetricsImpl arg0, Org.Apache.Kafka.Streams.State.Internals.Metrics.RocksDBMetrics.RocksDBMetricContext arg1, Org.Apache.Kafka.Common.Metrics.Gauge<Java.Math.BigInteger> arg2)
        {
            SExecute(LocalBridgeClazz, "addBlockCacheCapacityMetric", arg0, arg1, arg2);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/state/internals/metrics/RocksDBMetrics.html#addBlockCachePinnedUsageMetric(org.apache.kafka.streams.processor.internals.metrics.StreamsMetricsImpl,org.apache.kafka.streams.state.internals.metrics.RocksDBMetrics.RocksDBMetricContext,org.apache.kafka.common.metrics.Gauge)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Streams.Processor.Internals.Metrics.StreamsMetricsImpl"/></param>
        /// <param name="arg1"><see cref="Org.Apache.Kafka.Streams.State.Internals.Metrics.RocksDBMetrics.RocksDBMetricContext"/></param>
        /// <param name="arg2"><see cref="Org.Apache.Kafka.Common.Metrics.Gauge"/></param>
        public static void AddBlockCachePinnedUsageMetric(Org.Apache.Kafka.Streams.Processor.Internals.Metrics.StreamsMetricsImpl arg0, Org.Apache.Kafka.Streams.State.Internals.Metrics.RocksDBMetrics.RocksDBMetricContext arg1, Org.Apache.Kafka.Common.Metrics.Gauge<Java.Math.BigInteger> arg2)
        {
            SExecute(LocalBridgeClazz, "addBlockCachePinnedUsageMetric", arg0, arg1, arg2);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/state/internals/metrics/RocksDBMetrics.html#addBlockCacheUsageMetric(org.apache.kafka.streams.processor.internals.metrics.StreamsMetricsImpl,org.apache.kafka.streams.state.internals.metrics.RocksDBMetrics.RocksDBMetricContext,org.apache.kafka.common.metrics.Gauge)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Streams.Processor.Internals.Metrics.StreamsMetricsImpl"/></param>
        /// <param name="arg1"><see cref="Org.Apache.Kafka.Streams.State.Internals.Metrics.RocksDBMetrics.RocksDBMetricContext"/></param>
        /// <param name="arg2"><see cref="Org.Apache.Kafka.Common.Metrics.Gauge"/></param>
        public static void AddBlockCacheUsageMetric(Org.Apache.Kafka.Streams.Processor.Internals.Metrics.StreamsMetricsImpl arg0, Org.Apache.Kafka.Streams.State.Internals.Metrics.RocksDBMetrics.RocksDBMetricContext arg1, Org.Apache.Kafka.Common.Metrics.Gauge<Java.Math.BigInteger> arg2)
        {
            SExecute(LocalBridgeClazz, "addBlockCacheUsageMetric", arg0, arg1, arg2);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/state/internals/metrics/RocksDBMetrics.html#addCompactionPendingMetric(org.apache.kafka.streams.processor.internals.metrics.StreamsMetricsImpl,org.apache.kafka.streams.state.internals.metrics.RocksDBMetrics.RocksDBMetricContext,org.apache.kafka.common.metrics.Gauge)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Streams.Processor.Internals.Metrics.StreamsMetricsImpl"/></param>
        /// <param name="arg1"><see cref="Org.Apache.Kafka.Streams.State.Internals.Metrics.RocksDBMetrics.RocksDBMetricContext"/></param>
        /// <param name="arg2"><see cref="Org.Apache.Kafka.Common.Metrics.Gauge"/></param>
        public static void AddCompactionPendingMetric(Org.Apache.Kafka.Streams.Processor.Internals.Metrics.StreamsMetricsImpl arg0, Org.Apache.Kafka.Streams.State.Internals.Metrics.RocksDBMetrics.RocksDBMetricContext arg1, Org.Apache.Kafka.Common.Metrics.Gauge<Java.Math.BigInteger> arg2)
        {
            SExecute(LocalBridgeClazz, "addCompactionPendingMetric", arg0, arg1, arg2);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/state/internals/metrics/RocksDBMetrics.html#addCurSizeActiveMemTable(org.apache.kafka.streams.processor.internals.metrics.StreamsMetricsImpl,org.apache.kafka.streams.state.internals.metrics.RocksDBMetrics.RocksDBMetricContext,org.apache.kafka.common.metrics.Gauge)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Streams.Processor.Internals.Metrics.StreamsMetricsImpl"/></param>
        /// <param name="arg1"><see cref="Org.Apache.Kafka.Streams.State.Internals.Metrics.RocksDBMetrics.RocksDBMetricContext"/></param>
        /// <param name="arg2"><see cref="Org.Apache.Kafka.Common.Metrics.Gauge"/></param>
        public static void AddCurSizeActiveMemTable(Org.Apache.Kafka.Streams.Processor.Internals.Metrics.StreamsMetricsImpl arg0, Org.Apache.Kafka.Streams.State.Internals.Metrics.RocksDBMetrics.RocksDBMetricContext arg1, Org.Apache.Kafka.Common.Metrics.Gauge<Java.Math.BigInteger> arg2)
        {
            SExecute(LocalBridgeClazz, "addCurSizeActiveMemTable", arg0, arg1, arg2);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/state/internals/metrics/RocksDBMetrics.html#addCurSizeAllMemTables(org.apache.kafka.streams.processor.internals.metrics.StreamsMetricsImpl,org.apache.kafka.streams.state.internals.metrics.RocksDBMetrics.RocksDBMetricContext,org.apache.kafka.common.metrics.Gauge)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Streams.Processor.Internals.Metrics.StreamsMetricsImpl"/></param>
        /// <param name="arg1"><see cref="Org.Apache.Kafka.Streams.State.Internals.Metrics.RocksDBMetrics.RocksDBMetricContext"/></param>
        /// <param name="arg2"><see cref="Org.Apache.Kafka.Common.Metrics.Gauge"/></param>
        public static void AddCurSizeAllMemTables(Org.Apache.Kafka.Streams.Processor.Internals.Metrics.StreamsMetricsImpl arg0, Org.Apache.Kafka.Streams.State.Internals.Metrics.RocksDBMetrics.RocksDBMetricContext arg1, Org.Apache.Kafka.Common.Metrics.Gauge<Java.Math.BigInteger> arg2)
        {
            SExecute(LocalBridgeClazz, "addCurSizeAllMemTables", arg0, arg1, arg2);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/state/internals/metrics/RocksDBMetrics.html#addEstimateNumKeysMetric(org.apache.kafka.streams.processor.internals.metrics.StreamsMetricsImpl,org.apache.kafka.streams.state.internals.metrics.RocksDBMetrics.RocksDBMetricContext,org.apache.kafka.common.metrics.Gauge)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Streams.Processor.Internals.Metrics.StreamsMetricsImpl"/></param>
        /// <param name="arg1"><see cref="Org.Apache.Kafka.Streams.State.Internals.Metrics.RocksDBMetrics.RocksDBMetricContext"/></param>
        /// <param name="arg2"><see cref="Org.Apache.Kafka.Common.Metrics.Gauge"/></param>
        public static void AddEstimateNumKeysMetric(Org.Apache.Kafka.Streams.Processor.Internals.Metrics.StreamsMetricsImpl arg0, Org.Apache.Kafka.Streams.State.Internals.Metrics.RocksDBMetrics.RocksDBMetricContext arg1, Org.Apache.Kafka.Common.Metrics.Gauge<Java.Math.BigInteger> arg2)
        {
            SExecute(LocalBridgeClazz, "addEstimateNumKeysMetric", arg0, arg1, arg2);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/state/internals/metrics/RocksDBMetrics.html#addEstimatePendingCompactionBytesMetric(org.apache.kafka.streams.processor.internals.metrics.StreamsMetricsImpl,org.apache.kafka.streams.state.internals.metrics.RocksDBMetrics.RocksDBMetricContext,org.apache.kafka.common.metrics.Gauge)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Streams.Processor.Internals.Metrics.StreamsMetricsImpl"/></param>
        /// <param name="arg1"><see cref="Org.Apache.Kafka.Streams.State.Internals.Metrics.RocksDBMetrics.RocksDBMetricContext"/></param>
        /// <param name="arg2"><see cref="Org.Apache.Kafka.Common.Metrics.Gauge"/></param>
        public static void AddEstimatePendingCompactionBytesMetric(Org.Apache.Kafka.Streams.Processor.Internals.Metrics.StreamsMetricsImpl arg0, Org.Apache.Kafka.Streams.State.Internals.Metrics.RocksDBMetrics.RocksDBMetricContext arg1, Org.Apache.Kafka.Common.Metrics.Gauge<Java.Math.BigInteger> arg2)
        {
            SExecute(LocalBridgeClazz, "addEstimatePendingCompactionBytesMetric", arg0, arg1, arg2);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/state/internals/metrics/RocksDBMetrics.html#addEstimateTableReadersMemMetric(org.apache.kafka.streams.processor.internals.metrics.StreamsMetricsImpl,org.apache.kafka.streams.state.internals.metrics.RocksDBMetrics.RocksDBMetricContext,org.apache.kafka.common.metrics.Gauge)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Streams.Processor.Internals.Metrics.StreamsMetricsImpl"/></param>
        /// <param name="arg1"><see cref="Org.Apache.Kafka.Streams.State.Internals.Metrics.RocksDBMetrics.RocksDBMetricContext"/></param>
        /// <param name="arg2"><see cref="Org.Apache.Kafka.Common.Metrics.Gauge"/></param>
        public static void AddEstimateTableReadersMemMetric(Org.Apache.Kafka.Streams.Processor.Internals.Metrics.StreamsMetricsImpl arg0, Org.Apache.Kafka.Streams.State.Internals.Metrics.RocksDBMetrics.RocksDBMetricContext arg1, Org.Apache.Kafka.Common.Metrics.Gauge<Java.Math.BigInteger> arg2)
        {
            SExecute(LocalBridgeClazz, "addEstimateTableReadersMemMetric", arg0, arg1, arg2);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/state/internals/metrics/RocksDBMetrics.html#addLiveSstFilesSizeMetric(org.apache.kafka.streams.processor.internals.metrics.StreamsMetricsImpl,org.apache.kafka.streams.state.internals.metrics.RocksDBMetrics.RocksDBMetricContext,org.apache.kafka.common.metrics.Gauge)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Streams.Processor.Internals.Metrics.StreamsMetricsImpl"/></param>
        /// <param name="arg1"><see cref="Org.Apache.Kafka.Streams.State.Internals.Metrics.RocksDBMetrics.RocksDBMetricContext"/></param>
        /// <param name="arg2"><see cref="Org.Apache.Kafka.Common.Metrics.Gauge"/></param>
        public static void AddLiveSstFilesSizeMetric(Org.Apache.Kafka.Streams.Processor.Internals.Metrics.StreamsMetricsImpl arg0, Org.Apache.Kafka.Streams.State.Internals.Metrics.RocksDBMetrics.RocksDBMetricContext arg1, Org.Apache.Kafka.Common.Metrics.Gauge<Java.Math.BigInteger> arg2)
        {
            SExecute(LocalBridgeClazz, "addLiveSstFilesSizeMetric", arg0, arg1, arg2);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/state/internals/metrics/RocksDBMetrics.html#addMemTableFlushPending(org.apache.kafka.streams.processor.internals.metrics.StreamsMetricsImpl,org.apache.kafka.streams.state.internals.metrics.RocksDBMetrics.RocksDBMetricContext,org.apache.kafka.common.metrics.Gauge)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Streams.Processor.Internals.Metrics.StreamsMetricsImpl"/></param>
        /// <param name="arg1"><see cref="Org.Apache.Kafka.Streams.State.Internals.Metrics.RocksDBMetrics.RocksDBMetricContext"/></param>
        /// <param name="arg2"><see cref="Org.Apache.Kafka.Common.Metrics.Gauge"/></param>
        public static void AddMemTableFlushPending(Org.Apache.Kafka.Streams.Processor.Internals.Metrics.StreamsMetricsImpl arg0, Org.Apache.Kafka.Streams.State.Internals.Metrics.RocksDBMetrics.RocksDBMetricContext arg1, Org.Apache.Kafka.Common.Metrics.Gauge<Java.Math.BigInteger> arg2)
        {
            SExecute(LocalBridgeClazz, "addMemTableFlushPending", arg0, arg1, arg2);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/state/internals/metrics/RocksDBMetrics.html#addNumDeletesActiveMemTableMetric(org.apache.kafka.streams.processor.internals.metrics.StreamsMetricsImpl,org.apache.kafka.streams.state.internals.metrics.RocksDBMetrics.RocksDBMetricContext,org.apache.kafka.common.metrics.Gauge)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Streams.Processor.Internals.Metrics.StreamsMetricsImpl"/></param>
        /// <param name="arg1"><see cref="Org.Apache.Kafka.Streams.State.Internals.Metrics.RocksDBMetrics.RocksDBMetricContext"/></param>
        /// <param name="arg2"><see cref="Org.Apache.Kafka.Common.Metrics.Gauge"/></param>
        public static void AddNumDeletesActiveMemTableMetric(Org.Apache.Kafka.Streams.Processor.Internals.Metrics.StreamsMetricsImpl arg0, Org.Apache.Kafka.Streams.State.Internals.Metrics.RocksDBMetrics.RocksDBMetricContext arg1, Org.Apache.Kafka.Common.Metrics.Gauge<Java.Math.BigInteger> arg2)
        {
            SExecute(LocalBridgeClazz, "addNumDeletesActiveMemTableMetric", arg0, arg1, arg2);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/state/internals/metrics/RocksDBMetrics.html#addNumDeletesImmMemTablesMetric(org.apache.kafka.streams.processor.internals.metrics.StreamsMetricsImpl,org.apache.kafka.streams.state.internals.metrics.RocksDBMetrics.RocksDBMetricContext,org.apache.kafka.common.metrics.Gauge)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Streams.Processor.Internals.Metrics.StreamsMetricsImpl"/></param>
        /// <param name="arg1"><see cref="Org.Apache.Kafka.Streams.State.Internals.Metrics.RocksDBMetrics.RocksDBMetricContext"/></param>
        /// <param name="arg2"><see cref="Org.Apache.Kafka.Common.Metrics.Gauge"/></param>
        public static void AddNumDeletesImmMemTablesMetric(Org.Apache.Kafka.Streams.Processor.Internals.Metrics.StreamsMetricsImpl arg0, Org.Apache.Kafka.Streams.State.Internals.Metrics.RocksDBMetrics.RocksDBMetricContext arg1, Org.Apache.Kafka.Common.Metrics.Gauge<Java.Math.BigInteger> arg2)
        {
            SExecute(LocalBridgeClazz, "addNumDeletesImmMemTablesMetric", arg0, arg1, arg2);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/state/internals/metrics/RocksDBMetrics.html#addNumEntriesActiveMemTableMetric(org.apache.kafka.streams.processor.internals.metrics.StreamsMetricsImpl,org.apache.kafka.streams.state.internals.metrics.RocksDBMetrics.RocksDBMetricContext,org.apache.kafka.common.metrics.Gauge)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Streams.Processor.Internals.Metrics.StreamsMetricsImpl"/></param>
        /// <param name="arg1"><see cref="Org.Apache.Kafka.Streams.State.Internals.Metrics.RocksDBMetrics.RocksDBMetricContext"/></param>
        /// <param name="arg2"><see cref="Org.Apache.Kafka.Common.Metrics.Gauge"/></param>
        public static void AddNumEntriesActiveMemTableMetric(Org.Apache.Kafka.Streams.Processor.Internals.Metrics.StreamsMetricsImpl arg0, Org.Apache.Kafka.Streams.State.Internals.Metrics.RocksDBMetrics.RocksDBMetricContext arg1, Org.Apache.Kafka.Common.Metrics.Gauge<Java.Math.BigInteger> arg2)
        {
            SExecute(LocalBridgeClazz, "addNumEntriesActiveMemTableMetric", arg0, arg1, arg2);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/state/internals/metrics/RocksDBMetrics.html#addNumEntriesImmMemTablesMetric(org.apache.kafka.streams.processor.internals.metrics.StreamsMetricsImpl,org.apache.kafka.streams.state.internals.metrics.RocksDBMetrics.RocksDBMetricContext,org.apache.kafka.common.metrics.Gauge)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Streams.Processor.Internals.Metrics.StreamsMetricsImpl"/></param>
        /// <param name="arg1"><see cref="Org.Apache.Kafka.Streams.State.Internals.Metrics.RocksDBMetrics.RocksDBMetricContext"/></param>
        /// <param name="arg2"><see cref="Org.Apache.Kafka.Common.Metrics.Gauge"/></param>
        public static void AddNumEntriesImmMemTablesMetric(Org.Apache.Kafka.Streams.Processor.Internals.Metrics.StreamsMetricsImpl arg0, Org.Apache.Kafka.Streams.State.Internals.Metrics.RocksDBMetrics.RocksDBMetricContext arg1, Org.Apache.Kafka.Common.Metrics.Gauge<Java.Math.BigInteger> arg2)
        {
            SExecute(LocalBridgeClazz, "addNumEntriesImmMemTablesMetric", arg0, arg1, arg2);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/state/internals/metrics/RocksDBMetrics.html#addNumImmutableMemTableMetric(org.apache.kafka.streams.processor.internals.metrics.StreamsMetricsImpl,org.apache.kafka.streams.state.internals.metrics.RocksDBMetrics.RocksDBMetricContext,org.apache.kafka.common.metrics.Gauge)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Streams.Processor.Internals.Metrics.StreamsMetricsImpl"/></param>
        /// <param name="arg1"><see cref="Org.Apache.Kafka.Streams.State.Internals.Metrics.RocksDBMetrics.RocksDBMetricContext"/></param>
        /// <param name="arg2"><see cref="Org.Apache.Kafka.Common.Metrics.Gauge"/></param>
        public static void AddNumImmutableMemTableMetric(Org.Apache.Kafka.Streams.Processor.Internals.Metrics.StreamsMetricsImpl arg0, Org.Apache.Kafka.Streams.State.Internals.Metrics.RocksDBMetrics.RocksDBMetricContext arg1, Org.Apache.Kafka.Common.Metrics.Gauge<Java.Math.BigInteger> arg2)
        {
            SExecute(LocalBridgeClazz, "addNumImmutableMemTableMetric", arg0, arg1, arg2);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/state/internals/metrics/RocksDBMetrics.html#addNumLiveVersionMetric(org.apache.kafka.streams.processor.internals.metrics.StreamsMetricsImpl,org.apache.kafka.streams.state.internals.metrics.RocksDBMetrics.RocksDBMetricContext,org.apache.kafka.common.metrics.Gauge)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Streams.Processor.Internals.Metrics.StreamsMetricsImpl"/></param>
        /// <param name="arg1"><see cref="Org.Apache.Kafka.Streams.State.Internals.Metrics.RocksDBMetrics.RocksDBMetricContext"/></param>
        /// <param name="arg2"><see cref="Org.Apache.Kafka.Common.Metrics.Gauge"/></param>
        public static void AddNumLiveVersionMetric(Org.Apache.Kafka.Streams.Processor.Internals.Metrics.StreamsMetricsImpl arg0, Org.Apache.Kafka.Streams.State.Internals.Metrics.RocksDBMetrics.RocksDBMetricContext arg1, Org.Apache.Kafka.Common.Metrics.Gauge<Java.Math.BigInteger> arg2)
        {
            SExecute(LocalBridgeClazz, "addNumLiveVersionMetric", arg0, arg1, arg2);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/state/internals/metrics/RocksDBMetrics.html#addNumRunningCompactionsMetric(org.apache.kafka.streams.processor.internals.metrics.StreamsMetricsImpl,org.apache.kafka.streams.state.internals.metrics.RocksDBMetrics.RocksDBMetricContext,org.apache.kafka.common.metrics.Gauge)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Streams.Processor.Internals.Metrics.StreamsMetricsImpl"/></param>
        /// <param name="arg1"><see cref="Org.Apache.Kafka.Streams.State.Internals.Metrics.RocksDBMetrics.RocksDBMetricContext"/></param>
        /// <param name="arg2"><see cref="Org.Apache.Kafka.Common.Metrics.Gauge"/></param>
        public static void AddNumRunningCompactionsMetric(Org.Apache.Kafka.Streams.Processor.Internals.Metrics.StreamsMetricsImpl arg0, Org.Apache.Kafka.Streams.State.Internals.Metrics.RocksDBMetrics.RocksDBMetricContext arg1, Org.Apache.Kafka.Common.Metrics.Gauge<Java.Math.BigInteger> arg2)
        {
            SExecute(LocalBridgeClazz, "addNumRunningCompactionsMetric", arg0, arg1, arg2);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/state/internals/metrics/RocksDBMetrics.html#addNumRunningFlushesMetric(org.apache.kafka.streams.processor.internals.metrics.StreamsMetricsImpl,org.apache.kafka.streams.state.internals.metrics.RocksDBMetrics.RocksDBMetricContext,org.apache.kafka.common.metrics.Gauge)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Streams.Processor.Internals.Metrics.StreamsMetricsImpl"/></param>
        /// <param name="arg1"><see cref="Org.Apache.Kafka.Streams.State.Internals.Metrics.RocksDBMetrics.RocksDBMetricContext"/></param>
        /// <param name="arg2"><see cref="Org.Apache.Kafka.Common.Metrics.Gauge"/></param>
        public static void AddNumRunningFlushesMetric(Org.Apache.Kafka.Streams.Processor.Internals.Metrics.StreamsMetricsImpl arg0, Org.Apache.Kafka.Streams.State.Internals.Metrics.RocksDBMetrics.RocksDBMetricContext arg1, Org.Apache.Kafka.Common.Metrics.Gauge<Java.Math.BigInteger> arg2)
        {
            SExecute(LocalBridgeClazz, "addNumRunningFlushesMetric", arg0, arg1, arg2);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/state/internals/metrics/RocksDBMetrics.html#addSizeAllMemTables(org.apache.kafka.streams.processor.internals.metrics.StreamsMetricsImpl,org.apache.kafka.streams.state.internals.metrics.RocksDBMetrics.RocksDBMetricContext,org.apache.kafka.common.metrics.Gauge)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Streams.Processor.Internals.Metrics.StreamsMetricsImpl"/></param>
        /// <param name="arg1"><see cref="Org.Apache.Kafka.Streams.State.Internals.Metrics.RocksDBMetrics.RocksDBMetricContext"/></param>
        /// <param name="arg2"><see cref="Org.Apache.Kafka.Common.Metrics.Gauge"/></param>
        public static void AddSizeAllMemTables(Org.Apache.Kafka.Streams.Processor.Internals.Metrics.StreamsMetricsImpl arg0, Org.Apache.Kafka.Streams.State.Internals.Metrics.RocksDBMetrics.RocksDBMetricContext arg1, Org.Apache.Kafka.Common.Metrics.Gauge<Java.Math.BigInteger> arg2)
        {
            SExecute(LocalBridgeClazz, "addSizeAllMemTables", arg0, arg1, arg2);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/state/internals/metrics/RocksDBMetrics.html#addTotalSstFilesSizeMetric(org.apache.kafka.streams.processor.internals.metrics.StreamsMetricsImpl,org.apache.kafka.streams.state.internals.metrics.RocksDBMetrics.RocksDBMetricContext,org.apache.kafka.common.metrics.Gauge)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Streams.Processor.Internals.Metrics.StreamsMetricsImpl"/></param>
        /// <param name="arg1"><see cref="Org.Apache.Kafka.Streams.State.Internals.Metrics.RocksDBMetrics.RocksDBMetricContext"/></param>
        /// <param name="arg2"><see cref="Org.Apache.Kafka.Common.Metrics.Gauge"/></param>
        public static void AddTotalSstFilesSizeMetric(Org.Apache.Kafka.Streams.Processor.Internals.Metrics.StreamsMetricsImpl arg0, Org.Apache.Kafka.Streams.State.Internals.Metrics.RocksDBMetrics.RocksDBMetricContext arg1, Org.Apache.Kafka.Common.Metrics.Gauge<Java.Math.BigInteger> arg2)
        {
            SExecute(LocalBridgeClazz, "addTotalSstFilesSizeMetric", arg0, arg1, arg2);
        }

        #endregion

        #region Instance methods

        #endregion

        #region Nested classes
        #region RocksDBMetricContext
        public partial class RocksDBMetricContext
        {
            #region Constructors
            /// <summary>
            /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/state/internals/metrics/RocksDBMetrics.RocksDBMetricContext.html#%3Cinit%3E(java.lang.String,java.lang.String,java.lang.String)"/>
            /// </summary>
            /// <param name="arg0"><see cref="string"/></param>
            /// <param name="arg1"><see cref="string"/></param>
            /// <param name="arg2"><see cref="string"/></param>
            public RocksDBMetricContext(string arg0, string arg1, string arg2)
                : base(arg0, arg1, arg2)
            {
            }

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields

            #endregion

            #region Static methods

            #endregion

            #region Instance methods
            /// <summary>
            /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/state/internals/metrics/RocksDBMetrics.RocksDBMetricContext.html#metricsScope()"/> 
            /// </summary>
            public string MetricsScope
            {
                get { return IExecute<string>("metricsScope"); }
            }
            /// <summary>
            /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/state/internals/metrics/RocksDBMetrics.RocksDBMetricContext.html#storeName()"/> 
            /// </summary>
            public string StoreName
            {
                get { return IExecute<string>("storeName"); }
            }
            /// <summary>
            /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/state/internals/metrics/RocksDBMetrics.RocksDBMetricContext.html#taskName()"/> 
            /// </summary>
            public string TaskName
            {
                get { return IExecute<string>("taskName"); }
            }

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

    
        #endregion

        // TODO: complete the class
    }
    #endregion
}