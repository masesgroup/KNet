/*
*  Copyright 2024 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 2.5.6.0)
*  using kafka-streams-3.7.1.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Org.Apache.Kafka.Streams.Query
{
    #region TimestampedRangeQuery
    public partial class TimestampedRangeQuery
    {
        #region Constructors

        #endregion

        #region Class/Interface conversion operators

        #endregion

        #region Fields

        #endregion

        #region Static methods
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-streams/3.7.1/org/apache/kafka/streams/query/TimestampedRangeQuery.html#withLowerBound-java.lang.Object-"/>
        /// </summary>
        /// <param name="arg0"><see cref="object"/></param>
        /// <returns><see cref="Org.Apache.Kafka.Streams.Query.TimestampedRangeQuery"/></returns>
        public static Org.Apache.Kafka.Streams.Query.TimestampedRangeQuery WithLowerBound(object arg0)
        {
            return SExecute<Org.Apache.Kafka.Streams.Query.TimestampedRangeQuery>(LocalBridgeClazz, "withLowerBound", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-streams/3.7.1/org/apache/kafka/streams/query/TimestampedRangeQuery.html#withNoBounds--"/>
        /// </summary>
        /// <returns><see cref="Org.Apache.Kafka.Streams.Query.TimestampedRangeQuery"/></returns>
        public static Org.Apache.Kafka.Streams.Query.TimestampedRangeQuery WithNoBounds()
        {
            return SExecute<Org.Apache.Kafka.Streams.Query.TimestampedRangeQuery>(LocalBridgeClazz, "withNoBounds");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-streams/3.7.1/org/apache/kafka/streams/query/TimestampedRangeQuery.html#withRange-java.lang.Object-java.lang.Object-"/>
        /// </summary>
        /// <param name="arg0"><see cref="object"/></param>
        /// <param name="arg1"><see cref="object"/></param>
        /// <returns><see cref="Org.Apache.Kafka.Streams.Query.TimestampedRangeQuery"/></returns>
        public static Org.Apache.Kafka.Streams.Query.TimestampedRangeQuery WithRange(object arg0, object arg1)
        {
            return SExecute<Org.Apache.Kafka.Streams.Query.TimestampedRangeQuery>(LocalBridgeClazz, "withRange", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-streams/3.7.1/org/apache/kafka/streams/query/TimestampedRangeQuery.html#withUpperBound-java.lang.Object-"/>
        /// </summary>
        /// <param name="arg0"><see cref="object"/></param>
        /// <returns><see cref="Org.Apache.Kafka.Streams.Query.TimestampedRangeQuery"/></returns>
        public static Org.Apache.Kafka.Streams.Query.TimestampedRangeQuery WithUpperBound(object arg0)
        {
            return SExecute<Org.Apache.Kafka.Streams.Query.TimestampedRangeQuery>(LocalBridgeClazz, "withUpperBound", arg0);
        }

        #endregion

        #region Instance methods
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-streams/3.7.1/org/apache/kafka/streams/query/TimestampedRangeQuery.html#lowerBound--"/>
        /// </summary>
        /// <returns><see cref="Java.Util.Optional"/></returns>
        public Java.Util.Optional LowerBound()
        {
            return IExecuteWithSignature<Java.Util.Optional>("lowerBound", "()Ljava/util/Optional;");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-streams/3.7.1/org/apache/kafka/streams/query/TimestampedRangeQuery.html#upperBound--"/>
        /// </summary>
        /// <returns><see cref="Java.Util.Optional"/></returns>
        public Java.Util.Optional UpperBound()
        {
            return IExecuteWithSignature<Java.Util.Optional>("upperBound", "()Ljava/util/Optional;");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-streams/3.7.1/org/apache/kafka/streams/query/TimestampedRangeQuery.html#resultOrder--"/>
        /// </summary>
        /// <returns><see cref="Org.Apache.Kafka.Streams.Query.ResultOrder"/></returns>
        public Org.Apache.Kafka.Streams.Query.ResultOrder ResultOrder()
        {
            return IExecuteWithSignature<Org.Apache.Kafka.Streams.Query.ResultOrder>("resultOrder", "()Lorg/apache/kafka/streams/query/ResultOrder;");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-streams/3.7.1/org/apache/kafka/streams/query/TimestampedRangeQuery.html#withAscendingKeys--"/>
        /// </summary>
        /// <returns><see cref="Org.Apache.Kafka.Streams.Query.TimestampedRangeQuery"/></returns>
        public Org.Apache.Kafka.Streams.Query.TimestampedRangeQuery WithAscendingKeys()
        {
            return IExecuteWithSignature<Org.Apache.Kafka.Streams.Query.TimestampedRangeQuery>("withAscendingKeys", "()Lorg/apache/kafka/streams/query/TimestampedRangeQuery;");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-streams/3.7.1/org/apache/kafka/streams/query/TimestampedRangeQuery.html#withDescendingKeys--"/>
        /// </summary>
        /// <returns><see cref="Org.Apache.Kafka.Streams.Query.TimestampedRangeQuery"/></returns>
        public Org.Apache.Kafka.Streams.Query.TimestampedRangeQuery WithDescendingKeys()
        {
            return IExecuteWithSignature<Org.Apache.Kafka.Streams.Query.TimestampedRangeQuery>("withDescendingKeys", "()Lorg/apache/kafka/streams/query/TimestampedRangeQuery;");
        }

        #endregion

        #region Nested classes

        #endregion

        // TODO: complete the class
    }
    #endregion

    #region TimestampedRangeQuery<K, V>
    public partial class TimestampedRangeQuery<K, V>
    {
        #region Constructors

        #endregion

        #region Class/Interface conversion operators
        /// <summary>
        /// Converter from <see cref="Org.Apache.Kafka.Streams.Query.TimestampedRangeQuery{K, V}"/> to <see cref="Org.Apache.Kafka.Streams.Query.TimestampedRangeQuery"/>
        /// </summary>
        public static implicit operator Org.Apache.Kafka.Streams.Query.TimestampedRangeQuery(Org.Apache.Kafka.Streams.Query.TimestampedRangeQuery<K, V> t) => t.Cast<Org.Apache.Kafka.Streams.Query.TimestampedRangeQuery>();

        #endregion

        #region Fields

        #endregion

        #region Static methods
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-streams/3.7.1/org/apache/kafka/streams/query/TimestampedRangeQuery.html#withLowerBound-java.lang.Object-"/>
        /// </summary>
        /// <param name="arg0"><typeparamref name="K"/></param>
        /// <returns><see cref="Org.Apache.Kafka.Streams.Query.TimestampedRangeQuery"/></returns>
        public static Org.Apache.Kafka.Streams.Query.TimestampedRangeQuery<K, V> WithLowerBound(K arg0)
        {
            return SExecute<Org.Apache.Kafka.Streams.Query.TimestampedRangeQuery<K, V>>(LocalBridgeClazz, "withLowerBound", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-streams/3.7.1/org/apache/kafka/streams/query/TimestampedRangeQuery.html#withNoBounds--"/>
        /// </summary>
        /// <returns><see cref="Org.Apache.Kafka.Streams.Query.TimestampedRangeQuery"/></returns>
        public static Org.Apache.Kafka.Streams.Query.TimestampedRangeQuery<K, V> WithNoBounds()
        {
            return SExecute<Org.Apache.Kafka.Streams.Query.TimestampedRangeQuery<K, V>>(LocalBridgeClazz, "withNoBounds");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-streams/3.7.1/org/apache/kafka/streams/query/TimestampedRangeQuery.html#withRange-java.lang.Object-java.lang.Object-"/>
        /// </summary>
        /// <param name="arg0"><typeparamref name="K"/></param>
        /// <param name="arg1"><typeparamref name="K"/></param>
        /// <returns><see cref="Org.Apache.Kafka.Streams.Query.TimestampedRangeQuery"/></returns>
        public static Org.Apache.Kafka.Streams.Query.TimestampedRangeQuery<K, V> WithRange(K arg0, K arg1)
        {
            return SExecute<Org.Apache.Kafka.Streams.Query.TimestampedRangeQuery<K, V>>(LocalBridgeClazz, "withRange", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-streams/3.7.1/org/apache/kafka/streams/query/TimestampedRangeQuery.html#withUpperBound-java.lang.Object-"/>
        /// </summary>
        /// <param name="arg0"><typeparamref name="K"/></param>
        /// <returns><see cref="Org.Apache.Kafka.Streams.Query.TimestampedRangeQuery"/></returns>
        public static Org.Apache.Kafka.Streams.Query.TimestampedRangeQuery<K, V> WithUpperBound(K arg0)
        {
            return SExecute<Org.Apache.Kafka.Streams.Query.TimestampedRangeQuery<K, V>>(LocalBridgeClazz, "withUpperBound", arg0);
        }

        #endregion

        #region Instance methods
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-streams/3.7.1/org/apache/kafka/streams/query/TimestampedRangeQuery.html#lowerBound--"/>
        /// </summary>
        /// <returns><see cref="Java.Util.Optional"/></returns>
        public Java.Util.Optional<K> LowerBound()
        {
            return IExecuteWithSignature<Java.Util.Optional<K>>("lowerBound", "()Ljava/util/Optional;");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-streams/3.7.1/org/apache/kafka/streams/query/TimestampedRangeQuery.html#upperBound--"/>
        /// </summary>
        /// <returns><see cref="Java.Util.Optional"/></returns>
        public Java.Util.Optional<K> UpperBound()
        {
            return IExecuteWithSignature<Java.Util.Optional<K>>("upperBound", "()Ljava/util/Optional;");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-streams/3.7.1/org/apache/kafka/streams/query/TimestampedRangeQuery.html#resultOrder--"/>
        /// </summary>
        /// <returns><see cref="Org.Apache.Kafka.Streams.Query.ResultOrder"/></returns>
        public Org.Apache.Kafka.Streams.Query.ResultOrder ResultOrder()
        {
            return IExecuteWithSignature<Org.Apache.Kafka.Streams.Query.ResultOrder>("resultOrder", "()Lorg/apache/kafka/streams/query/ResultOrder;");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-streams/3.7.1/org/apache/kafka/streams/query/TimestampedRangeQuery.html#withAscendingKeys--"/>
        /// </summary>
        /// <returns><see cref="Org.Apache.Kafka.Streams.Query.TimestampedRangeQuery"/></returns>
        public Org.Apache.Kafka.Streams.Query.TimestampedRangeQuery<K, V> WithAscendingKeys()
        {
            return IExecuteWithSignature<Org.Apache.Kafka.Streams.Query.TimestampedRangeQuery<K, V>>("withAscendingKeys", "()Lorg/apache/kafka/streams/query/TimestampedRangeQuery;");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-streams/3.7.1/org/apache/kafka/streams/query/TimestampedRangeQuery.html#withDescendingKeys--"/>
        /// </summary>
        /// <returns><see cref="Org.Apache.Kafka.Streams.Query.TimestampedRangeQuery"/></returns>
        public Org.Apache.Kafka.Streams.Query.TimestampedRangeQuery<K, V> WithDescendingKeys()
        {
            return IExecuteWithSignature<Org.Apache.Kafka.Streams.Query.TimestampedRangeQuery<K, V>>("withDescendingKeys", "()Lorg/apache/kafka/streams/query/TimestampedRangeQuery;");
        }

        #endregion

        #region Nested classes

        #endregion

        // TODO: complete the class
    }
    #endregion
}