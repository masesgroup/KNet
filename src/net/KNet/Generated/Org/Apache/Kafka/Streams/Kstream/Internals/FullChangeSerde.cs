/*
*  Copyright 2023 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 1.5.5.0)
*  using kafka-streams-3.4.0.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Org.Apache.Kafka.Streams.Kstream.Internals
{
    #region FullChangeSerde
    public partial class FullChangeSerde
    {
        #region Constructors

        #endregion

        #region Class/Interface conversion operators

        #endregion

        #region Fields

        #endregion

        #region Static methods
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/kstream/internals/FullChangeSerde.html#wrap(org.apache.kafka.common.serialization.Serde)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Common.Serialization.Serde"/></param>
        /// <returns><see cref="Org.Apache.Kafka.Streams.Kstream.Internals.FullChangeSerde"/></returns>
        public static Org.Apache.Kafka.Streams.Kstream.Internals.FullChangeSerde Wrap(Org.Apache.Kafka.Common.Serialization.Serde arg0)
        {
            return SExecute<Org.Apache.Kafka.Streams.Kstream.Internals.FullChangeSerde>(LocalBridgeClazz, "wrap", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/kstream/internals/FullChangeSerde.html#decomposeLegacyFormattedArrayIntoChangeArrays(byte[])"/>
        /// </summary>
        /// <param name="arg0"><see cref="byte"/></param>
        /// <returns><see cref="Org.Apache.Kafka.Streams.Kstream.Internals.Change"/></returns>
        public static Org.Apache.Kafka.Streams.Kstream.Internals.Change DecomposeLegacyFormattedArrayIntoChangeArrays(byte[] arg0)
        {
            return SExecute<Org.Apache.Kafka.Streams.Kstream.Internals.Change>(LocalBridgeClazz, "decomposeLegacyFormattedArrayIntoChangeArrays", new object[] { arg0 });
        }

        #endregion

        #region Instance methods
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/kstream/internals/FullChangeSerde.html#innerSerde()"/> 
        /// </summary>
        public Org.Apache.Kafka.Common.Serialization.Serde InnerSerde
        {
            get { return IExecute<Org.Apache.Kafka.Common.Serialization.Serde>("innerSerde"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/kstream/internals/FullChangeSerde.html#serializeParts(java.lang.String,org.apache.kafka.streams.kstream.internals.Change)"/>
        /// </summary>
        /// <param name="arg0"><see cref="string"/></param>
        /// <param name="arg1"><see cref="Org.Apache.Kafka.Streams.Kstream.Internals.Change"/></param>
        /// <returns><see cref="Org.Apache.Kafka.Streams.Kstream.Internals.Change"/></returns>
        public Org.Apache.Kafka.Streams.Kstream.Internals.Change SerializeParts(string arg0, Org.Apache.Kafka.Streams.Kstream.Internals.Change arg1)
        {
            return IExecute<Org.Apache.Kafka.Streams.Kstream.Internals.Change>("serializeParts", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/kstream/internals/FullChangeSerde.html#deserializeParts(java.lang.String,org.apache.kafka.streams.kstream.internals.Change)"/>
        /// </summary>
        /// <param name="arg0"><see cref="string"/></param>
        /// <param name="arg1"><see cref="Org.Apache.Kafka.Streams.Kstream.Internals.Change"/></param>
        /// <returns><see cref="Org.Apache.Kafka.Streams.Kstream.Internals.Change"/></returns>
        public Org.Apache.Kafka.Streams.Kstream.Internals.Change DeserializeParts(string arg0, Org.Apache.Kafka.Streams.Kstream.Internals.Change arg1)
        {
            return IExecute<Org.Apache.Kafka.Streams.Kstream.Internals.Change>("deserializeParts", arg0, arg1);
        }

        #endregion

        #region Nested classes

        #endregion

        // TODO: complete the class
    }
    #endregion

    #region FullChangeSerde<T>
    public partial class FullChangeSerde<T>
    {
        #region Constructors

        #endregion

        #region Class/Interface conversion operators
        /// <summary>
        /// Converter from <see cref="Org.Apache.Kafka.Streams.Kstream.Internals.FullChangeSerde{T}"/> to <see cref="Org.Apache.Kafka.Streams.Kstream.Internals.FullChangeSerde"/>
        /// </summary>
        public static implicit operator Org.Apache.Kafka.Streams.Kstream.Internals.FullChangeSerde(Org.Apache.Kafka.Streams.Kstream.Internals.FullChangeSerde<T> t) => t.Cast<Org.Apache.Kafka.Streams.Kstream.Internals.FullChangeSerde>();

        #endregion

        #region Fields

        #endregion

        #region Static methods
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/kstream/internals/FullChangeSerde.html#wrap(org.apache.kafka.common.serialization.Serde)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Common.Serialization.Serde"/></param>
        /// <returns><see cref="Org.Apache.Kafka.Streams.Kstream.Internals.FullChangeSerde"/></returns>
        public static Org.Apache.Kafka.Streams.Kstream.Internals.FullChangeSerde<T> Wrap(Org.Apache.Kafka.Common.Serialization.Serde<T> arg0)
        {
            return SExecute<Org.Apache.Kafka.Streams.Kstream.Internals.FullChangeSerde<T>>(LocalBridgeClazz, "wrap", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/kstream/internals/FullChangeSerde.html#decomposeLegacyFormattedArrayIntoChangeArrays(byte[])"/>
        /// </summary>
        /// <param name="arg0"><see cref="byte"/></param>
        /// <returns><see cref="Org.Apache.Kafka.Streams.Kstream.Internals.Change"/></returns>
        public static Org.Apache.Kafka.Streams.Kstream.Internals.Change<byte[]> DecomposeLegacyFormattedArrayIntoChangeArrays(byte[] arg0)
        {
            return SExecute<Org.Apache.Kafka.Streams.Kstream.Internals.Change<byte[]>>(LocalBridgeClazz, "decomposeLegacyFormattedArrayIntoChangeArrays", new object[] { arg0 });
        }

        #endregion

        #region Instance methods
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/kstream/internals/FullChangeSerde.html#innerSerde()"/> 
        /// </summary>
        public Org.Apache.Kafka.Common.Serialization.Serde<T> InnerSerde
        {
            get { return IExecute<Org.Apache.Kafka.Common.Serialization.Serde<T>>("innerSerde"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/kstream/internals/FullChangeSerde.html#serializeParts(java.lang.String,org.apache.kafka.streams.kstream.internals.Change)"/>
        /// </summary>
        /// <param name="arg0"><see cref="string"/></param>
        /// <param name="arg1"><see cref="Org.Apache.Kafka.Streams.Kstream.Internals.Change"/></param>
        /// <returns><see cref="Org.Apache.Kafka.Streams.Kstream.Internals.Change"/></returns>
        public Org.Apache.Kafka.Streams.Kstream.Internals.Change<byte[]> SerializeParts(string arg0, Org.Apache.Kafka.Streams.Kstream.Internals.Change<T> arg1)
        {
            return IExecute<Org.Apache.Kafka.Streams.Kstream.Internals.Change<byte[]>>("serializeParts", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/kstream/internals/FullChangeSerde.html#deserializeParts(java.lang.String,org.apache.kafka.streams.kstream.internals.Change)"/>
        /// </summary>
        /// <param name="arg0"><see cref="string"/></param>
        /// <param name="arg1"><see cref="Org.Apache.Kafka.Streams.Kstream.Internals.Change"/></param>
        /// <returns><see cref="Org.Apache.Kafka.Streams.Kstream.Internals.Change"/></returns>
        public Org.Apache.Kafka.Streams.Kstream.Internals.Change<T> DeserializeParts(string arg0, Org.Apache.Kafka.Streams.Kstream.Internals.Change<byte[]> arg1)
        {
            return IExecute<Org.Apache.Kafka.Streams.Kstream.Internals.Change<T>>("deserializeParts", arg0, arg1);
        }

        #endregion

        #region Nested classes

        #endregion

        // TODO: complete the class
    }
    #endregion
}