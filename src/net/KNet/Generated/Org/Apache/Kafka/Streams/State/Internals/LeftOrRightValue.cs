/*
*  Copyright 2023 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 1.5.5.0)
*  using kafka-streams-3.4.0.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Org.Apache.Kafka.Streams.State.Internals
{
    #region LeftOrRightValue
    public partial class LeftOrRightValue
    {
        #region Constructors

        #endregion

        #region Class/Interface conversion operators

        #endregion

        #region Fields

        #endregion

        #region Static methods
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/state/internals/LeftOrRightValue.html#make(boolean,java.lang.Object)"/>
        /// </summary>
        /// <param name="arg0"><see cref="bool"/></param>
        /// <param name="arg1"><see cref="object"/></param>
        /// <returns><see cref="Org.Apache.Kafka.Streams.State.Internals.LeftOrRightValue"/></returns>
        public static Org.Apache.Kafka.Streams.State.Internals.LeftOrRightValue Make(bool arg0, object arg1)
        {
            return SExecute<Org.Apache.Kafka.Streams.State.Internals.LeftOrRightValue>(LocalBridgeClazz, "make", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/state/internals/LeftOrRightValue.html#makeLeftValue(java.lang.Object)"/>
        /// </summary>
        /// <param name="arg0"><see cref="object"/></param>
        /// <returns><see cref="Org.Apache.Kafka.Streams.State.Internals.LeftOrRightValue"/></returns>
        public static Org.Apache.Kafka.Streams.State.Internals.LeftOrRightValue MakeLeftValue(object arg0)
        {
            return SExecute<Org.Apache.Kafka.Streams.State.Internals.LeftOrRightValue>(LocalBridgeClazz, "makeLeftValue", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/state/internals/LeftOrRightValue.html#makeRightValue(java.lang.Object)"/>
        /// </summary>
        /// <param name="arg0"><see cref="object"/></param>
        /// <returns><see cref="Org.Apache.Kafka.Streams.State.Internals.LeftOrRightValue"/></returns>
        public static Org.Apache.Kafka.Streams.State.Internals.LeftOrRightValue MakeRightValue(object arg0)
        {
            return SExecute<Org.Apache.Kafka.Streams.State.Internals.LeftOrRightValue>(LocalBridgeClazz, "makeRightValue", arg0);
        }

        #endregion

        #region Instance methods
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/state/internals/LeftOrRightValue.html#getLeftValue()"/> 
        /// </summary>
        public object LeftValue
        {
            get { return IExecute("getLeftValue"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/state/internals/LeftOrRightValue.html#getRightValue()"/> 
        /// </summary>
        public object RightValue
        {
            get { return IExecute("getRightValue"); }
        }

        #endregion

        #region Nested classes

        #endregion

        // TODO: complete the class
    }
    #endregion

    #region LeftOrRightValue<V1, V2>
    public partial class LeftOrRightValue<V1, V2>
    {
        #region Constructors

        #endregion

        #region Class/Interface conversion operators
        /// <summary>
        /// Converter from <see cref="Org.Apache.Kafka.Streams.State.Internals.LeftOrRightValue{V1, V2}"/> to <see cref="Org.Apache.Kafka.Streams.State.Internals.LeftOrRightValue"/>
        /// </summary>
        public static implicit operator Org.Apache.Kafka.Streams.State.Internals.LeftOrRightValue(Org.Apache.Kafka.Streams.State.Internals.LeftOrRightValue<V1, V2> t) => t.Cast<Org.Apache.Kafka.Streams.State.Internals.LeftOrRightValue>();

        #endregion

        #region Fields

        #endregion

        #region Static methods
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/state/internals/LeftOrRightValue.html#make(boolean,java.lang.Object)"/>
        /// </summary>
        /// <param name="arg0"><see cref="bool"/></param>
        /// <param name="arg1"><typeparamref name="V"/></param>
        /// <typeparam name="V"></typeparam>
        /// <returns><see cref="Org.Apache.Kafka.Streams.State.Internals.LeftOrRightValue"/></returns>
        public static Org.Apache.Kafka.Streams.State.Internals.LeftOrRightValue Make<V>(bool arg0, V arg1)
        {
            return SExecute<Org.Apache.Kafka.Streams.State.Internals.LeftOrRightValue>(LocalBridgeClazz, "make", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/state/internals/LeftOrRightValue.html#makeLeftValue(java.lang.Object)"/>
        /// </summary>
        /// <param name="arg0"><typeparamref name="V1"/></param>
        /// <returns><see cref="Org.Apache.Kafka.Streams.State.Internals.LeftOrRightValue"/></returns>
        public static Org.Apache.Kafka.Streams.State.Internals.LeftOrRightValue<V1, V2> MakeLeftValue(V1 arg0)
        {
            return SExecute<Org.Apache.Kafka.Streams.State.Internals.LeftOrRightValue<V1, V2>>(LocalBridgeClazz, "makeLeftValue", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/state/internals/LeftOrRightValue.html#makeRightValue(java.lang.Object)"/>
        /// </summary>
        /// <param name="arg0"><typeparamref name="V2"/></param>
        /// <returns><see cref="Org.Apache.Kafka.Streams.State.Internals.LeftOrRightValue"/></returns>
        public static Org.Apache.Kafka.Streams.State.Internals.LeftOrRightValue<V1, V2> MakeRightValue(V2 arg0)
        {
            return SExecute<Org.Apache.Kafka.Streams.State.Internals.LeftOrRightValue<V1, V2>>(LocalBridgeClazz, "makeRightValue", arg0);
        }

        #endregion

        #region Instance methods
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/state/internals/LeftOrRightValue.html#getLeftValue()"/> 
        /// </summary>
        public V1 LeftValue
        {
            get { return IExecute<V1>("getLeftValue"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/state/internals/LeftOrRightValue.html#getRightValue()"/> 
        /// </summary>
        public V2 RightValue
        {
            get { return IExecute<V2>("getRightValue"); }
        }

        #endregion

        #region Nested classes

        #endregion

        // TODO: complete the class
    }
    #endregion
}