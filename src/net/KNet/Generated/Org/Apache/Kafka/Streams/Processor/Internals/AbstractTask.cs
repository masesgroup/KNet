/*
*  Copyright 2023 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 1.5.5.0)
*  using kafka-streams-3.4.0.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Org.Apache.Kafka.Streams.Processor.Internals
{
    #region AbstractTask
    public partial class AbstractTask
    {
        #region Constructors

        #endregion

        #region Class/Interface conversion operators
        /// <summary>
        /// Converter from <see cref="Org.Apache.Kafka.Streams.Processor.Internals.AbstractTask"/> to <see cref="Org.Apache.Kafka.Streams.Processor.Internals.Task"/>
        /// </summary>
        public static implicit operator Org.Apache.Kafka.Streams.Processor.Internals.Task(Org.Apache.Kafka.Streams.Processor.Internals.AbstractTask t) => t.Cast<Org.Apache.Kafka.Streams.Processor.Internals.Task>();

        #endregion

        #region Fields

        #endregion

        #region Static methods

        #endregion

        #region Instance methods
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/AbstractTask.html#changelogPartitions()"/> 
        /// </summary>
        public Java.Util.Set<Org.Apache.Kafka.Common.TopicPartition> ChangelogPartitions
        {
            get { return IExecute<Java.Util.Set<Org.Apache.Kafka.Common.TopicPartition>>("changelogPartitions"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/AbstractTask.html#id()"/> 
        /// </summary>
        public Org.Apache.Kafka.Streams.Processor.TaskId Id
        {
            get { return IExecute<Org.Apache.Kafka.Streams.Processor.TaskId>("id"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/AbstractTask.html#inputPartitions()"/> 
        /// </summary>
        public Java.Util.Set<Org.Apache.Kafka.Common.TopicPartition> InputPartitions
        {
            get { return IExecute<Java.Util.Set<Org.Apache.Kafka.Common.TopicPartition>>("inputPartitions"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/AbstractTask.html#state()"/> 
        /// </summary>
        public Org.Apache.Kafka.Streams.Processor.Internals.Task.State State
        {
            get { return IExecute<Org.Apache.Kafka.Streams.Processor.Internals.Task.State>("state"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/AbstractTask.html#stateManager()"/> 
        /// </summary>
        public Org.Apache.Kafka.Streams.Processor.Internals.ProcessorStateManager StateManager
        {
            get { return IExecute<Org.Apache.Kafka.Streams.Processor.Internals.ProcessorStateManager>("stateManager"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/AbstractTask.html#getStore(java.lang.String)"/>
        /// </summary>
        /// <param name="arg0"><see cref="string"/></param>
        /// <returns><see cref="Org.Apache.Kafka.Streams.Processor.StateStore"/></returns>
        public Org.Apache.Kafka.Streams.Processor.StateStore GetStore(string arg0)
        {
            return IExecute<Org.Apache.Kafka.Streams.Processor.StateStore>("getStore", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/AbstractTask.html#clearTaskTimeout()"/>
        /// </summary>
        public void ClearTaskTimeout()
        {
            IExecute("clearTaskTimeout");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/AbstractTask.html#markChangelogAsCorrupted(java.util.Collection)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Util.Collection"/></param>
        public void MarkChangelogAsCorrupted(Java.Util.Collection<Org.Apache.Kafka.Common.TopicPartition> arg0)
        {
            IExecute("markChangelogAsCorrupted", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/AbstractTask.html#maybeCheckpoint(boolean)"/>
        /// </summary>
        /// <param name="arg0"><see cref="bool"/></param>
        public void MaybeCheckpoint(bool arg0)
        {
            IExecute("maybeCheckpoint", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/AbstractTask.html#maybeInitTaskTimeoutOrThrow(long,java.lang.Exception)"/>
        /// </summary>
        /// <param name="arg0"><see cref="long"/></param>
        /// <param name="arg1"><see cref="Java.Lang.Exception"/></param>
        public void MaybeInitTaskTimeoutOrThrow(long arg0, Java.Lang.Exception arg1)
        {
            IExecute("maybeInitTaskTimeoutOrThrow", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/AbstractTask.html#revive()"/>
        /// </summary>
        public void Revive()
        {
            IExecute("revive");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/AbstractTask.html#updateInputPartitions(java.util.Set,java.util.Map)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Util.Set"/></param>
        /// <param name="arg1"><see cref="Java.Util.Map"/></param>
        public void UpdateInputPartitions(Java.Util.Set<Org.Apache.Kafka.Common.TopicPartition> arg0, Java.Util.Map<string, Java.Util.List<string>> arg1)
        {
            IExecute("updateInputPartitions", arg0, arg1);
        }

        #endregion

        #region Nested classes

        #endregion

        // TODO: complete the class
    }
    #endregion
}