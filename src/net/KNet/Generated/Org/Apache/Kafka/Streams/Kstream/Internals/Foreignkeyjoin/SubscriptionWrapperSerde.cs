/*
*  Copyright 2023 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 1.5.5.0)
*  using kafka-streams-3.4.0.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Org.Apache.Kafka.Streams.Kstream.Internals.Foreignkeyjoin
{
    #region SubscriptionWrapperSerde
    public partial class SubscriptionWrapperSerde
    {
        #region Constructors
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/kstream/internals/foreignkeyjoin/SubscriptionWrapperSerde.html#%3Cinit%3E(java.util.function.Supplier,org.apache.kafka.common.serialization.Serde)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Util.Function.Supplier"/></param>
        /// <param name="arg1"><see cref="Org.Apache.Kafka.Common.Serialization.Serde"/></param>
        public SubscriptionWrapperSerde(Java.Util.Function.Supplier arg0, Org.Apache.Kafka.Common.Serialization.Serde arg1)
            : base(arg0, arg1)
        {
        }

        #endregion

        #region Class/Interface conversion operators

        #endregion

        #region Fields

        #endregion

        #region Static methods

        #endregion

        #region Instance methods

        #endregion

        #region Nested classes

        #endregion

        // TODO: complete the class
    }
    #endregion

    #region SubscriptionWrapperSerde<K>
    public partial class SubscriptionWrapperSerde<K>
    {
        #region Constructors
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/kstream/internals/foreignkeyjoin/SubscriptionWrapperSerde.html#%3Cinit%3E(java.util.function.Supplier,org.apache.kafka.common.serialization.Serde)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Util.Function.Supplier"/></param>
        /// <param name="arg1"><see cref="Org.Apache.Kafka.Common.Serialization.Serde"/></param>
        public SubscriptionWrapperSerde(Java.Util.Function.Supplier<string> arg0, Org.Apache.Kafka.Common.Serialization.Serde<K> arg1)
            : base(arg0, arg1)
        {
        }

        #endregion

        #region Class/Interface conversion operators
        /// <summary>
        /// Converter from <see cref="Org.Apache.Kafka.Streams.Kstream.Internals.Foreignkeyjoin.SubscriptionWrapperSerde{K}"/> to <see cref="Org.Apache.Kafka.Streams.Kstream.Internals.Foreignkeyjoin.SubscriptionWrapperSerde"/>
        /// </summary>
        public static implicit operator Org.Apache.Kafka.Streams.Kstream.Internals.Foreignkeyjoin.SubscriptionWrapperSerde(Org.Apache.Kafka.Streams.Kstream.Internals.Foreignkeyjoin.SubscriptionWrapperSerde<K> t) => t.Cast<Org.Apache.Kafka.Streams.Kstream.Internals.Foreignkeyjoin.SubscriptionWrapperSerde>();

        #endregion

        #region Fields

        #endregion

        #region Static methods

        #endregion

        #region Instance methods

        #endregion

        #region Nested classes

        #endregion

        // TODO: complete the class
    }
    #endregion
}