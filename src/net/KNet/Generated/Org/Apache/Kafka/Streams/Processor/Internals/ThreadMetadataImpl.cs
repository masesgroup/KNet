/*
*  Copyright 2023 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 1.5.5.0)
*  using kafka-streams-3.4.0.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Org.Apache.Kafka.Streams.Processor.Internals
{
    #region ThreadMetadataImpl
    public partial class ThreadMetadataImpl
    {
        #region Constructors
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/ThreadMetadataImpl.html#%3Cinit%3E(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.Set,java.lang.String,java.util.Set,java.util.Set)"/>
        /// </summary>
        /// <param name="arg0"><see cref="string"/></param>
        /// <param name="arg1"><see cref="string"/></param>
        /// <param name="arg2"><see cref="string"/></param>
        /// <param name="arg3"><see cref="string"/></param>
        /// <param name="arg4"><see cref="Java.Util.Set"/></param>
        /// <param name="arg5"><see cref="string"/></param>
        /// <param name="arg6"><see cref="Java.Util.Set"/></param>
        /// <param name="arg7"><see cref="Java.Util.Set"/></param>
        public ThreadMetadataImpl(string arg0, string arg1, string arg2, string arg3, Java.Util.Set arg4, string arg5, Java.Util.Set arg6, Java.Util.Set arg7)
            : base(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7)
        {
        }

        #endregion

        #region Class/Interface conversion operators
        /// <summary>
        /// Converter from <see cref="Org.Apache.Kafka.Streams.Processor.Internals.ThreadMetadataImpl"/> to <see cref="Org.Apache.Kafka.Streams.ThreadMetadata"/>
        /// </summary>
        public static implicit operator Org.Apache.Kafka.Streams.ThreadMetadata(Org.Apache.Kafka.Streams.Processor.Internals.ThreadMetadataImpl t) => t.Cast<Org.Apache.Kafka.Streams.ThreadMetadata>();

        #endregion

        #region Fields

        #endregion

        #region Static methods

        #endregion

        #region Instance methods
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/ThreadMetadataImpl.html#activeTasks()"/> 
        /// </summary>
        public Java.Util.Set<Org.Apache.Kafka.Streams.TaskMetadata> ActiveTasks
        {
            get { return IExecute<Java.Util.Set<Org.Apache.Kafka.Streams.TaskMetadata>>("activeTasks"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/ThreadMetadataImpl.html#adminClientId()"/> 
        /// </summary>
        public string AdminClientId
        {
            get { return IExecute<string>("adminClientId"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/ThreadMetadataImpl.html#consumerClientId()"/> 
        /// </summary>
        public string ConsumerClientId
        {
            get { return IExecute<string>("consumerClientId"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/ThreadMetadataImpl.html#producerClientIds()"/> 
        /// </summary>
        public Java.Util.Set<string> ProducerClientIds
        {
            get { return IExecute<Java.Util.Set<string>>("producerClientIds"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/ThreadMetadataImpl.html#restoreConsumerClientId()"/> 
        /// </summary>
        public string RestoreConsumerClientId
        {
            get { return IExecute<string>("restoreConsumerClientId"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/ThreadMetadataImpl.html#standbyTasks()"/> 
        /// </summary>
        public Java.Util.Set<Org.Apache.Kafka.Streams.TaskMetadata> StandbyTasks
        {
            get { return IExecute<Java.Util.Set<Org.Apache.Kafka.Streams.TaskMetadata>>("standbyTasks"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/ThreadMetadataImpl.html#threadName()"/> 
        /// </summary>
        public string ThreadName
        {
            get { return IExecute<string>("threadName"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/ThreadMetadataImpl.html#threadState()"/> 
        /// </summary>
        public string ThreadState
        {
            get { return IExecute<string>("threadState"); }
        }

        #endregion

        #region Nested classes

        #endregion

        // TODO: complete the class
    }
    #endregion
}