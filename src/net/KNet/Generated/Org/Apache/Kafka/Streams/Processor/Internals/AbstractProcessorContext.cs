/*
*  Copyright 2023 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 1.5.5.0)
*  using kafka-streams-3.4.0.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Org.Apache.Kafka.Streams.Processor.Internals
{
    #region AbstractProcessorContext
    public partial class AbstractProcessorContext
    {
        #region Constructors
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/AbstractProcessorContext.html#%3Cinit%3E(org.apache.kafka.streams.processor.TaskId,org.apache.kafka.streams.StreamsConfig,org.apache.kafka.streams.processor.internals.metrics.StreamsMetricsImpl,org.apache.kafka.streams.state.internals.ThreadCache)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Streams.Processor.TaskId"/></param>
        /// <param name="arg1"><see cref="Org.Apache.Kafka.Streams.StreamsConfig"/></param>
        /// <param name="arg2"><see cref="Org.Apache.Kafka.Streams.Processor.Internals.Metrics.StreamsMetricsImpl"/></param>
        /// <param name="arg3"><see cref="Org.Apache.Kafka.Streams.State.Internals.ThreadCache"/></param>
        public AbstractProcessorContext(Org.Apache.Kafka.Streams.Processor.TaskId arg0, Org.Apache.Kafka.Streams.StreamsConfig arg1, Org.Apache.Kafka.Streams.Processor.Internals.Metrics.StreamsMetricsImpl arg2, Org.Apache.Kafka.Streams.State.Internals.ThreadCache arg3)
            : base(arg0, arg1, arg2, arg3)
        {
        }

        #endregion

        #region Class/Interface conversion operators
        /// <summary>
        /// Converter from <see cref="Org.Apache.Kafka.Streams.Processor.Internals.AbstractProcessorContext"/> to <see cref="Org.Apache.Kafka.Streams.Processor.Internals.InternalProcessorContext"/>
        /// </summary>
        public static implicit operator Org.Apache.Kafka.Streams.Processor.Internals.InternalProcessorContext(Org.Apache.Kafka.Streams.Processor.Internals.AbstractProcessorContext t) => t.Cast<Org.Apache.Kafka.Streams.Processor.Internals.InternalProcessorContext>();

        #endregion

        #region Fields

        #endregion

        #region Static methods

        #endregion

        #region Instance methods
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/AbstractProcessorContext.html#appConfigs()"/> 
        /// </summary>
        public Java.Util.Map AppConfigs
        {
            get { return IExecute<Java.Util.Map>("appConfigs"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/AbstractProcessorContext.html#applicationId()"/> 
        /// </summary>
        public string ApplicationId
        {
            get { return IExecute<string>("applicationId"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/AbstractProcessorContext.html#cache()"/> 
        /// </summary>
        public Org.Apache.Kafka.Streams.State.Internals.ThreadCache Cache
        {
            get { return IExecute<Org.Apache.Kafka.Streams.State.Internals.ThreadCache>("cache"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/AbstractProcessorContext.html#currentNode()"/> 
        /// </summary>
        public Org.Apache.Kafka.Streams.Processor.Internals.ProcessorNode CurrentNode
        {
            get { return IExecute<Org.Apache.Kafka.Streams.Processor.Internals.ProcessorNode>("currentNode"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/AbstractProcessorContext.html#currentSystemTimeMs()"/> 
        /// </summary>
        public long CurrentSystemTimeMs
        {
            get { return IExecute<long>("currentSystemTimeMs"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/AbstractProcessorContext.html#headers()"/> 
        /// </summary>
        public Org.Apache.Kafka.Common.Header.Headers Headers
        {
            get { return IExecute<Org.Apache.Kafka.Common.Header.Headers>("headers"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/AbstractProcessorContext.html#keySerde()"/> 
        /// </summary>
        public Org.Apache.Kafka.Common.Serialization.Serde KeySerde
        {
            get { return IExecute<Org.Apache.Kafka.Common.Serialization.Serde>("keySerde"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/AbstractProcessorContext.html#metrics()"/> 
        /// </summary>
        public Org.Apache.Kafka.Streams.Processor.Internals.Metrics.StreamsMetricsImpl Metrics
        {
            get { return IExecute<Org.Apache.Kafka.Streams.Processor.Internals.Metrics.StreamsMetricsImpl>("metrics"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/AbstractProcessorContext.html#offset()"/> 
        /// </summary>
        public long Offset
        {
            get { return IExecute<long>("offset"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/AbstractProcessorContext.html#partition()"/> 
        /// </summary>
        public int Partition
        {
            get { return IExecute<int>("partition"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/AbstractProcessorContext.html#getProcessorMetadata()"/> <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/AbstractProcessorContext.html#setProcessorMetadata(org.apache.kafka.streams.processor.internals.ProcessorMetadata)"/>
        /// </summary>
        public Org.Apache.Kafka.Streams.Processor.Internals.ProcessorMetadata ProcessorMetadata
        {
            get { return IExecute<Org.Apache.Kafka.Streams.Processor.Internals.ProcessorMetadata>("getProcessorMetadata"); } set { IExecute("setProcessorMetadata", value); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/AbstractProcessorContext.html#recordContext()"/> 
        /// </summary>
        public Org.Apache.Kafka.Streams.Processor.Internals.ProcessorRecordContext RecordContext
        {
            get { return IExecute<Org.Apache.Kafka.Streams.Processor.Internals.ProcessorRecordContext>("recordContext"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/AbstractProcessorContext.html#recordMetadata()"/> 
        /// </summary>
        public Java.Util.Optional RecordMetadata
        {
            get { return IExecute<Java.Util.Optional>("recordMetadata"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/AbstractProcessorContext.html#stateDir()"/> 
        /// </summary>
        public Java.Io.File StateDir
        {
            get { return IExecute<Java.Io.File>("stateDir"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/AbstractProcessorContext.html#taskId()"/> 
        /// </summary>
        public Org.Apache.Kafka.Streams.Processor.TaskId TaskId
        {
            get { return IExecute<Org.Apache.Kafka.Streams.Processor.TaskId>("taskId"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/AbstractProcessorContext.html#taskType()"/> 
        /// </summary>
        public Org.Apache.Kafka.Streams.Processor.Internals.Task.TaskType TaskType
        {
            get { return IExecute<Org.Apache.Kafka.Streams.Processor.Internals.Task.TaskType>("taskType"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/AbstractProcessorContext.html#timestamp()"/> 
        /// </summary>
        public long Timestamp
        {
            get { return IExecute<long>("timestamp"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/AbstractProcessorContext.html#topic()"/> 
        /// </summary>
        public string Topic
        {
            get { return IExecute<string>("topic"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/AbstractProcessorContext.html#valueSerde()"/> 
        /// </summary>
        public Org.Apache.Kafka.Common.Serialization.Serde ValueSerde
        {
            get { return IExecute<Org.Apache.Kafka.Common.Serialization.Serde>("valueSerde"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/AbstractProcessorContext.html#processorMetadataForKey(java.lang.String)"/>
        /// </summary>
        /// <param name="arg0"><see cref="string"/></param>
        /// <returns><see cref="long"/></returns>
        public long? ProcessorMetadataForKey(string arg0)
        {
            return IExecute<long?>("processorMetadataForKey", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/AbstractProcessorContext.html#changelogFor(java.lang.String)"/>
        /// </summary>
        /// <param name="arg0"><see cref="string"/></param>
        /// <returns><see cref="string"/></returns>
        public string ChangelogFor(string arg0)
        {
            return IExecute<string>("changelogFor", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/AbstractProcessorContext.html#appConfigsWithPrefix(java.lang.String)"/>
        /// </summary>
        /// <param name="arg0"><see cref="string"/></param>
        /// <returns><see cref="Java.Util.Map"/></returns>
        public Java.Util.Map AppConfigsWithPrefix(string arg0)
        {
            return IExecute<Java.Util.Map>("appConfigsWithPrefix", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/AbstractProcessorContext.html#addProcessorMetadataKeyValue(java.lang.String,long)"/>
        /// </summary>
        /// <param name="arg0"><see cref="string"/></param>
        /// <param name="arg1"><see cref="long"/></param>
        public void AddProcessorMetadataKeyValue(string arg0, long arg1)
        {
            IExecute("addProcessorMetadataKeyValue", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/AbstractProcessorContext.html#initialize()"/>
        /// </summary>
        public void Initialize()
        {
            IExecute("initialize");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/AbstractProcessorContext.html#register(org.apache.kafka.streams.processor.StateStore,org.apache.kafka.streams.processor.StateRestoreCallback,org.apache.kafka.streams.processor.CommitCallback)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Streams.Processor.StateStore"/></param>
        /// <param name="arg1"><see cref="Org.Apache.Kafka.Streams.Processor.StateRestoreCallback"/></param>
        /// <param name="arg2"><see cref="Org.Apache.Kafka.Streams.Processor.CommitCallback"/></param>
        public void Register(Org.Apache.Kafka.Streams.Processor.StateStore arg0, Org.Apache.Kafka.Streams.Processor.StateRestoreCallback arg1, Org.Apache.Kafka.Streams.Processor.CommitCallback arg2)
        {
            IExecute("register", arg0, arg1, arg2);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/AbstractProcessorContext.html#register(org.apache.kafka.streams.processor.StateStore,org.apache.kafka.streams.processor.StateRestoreCallback)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Streams.Processor.StateStore"/></param>
        /// <param name="arg1"><see cref="Org.Apache.Kafka.Streams.Processor.StateRestoreCallback"/></param>
        public void Register(Org.Apache.Kafka.Streams.Processor.StateStore arg0, Org.Apache.Kafka.Streams.Processor.StateRestoreCallback arg1)
        {
            IExecute("register", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/AbstractProcessorContext.html#setCurrentNode(org.apache.kafka.streams.processor.internals.ProcessorNode)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Streams.Processor.Internals.ProcessorNode"/></param>
        public void SetCurrentNode(Org.Apache.Kafka.Streams.Processor.Internals.ProcessorNode arg0)
        {
            IExecute("setCurrentNode", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/AbstractProcessorContext.html#setRecordContext(org.apache.kafka.streams.processor.internals.ProcessorRecordContext)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Streams.Processor.Internals.ProcessorRecordContext"/></param>
        public void SetRecordContext(Org.Apache.Kafka.Streams.Processor.Internals.ProcessorRecordContext arg0)
        {
            IExecute("setRecordContext", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/AbstractProcessorContext.html#setSystemTimeMs(long)"/>
        /// </summary>
        /// <param name="arg0"><see cref="long"/></param>
        public void SetSystemTimeMs(long arg0)
        {
            IExecute("setSystemTimeMs", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/AbstractProcessorContext.html#uninitialize()"/>
        /// </summary>
        public void Uninitialize()
        {
            IExecute("uninitialize");
        }

        #endregion

        #region Nested classes

        #endregion

        // TODO: complete the class
    }
    #endregion

    #region AbstractProcessorContext<KOut, VOut>
    public partial class AbstractProcessorContext<KOut, VOut>
    {
        #region Constructors
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/AbstractProcessorContext.html#%3Cinit%3E(org.apache.kafka.streams.processor.TaskId,org.apache.kafka.streams.StreamsConfig,org.apache.kafka.streams.processor.internals.metrics.StreamsMetricsImpl,org.apache.kafka.streams.state.internals.ThreadCache)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Streams.Processor.TaskId"/></param>
        /// <param name="arg1"><see cref="Org.Apache.Kafka.Streams.StreamsConfig"/></param>
        /// <param name="arg2"><see cref="Org.Apache.Kafka.Streams.Processor.Internals.Metrics.StreamsMetricsImpl"/></param>
        /// <param name="arg3"><see cref="Org.Apache.Kafka.Streams.State.Internals.ThreadCache"/></param>
        public AbstractProcessorContext(Org.Apache.Kafka.Streams.Processor.TaskId arg0, Org.Apache.Kafka.Streams.StreamsConfig arg1, Org.Apache.Kafka.Streams.Processor.Internals.Metrics.StreamsMetricsImpl arg2, Org.Apache.Kafka.Streams.State.Internals.ThreadCache arg3)
            : base(arg0, arg1, arg2, arg3)
        {
        }

        #endregion

        #region Class/Interface conversion operators
        /// <summary>
        /// Converter from <see cref="Org.Apache.Kafka.Streams.Processor.Internals.AbstractProcessorContext{KOut, VOut}"/> to <see cref="Org.Apache.Kafka.Streams.Processor.Internals.InternalProcessorContext{KOut, VOut}"/>
        /// </summary>
        public static implicit operator Org.Apache.Kafka.Streams.Processor.Internals.InternalProcessorContext<KOut, VOut>(Org.Apache.Kafka.Streams.Processor.Internals.AbstractProcessorContext<KOut, VOut> t) => t.Cast<Org.Apache.Kafka.Streams.Processor.Internals.InternalProcessorContext<KOut, VOut>>();
        /// <summary>
        /// Converter from <see cref="Org.Apache.Kafka.Streams.Processor.Internals.AbstractProcessorContext{KOut, VOut}"/> to <see cref="Org.Apache.Kafka.Streams.Processor.Internals.AbstractProcessorContext"/>
        /// </summary>
        public static implicit operator Org.Apache.Kafka.Streams.Processor.Internals.AbstractProcessorContext(Org.Apache.Kafka.Streams.Processor.Internals.AbstractProcessorContext<KOut, VOut> t) => t.Cast<Org.Apache.Kafka.Streams.Processor.Internals.AbstractProcessorContext>();

        #endregion

        #region Fields

        #endregion

        #region Static methods

        #endregion

        #region Instance methods
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/AbstractProcessorContext.html#appConfigs()"/> 
        /// </summary>
        public Java.Util.Map<string, object> AppConfigs
        {
            get { return IExecute<Java.Util.Map<string, object>>("appConfigs"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/AbstractProcessorContext.html#applicationId()"/> 
        /// </summary>
        public string ApplicationId
        {
            get { return IExecute<string>("applicationId"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/AbstractProcessorContext.html#cache()"/> 
        /// </summary>
        public Org.Apache.Kafka.Streams.State.Internals.ThreadCache Cache
        {
            get { return IExecute<Org.Apache.Kafka.Streams.State.Internals.ThreadCache>("cache"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/AbstractProcessorContext.html#currentNode()"/> 
        /// </summary>
        public Org.Apache.Kafka.Streams.Processor.Internals.ProcessorNode CurrentNode
        {
            get { return IExecute<Org.Apache.Kafka.Streams.Processor.Internals.ProcessorNode>("currentNode"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/AbstractProcessorContext.html#currentSystemTimeMs()"/> 
        /// </summary>
        public long CurrentSystemTimeMs
        {
            get { return IExecute<long>("currentSystemTimeMs"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/AbstractProcessorContext.html#headers()"/> 
        /// </summary>
        public Org.Apache.Kafka.Common.Header.Headers Headers
        {
            get { return IExecute<Org.Apache.Kafka.Common.Header.Headers>("headers"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/AbstractProcessorContext.html#keySerde()"/> 
        /// </summary>
        public Org.Apache.Kafka.Common.Serialization.Serde KeySerde
        {
            get { return IExecute<Org.Apache.Kafka.Common.Serialization.Serde>("keySerde"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/AbstractProcessorContext.html#metrics()"/> 
        /// </summary>
        public Org.Apache.Kafka.Streams.Processor.Internals.Metrics.StreamsMetricsImpl Metrics
        {
            get { return IExecute<Org.Apache.Kafka.Streams.Processor.Internals.Metrics.StreamsMetricsImpl>("metrics"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/AbstractProcessorContext.html#offset()"/> 
        /// </summary>
        public long Offset
        {
            get { return IExecute<long>("offset"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/AbstractProcessorContext.html#partition()"/> 
        /// </summary>
        public int Partition
        {
            get { return IExecute<int>("partition"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/AbstractProcessorContext.html#getProcessorMetadata()"/> <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/AbstractProcessorContext.html#setProcessorMetadata(org.apache.kafka.streams.processor.internals.ProcessorMetadata)"/>
        /// </summary>
        public Org.Apache.Kafka.Streams.Processor.Internals.ProcessorMetadata ProcessorMetadata
        {
            get { return IExecute<Org.Apache.Kafka.Streams.Processor.Internals.ProcessorMetadata>("getProcessorMetadata"); } set { IExecute("setProcessorMetadata", value); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/AbstractProcessorContext.html#recordContext()"/> 
        /// </summary>
        public Org.Apache.Kafka.Streams.Processor.Internals.ProcessorRecordContext RecordContext
        {
            get { return IExecute<Org.Apache.Kafka.Streams.Processor.Internals.ProcessorRecordContext>("recordContext"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/AbstractProcessorContext.html#recordMetadata()"/> 
        /// </summary>
        public Java.Util.Optional<Org.Apache.Kafka.Streams.Processor.Api.RecordMetadata> RecordMetadata
        {
            get { return IExecute<Java.Util.Optional<Org.Apache.Kafka.Streams.Processor.Api.RecordMetadata>>("recordMetadata"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/AbstractProcessorContext.html#stateDir()"/> 
        /// </summary>
        public Java.Io.File StateDir
        {
            get { return IExecute<Java.Io.File>("stateDir"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/AbstractProcessorContext.html#taskId()"/> 
        /// </summary>
        public Org.Apache.Kafka.Streams.Processor.TaskId TaskId
        {
            get { return IExecute<Org.Apache.Kafka.Streams.Processor.TaskId>("taskId"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/AbstractProcessorContext.html#taskType()"/> 
        /// </summary>
        public Org.Apache.Kafka.Streams.Processor.Internals.Task.TaskType TaskType
        {
            get { return IExecute<Org.Apache.Kafka.Streams.Processor.Internals.Task.TaskType>("taskType"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/AbstractProcessorContext.html#timestamp()"/> 
        /// </summary>
        public long Timestamp
        {
            get { return IExecute<long>("timestamp"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/AbstractProcessorContext.html#topic()"/> 
        /// </summary>
        public string Topic
        {
            get { return IExecute<string>("topic"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/AbstractProcessorContext.html#valueSerde()"/> 
        /// </summary>
        public Org.Apache.Kafka.Common.Serialization.Serde ValueSerde
        {
            get { return IExecute<Org.Apache.Kafka.Common.Serialization.Serde>("valueSerde"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/AbstractProcessorContext.html#processorMetadataForKey(java.lang.String)"/>
        /// </summary>
        /// <param name="arg0"><see cref="string"/></param>
        /// <returns><see cref="long"/></returns>
        public long? ProcessorMetadataForKey(string arg0)
        {
            return IExecute<long?>("processorMetadataForKey", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/AbstractProcessorContext.html#changelogFor(java.lang.String)"/>
        /// </summary>
        /// <param name="arg0"><see cref="string"/></param>
        /// <returns><see cref="string"/></returns>
        public string ChangelogFor(string arg0)
        {
            return IExecute<string>("changelogFor", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/AbstractProcessorContext.html#appConfigsWithPrefix(java.lang.String)"/>
        /// </summary>
        /// <param name="arg0"><see cref="string"/></param>
        /// <returns><see cref="Java.Util.Map"/></returns>
        public Java.Util.Map<string, object> AppConfigsWithPrefix(string arg0)
        {
            return IExecute<Java.Util.Map<string, object>>("appConfigsWithPrefix", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/AbstractProcessorContext.html#addProcessorMetadataKeyValue(java.lang.String,long)"/>
        /// </summary>
        /// <param name="arg0"><see cref="string"/></param>
        /// <param name="arg1"><see cref="long"/></param>
        public void AddProcessorMetadataKeyValue(string arg0, long arg1)
        {
            IExecute("addProcessorMetadataKeyValue", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/AbstractProcessorContext.html#initialize()"/>
        /// </summary>
        public void Initialize()
        {
            IExecute("initialize");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/AbstractProcessorContext.html#register(org.apache.kafka.streams.processor.StateStore,org.apache.kafka.streams.processor.StateRestoreCallback,org.apache.kafka.streams.processor.CommitCallback)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Streams.Processor.StateStore"/></param>
        /// <param name="arg1"><see cref="Org.Apache.Kafka.Streams.Processor.StateRestoreCallback"/></param>
        /// <param name="arg2"><see cref="Org.Apache.Kafka.Streams.Processor.CommitCallback"/></param>
        public void Register(Org.Apache.Kafka.Streams.Processor.StateStore arg0, Org.Apache.Kafka.Streams.Processor.StateRestoreCallback arg1, Org.Apache.Kafka.Streams.Processor.CommitCallback arg2)
        {
            IExecute("register", arg0, arg1, arg2);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/AbstractProcessorContext.html#register(org.apache.kafka.streams.processor.StateStore,org.apache.kafka.streams.processor.StateRestoreCallback)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Streams.Processor.StateStore"/></param>
        /// <param name="arg1"><see cref="Org.Apache.Kafka.Streams.Processor.StateRestoreCallback"/></param>
        public void Register(Org.Apache.Kafka.Streams.Processor.StateStore arg0, Org.Apache.Kafka.Streams.Processor.StateRestoreCallback arg1)
        {
            IExecute("register", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/AbstractProcessorContext.html#setCurrentNode(org.apache.kafka.streams.processor.internals.ProcessorNode)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Streams.Processor.Internals.ProcessorNode"/></param>
        /// <typeparam name="Arg0Extendsobject"></typeparam>
        public void SetCurrentNode<Arg0Extendsobject>(Org.Apache.Kafka.Streams.Processor.Internals.ProcessorNode<Arg0Extendsobject, Arg0Extendsobject, Arg0Extendsobject, Arg0Extendsobject> arg0)
        {
            IExecute("setCurrentNode", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/AbstractProcessorContext.html#setRecordContext(org.apache.kafka.streams.processor.internals.ProcessorRecordContext)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Streams.Processor.Internals.ProcessorRecordContext"/></param>
        public void SetRecordContext(Org.Apache.Kafka.Streams.Processor.Internals.ProcessorRecordContext arg0)
        {
            IExecute("setRecordContext", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/AbstractProcessorContext.html#setSystemTimeMs(long)"/>
        /// </summary>
        /// <param name="arg0"><see cref="long"/></param>
        public void SetSystemTimeMs(long arg0)
        {
            IExecute("setSystemTimeMs", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/AbstractProcessorContext.html#uninitialize()"/>
        /// </summary>
        public void Uninitialize()
        {
            IExecute("uninitialize");
        }

        #endregion

        #region Nested classes

        #endregion

        // TODO: complete the class
    }
    #endregion
}