/*
*  Copyright 2023 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 1.5.5.0)
*  using kafka-streams-3.4.0.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Org.Apache.Kafka.Streams.Kstream.Internals.Foreignkeyjoin
{
    #region SubscriptionWrapper
    public partial class SubscriptionWrapper
    {
        #region Constructors
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/kstream/internals/foreignkeyjoin/SubscriptionWrapper.html#%3Cinit%3E(long[],org.apache.kafka.streams.kstream.internals.foreignkeyjoin.SubscriptionWrapper.Instruction,java.lang.Object,byte,java.lang.Integer)"/>
        /// </summary>
        /// <param name="arg0"><see cref="long"/></param>
        /// <param name="arg1"><see cref="Org.Apache.Kafka.Streams.Kstream.Internals.Foreignkeyjoin.SubscriptionWrapper.Instruction"/></param>
        /// <param name="arg2"><see cref="object"/></param>
        /// <param name="arg3"><see cref="byte"/></param>
        /// <param name="arg4"><see cref="int"/></param>
        public SubscriptionWrapper(long[] arg0, Org.Apache.Kafka.Streams.Kstream.Internals.Foreignkeyjoin.SubscriptionWrapper.Instruction arg1, object arg2, byte arg3, int? arg4)
            : base(arg0, arg1, arg2, arg3, arg4)
        {
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/kstream/internals/foreignkeyjoin/SubscriptionWrapper.html#%3Cinit%3E(long[],org.apache.kafka.streams.kstream.internals.foreignkeyjoin.SubscriptionWrapper.Instruction,java.lang.Object,java.lang.Integer)"/>
        /// </summary>
        /// <param name="arg0"><see cref="long"/></param>
        /// <param name="arg1"><see cref="Org.Apache.Kafka.Streams.Kstream.Internals.Foreignkeyjoin.SubscriptionWrapper.Instruction"/></param>
        /// <param name="arg2"><see cref="object"/></param>
        /// <param name="arg3"><see cref="int"/></param>
        public SubscriptionWrapper(long[] arg0, Org.Apache.Kafka.Streams.Kstream.Internals.Foreignkeyjoin.SubscriptionWrapper.Instruction arg1, object arg2, int? arg3)
            : base(arg0, arg1, arg2, arg3)
        {
        }

        #endregion

        #region Class/Interface conversion operators

        #endregion

        #region Fields

        #endregion

        #region Static methods

        #endregion

        #region Instance methods
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/kstream/internals/foreignkeyjoin/SubscriptionWrapper.html#getInstruction()"/> 
        /// </summary>
        public Org.Apache.Kafka.Streams.Kstream.Internals.Foreignkeyjoin.SubscriptionWrapper.Instruction GetInstruction
        {
            get { return IExecute<Org.Apache.Kafka.Streams.Kstream.Internals.Foreignkeyjoin.SubscriptionWrapper.Instruction>("getInstruction"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/kstream/internals/foreignkeyjoin/SubscriptionWrapper.html#getHash()"/> 
        /// </summary>
        public long[] Hash
        {
            get { return IExecuteArray<long>("getHash"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/kstream/internals/foreignkeyjoin/SubscriptionWrapper.html#getPrimaryKey()"/> 
        /// </summary>
        public object PrimaryKey
        {
            get { return IExecute("getPrimaryKey"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/kstream/internals/foreignkeyjoin/SubscriptionWrapper.html#getPrimaryPartition()"/> 
        /// </summary>
        public int? PrimaryPartition
        {
            get { return IExecute<int?>("getPrimaryPartition"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/kstream/internals/foreignkeyjoin/SubscriptionWrapper.html#getVersion()"/> 
        /// </summary>
        public byte Version
        {
            get { return IExecute<byte>("getVersion"); }
        }

        #endregion

        #region Nested classes
        #region Instruction
        public partial class Instruction
        {
            #region Constructors

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields
            /// <summary>
            /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/kstream/internals/foreignkeyjoin/SubscriptionWrapper.Instruction.html#DELETE_KEY_AND_PROPAGATE"/>
            /// </summary>
            public static Org.Apache.Kafka.Streams.Kstream.Internals.Foreignkeyjoin.SubscriptionWrapper.Instruction DELETE_KEY_AND_PROPAGATE { get { return SGetField<Org.Apache.Kafka.Streams.Kstream.Internals.Foreignkeyjoin.SubscriptionWrapper.Instruction>(LocalBridgeClazz, "DELETE_KEY_AND_PROPAGATE"); } }
            /// <summary>
            /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/kstream/internals/foreignkeyjoin/SubscriptionWrapper.Instruction.html#DELETE_KEY_NO_PROPAGATE"/>
            /// </summary>
            public static Org.Apache.Kafka.Streams.Kstream.Internals.Foreignkeyjoin.SubscriptionWrapper.Instruction DELETE_KEY_NO_PROPAGATE { get { return SGetField<Org.Apache.Kafka.Streams.Kstream.Internals.Foreignkeyjoin.SubscriptionWrapper.Instruction>(LocalBridgeClazz, "DELETE_KEY_NO_PROPAGATE"); } }
            /// <summary>
            /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/kstream/internals/foreignkeyjoin/SubscriptionWrapper.Instruction.html#PROPAGATE_NULL_IF_NO_FK_VAL_AVAILABLE"/>
            /// </summary>
            public static Org.Apache.Kafka.Streams.Kstream.Internals.Foreignkeyjoin.SubscriptionWrapper.Instruction PROPAGATE_NULL_IF_NO_FK_VAL_AVAILABLE { get { return SGetField<Org.Apache.Kafka.Streams.Kstream.Internals.Foreignkeyjoin.SubscriptionWrapper.Instruction>(LocalBridgeClazz, "PROPAGATE_NULL_IF_NO_FK_VAL_AVAILABLE"); } }
            /// <summary>
            /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/kstream/internals/foreignkeyjoin/SubscriptionWrapper.Instruction.html#PROPAGATE_ONLY_IF_FK_VAL_AVAILABLE"/>
            /// </summary>
            public static Org.Apache.Kafka.Streams.Kstream.Internals.Foreignkeyjoin.SubscriptionWrapper.Instruction PROPAGATE_ONLY_IF_FK_VAL_AVAILABLE { get { return SGetField<Org.Apache.Kafka.Streams.Kstream.Internals.Foreignkeyjoin.SubscriptionWrapper.Instruction>(LocalBridgeClazz, "PROPAGATE_ONLY_IF_FK_VAL_AVAILABLE"); } }

            #endregion

            #region Static methods
            /// <summary>
            /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/kstream/internals/foreignkeyjoin/SubscriptionWrapper.Instruction.html#values()"/> 
            /// </summary>
            public static Org.Apache.Kafka.Streams.Kstream.Internals.Foreignkeyjoin.SubscriptionWrapper.Instruction[] Values
            {
                get { return SExecuteArray<Org.Apache.Kafka.Streams.Kstream.Internals.Foreignkeyjoin.SubscriptionWrapper.Instruction>(LocalBridgeClazz, "values"); }
            }
            /// <summary>
            /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/kstream/internals/foreignkeyjoin/SubscriptionWrapper.Instruction.html#fromValue(byte)"/>
            /// </summary>
            /// <param name="arg0"><see cref="byte"/></param>
            /// <returns><see cref="Org.Apache.Kafka.Streams.Kstream.Internals.Foreignkeyjoin.SubscriptionWrapper.Instruction"/></returns>
            public static Org.Apache.Kafka.Streams.Kstream.Internals.Foreignkeyjoin.SubscriptionWrapper.Instruction FromValue(byte arg0)
            {
                return SExecute<Org.Apache.Kafka.Streams.Kstream.Internals.Foreignkeyjoin.SubscriptionWrapper.Instruction>(LocalBridgeClazz, "fromValue", arg0);
            }
            /// <summary>
            /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/kstream/internals/foreignkeyjoin/SubscriptionWrapper.Instruction.html#valueOf(java.lang.String)"/>
            /// </summary>
            /// <param name="arg0"><see cref="string"/></param>
            /// <returns><see cref="Org.Apache.Kafka.Streams.Kstream.Internals.Foreignkeyjoin.SubscriptionWrapper.Instruction"/></returns>
            public static Org.Apache.Kafka.Streams.Kstream.Internals.Foreignkeyjoin.SubscriptionWrapper.Instruction ValueOf(string arg0)
            {
                return SExecute<Org.Apache.Kafka.Streams.Kstream.Internals.Foreignkeyjoin.SubscriptionWrapper.Instruction>(LocalBridgeClazz, "valueOf", arg0);
            }

            #endregion

            #region Instance methods
            /// <summary>
            /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/kstream/internals/foreignkeyjoin/SubscriptionWrapper.Instruction.html#getValue()"/> 
            /// </summary>
            public byte Value
            {
                get { return IExecute<byte>("getValue"); }
            }

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

    
        #endregion

        // TODO: complete the class
    }
    #endregion

    #region SubscriptionWrapper<K>
    public partial class SubscriptionWrapper<K>
    {
        #region Constructors
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/kstream/internals/foreignkeyjoin/SubscriptionWrapper.html#%3Cinit%3E(long[],org.apache.kafka.streams.kstream.internals.foreignkeyjoin.SubscriptionWrapper.Instruction,java.lang.Object,byte,java.lang.Integer)"/>
        /// </summary>
        /// <param name="arg0"><see cref="long"/></param>
        /// <param name="arg1"><see cref="Org.Apache.Kafka.Streams.Kstream.Internals.Foreignkeyjoin.SubscriptionWrapper.Instruction"/></param>
        /// <param name="arg2"><typeparamref name="K"/></param>
        /// <param name="arg3"><see cref="byte"/></param>
        /// <param name="arg4"><see cref="int"/></param>
        public SubscriptionWrapper(long[] arg0, Org.Apache.Kafka.Streams.Kstream.Internals.Foreignkeyjoin.SubscriptionWrapper.Instruction arg1, K arg2, byte arg3, int? arg4)
            : base(arg0, arg1, arg2, arg3, arg4)
        {
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/kstream/internals/foreignkeyjoin/SubscriptionWrapper.html#%3Cinit%3E(long[],org.apache.kafka.streams.kstream.internals.foreignkeyjoin.SubscriptionWrapper.Instruction,java.lang.Object,java.lang.Integer)"/>
        /// </summary>
        /// <param name="arg0"><see cref="long"/></param>
        /// <param name="arg1"><see cref="Org.Apache.Kafka.Streams.Kstream.Internals.Foreignkeyjoin.SubscriptionWrapper.Instruction"/></param>
        /// <param name="arg2"><typeparamref name="K"/></param>
        /// <param name="arg3"><see cref="int"/></param>
        public SubscriptionWrapper(long[] arg0, Org.Apache.Kafka.Streams.Kstream.Internals.Foreignkeyjoin.SubscriptionWrapper.Instruction arg1, K arg2, int? arg3)
            : base(arg0, arg1, arg2, arg3)
        {
        }

        #endregion

        #region Class/Interface conversion operators
        /// <summary>
        /// Converter from <see cref="Org.Apache.Kafka.Streams.Kstream.Internals.Foreignkeyjoin.SubscriptionWrapper{K}"/> to <see cref="Org.Apache.Kafka.Streams.Kstream.Internals.Foreignkeyjoin.SubscriptionWrapper"/>
        /// </summary>
        public static implicit operator Org.Apache.Kafka.Streams.Kstream.Internals.Foreignkeyjoin.SubscriptionWrapper(Org.Apache.Kafka.Streams.Kstream.Internals.Foreignkeyjoin.SubscriptionWrapper<K> t) => t.Cast<Org.Apache.Kafka.Streams.Kstream.Internals.Foreignkeyjoin.SubscriptionWrapper>();

        #endregion

        #region Fields

        #endregion

        #region Static methods

        #endregion

        #region Instance methods
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/kstream/internals/foreignkeyjoin/SubscriptionWrapper.html#getInstruction()"/> 
        /// </summary>
        public Org.Apache.Kafka.Streams.Kstream.Internals.Foreignkeyjoin.SubscriptionWrapper.Instruction GetInstruction
        {
            get { return IExecute<Org.Apache.Kafka.Streams.Kstream.Internals.Foreignkeyjoin.SubscriptionWrapper.Instruction>("getInstruction"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/kstream/internals/foreignkeyjoin/SubscriptionWrapper.html#getHash()"/> 
        /// </summary>
        public long[] Hash
        {
            get { return IExecuteArray<long>("getHash"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/kstream/internals/foreignkeyjoin/SubscriptionWrapper.html#getPrimaryKey()"/> 
        /// </summary>
        public K PrimaryKey
        {
            get { return IExecute<K>("getPrimaryKey"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/kstream/internals/foreignkeyjoin/SubscriptionWrapper.html#getPrimaryPartition()"/> 
        /// </summary>
        public int? PrimaryPartition
        {
            get { return IExecute<int?>("getPrimaryPartition"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/kstream/internals/foreignkeyjoin/SubscriptionWrapper.html#getVersion()"/> 
        /// </summary>
        public byte Version
        {
            get { return IExecute<byte>("getVersion"); }
        }

        #endregion

        #region Nested classes

        #endregion

        // TODO: complete the class
    }
    #endregion
}