/*
*  Copyright 2023 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 1.5.5.0)
*  using kafka-streams-3.4.0.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Org.Apache.Kafka.Streams.Processor.Internals.Assignment
{
    #region AssignorError
    public partial class AssignorError
    {
        #region Constructors

        #endregion

        #region Class/Interface conversion operators

        #endregion

        #region Fields
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/assignment/AssignorError.html#ASSIGNMENT_ERROR"/>
        /// </summary>
        public static Org.Apache.Kafka.Streams.Processor.Internals.Assignment.AssignorError ASSIGNMENT_ERROR { get { return SGetField<Org.Apache.Kafka.Streams.Processor.Internals.Assignment.AssignorError>(LocalBridgeClazz, "ASSIGNMENT_ERROR"); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/assignment/AssignorError.html#INCOMPLETE_SOURCE_TOPIC_METADATA"/>
        /// </summary>
        public static Org.Apache.Kafka.Streams.Processor.Internals.Assignment.AssignorError INCOMPLETE_SOURCE_TOPIC_METADATA { get { return SGetField<Org.Apache.Kafka.Streams.Processor.Internals.Assignment.AssignorError>(LocalBridgeClazz, "INCOMPLETE_SOURCE_TOPIC_METADATA"); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/assignment/AssignorError.html#NONE"/>
        /// </summary>
        public static Org.Apache.Kafka.Streams.Processor.Internals.Assignment.AssignorError NONE { get { return SGetField<Org.Apache.Kafka.Streams.Processor.Internals.Assignment.AssignorError>(LocalBridgeClazz, "NONE"); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/assignment/AssignorError.html#SHUTDOWN_REQUESTED"/>
        /// </summary>
        public static Org.Apache.Kafka.Streams.Processor.Internals.Assignment.AssignorError SHUTDOWN_REQUESTED { get { return SGetField<Org.Apache.Kafka.Streams.Processor.Internals.Assignment.AssignorError>(LocalBridgeClazz, "SHUTDOWN_REQUESTED"); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/assignment/AssignorError.html#VERSION_PROBING"/>
        /// </summary>
        public static Org.Apache.Kafka.Streams.Processor.Internals.Assignment.AssignorError VERSION_PROBING { get { return SGetField<Org.Apache.Kafka.Streams.Processor.Internals.Assignment.AssignorError>(LocalBridgeClazz, "VERSION_PROBING"); } }

        #endregion

        #region Static methods
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/assignment/AssignorError.html#values()"/> 
        /// </summary>
        public static Org.Apache.Kafka.Streams.Processor.Internals.Assignment.AssignorError[] Values
        {
            get { return SExecuteArray<Org.Apache.Kafka.Streams.Processor.Internals.Assignment.AssignorError>(LocalBridgeClazz, "values"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/assignment/AssignorError.html#valueOf(java.lang.String)"/>
        /// </summary>
        /// <param name="arg0"><see cref="string"/></param>
        /// <returns><see cref="Org.Apache.Kafka.Streams.Processor.Internals.Assignment.AssignorError"/></returns>
        public static Org.Apache.Kafka.Streams.Processor.Internals.Assignment.AssignorError ValueOf(string arg0)
        {
            return SExecute<Org.Apache.Kafka.Streams.Processor.Internals.Assignment.AssignorError>(LocalBridgeClazz, "valueOf", arg0);
        }

        #endregion

        #region Instance methods
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/assignment/AssignorError.html#code()"/> 
        /// </summary>
        public int Code
        {
            get { return IExecute<int>("code"); }
        }

        #endregion

        #region Nested classes

        #endregion

        // TODO: complete the class
    }
    #endregion
}