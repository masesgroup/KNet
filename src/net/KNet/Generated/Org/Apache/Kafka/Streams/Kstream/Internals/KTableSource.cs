/*
*  Copyright 2023 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 1.5.5.0)
*  using kafka-streams-3.4.0.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Org.Apache.Kafka.Streams.Kstream.Internals
{
    #region KTableSource
    public partial class KTableSource
    {
        #region Constructors
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/kstream/internals/KTableSource.html#%3Cinit%3E(java.lang.String,java.lang.String)"/>
        /// </summary>
        /// <param name="arg0"><see cref="string"/></param>
        /// <param name="arg1"><see cref="string"/></param>
        public KTableSource(string arg0, string arg1)
            : base(arg0, arg1)
        {
        }

        #endregion

        #region Class/Interface conversion operators
        /// <summary>
        /// Converter from <see cref="Org.Apache.Kafka.Streams.Kstream.Internals.KTableSource"/> to <see cref="Org.Apache.Kafka.Streams.Processor.Api.ProcessorSupplier"/>
        /// </summary>
        public static implicit operator Org.Apache.Kafka.Streams.Processor.Api.ProcessorSupplier(Org.Apache.Kafka.Streams.Kstream.Internals.KTableSource t) => t.Cast<Org.Apache.Kafka.Streams.Processor.Api.ProcessorSupplier>();

        #endregion

        #region Fields

        #endregion

        #region Static methods

        #endregion

        #region Instance methods
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/kstream/internals/KTableSource.html#get()"/> 
        /// </summary>
        public Org.Apache.Kafka.Streams.Processor.Api.Processor Get
        {
            get { return IExecute<Org.Apache.Kafka.Streams.Processor.Api.Processor>("get"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/kstream/internals/KTableSource.html#materialized()"/> 
        /// </summary>
        public bool Materialized
        {
            get { return IExecute<bool>("materialized"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/kstream/internals/KTableSource.html#queryableName()"/> 
        /// </summary>
        public string QueryableName
        {
            get { return IExecute<string>("queryableName"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/kstream/internals/KTableSource.html#enableSendingOldValues()"/>
        /// </summary>
        public void EnableSendingOldValues()
        {
            IExecute("enableSendingOldValues");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/kstream/internals/KTableSource.html#materialize()"/>
        /// </summary>
        public void Materialize()
        {
            IExecute("materialize");
        }

        #endregion

        #region Nested classes

        #endregion

        // TODO: complete the class
    }
    #endregion

    #region KTableSource<KIn, VIn>
    public partial class KTableSource<KIn, VIn>
    {
        #region Constructors
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/kstream/internals/KTableSource.html#%3Cinit%3E(java.lang.String,java.lang.String)"/>
        /// </summary>
        /// <param name="arg0"><see cref="string"/></param>
        /// <param name="arg1"><see cref="string"/></param>
        public KTableSource(string arg0, string arg1)
            : base(arg0, arg1)
        {
        }

        #endregion

        #region Class/Interface conversion operators
        /// <summary>
        /// Converter from <see cref="Org.Apache.Kafka.Streams.Kstream.Internals.KTableSource{KIn, VIn}"/> to <see cref="Org.Apache.Kafka.Streams.Processor.Api.ProcessorSupplier"/>
        /// </summary>
        public static implicit operator Org.Apache.Kafka.Streams.Processor.Api.ProcessorSupplier(Org.Apache.Kafka.Streams.Kstream.Internals.KTableSource<KIn, VIn> t) => t.Cast<Org.Apache.Kafka.Streams.Processor.Api.ProcessorSupplier>();
        /// <summary>
        /// Converter from <see cref="Org.Apache.Kafka.Streams.Kstream.Internals.KTableSource{KIn, VIn}"/> to <see cref="Org.Apache.Kafka.Streams.Kstream.Internals.KTableSource"/>
        /// </summary>
        public static implicit operator Org.Apache.Kafka.Streams.Kstream.Internals.KTableSource(Org.Apache.Kafka.Streams.Kstream.Internals.KTableSource<KIn, VIn> t) => t.Cast<Org.Apache.Kafka.Streams.Kstream.Internals.KTableSource>();

        #endregion

        #region Fields

        #endregion

        #region Static methods

        #endregion

        #region Instance methods
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/kstream/internals/KTableSource.html#get()"/> 
        /// </summary>
        public Org.Apache.Kafka.Streams.Processor.Api.Processor<KIn, VIn, KIn, Org.Apache.Kafka.Streams.Kstream.Internals.Change<VIn>> Get
        {
            get { return IExecute<Org.Apache.Kafka.Streams.Processor.Api.Processor<KIn, VIn, KIn, Org.Apache.Kafka.Streams.Kstream.Internals.Change<VIn>>>("get"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/kstream/internals/KTableSource.html#materialized()"/> 
        /// </summary>
        public bool Materialized
        {
            get { return IExecute<bool>("materialized"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/kstream/internals/KTableSource.html#queryableName()"/> 
        /// </summary>
        public string QueryableName
        {
            get { return IExecute<string>("queryableName"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/kstream/internals/KTableSource.html#enableSendingOldValues()"/>
        /// </summary>
        public void EnableSendingOldValues()
        {
            IExecute("enableSendingOldValues");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/kstream/internals/KTableSource.html#materialize()"/>
        /// </summary>
        public void Materialize()
        {
            IExecute("materialize");
        }

        #endregion

        #region Nested classes

        #endregion

        // TODO: complete the class
    }
    #endregion
}