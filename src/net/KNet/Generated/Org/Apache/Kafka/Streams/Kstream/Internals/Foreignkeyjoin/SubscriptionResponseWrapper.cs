/*
*  Copyright 2023 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 1.5.5.0)
*  using kafka-streams-3.4.0.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Org.Apache.Kafka.Streams.Kstream.Internals.Foreignkeyjoin
{
    #region SubscriptionResponseWrapper
    public partial class SubscriptionResponseWrapper
    {
        #region Constructors
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/kstream/internals/foreignkeyjoin/SubscriptionResponseWrapper.html#%3Cinit%3E(long[],java.lang.Object,byte,java.lang.Integer)"/>
        /// </summary>
        /// <param name="arg0"><see cref="long"/></param>
        /// <param name="arg1"><see cref="object"/></param>
        /// <param name="arg2"><see cref="byte"/></param>
        /// <param name="arg3"><see cref="int"/></param>
        public SubscriptionResponseWrapper(long[] arg0, object arg1, byte arg2, int? arg3)
            : base(arg0, arg1, arg2, arg3)
        {
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/kstream/internals/foreignkeyjoin/SubscriptionResponseWrapper.html#%3Cinit%3E(long[],java.lang.Object,java.lang.Integer)"/>
        /// </summary>
        /// <param name="arg0"><see cref="long"/></param>
        /// <param name="arg1"><see cref="object"/></param>
        /// <param name="arg2"><see cref="int"/></param>
        public SubscriptionResponseWrapper(long[] arg0, object arg1, int? arg2)
            : base(arg0, arg1, arg2)
        {
        }

        #endregion

        #region Class/Interface conversion operators

        #endregion

        #region Fields

        #endregion

        #region Static methods

        #endregion

        #region Instance methods
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/kstream/internals/foreignkeyjoin/SubscriptionResponseWrapper.html#getForeignValue()"/> 
        /// </summary>
        public object ForeignValue
        {
            get { return IExecute("getForeignValue"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/kstream/internals/foreignkeyjoin/SubscriptionResponseWrapper.html#getOriginalValueHash()"/> 
        /// </summary>
        public long[] OriginalValueHash
        {
            get { return IExecuteArray<long>("getOriginalValueHash"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/kstream/internals/foreignkeyjoin/SubscriptionResponseWrapper.html#getPrimaryPartition()"/> 
        /// </summary>
        public int? PrimaryPartition
        {
            get { return IExecute<int?>("getPrimaryPartition"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/kstream/internals/foreignkeyjoin/SubscriptionResponseWrapper.html#getVersion()"/> 
        /// </summary>
        public byte Version
        {
            get { return IExecute<byte>("getVersion"); }
        }

        #endregion

        #region Nested classes

        #endregion

        // TODO: complete the class
    }
    #endregion

    #region SubscriptionResponseWrapper<FV>
    public partial class SubscriptionResponseWrapper<FV>
    {
        #region Constructors
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/kstream/internals/foreignkeyjoin/SubscriptionResponseWrapper.html#%3Cinit%3E(long[],java.lang.Object,byte,java.lang.Integer)"/>
        /// </summary>
        /// <param name="arg0"><see cref="long"/></param>
        /// <param name="arg1"><typeparamref name="FV"/></param>
        /// <param name="arg2"><see cref="byte"/></param>
        /// <param name="arg3"><see cref="int"/></param>
        public SubscriptionResponseWrapper(long[] arg0, FV arg1, byte arg2, int? arg3)
            : base(arg0, arg1, arg2, arg3)
        {
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/kstream/internals/foreignkeyjoin/SubscriptionResponseWrapper.html#%3Cinit%3E(long[],java.lang.Object,java.lang.Integer)"/>
        /// </summary>
        /// <param name="arg0"><see cref="long"/></param>
        /// <param name="arg1"><typeparamref name="FV"/></param>
        /// <param name="arg2"><see cref="int"/></param>
        public SubscriptionResponseWrapper(long[] arg0, FV arg1, int? arg2)
            : base(arg0, arg1, arg2)
        {
        }

        #endregion

        #region Class/Interface conversion operators
        /// <summary>
        /// Converter from <see cref="Org.Apache.Kafka.Streams.Kstream.Internals.Foreignkeyjoin.SubscriptionResponseWrapper{FV}"/> to <see cref="Org.Apache.Kafka.Streams.Kstream.Internals.Foreignkeyjoin.SubscriptionResponseWrapper"/>
        /// </summary>
        public static implicit operator Org.Apache.Kafka.Streams.Kstream.Internals.Foreignkeyjoin.SubscriptionResponseWrapper(Org.Apache.Kafka.Streams.Kstream.Internals.Foreignkeyjoin.SubscriptionResponseWrapper<FV> t) => t.Cast<Org.Apache.Kafka.Streams.Kstream.Internals.Foreignkeyjoin.SubscriptionResponseWrapper>();

        #endregion

        #region Fields

        #endregion

        #region Static methods

        #endregion

        #region Instance methods
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/kstream/internals/foreignkeyjoin/SubscriptionResponseWrapper.html#getForeignValue()"/> 
        /// </summary>
        public FV ForeignValue
        {
            get { return IExecute<FV>("getForeignValue"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/kstream/internals/foreignkeyjoin/SubscriptionResponseWrapper.html#getOriginalValueHash()"/> 
        /// </summary>
        public long[] OriginalValueHash
        {
            get { return IExecuteArray<long>("getOriginalValueHash"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/kstream/internals/foreignkeyjoin/SubscriptionResponseWrapper.html#getPrimaryPartition()"/> 
        /// </summary>
        public int? PrimaryPartition
        {
            get { return IExecute<int?>("getPrimaryPartition"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/kstream/internals/foreignkeyjoin/SubscriptionResponseWrapper.html#getVersion()"/> 
        /// </summary>
        public byte Version
        {
            get { return IExecute<byte>("getVersion"); }
        }

        #endregion

        #region Nested classes

        #endregion

        // TODO: complete the class
    }
    #endregion
}