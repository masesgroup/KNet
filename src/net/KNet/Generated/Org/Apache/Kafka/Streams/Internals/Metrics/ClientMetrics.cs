/*
*  Copyright 2023 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 1.5.5.0)
*  using kafka-streams-3.4.0.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Org.Apache.Kafka.Streams.Internals.Metrics
{
    #region ClientMetrics
    public partial class ClientMetrics
    {
        #region Constructors

        #endregion

        #region Class/Interface conversion operators

        #endregion

        #region Fields

        #endregion

        #region Static methods
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/internals/metrics/ClientMetrics.html#commitId()"/> 
        /// </summary>
        public static string CommitId
        {
            get { return SExecute<string>(LocalBridgeClazz, "commitId"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/internals/metrics/ClientMetrics.html#version()"/> 
        /// </summary>
        public static string Version
        {
            get { return SExecute<string>(LocalBridgeClazz, "version"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/internals/metrics/ClientMetrics.html#failedStreamThreadSensor(org.apache.kafka.streams.processor.internals.metrics.StreamsMetricsImpl)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Streams.Processor.Internals.Metrics.StreamsMetricsImpl"/></param>
        /// <returns><see cref="Org.Apache.Kafka.Common.Metrics.Sensor"/></returns>
        public static Org.Apache.Kafka.Common.Metrics.Sensor FailedStreamThreadSensor(Org.Apache.Kafka.Streams.Processor.Internals.Metrics.StreamsMetricsImpl arg0)
        {
            return SExecute<Org.Apache.Kafka.Common.Metrics.Sensor>(LocalBridgeClazz, "failedStreamThreadSensor", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/internals/metrics/ClientMetrics.html#addApplicationIdMetric(org.apache.kafka.streams.processor.internals.metrics.StreamsMetricsImpl,java.lang.String)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Streams.Processor.Internals.Metrics.StreamsMetricsImpl"/></param>
        /// <param name="arg1"><see cref="string"/></param>
        public static void AddApplicationIdMetric(Org.Apache.Kafka.Streams.Processor.Internals.Metrics.StreamsMetricsImpl arg0, string arg1)
        {
            SExecute(LocalBridgeClazz, "addApplicationIdMetric", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/internals/metrics/ClientMetrics.html#addCommitIdMetric(org.apache.kafka.streams.processor.internals.metrics.StreamsMetricsImpl)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Streams.Processor.Internals.Metrics.StreamsMetricsImpl"/></param>
        public static void AddCommitIdMetric(Org.Apache.Kafka.Streams.Processor.Internals.Metrics.StreamsMetricsImpl arg0)
        {
            SExecute(LocalBridgeClazz, "addCommitIdMetric", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/internals/metrics/ClientMetrics.html#addNumAliveStreamThreadMetric(org.apache.kafka.streams.processor.internals.metrics.StreamsMetricsImpl,org.apache.kafka.common.metrics.Gauge)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Streams.Processor.Internals.Metrics.StreamsMetricsImpl"/></param>
        /// <param name="arg1"><see cref="Org.Apache.Kafka.Common.Metrics.Gauge"/></param>
        public static void AddNumAliveStreamThreadMetric(Org.Apache.Kafka.Streams.Processor.Internals.Metrics.StreamsMetricsImpl arg0, Org.Apache.Kafka.Common.Metrics.Gauge<int?> arg1)
        {
            SExecute(LocalBridgeClazz, "addNumAliveStreamThreadMetric", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/internals/metrics/ClientMetrics.html#addStateMetric(org.apache.kafka.streams.processor.internals.metrics.StreamsMetricsImpl,org.apache.kafka.common.metrics.Gauge)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Streams.Processor.Internals.Metrics.StreamsMetricsImpl"/></param>
        /// <param name="arg1"><see cref="Org.Apache.Kafka.Common.Metrics.Gauge"/></param>
        public static void AddStateMetric(Org.Apache.Kafka.Streams.Processor.Internals.Metrics.StreamsMetricsImpl arg0, Org.Apache.Kafka.Common.Metrics.Gauge<Org.Apache.Kafka.Streams.KafkaStreams.State> arg1)
        {
            SExecute(LocalBridgeClazz, "addStateMetric", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/internals/metrics/ClientMetrics.html#addTopologyDescriptionMetric(org.apache.kafka.streams.processor.internals.metrics.StreamsMetricsImpl,org.apache.kafka.common.metrics.Gauge)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Streams.Processor.Internals.Metrics.StreamsMetricsImpl"/></param>
        /// <param name="arg1"><see cref="Org.Apache.Kafka.Common.Metrics.Gauge"/></param>
        public static void AddTopologyDescriptionMetric(Org.Apache.Kafka.Streams.Processor.Internals.Metrics.StreamsMetricsImpl arg0, Org.Apache.Kafka.Common.Metrics.Gauge<string> arg1)
        {
            SExecute(LocalBridgeClazz, "addTopologyDescriptionMetric", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/internals/metrics/ClientMetrics.html#addVersionMetric(org.apache.kafka.streams.processor.internals.metrics.StreamsMetricsImpl)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Streams.Processor.Internals.Metrics.StreamsMetricsImpl"/></param>
        public static void AddVersionMetric(Org.Apache.Kafka.Streams.Processor.Internals.Metrics.StreamsMetricsImpl arg0)
        {
            SExecute(LocalBridgeClazz, "addVersionMetric", arg0);
        }

        #endregion

        #region Instance methods

        #endregion

        #region Nested classes

        #endregion

        // TODO: complete the class
    }
    #endregion
}