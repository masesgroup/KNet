/*
*  Copyright 2023 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 1.5.5.0)
*  using kafka-streams-3.4.0.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Org.Apache.Kafka.Streams.Processor.Internals.Tasks
{
    #region TaskManager
    public partial class TaskManager
    {
        #region Constructors

        #endregion

        #region Class/Interface conversion operators

        #endregion

        #region Fields

        #endregion

        #region Static methods

        #endregion

        #region Instance methods
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/tasks/TaskManager.html#lockAllTasks()"/> 
        /// </summary>
        public Org.Apache.Kafka.Common.KafkaFuture<Java.Lang.Void> LockAllTasks
        {
            get { return IExecute<Org.Apache.Kafka.Common.KafkaFuture<Java.Lang.Void>>("lockAllTasks"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/tasks/TaskManager.html#getTasks()"/> 
        /// </summary>
        public Java.Util.Set<Org.Apache.Kafka.Streams.Processor.Internals.ReadOnlyTask> Tasks
        {
            get { return IExecute<Java.Util.Set<Org.Apache.Kafka.Streams.Processor.Internals.ReadOnlyTask>>("getTasks"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/tasks/TaskManager.html#lockTasks(java.util.Set)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Util.Set"/></param>
        /// <returns><see cref="Org.Apache.Kafka.Common.KafkaFuture"/></returns>
        public Org.Apache.Kafka.Common.KafkaFuture<Java.Lang.Void> LockTasks(Java.Util.Set<Org.Apache.Kafka.Streams.Processor.TaskId> arg0)
        {
            return IExecute<Org.Apache.Kafka.Common.KafkaFuture<Java.Lang.Void>>("lockTasks", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/tasks/TaskManager.html#assignNextTask(org.apache.kafka.streams.processor.internals.tasks.TaskExecutor)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Streams.Processor.Internals.Tasks.TaskExecutor"/></param>
        /// <returns><see cref="Org.Apache.Kafka.Streams.Processor.Internals.StreamTask"/></returns>
        public Org.Apache.Kafka.Streams.Processor.Internals.StreamTask AssignNextTask(Org.Apache.Kafka.Streams.Processor.Internals.Tasks.TaskExecutor arg0)
        {
            return IExecute<Org.Apache.Kafka.Streams.Processor.Internals.StreamTask>("assignNextTask", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/tasks/TaskManager.html#add(java.util.Set)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Util.Set"/></param>
        public void Add(Java.Util.Set<Org.Apache.Kafka.Streams.Processor.Internals.StreamTask> arg0)
        {
            IExecute("add", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/tasks/TaskManager.html#remove(org.apache.kafka.streams.processor.TaskId)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Streams.Processor.TaskId"/></param>
        public void Remove(Org.Apache.Kafka.Streams.Processor.TaskId arg0)
        {
            IExecute("remove", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/tasks/TaskManager.html#unassignTask(org.apache.kafka.streams.processor.internals.StreamTask,org.apache.kafka.streams.processor.internals.tasks.TaskExecutor)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Streams.Processor.Internals.StreamTask"/></param>
        /// <param name="arg1"><see cref="Org.Apache.Kafka.Streams.Processor.Internals.Tasks.TaskExecutor"/></param>
        public void UnassignTask(Org.Apache.Kafka.Streams.Processor.Internals.StreamTask arg0, Org.Apache.Kafka.Streams.Processor.Internals.Tasks.TaskExecutor arg1)
        {
            IExecute("unassignTask", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/tasks/TaskManager.html#unlockAllTasks()"/>
        /// </summary>
        public void UnlockAllTasks()
        {
            IExecute("unlockAllTasks");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/tasks/TaskManager.html#unlockTasks(java.util.Set)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Util.Set"/></param>
        public void UnlockTasks(Java.Util.Set<Org.Apache.Kafka.Streams.Processor.TaskId> arg0)
        {
            IExecute("unlockTasks", arg0);
        }

        #endregion

        #region Nested classes

        #endregion

        // TODO: complete the class
    }
    #endregion
}