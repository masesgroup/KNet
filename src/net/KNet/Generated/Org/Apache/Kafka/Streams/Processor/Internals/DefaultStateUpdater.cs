/*
*  Copyright 2023 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 1.5.5.0)
*  using kafka-streams-3.4.0.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Org.Apache.Kafka.Streams.Processor.Internals
{
    #region DefaultStateUpdater
    public partial class DefaultStateUpdater
    {
        #region Constructors
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/DefaultStateUpdater.html#%3Cinit%3E(java.lang.String,org.apache.kafka.streams.StreamsConfig,org.apache.kafka.streams.processor.internals.ChangelogReader,org.apache.kafka.streams.processor.internals.TopologyMetadata,org.apache.kafka.common.utils.Time)"/>
        /// </summary>
        /// <param name="arg0"><see cref="string"/></param>
        /// <param name="arg1"><see cref="Org.Apache.Kafka.Streams.StreamsConfig"/></param>
        /// <param name="arg2"><see cref="Org.Apache.Kafka.Streams.Processor.Internals.ChangelogReader"/></param>
        /// <param name="arg3"><see cref="Org.Apache.Kafka.Streams.Processor.Internals.TopologyMetadata"/></param>
        /// <param name="arg4"><see cref="Org.Apache.Kafka.Common.Utils.Time"/></param>
        public DefaultStateUpdater(string arg0, Org.Apache.Kafka.Streams.StreamsConfig arg1, Org.Apache.Kafka.Streams.Processor.Internals.ChangelogReader arg2, Org.Apache.Kafka.Streams.Processor.Internals.TopologyMetadata arg3, Org.Apache.Kafka.Common.Utils.Time arg4)
            : base(arg0, arg1, arg2, arg3, arg4)
        {
        }

        #endregion

        #region Class/Interface conversion operators
        /// <summary>
        /// Converter from <see cref="Org.Apache.Kafka.Streams.Processor.Internals.DefaultStateUpdater"/> to <see cref="Org.Apache.Kafka.Streams.Processor.Internals.StateUpdater"/>
        /// </summary>
        public static implicit operator Org.Apache.Kafka.Streams.Processor.Internals.StateUpdater(Org.Apache.Kafka.Streams.Processor.Internals.DefaultStateUpdater t) => t.Cast<Org.Apache.Kafka.Streams.Processor.Internals.StateUpdater>();

        #endregion

        #region Fields

        #endregion

        #region Static methods

        #endregion

        #region Instance methods
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/DefaultStateUpdater.html#getActiveTasks()"/> 
        /// </summary>
        public Java.Util.Set<Org.Apache.Kafka.Streams.Processor.Internals.StreamTask> ActiveTasks
        {
            get { return IExecute<Java.Util.Set<Org.Apache.Kafka.Streams.Processor.Internals.StreamTask>>("getActiveTasks"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/DefaultStateUpdater.html#drainExceptionsAndFailedTasks()"/> 
        /// </summary>
        public Java.Util.List<Org.Apache.Kafka.Streams.Processor.Internals.StateUpdater.ExceptionAndTasks> DrainExceptionsAndFailedTasks
        {
            get { return IExecute<Java.Util.List<Org.Apache.Kafka.Streams.Processor.Internals.StateUpdater.ExceptionAndTasks>>("drainExceptionsAndFailedTasks"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/DefaultStateUpdater.html#drainRemovedTasks()"/> 
        /// </summary>
        public Java.Util.Set<Org.Apache.Kafka.Streams.Processor.Internals.Task> DrainRemovedTasks
        {
            get { return IExecute<Java.Util.Set<Org.Apache.Kafka.Streams.Processor.Internals.Task>>("drainRemovedTasks"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/DefaultStateUpdater.html#getExceptionsAndFailedTasks()"/> 
        /// </summary>
        public Java.Util.List<Org.Apache.Kafka.Streams.Processor.Internals.StateUpdater.ExceptionAndTasks> ExceptionsAndFailedTasks
        {
            get { return IExecute<Java.Util.List<Org.Apache.Kafka.Streams.Processor.Internals.StateUpdater.ExceptionAndTasks>>("getExceptionsAndFailedTasks"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/DefaultStateUpdater.html#hasExceptionsAndFailedTasks()"/> 
        /// </summary>
        public bool HasExceptionsAndFailedTasks
        {
            get { return IExecute<bool>("hasExceptionsAndFailedTasks"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/DefaultStateUpdater.html#hasRemovedTasks()"/> 
        /// </summary>
        public bool HasRemovedTasks
        {
            get { return IExecute<bool>("hasRemovedTasks"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/DefaultStateUpdater.html#getPausedTasks()"/> 
        /// </summary>
        public Java.Util.Set<Org.Apache.Kafka.Streams.Processor.Internals.Task> PausedTasks
        {
            get { return IExecute<Java.Util.Set<Org.Apache.Kafka.Streams.Processor.Internals.Task>>("getPausedTasks"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/DefaultStateUpdater.html#getRemovedTasks()"/> 
        /// </summary>
        public Java.Util.Set<Org.Apache.Kafka.Streams.Processor.Internals.Task> RemovedTasks
        {
            get { return IExecute<Java.Util.Set<Org.Apache.Kafka.Streams.Processor.Internals.Task>>("getRemovedTasks"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/DefaultStateUpdater.html#getRestoredActiveTasks()"/> 
        /// </summary>
        public Java.Util.Set<Org.Apache.Kafka.Streams.Processor.Internals.StreamTask> RestoredActiveTasks
        {
            get { return IExecute<Java.Util.Set<Org.Apache.Kafka.Streams.Processor.Internals.StreamTask>>("getRestoredActiveTasks"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/DefaultStateUpdater.html#restoresActiveTasks()"/> 
        /// </summary>
        public bool RestoresActiveTasks
        {
            get { return IExecute<bool>("restoresActiveTasks"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/DefaultStateUpdater.html#getStandbyTasks()"/> 
        /// </summary>
        public Java.Util.Set<Org.Apache.Kafka.Streams.Processor.Internals.StandbyTask> StandbyTasks
        {
            get { return IExecute<Java.Util.Set<Org.Apache.Kafka.Streams.Processor.Internals.StandbyTask>>("getStandbyTasks"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/DefaultStateUpdater.html#getTasks()"/> 
        /// </summary>
        public Java.Util.Set<Org.Apache.Kafka.Streams.Processor.Internals.Task> Tasks
        {
            get { return IExecute<Java.Util.Set<Org.Apache.Kafka.Streams.Processor.Internals.Task>>("getTasks"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/DefaultStateUpdater.html#getUpdatingStandbyTasks()"/> 
        /// </summary>
        public Java.Util.Set<Org.Apache.Kafka.Streams.Processor.Internals.StandbyTask> UpdatingStandbyTasks
        {
            get { return IExecute<Java.Util.Set<Org.Apache.Kafka.Streams.Processor.Internals.StandbyTask>>("getUpdatingStandbyTasks"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/DefaultStateUpdater.html#getUpdatingTasks()"/> 
        /// </summary>
        public Java.Util.Set<Org.Apache.Kafka.Streams.Processor.Internals.Task> UpdatingTasks
        {
            get { return IExecute<Java.Util.Set<Org.Apache.Kafka.Streams.Processor.Internals.Task>>("getUpdatingTasks"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/DefaultStateUpdater.html#drainRestoredActiveTasks(java.time.Duration)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Time.Duration"/></param>
        /// <returns><see cref="Java.Util.Set"/></returns>
        public Java.Util.Set<Org.Apache.Kafka.Streams.Processor.Internals.StreamTask> DrainRestoredActiveTasks(Java.Time.Duration arg0)
        {
            return IExecute<Java.Util.Set<Org.Apache.Kafka.Streams.Processor.Internals.StreamTask>>("drainRestoredActiveTasks", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/DefaultStateUpdater.html#add(org.apache.kafka.streams.processor.internals.Task)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Streams.Processor.Internals.Task"/></param>
        public void Add(Org.Apache.Kafka.Streams.Processor.Internals.Task arg0)
        {
            IExecute("add", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/DefaultStateUpdater.html#remove(org.apache.kafka.streams.processor.TaskId)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Streams.Processor.TaskId"/></param>
        public void Remove(Org.Apache.Kafka.Streams.Processor.TaskId arg0)
        {
            IExecute("remove", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/DefaultStateUpdater.html#shutdown(java.time.Duration)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Time.Duration"/></param>
        public void Shutdown(Java.Time.Duration arg0)
        {
            IExecute("shutdown", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/DefaultStateUpdater.html#start()"/>
        /// </summary>
        public void Start()
        {
            IExecute("start");
        }

        #endregion

        #region Nested classes

        #endregion

        // TODO: complete the class
    }
    #endregion
}