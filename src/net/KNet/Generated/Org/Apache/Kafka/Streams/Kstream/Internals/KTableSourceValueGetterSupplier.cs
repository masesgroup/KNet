/*
*  Copyright 2023 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 1.5.5.0)
*  using kafka-streams-3.4.0.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Org.Apache.Kafka.Streams.Kstream.Internals
{
    #region KTableSourceValueGetterSupplier
    public partial class KTableSourceValueGetterSupplier
    {
        #region Constructors
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/kstream/internals/KTableSourceValueGetterSupplier.html#%3Cinit%3E(java.lang.String)"/>
        /// </summary>
        /// <param name="arg0"><see cref="string"/></param>
        public KTableSourceValueGetterSupplier(string arg0)
            : base(arg0)
        {
        }

        #endregion

        #region Class/Interface conversion operators
        /// <summary>
        /// Converter from <see cref="Org.Apache.Kafka.Streams.Kstream.Internals.KTableSourceValueGetterSupplier"/> to <see cref="Org.Apache.Kafka.Streams.Kstream.Internals.KTableValueGetterSupplier"/>
        /// </summary>
        public static implicit operator Org.Apache.Kafka.Streams.Kstream.Internals.KTableValueGetterSupplier(Org.Apache.Kafka.Streams.Kstream.Internals.KTableSourceValueGetterSupplier t) => t.Cast<Org.Apache.Kafka.Streams.Kstream.Internals.KTableValueGetterSupplier>();

        #endregion

        #region Fields

        #endregion

        #region Static methods

        #endregion

        #region Instance methods
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/kstream/internals/KTableSourceValueGetterSupplier.html#get()"/> 
        /// </summary>
        public Org.Apache.Kafka.Streams.Kstream.Internals.KTableValueGetter Get
        {
            get { return IExecute<Org.Apache.Kafka.Streams.Kstream.Internals.KTableValueGetter>("get"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/kstream/internals/KTableSourceValueGetterSupplier.html#storeNames()"/> 
        /// </summary>
        public string[] StoreNames
        {
            get { return IExecuteArray<string>("storeNames"); }
        }

        #endregion

        #region Nested classes

        #endregion

        // TODO: complete the class
    }
    #endregion

    #region KTableSourceValueGetterSupplier<K, V>
    public partial class KTableSourceValueGetterSupplier<K, V>
    {
        #region Constructors
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/kstream/internals/KTableSourceValueGetterSupplier.html#%3Cinit%3E(java.lang.String)"/>
        /// </summary>
        /// <param name="arg0"><see cref="string"/></param>
        public KTableSourceValueGetterSupplier(string arg0)
            : base(arg0)
        {
        }

        #endregion

        #region Class/Interface conversion operators
        /// <summary>
        /// Converter from <see cref="Org.Apache.Kafka.Streams.Kstream.Internals.KTableSourceValueGetterSupplier{K, V}"/> to <see cref="Org.Apache.Kafka.Streams.Kstream.Internals.KTableValueGetterSupplier{K, V}"/>
        /// </summary>
        public static implicit operator Org.Apache.Kafka.Streams.Kstream.Internals.KTableValueGetterSupplier<K, V>(Org.Apache.Kafka.Streams.Kstream.Internals.KTableSourceValueGetterSupplier<K, V> t) => t.Cast<Org.Apache.Kafka.Streams.Kstream.Internals.KTableValueGetterSupplier<K, V>>();
        /// <summary>
        /// Converter from <see cref="Org.Apache.Kafka.Streams.Kstream.Internals.KTableSourceValueGetterSupplier{K, V}"/> to <see cref="Org.Apache.Kafka.Streams.Kstream.Internals.KTableSourceValueGetterSupplier"/>
        /// </summary>
        public static implicit operator Org.Apache.Kafka.Streams.Kstream.Internals.KTableSourceValueGetterSupplier(Org.Apache.Kafka.Streams.Kstream.Internals.KTableSourceValueGetterSupplier<K, V> t) => t.Cast<Org.Apache.Kafka.Streams.Kstream.Internals.KTableSourceValueGetterSupplier>();

        #endregion

        #region Fields

        #endregion

        #region Static methods

        #endregion

        #region Instance methods
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/kstream/internals/KTableSourceValueGetterSupplier.html#get()"/> 
        /// </summary>
        public Org.Apache.Kafka.Streams.Kstream.Internals.KTableValueGetter<K, V> Get
        {
            get { return IExecute<Org.Apache.Kafka.Streams.Kstream.Internals.KTableValueGetter<K, V>>("get"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/kstream/internals/KTableSourceValueGetterSupplier.html#storeNames()"/> 
        /// </summary>
        public string[] StoreNames
        {
            get { return IExecuteArray<string>("storeNames"); }
        }

        #endregion

        #region Nested classes

        #endregion

        // TODO: complete the class
    }
    #endregion
}