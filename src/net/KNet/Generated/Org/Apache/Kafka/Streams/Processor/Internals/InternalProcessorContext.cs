/*
*  Copyright 2023 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 1.5.5.0)
*  using kafka-streams-3.4.0.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Org.Apache.Kafka.Streams.Processor.Internals
{
    #region InternalProcessorContext
    public partial class InternalProcessorContext
    {
        #region Constructors

        #endregion

        #region Class/Interface conversion operators
        /// <summary>
        /// Converter from <see cref="Org.Apache.Kafka.Streams.Processor.Internals.InternalProcessorContext"/> to <see cref="Org.Apache.Kafka.Streams.Processor.ProcessorContext"/>
        /// </summary>
        public static implicit operator Org.Apache.Kafka.Streams.Processor.ProcessorContext(Org.Apache.Kafka.Streams.Processor.Internals.InternalProcessorContext t) => t.Cast<Org.Apache.Kafka.Streams.Processor.ProcessorContext>();
        /// <summary>
        /// Converter from <see cref="Org.Apache.Kafka.Streams.Processor.Internals.InternalProcessorContext"/> to <see cref="Org.Apache.Kafka.Streams.Processor.Api.ProcessorContext"/>
        /// </summary>
        public static implicit operator Org.Apache.Kafka.Streams.Processor.Api.ProcessorContext(Org.Apache.Kafka.Streams.Processor.Internals.InternalProcessorContext t) => t.Cast<Org.Apache.Kafka.Streams.Processor.Api.ProcessorContext>();
        /// <summary>
        /// Converter from <see cref="Org.Apache.Kafka.Streams.Processor.Internals.InternalProcessorContext"/> to <see cref="Org.Apache.Kafka.Streams.Processor.Api.FixedKeyProcessorContext"/>
        /// </summary>
        public static implicit operator Org.Apache.Kafka.Streams.Processor.Api.FixedKeyProcessorContext(Org.Apache.Kafka.Streams.Processor.Internals.InternalProcessorContext t) => t.Cast<Org.Apache.Kafka.Streams.Processor.Api.FixedKeyProcessorContext>();
        /// <summary>
        /// Converter from <see cref="Org.Apache.Kafka.Streams.Processor.Internals.InternalProcessorContext"/> to <see cref="Org.Apache.Kafka.Streams.Processor.StateStoreContext"/>
        /// </summary>
        public static implicit operator Org.Apache.Kafka.Streams.Processor.StateStoreContext(Org.Apache.Kafka.Streams.Processor.Internals.InternalProcessorContext t) => t.Cast<Org.Apache.Kafka.Streams.Processor.StateStoreContext>();

        #endregion

        #region Fields
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/InternalProcessorContext.html#BYTEARRAY_VALUE_SERIALIZER"/>
        /// </summary>
        public static Org.Apache.Kafka.Common.Serialization.ByteArraySerializer BYTEARRAY_VALUE_SERIALIZER { get { return SGetField<Org.Apache.Kafka.Common.Serialization.ByteArraySerializer>(LocalBridgeClazz, "BYTEARRAY_VALUE_SERIALIZER"); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/InternalProcessorContext.html#BYTES_KEY_SERIALIZER"/>
        /// </summary>
        public static Org.Apache.Kafka.Common.Serialization.BytesSerializer BYTES_KEY_SERIALIZER { get { return SGetField<Org.Apache.Kafka.Common.Serialization.BytesSerializer>(LocalBridgeClazz, "BYTES_KEY_SERIALIZER"); } }

        #endregion

        #region Static methods

        #endregion

        #region Instance methods
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/InternalProcessorContext.html#cache()"/> 
        /// </summary>
        public Org.Apache.Kafka.Streams.State.Internals.ThreadCache Cache
        {
            get { return IExecute<Org.Apache.Kafka.Streams.State.Internals.ThreadCache>("cache"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/InternalProcessorContext.html#currentNode()"/> 
        /// </summary>
        public Org.Apache.Kafka.Streams.Processor.Internals.ProcessorNode CurrentNode
        {
            get { return IExecute<Org.Apache.Kafka.Streams.Processor.Internals.ProcessorNode>("currentNode"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/InternalProcessorContext.html#metrics()"/> 
        /// </summary>
        public Org.Apache.Kafka.Streams.StreamsMetrics Metrics
        {
            get { return IExecute<Org.Apache.Kafka.Streams.StreamsMetrics>("metrics"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/InternalProcessorContext.html#getProcessorMetadata()"/> <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/InternalProcessorContext.html#setProcessorMetadata(org.apache.kafka.streams.processor.internals.ProcessorMetadata)"/>
        /// </summary>
        public Org.Apache.Kafka.Streams.Processor.Internals.ProcessorMetadata ProcessorMetadata
        {
            get { return IExecute<Org.Apache.Kafka.Streams.Processor.Internals.ProcessorMetadata>("getProcessorMetadata"); } set { IExecute("setProcessorMetadata", value); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/InternalProcessorContext.html#recordContext()"/> 
        /// </summary>
        public Org.Apache.Kafka.Streams.Processor.Internals.ProcessorRecordContext RecordContext
        {
            get { return IExecute<Org.Apache.Kafka.Streams.Processor.Internals.ProcessorRecordContext>("recordContext"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/InternalProcessorContext.html#taskType()"/> 
        /// </summary>
        public Org.Apache.Kafka.Streams.Processor.Internals.Task.TaskType TaskType
        {
            get { return IExecute<Org.Apache.Kafka.Streams.Processor.Internals.Task.TaskType>("taskType"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/InternalProcessorContext.html#processorMetadataForKey(java.lang.String)"/>
        /// </summary>
        /// <param name="arg0"><see cref="string"/></param>
        /// <returns><see cref="long"/></returns>
        public long? ProcessorMetadataForKey(string arg0)
        {
            return IExecute<long?>("processorMetadataForKey", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/InternalProcessorContext.html#changelogFor(java.lang.String)"/>
        /// </summary>
        /// <param name="arg0"><see cref="string"/></param>
        /// <returns><see cref="string"/></returns>
        public string ChangelogFor(string arg0)
        {
            return IExecute<string>("changelogFor", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/InternalProcessorContext.html#addProcessorMetadataKeyValue(java.lang.String,long)"/>
        /// </summary>
        /// <param name="arg0"><see cref="string"/></param>
        /// <param name="arg1"><see cref="long"/></param>
        public void AddProcessorMetadataKeyValue(string arg0, long arg1)
        {
            IExecute("addProcessorMetadataKeyValue", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/InternalProcessorContext.html#initialize()"/>
        /// </summary>
        public void Initialize()
        {
            IExecute("initialize");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/InternalProcessorContext.html#logChange(java.lang.String,org.apache.kafka.common.utils.Bytes,byte[],long,org.apache.kafka.streams.query.Position)"/>
        /// </summary>
        /// <param name="arg0"><see cref="string"/></param>
        /// <param name="arg1"><see cref="Org.Apache.Kafka.Common.Utils.Bytes"/></param>
        /// <param name="arg2"><see cref="byte"/></param>
        /// <param name="arg3"><see cref="long"/></param>
        /// <param name="arg4"><see cref="Org.Apache.Kafka.Streams.Query.Position"/></param>
        public void LogChange(string arg0, Org.Apache.Kafka.Common.Utils.Bytes arg1, byte[] arg2, long arg3, Org.Apache.Kafka.Streams.Query.Position arg4)
        {
            IExecute("logChange", arg0, arg1, arg2, arg3, arg4);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/InternalProcessorContext.html#registerCacheFlushListener(java.lang.String,org.apache.kafka.streams.state.internals.ThreadCache.DirtyEntryFlushListener)"/>
        /// </summary>
        /// <param name="arg0"><see cref="string"/></param>
        /// <param name="arg1"><see cref="Org.Apache.Kafka.Streams.State.Internals.ThreadCache.DirtyEntryFlushListener"/></param>
        public void RegisterCacheFlushListener(string arg0, Org.Apache.Kafka.Streams.State.Internals.ThreadCache.DirtyEntryFlushListener arg1)
        {
            IExecute("registerCacheFlushListener", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/InternalProcessorContext.html#setCurrentNode(org.apache.kafka.streams.processor.internals.ProcessorNode)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Streams.Processor.Internals.ProcessorNode"/></param>
        public void SetCurrentNode(Org.Apache.Kafka.Streams.Processor.Internals.ProcessorNode arg0)
        {
            IExecute("setCurrentNode", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/InternalProcessorContext.html#setRecordContext(org.apache.kafka.streams.processor.internals.ProcessorRecordContext)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Streams.Processor.Internals.ProcessorRecordContext"/></param>
        public void SetRecordContext(Org.Apache.Kafka.Streams.Processor.Internals.ProcessorRecordContext arg0)
        {
            IExecute("setRecordContext", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/InternalProcessorContext.html#setSystemTimeMs(long)"/>
        /// </summary>
        /// <param name="arg0"><see cref="long"/></param>
        public void SetSystemTimeMs(long arg0)
        {
            IExecute("setSystemTimeMs", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/InternalProcessorContext.html#transitionToActive(org.apache.kafka.streams.processor.internals.StreamTask,org.apache.kafka.streams.processor.internals.RecordCollector,org.apache.kafka.streams.state.internals.ThreadCache)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Streams.Processor.Internals.StreamTask"/></param>
        /// <param name="arg1"><see cref="Org.Apache.Kafka.Streams.Processor.Internals.RecordCollector"/></param>
        /// <param name="arg2"><see cref="Org.Apache.Kafka.Streams.State.Internals.ThreadCache"/></param>
        public void TransitionToActive(Org.Apache.Kafka.Streams.Processor.Internals.StreamTask arg0, Org.Apache.Kafka.Streams.Processor.Internals.RecordCollector arg1, Org.Apache.Kafka.Streams.State.Internals.ThreadCache arg2)
        {
            IExecute("transitionToActive", arg0, arg1, arg2);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/InternalProcessorContext.html#transitionToStandby(org.apache.kafka.streams.state.internals.ThreadCache)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Streams.State.Internals.ThreadCache"/></param>
        public void TransitionToStandby(Org.Apache.Kafka.Streams.State.Internals.ThreadCache arg0)
        {
            IExecute("transitionToStandby", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/InternalProcessorContext.html#uninitialize()"/>
        /// </summary>
        public void Uninitialize()
        {
            IExecute("uninitialize");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/InternalProcessorContext.html#getStateStore(org.apache.kafka.streams.state.StoreBuilder)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Streams.State.StoreBuilder"/></param>
        /// <returns><see cref="Org.Apache.Kafka.Streams.Processor.StateStore"/></returns>
        public Org.Apache.Kafka.Streams.Processor.StateStore GetStateStore(Org.Apache.Kafka.Streams.State.StoreBuilder arg0)
        {
            return IExecute<Org.Apache.Kafka.Streams.Processor.StateStore>("getStateStore", arg0);
        }

        #endregion

        #region Nested classes

        #endregion

        // TODO: complete the class
    }
    #endregion

    #region InternalProcessorContext<KOut, VOut>
    public partial class InternalProcessorContext<KOut, VOut>
    {
        #region Constructors

        #endregion

        #region Class/Interface conversion operators
        /// <summary>
        /// Converter from <see cref="Org.Apache.Kafka.Streams.Processor.Internals.InternalProcessorContext{KOut, VOut}"/> to <see cref="Org.Apache.Kafka.Streams.Processor.ProcessorContext"/>
        /// </summary>
        public static implicit operator Org.Apache.Kafka.Streams.Processor.ProcessorContext(Org.Apache.Kafka.Streams.Processor.Internals.InternalProcessorContext<KOut, VOut> t) => t.Cast<Org.Apache.Kafka.Streams.Processor.ProcessorContext>();
        /// <summary>
        /// Converter from <see cref="Org.Apache.Kafka.Streams.Processor.Internals.InternalProcessorContext{KOut, VOut}"/> to <see cref="Org.Apache.Kafka.Streams.Processor.Api.ProcessorContext"/>
        /// </summary>
        public static implicit operator Org.Apache.Kafka.Streams.Processor.Api.ProcessorContext(Org.Apache.Kafka.Streams.Processor.Internals.InternalProcessorContext<KOut, VOut> t) => t.Cast<Org.Apache.Kafka.Streams.Processor.Api.ProcessorContext>();
        /// <summary>
        /// Converter from <see cref="Org.Apache.Kafka.Streams.Processor.Internals.InternalProcessorContext{KOut, VOut}"/> to <see cref="Org.Apache.Kafka.Streams.Processor.Api.FixedKeyProcessorContext"/>
        /// </summary>
        public static implicit operator Org.Apache.Kafka.Streams.Processor.Api.FixedKeyProcessorContext(Org.Apache.Kafka.Streams.Processor.Internals.InternalProcessorContext<KOut, VOut> t) => t.Cast<Org.Apache.Kafka.Streams.Processor.Api.FixedKeyProcessorContext>();
        /// <summary>
        /// Converter from <see cref="Org.Apache.Kafka.Streams.Processor.Internals.InternalProcessorContext{KOut, VOut}"/> to <see cref="Org.Apache.Kafka.Streams.Processor.StateStoreContext"/>
        /// </summary>
        public static implicit operator Org.Apache.Kafka.Streams.Processor.StateStoreContext(Org.Apache.Kafka.Streams.Processor.Internals.InternalProcessorContext<KOut, VOut> t) => t.Cast<Org.Apache.Kafka.Streams.Processor.StateStoreContext>();
        /// <summary>
        /// Converter from <see cref="Org.Apache.Kafka.Streams.Processor.Internals.InternalProcessorContext{KOut, VOut}"/> to <see cref="Org.Apache.Kafka.Streams.Processor.Internals.InternalProcessorContext"/>
        /// </summary>
        public static implicit operator Org.Apache.Kafka.Streams.Processor.Internals.InternalProcessorContext(Org.Apache.Kafka.Streams.Processor.Internals.InternalProcessorContext<KOut, VOut> t) => t.Cast<Org.Apache.Kafka.Streams.Processor.Internals.InternalProcessorContext>();

        #endregion

        #region Fields
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/InternalProcessorContext.html#BYTEARRAY_VALUE_SERIALIZER"/>
        /// </summary>
        public static Org.Apache.Kafka.Common.Serialization.ByteArraySerializer BYTEARRAY_VALUE_SERIALIZER { get { return SGetField<Org.Apache.Kafka.Common.Serialization.ByteArraySerializer>(LocalBridgeClazz, "BYTEARRAY_VALUE_SERIALIZER"); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/InternalProcessorContext.html#BYTES_KEY_SERIALIZER"/>
        /// </summary>
        public static Org.Apache.Kafka.Common.Serialization.BytesSerializer BYTES_KEY_SERIALIZER { get { return SGetField<Org.Apache.Kafka.Common.Serialization.BytesSerializer>(LocalBridgeClazz, "BYTES_KEY_SERIALIZER"); } }

        #endregion

        #region Static methods

        #endregion

        #region Instance methods
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/InternalProcessorContext.html#cache()"/> 
        /// </summary>
        public Org.Apache.Kafka.Streams.State.Internals.ThreadCache Cache
        {
            get { return IExecute<Org.Apache.Kafka.Streams.State.Internals.ThreadCache>("cache"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/InternalProcessorContext.html#currentNode()"/> 
        /// </summary>
        public Org.Apache.Kafka.Streams.Processor.Internals.ProcessorNode CurrentNode
        {
            get { return IExecute<Org.Apache.Kafka.Streams.Processor.Internals.ProcessorNode>("currentNode"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/InternalProcessorContext.html#metrics()"/> 
        /// </summary>
        public Org.Apache.Kafka.Streams.StreamsMetrics Metrics
        {
            get { return IExecute<Org.Apache.Kafka.Streams.StreamsMetrics>("metrics"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/InternalProcessorContext.html#getProcessorMetadata()"/> <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/InternalProcessorContext.html#setProcessorMetadata(org.apache.kafka.streams.processor.internals.ProcessorMetadata)"/>
        /// </summary>
        public Org.Apache.Kafka.Streams.Processor.Internals.ProcessorMetadata ProcessorMetadata
        {
            get { return IExecute<Org.Apache.Kafka.Streams.Processor.Internals.ProcessorMetadata>("getProcessorMetadata"); } set { IExecute("setProcessorMetadata", value); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/InternalProcessorContext.html#recordContext()"/> 
        /// </summary>
        public Org.Apache.Kafka.Streams.Processor.Internals.ProcessorRecordContext RecordContext
        {
            get { return IExecute<Org.Apache.Kafka.Streams.Processor.Internals.ProcessorRecordContext>("recordContext"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/InternalProcessorContext.html#taskType()"/> 
        /// </summary>
        public Org.Apache.Kafka.Streams.Processor.Internals.Task.TaskType TaskType
        {
            get { return IExecute<Org.Apache.Kafka.Streams.Processor.Internals.Task.TaskType>("taskType"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/InternalProcessorContext.html#processorMetadataForKey(java.lang.String)"/>
        /// </summary>
        /// <param name="arg0"><see cref="string"/></param>
        /// <returns><see cref="long"/></returns>
        public long? ProcessorMetadataForKey(string arg0)
        {
            return IExecute<long?>("processorMetadataForKey", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/InternalProcessorContext.html#changelogFor(java.lang.String)"/>
        /// </summary>
        /// <param name="arg0"><see cref="string"/></param>
        /// <returns><see cref="string"/></returns>
        public string ChangelogFor(string arg0)
        {
            return IExecute<string>("changelogFor", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/InternalProcessorContext.html#addProcessorMetadataKeyValue(java.lang.String,long)"/>
        /// </summary>
        /// <param name="arg0"><see cref="string"/></param>
        /// <param name="arg1"><see cref="long"/></param>
        public void AddProcessorMetadataKeyValue(string arg0, long arg1)
        {
            IExecute("addProcessorMetadataKeyValue", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/InternalProcessorContext.html#initialize()"/>
        /// </summary>
        public void Initialize()
        {
            IExecute("initialize");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/InternalProcessorContext.html#logChange(java.lang.String,org.apache.kafka.common.utils.Bytes,byte[],long,org.apache.kafka.streams.query.Position)"/>
        /// </summary>
        /// <param name="arg0"><see cref="string"/></param>
        /// <param name="arg1"><see cref="Org.Apache.Kafka.Common.Utils.Bytes"/></param>
        /// <param name="arg2"><see cref="byte"/></param>
        /// <param name="arg3"><see cref="long"/></param>
        /// <param name="arg4"><see cref="Org.Apache.Kafka.Streams.Query.Position"/></param>
        public void LogChange(string arg0, Org.Apache.Kafka.Common.Utils.Bytes arg1, byte[] arg2, long arg3, Org.Apache.Kafka.Streams.Query.Position arg4)
        {
            IExecute("logChange", arg0, arg1, arg2, arg3, arg4);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/InternalProcessorContext.html#registerCacheFlushListener(java.lang.String,org.apache.kafka.streams.state.internals.ThreadCache.DirtyEntryFlushListener)"/>
        /// </summary>
        /// <param name="arg0"><see cref="string"/></param>
        /// <param name="arg1"><see cref="Org.Apache.Kafka.Streams.State.Internals.ThreadCache.DirtyEntryFlushListener"/></param>
        public void RegisterCacheFlushListener(string arg0, Org.Apache.Kafka.Streams.State.Internals.ThreadCache.DirtyEntryFlushListener arg1)
        {
            IExecute("registerCacheFlushListener", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/InternalProcessorContext.html#setCurrentNode(org.apache.kafka.streams.processor.internals.ProcessorNode)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Streams.Processor.Internals.ProcessorNode"/></param>
        /// <typeparam name="Arg0Extendsobject"></typeparam>
        public void SetCurrentNode<Arg0Extendsobject>(Org.Apache.Kafka.Streams.Processor.Internals.ProcessorNode<Arg0Extendsobject, Arg0Extendsobject, Arg0Extendsobject, Arg0Extendsobject> arg0)
        {
            IExecute("setCurrentNode", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/InternalProcessorContext.html#setRecordContext(org.apache.kafka.streams.processor.internals.ProcessorRecordContext)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Streams.Processor.Internals.ProcessorRecordContext"/></param>
        public void SetRecordContext(Org.Apache.Kafka.Streams.Processor.Internals.ProcessorRecordContext arg0)
        {
            IExecute("setRecordContext", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/InternalProcessorContext.html#setSystemTimeMs(long)"/>
        /// </summary>
        /// <param name="arg0"><see cref="long"/></param>
        public void SetSystemTimeMs(long arg0)
        {
            IExecute("setSystemTimeMs", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/InternalProcessorContext.html#transitionToActive(org.apache.kafka.streams.processor.internals.StreamTask,org.apache.kafka.streams.processor.internals.RecordCollector,org.apache.kafka.streams.state.internals.ThreadCache)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Streams.Processor.Internals.StreamTask"/></param>
        /// <param name="arg1"><see cref="Org.Apache.Kafka.Streams.Processor.Internals.RecordCollector"/></param>
        /// <param name="arg2"><see cref="Org.Apache.Kafka.Streams.State.Internals.ThreadCache"/></param>
        public void TransitionToActive(Org.Apache.Kafka.Streams.Processor.Internals.StreamTask arg0, Org.Apache.Kafka.Streams.Processor.Internals.RecordCollector arg1, Org.Apache.Kafka.Streams.State.Internals.ThreadCache arg2)
        {
            IExecute("transitionToActive", arg0, arg1, arg2);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/InternalProcessorContext.html#transitionToStandby(org.apache.kafka.streams.state.internals.ThreadCache)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Streams.State.Internals.ThreadCache"/></param>
        public void TransitionToStandby(Org.Apache.Kafka.Streams.State.Internals.ThreadCache arg0)
        {
            IExecute("transitionToStandby", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/InternalProcessorContext.html#uninitialize()"/>
        /// </summary>
        public void Uninitialize()
        {
            IExecute("uninitialize");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/InternalProcessorContext.html#getStateStore(org.apache.kafka.streams.state.StoreBuilder)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Streams.State.StoreBuilder"/></param>
        /// <typeparam name="T"><see cref="Org.Apache.Kafka.Streams.Processor.StateStore"/></typeparam>
        /// <returns><typeparamref name="T"/></returns>
        public T GetStateStore<T>(Org.Apache.Kafka.Streams.State.StoreBuilder<T> arg0) where T: Org.Apache.Kafka.Streams.Processor.StateStore
        {
            return IExecute<T>("getStateStore", arg0);
        }

        #endregion

        #region Nested classes

        #endregion

        // TODO: complete the class
    }
    #endregion
}