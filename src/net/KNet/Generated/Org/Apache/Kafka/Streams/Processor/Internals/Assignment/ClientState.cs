/*
*  Copyright 2023 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 1.5.5.0)
*  using kafka-streams-3.4.0.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Org.Apache.Kafka.Streams.Processor.Internals.Assignment
{
    #region ClientState
    public partial class ClientState
    {
        #region Constructors
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/assignment/ClientState.html#%3Cinit%3E(java.util.Map)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Util.Map"/></param>
        public ClientState(Java.Util.Map arg0)
            : base(arg0)
        {
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/assignment/ClientState.html#%3Cinit%3E(java.util.Set,java.util.Set,java.util.Map,java.util.Map,int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Util.Set"/></param>
        /// <param name="arg1"><see cref="Java.Util.Set"/></param>
        /// <param name="arg2"><see cref="Java.Util.Map"/></param>
        /// <param name="arg3"><see cref="Java.Util.Map"/></param>
        /// <param name="arg4"><see cref="int"/></param>
        public ClientState(Java.Util.Set arg0, Java.Util.Set arg1, Java.Util.Map arg2, Java.Util.Map arg3, int arg4)
            : base(arg0, arg1, arg2, arg3, arg4)
        {
        }

        #endregion

        #region Class/Interface conversion operators

        #endregion

        #region Fields
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/assignment/ClientState.html#TOPIC_PARTITION_COMPARATOR"/>
        /// </summary>
        public static Java.Util.Comparator TOPIC_PARTITION_COMPARATOR { get { return SGetField<Java.Util.Comparator>(LocalBridgeClazz, "TOPIC_PARTITION_COMPARATOR"); } }

        #endregion

        #region Static methods

        #endregion

        #region Instance methods
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/assignment/ClientState.html#activeTaskCount()"/> 
        /// </summary>
        public int ActiveTaskCount
        {
            get { return IExecute<int>("activeTaskCount"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/assignment/ClientState.html#activeTasks()"/> 
        /// </summary>
        public Java.Util.Set<Org.Apache.Kafka.Streams.Processor.TaskId> ActiveTasks
        {
            get { return IExecute<Java.Util.Set<Org.Apache.Kafka.Streams.Processor.TaskId>>("activeTasks"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/assignment/ClientState.html#assignedActiveTasksByConsumer()"/> 
        /// </summary>
        public Java.Util.Map<string, Java.Util.Set<Org.Apache.Kafka.Streams.Processor.TaskId>> AssignedActiveTasksByConsumer
        {
            get { return IExecute<Java.Util.Map<string, Java.Util.Set<Org.Apache.Kafka.Streams.Processor.TaskId>>>("assignedActiveTasksByConsumer"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/assignment/ClientState.html#assignedStandbyTasksByConsumer()"/> 
        /// </summary>
        public Java.Util.Map<string, Java.Util.Set<Org.Apache.Kafka.Streams.Processor.TaskId>> AssignedStandbyTasksByConsumer
        {
            get { return IExecute<Java.Util.Map<string, Java.Util.Set<Org.Apache.Kafka.Streams.Processor.TaskId>>>("assignedStandbyTasksByConsumer"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/assignment/ClientState.html#assignedTaskCount()"/> 
        /// </summary>
        public int AssignedTaskCount
        {
            get { return IExecute<int>("assignedTaskCount"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/assignment/ClientState.html#clientTags()"/> 
        /// </summary>
        public Java.Util.Map<string, string> ClientTags
        {
            get { return IExecute<Java.Util.Map<string, string>>("clientTags"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/assignment/ClientState.html#consumers()"/> 
        /// </summary>
        public string Consumers
        {
            get { return IExecute<string>("consumers"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/assignment/ClientState.html#currentAssignment()"/> 
        /// </summary>
        public string CurrentAssignment
        {
            get { return IExecute<string>("currentAssignment"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/assignment/ClientState.html#prevOwnedActiveTasksByConsumer()"/> 
        /// </summary>
        public Java.Util.Map<string, Java.Util.Set<Org.Apache.Kafka.Streams.Processor.TaskId>> PrevOwnedActiveTasksByConsumer
        {
            get { return IExecute<Java.Util.Map<string, Java.Util.Set<Org.Apache.Kafka.Streams.Processor.TaskId>>>("prevOwnedActiveTasksByConsumer"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/assignment/ClientState.html#prevOwnedStandbyByConsumer()"/> 
        /// </summary>
        public Java.Util.Map<string, Java.Util.Set<Org.Apache.Kafka.Streams.Processor.TaskId>> PrevOwnedStandbyByConsumer
        {
            get { return IExecute<Java.Util.Map<string, Java.Util.Set<Org.Apache.Kafka.Streams.Processor.TaskId>>>("prevOwnedStandbyByConsumer"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/assignment/ClientState.html#revokingActiveTasksByConsumer()"/> 
        /// </summary>
        public Java.Util.Map<string, Java.Util.Set<Org.Apache.Kafka.Streams.Processor.TaskId>> RevokingActiveTasksByConsumer
        {
            get { return IExecute<Java.Util.Map<string, Java.Util.Set<Org.Apache.Kafka.Streams.Processor.TaskId>>>("revokingActiveTasksByConsumer"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/assignment/ClientState.html#standbyTasks()"/> 
        /// </summary>
        public Java.Util.Set<Org.Apache.Kafka.Streams.Processor.TaskId> StandbyTasks
        {
            get { return IExecute<Java.Util.Set<Org.Apache.Kafka.Streams.Processor.TaskId>>("standbyTasks"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/assignment/ClientState.html#statefulActiveTasks()"/> 
        /// </summary>
        public Java.Util.Set<Org.Apache.Kafka.Streams.Processor.TaskId> StatefulActiveTasks
        {
            get { return IExecute<Java.Util.Set<Org.Apache.Kafka.Streams.Processor.TaskId>>("statefulActiveTasks"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/assignment/ClientState.html#statelessActiveTasks()"/> 
        /// </summary>
        public Java.Util.Set<Org.Apache.Kafka.Streams.Processor.TaskId> StatelessActiveTasks
        {
            get { return IExecute<Java.Util.Set<Org.Apache.Kafka.Streams.Processor.TaskId>>("statelessActiveTasks"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/assignment/ClientState.html#previousOwnerForPartition(org.apache.kafka.common.TopicPartition)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Common.TopicPartition"/></param>
        /// <returns><see cref="string"/></returns>
        public string PreviousOwnerForPartition(Org.Apache.Kafka.Common.TopicPartition arg0)
        {
            return IExecute<string>("previousOwnerForPartition", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/assignment/ClientState.html#prevOwnedStatefulTasksByConsumer(java.lang.String)"/>
        /// </summary>
        /// <param name="arg0"><see cref="string"/></param>
        /// <returns><see cref="Java.Util.Set"/></returns>
        public Java.Util.Set<Org.Apache.Kafka.Streams.Processor.TaskId> PrevOwnedStatefulTasksByConsumer(string arg0)
        {
            return IExecute<Java.Util.Set<Org.Apache.Kafka.Streams.Processor.TaskId>>("prevOwnedStatefulTasksByConsumer", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/assignment/ClientState.html#prevTasksByLag(java.lang.String)"/>
        /// </summary>
        /// <param name="arg0"><see cref="string"/></param>
        /// <returns><see cref="Java.Util.SortedSet"/></returns>
        public Java.Util.SortedSet<Org.Apache.Kafka.Streams.Processor.TaskId> PrevTasksByLag(string arg0)
        {
            return IExecute<Java.Util.SortedSet<Org.Apache.Kafka.Streams.Processor.TaskId>>("prevTasksByLag", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/assignment/ClientState.html#lagFor(org.apache.kafka.streams.processor.TaskId)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Streams.Processor.TaskId"/></param>
        /// <returns><see cref="long"/></returns>
        public long LagFor(Org.Apache.Kafka.Streams.Processor.TaskId arg0)
        {
            return IExecute<long>("lagFor", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/assignment/ClientState.html#addOwnedPartitions(java.util.Collection,java.lang.String)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Util.Collection"/></param>
        /// <param name="arg1"><see cref="string"/></param>
        public void AddOwnedPartitions(Java.Util.Collection<Org.Apache.Kafka.Common.TopicPartition> arg0, string arg1)
        {
            IExecute("addOwnedPartitions", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/assignment/ClientState.html#addPreviousTasksAndOffsetSums(java.lang.String,java.util.Map)"/>
        /// </summary>
        /// <param name="arg0"><see cref="string"/></param>
        /// <param name="arg1"><see cref="Java.Util.Map"/></param>
        public void AddPreviousTasksAndOffsetSums(string arg0, Java.Util.Map<Org.Apache.Kafka.Streams.Processor.TaskId, long?> arg1)
        {
            IExecute("addPreviousTasksAndOffsetSums", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/assignment/ClientState.html#assignActive(org.apache.kafka.streams.processor.TaskId)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Streams.Processor.TaskId"/></param>
        public void AssignActive(Org.Apache.Kafka.Streams.Processor.TaskId arg0)
        {
            IExecute("assignActive", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/assignment/ClientState.html#assignActiveTasks(java.util.Collection)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Util.Collection"/></param>
        public void AssignActiveTasks(Java.Util.Collection<Org.Apache.Kafka.Streams.Processor.TaskId> arg0)
        {
            IExecute("assignActiveTasks", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/assignment/ClientState.html#assignActiveToConsumer(org.apache.kafka.streams.processor.TaskId,java.lang.String)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Streams.Processor.TaskId"/></param>
        /// <param name="arg1"><see cref="string"/></param>
        public void AssignActiveToConsumer(Org.Apache.Kafka.Streams.Processor.TaskId arg0, string arg1)
        {
            IExecute("assignActiveToConsumer", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/assignment/ClientState.html#assignStandby(org.apache.kafka.streams.processor.TaskId)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Streams.Processor.TaskId"/></param>
        public void AssignStandby(Org.Apache.Kafka.Streams.Processor.TaskId arg0)
        {
            IExecute("assignStandby", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/assignment/ClientState.html#assignStandbyToConsumer(org.apache.kafka.streams.processor.TaskId,java.lang.String)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Streams.Processor.TaskId"/></param>
        /// <param name="arg1"><see cref="string"/></param>
        public void AssignStandbyToConsumer(Org.Apache.Kafka.Streams.Processor.TaskId arg0, string arg1)
        {
            IExecute("assignStandbyToConsumer", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/assignment/ClientState.html#computeTaskLags(java.util.UUID,java.util.Map)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Util.UUID"/></param>
        /// <param name="arg1"><see cref="Java.Util.Map"/></param>
        public void ComputeTaskLags(Java.Util.UUID arg0, Java.Util.Map<Org.Apache.Kafka.Streams.Processor.TaskId, long?> arg1)
        {
            IExecute("computeTaskLags", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/assignment/ClientState.html#incrementCapacity()"/>
        /// </summary>
        public void IncrementCapacity()
        {
            IExecute("incrementCapacity");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/assignment/ClientState.html#initializePrevTasks(java.util.Map,boolean)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Util.Map"/></param>
        /// <param name="arg1"><see cref="bool"/></param>
        public void InitializePrevTasks(Java.Util.Map<Org.Apache.Kafka.Common.TopicPartition, Org.Apache.Kafka.Streams.Processor.TaskId> arg0, bool arg1)
        {
            IExecute("initializePrevTasks", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/assignment/ClientState.html#revokeActiveFromConsumer(org.apache.kafka.streams.processor.TaskId,java.lang.String)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Streams.Processor.TaskId"/></param>
        /// <param name="arg1"><see cref="string"/></param>
        public void RevokeActiveFromConsumer(Org.Apache.Kafka.Streams.Processor.TaskId arg0, string arg1)
        {
            IExecute("revokeActiveFromConsumer", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/assignment/ClientState.html#unassignActive(org.apache.kafka.streams.processor.TaskId)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Streams.Processor.TaskId"/></param>
        public void UnassignActive(Org.Apache.Kafka.Streams.Processor.TaskId arg0)
        {
            IExecute("unassignActive", arg0);
        }

        #endregion

        #region Nested classes

        #endregion

        // TODO: complete the class
    }
    #endregion
}