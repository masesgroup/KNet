/*
*  Copyright 2023 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 1.5.5.0)
*  using kafka-streams-3.4.0.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Org.Apache.Kafka.Streams.Processor.Internals.Metrics
{
    #region TaskMetrics
    public partial class TaskMetrics
    {
        #region Constructors

        #endregion

        #region Class/Interface conversion operators

        #endregion

        #region Fields

        #endregion

        #region Static methods
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/metrics/TaskMetrics.html#activeBufferedRecordsSensor(java.lang.String,java.lang.String,org.apache.kafka.streams.processor.internals.metrics.StreamsMetricsImpl)"/>
        /// </summary>
        /// <param name="arg0"><see cref="string"/></param>
        /// <param name="arg1"><see cref="string"/></param>
        /// <param name="arg2"><see cref="Org.Apache.Kafka.Streams.Processor.Internals.Metrics.StreamsMetricsImpl"/></param>
        /// <returns><see cref="Org.Apache.Kafka.Common.Metrics.Sensor"/></returns>
        public static Org.Apache.Kafka.Common.Metrics.Sensor ActiveBufferedRecordsSensor(string arg0, string arg1, Org.Apache.Kafka.Streams.Processor.Internals.Metrics.StreamsMetricsImpl arg2)
        {
            return SExecute<Org.Apache.Kafka.Common.Metrics.Sensor>(LocalBridgeClazz, "activeBufferedRecordsSensor", arg0, arg1, arg2);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/metrics/TaskMetrics.html#activeProcessRatioSensor(java.lang.String,java.lang.String,org.apache.kafka.streams.processor.internals.metrics.StreamsMetricsImpl)"/>
        /// </summary>
        /// <param name="arg0"><see cref="string"/></param>
        /// <param name="arg1"><see cref="string"/></param>
        /// <param name="arg2"><see cref="Org.Apache.Kafka.Streams.Processor.Internals.Metrics.StreamsMetricsImpl"/></param>
        /// <returns><see cref="Org.Apache.Kafka.Common.Metrics.Sensor"/></returns>
        public static Org.Apache.Kafka.Common.Metrics.Sensor ActiveProcessRatioSensor(string arg0, string arg1, Org.Apache.Kafka.Streams.Processor.Internals.Metrics.StreamsMetricsImpl arg2)
        {
            return SExecute<Org.Apache.Kafka.Common.Metrics.Sensor>(LocalBridgeClazz, "activeProcessRatioSensor", arg0, arg1, arg2);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/metrics/TaskMetrics.html#commitSensor(java.lang.String,java.lang.String,org.apache.kafka.streams.processor.internals.metrics.StreamsMetricsImpl,org.apache.kafka.common.metrics.Sensor[])"/>
        /// </summary>
        /// <param name="arg0"><see cref="string"/></param>
        /// <param name="arg1"><see cref="string"/></param>
        /// <param name="arg2"><see cref="Org.Apache.Kafka.Streams.Processor.Internals.Metrics.StreamsMetricsImpl"/></param>
        /// <param name="arg3"><see cref="Org.Apache.Kafka.Common.Metrics.Sensor"/></param>
        /// <returns><see cref="Org.Apache.Kafka.Common.Metrics.Sensor"/></returns>
        public static Org.Apache.Kafka.Common.Metrics.Sensor CommitSensor(string arg0, string arg1, Org.Apache.Kafka.Streams.Processor.Internals.Metrics.StreamsMetricsImpl arg2, params Org.Apache.Kafka.Common.Metrics.Sensor[] arg3)
        {
            if (arg3.Length == 0) return SExecute<Org.Apache.Kafka.Common.Metrics.Sensor>(LocalBridgeClazz, "commitSensor", arg0, arg1, arg2); else return SExecute<Org.Apache.Kafka.Common.Metrics.Sensor>(LocalBridgeClazz, "commitSensor", arg0, arg1, arg2, arg3);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/metrics/TaskMetrics.html#droppedRecordsSensor(java.lang.String,java.lang.String,org.apache.kafka.streams.processor.internals.metrics.StreamsMetricsImpl)"/>
        /// </summary>
        /// <param name="arg0"><see cref="string"/></param>
        /// <param name="arg1"><see cref="string"/></param>
        /// <param name="arg2"><see cref="Org.Apache.Kafka.Streams.Processor.Internals.Metrics.StreamsMetricsImpl"/></param>
        /// <returns><see cref="Org.Apache.Kafka.Common.Metrics.Sensor"/></returns>
        public static Org.Apache.Kafka.Common.Metrics.Sensor DroppedRecordsSensor(string arg0, string arg1, Org.Apache.Kafka.Streams.Processor.Internals.Metrics.StreamsMetricsImpl arg2)
        {
            return SExecute<Org.Apache.Kafka.Common.Metrics.Sensor>(LocalBridgeClazz, "droppedRecordsSensor", arg0, arg1, arg2);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/metrics/TaskMetrics.html#enforcedProcessingSensor(java.lang.String,java.lang.String,org.apache.kafka.streams.processor.internals.metrics.StreamsMetricsImpl,org.apache.kafka.common.metrics.Sensor[])"/>
        /// </summary>
        /// <param name="arg0"><see cref="string"/></param>
        /// <param name="arg1"><see cref="string"/></param>
        /// <param name="arg2"><see cref="Org.Apache.Kafka.Streams.Processor.Internals.Metrics.StreamsMetricsImpl"/></param>
        /// <param name="arg3"><see cref="Org.Apache.Kafka.Common.Metrics.Sensor"/></param>
        /// <returns><see cref="Org.Apache.Kafka.Common.Metrics.Sensor"/></returns>
        public static Org.Apache.Kafka.Common.Metrics.Sensor EnforcedProcessingSensor(string arg0, string arg1, Org.Apache.Kafka.Streams.Processor.Internals.Metrics.StreamsMetricsImpl arg2, params Org.Apache.Kafka.Common.Metrics.Sensor[] arg3)
        {
            if (arg3.Length == 0) return SExecute<Org.Apache.Kafka.Common.Metrics.Sensor>(LocalBridgeClazz, "enforcedProcessingSensor", arg0, arg1, arg2); else return SExecute<Org.Apache.Kafka.Common.Metrics.Sensor>(LocalBridgeClazz, "enforcedProcessingSensor", arg0, arg1, arg2, arg3);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/metrics/TaskMetrics.html#processLatencySensor(java.lang.String,java.lang.String,org.apache.kafka.streams.processor.internals.metrics.StreamsMetricsImpl)"/>
        /// </summary>
        /// <param name="arg0"><see cref="string"/></param>
        /// <param name="arg1"><see cref="string"/></param>
        /// <param name="arg2"><see cref="Org.Apache.Kafka.Streams.Processor.Internals.Metrics.StreamsMetricsImpl"/></param>
        /// <returns><see cref="Org.Apache.Kafka.Common.Metrics.Sensor"/></returns>
        public static Org.Apache.Kafka.Common.Metrics.Sensor ProcessLatencySensor(string arg0, string arg1, Org.Apache.Kafka.Streams.Processor.Internals.Metrics.StreamsMetricsImpl arg2)
        {
            return SExecute<Org.Apache.Kafka.Common.Metrics.Sensor>(LocalBridgeClazz, "processLatencySensor", arg0, arg1, arg2);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/metrics/TaskMetrics.html#punctuateSensor(java.lang.String,java.lang.String,org.apache.kafka.streams.processor.internals.metrics.StreamsMetricsImpl)"/>
        /// </summary>
        /// <param name="arg0"><see cref="string"/></param>
        /// <param name="arg1"><see cref="string"/></param>
        /// <param name="arg2"><see cref="Org.Apache.Kafka.Streams.Processor.Internals.Metrics.StreamsMetricsImpl"/></param>
        /// <returns><see cref="Org.Apache.Kafka.Common.Metrics.Sensor"/></returns>
        public static Org.Apache.Kafka.Common.Metrics.Sensor PunctuateSensor(string arg0, string arg1, Org.Apache.Kafka.Streams.Processor.Internals.Metrics.StreamsMetricsImpl arg2)
        {
            return SExecute<Org.Apache.Kafka.Common.Metrics.Sensor>(LocalBridgeClazz, "punctuateSensor", arg0, arg1, arg2);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/metrics/TaskMetrics.html#recordLatenessSensor(java.lang.String,java.lang.String,org.apache.kafka.streams.processor.internals.metrics.StreamsMetricsImpl)"/>
        /// </summary>
        /// <param name="arg0"><see cref="string"/></param>
        /// <param name="arg1"><see cref="string"/></param>
        /// <param name="arg2"><see cref="Org.Apache.Kafka.Streams.Processor.Internals.Metrics.StreamsMetricsImpl"/></param>
        /// <returns><see cref="Org.Apache.Kafka.Common.Metrics.Sensor"/></returns>
        public static Org.Apache.Kafka.Common.Metrics.Sensor RecordLatenessSensor(string arg0, string arg1, Org.Apache.Kafka.Streams.Processor.Internals.Metrics.StreamsMetricsImpl arg2)
        {
            return SExecute<Org.Apache.Kafka.Common.Metrics.Sensor>(LocalBridgeClazz, "recordLatenessSensor", arg0, arg1, arg2);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/metrics/TaskMetrics.html#totalCacheSizeBytesSensor(java.lang.String,java.lang.String,org.apache.kafka.streams.processor.internals.metrics.StreamsMetricsImpl)"/>
        /// </summary>
        /// <param name="arg0"><see cref="string"/></param>
        /// <param name="arg1"><see cref="string"/></param>
        /// <param name="arg2"><see cref="Org.Apache.Kafka.Streams.Processor.Internals.Metrics.StreamsMetricsImpl"/></param>
        /// <returns><see cref="Org.Apache.Kafka.Common.Metrics.Sensor"/></returns>
        public static Org.Apache.Kafka.Common.Metrics.Sensor TotalCacheSizeBytesSensor(string arg0, string arg1, Org.Apache.Kafka.Streams.Processor.Internals.Metrics.StreamsMetricsImpl arg2)
        {
            return SExecute<Org.Apache.Kafka.Common.Metrics.Sensor>(LocalBridgeClazz, "totalCacheSizeBytesSensor", arg0, arg1, arg2);
        }

        #endregion

        #region Instance methods

        #endregion

        #region Nested classes

        #endregion

        // TODO: complete the class
    }
    #endregion
}