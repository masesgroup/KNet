/*
*  Copyright 2023 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 1.5.5.0)
*  using kafka-streams-3.4.0.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Org.Apache.Kafka.Streams.Processor.Internals
{
    #region TasksRegistry
    public partial class TasksRegistry
    {
        #region Constructors

        #endregion

        #region Class/Interface conversion operators

        #endregion

        #region Fields

        #endregion

        #region Static methods

        #endregion

        #region Instance methods
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/TasksRegistry.html#activeTasks()"/> 
        /// </summary>
        public Java.Util.Collection<Org.Apache.Kafka.Streams.Processor.Internals.Task> ActiveTasks
        {
            get { return IExecute<Java.Util.Collection<Org.Apache.Kafka.Streams.Processor.Internals.Task>>("activeTasks"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/TasksRegistry.html#allTaskIds()"/> 
        /// </summary>
        public Java.Util.Set<Org.Apache.Kafka.Streams.Processor.TaskId> AllTaskIds
        {
            get { return IExecute<Java.Util.Set<Org.Apache.Kafka.Streams.Processor.TaskId>>("allTaskIds"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/TasksRegistry.html#allTasks()"/> 
        /// </summary>
        public Java.Util.Set<Org.Apache.Kafka.Streams.Processor.Internals.Task> AllTasks
        {
            get { return IExecute<Java.Util.Set<Org.Apache.Kafka.Streams.Processor.Internals.Task>>("allTasks"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/TasksRegistry.html#allTasksPerId()"/> 
        /// </summary>
        public Java.Util.Map<Org.Apache.Kafka.Streams.Processor.TaskId, Org.Apache.Kafka.Streams.Processor.Internals.Task> AllTasksPerId
        {
            get { return IExecute<Java.Util.Map<Org.Apache.Kafka.Streams.Processor.TaskId, Org.Apache.Kafka.Streams.Processor.Internals.Task>>("allTasksPerId"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/TasksRegistry.html#drainPendingTaskToInit()"/> 
        /// </summary>
        public Java.Util.Set<Org.Apache.Kafka.Streams.Processor.Internals.Task> DrainPendingTaskToInit
        {
            get { return IExecute<Java.Util.Set<Org.Apache.Kafka.Streams.Processor.Internals.Task>>("drainPendingTaskToInit"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/TasksRegistry.html#contains(org.apache.kafka.streams.processor.TaskId)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Streams.Processor.TaskId"/></param>
        /// <returns><see cref="bool"/></returns>
        public bool Contains(Org.Apache.Kafka.Streams.Processor.TaskId arg0)
        {
            return IExecute<bool>("contains", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/TasksRegistry.html#removePendingActiveTaskToSuspend(org.apache.kafka.streams.processor.TaskId)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Streams.Processor.TaskId"/></param>
        /// <returns><see cref="bool"/></returns>
        public bool RemovePendingActiveTaskToSuspend(Org.Apache.Kafka.Streams.Processor.TaskId arg0)
        {
            return IExecute<bool>("removePendingActiveTaskToSuspend", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/TasksRegistry.html#removePendingTaskToCloseClean(org.apache.kafka.streams.processor.TaskId)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Streams.Processor.TaskId"/></param>
        /// <returns><see cref="bool"/></returns>
        public bool RemovePendingTaskToCloseClean(Org.Apache.Kafka.Streams.Processor.TaskId arg0)
        {
            return IExecute<bool>("removePendingTaskToCloseClean", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/TasksRegistry.html#removePendingTaskToCloseDirty(org.apache.kafka.streams.processor.TaskId)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Streams.Processor.TaskId"/></param>
        /// <returns><see cref="bool"/></returns>
        public bool RemovePendingTaskToCloseDirty(Org.Apache.Kafka.Streams.Processor.TaskId arg0)
        {
            return IExecute<bool>("removePendingTaskToCloseDirty", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/TasksRegistry.html#updateActiveTaskInputPartitions(org.apache.kafka.streams.processor.internals.Task,java.util.Set)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Streams.Processor.Internals.Task"/></param>
        /// <param name="arg1"><see cref="Java.Util.Set"/></param>
        /// <returns><see cref="bool"/></returns>
        public bool UpdateActiveTaskInputPartitions(Org.Apache.Kafka.Streams.Processor.Internals.Task arg0, Java.Util.Set<Org.Apache.Kafka.Common.TopicPartition> arg1)
        {
            return IExecute<bool>("updateActiveTaskInputPartitions", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/TasksRegistry.html#tasks(java.util.Collection)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Util.Collection"/></param>
        /// <returns><see cref="Java.Util.Collection"/></returns>
        public Java.Util.Collection<Org.Apache.Kafka.Streams.Processor.Internals.Task> Tasks(Java.Util.Collection<Org.Apache.Kafka.Streams.Processor.TaskId> arg0)
        {
            return IExecute<Java.Util.Collection<Org.Apache.Kafka.Streams.Processor.Internals.Task>>("tasks", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/TasksRegistry.html#drainPendingActiveTasksForTopologies(java.util.Set)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Util.Set"/></param>
        /// <returns><see cref="Java.Util.Map"/></returns>
        public Java.Util.Map<Org.Apache.Kafka.Streams.Processor.TaskId, Java.Util.Set<Org.Apache.Kafka.Common.TopicPartition>> DrainPendingActiveTasksForTopologies(Java.Util.Set<string> arg0)
        {
            return IExecute<Java.Util.Map<Org.Apache.Kafka.Streams.Processor.TaskId, Java.Util.Set<Org.Apache.Kafka.Common.TopicPartition>>>("drainPendingActiveTasksForTopologies", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/TasksRegistry.html#drainPendingStandbyTasksForTopologies(java.util.Set)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Util.Set"/></param>
        /// <returns><see cref="Java.Util.Map"/></returns>
        public Java.Util.Map<Org.Apache.Kafka.Streams.Processor.TaskId, Java.Util.Set<Org.Apache.Kafka.Common.TopicPartition>> DrainPendingStandbyTasksForTopologies(Java.Util.Set<string> arg0)
        {
            return IExecute<Java.Util.Map<Org.Apache.Kafka.Streams.Processor.TaskId, Java.Util.Set<Org.Apache.Kafka.Common.TopicPartition>>>("drainPendingStandbyTasksForTopologies", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/TasksRegistry.html#removePendingTaskToRecycle(org.apache.kafka.streams.processor.TaskId)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Streams.Processor.TaskId"/></param>
        /// <returns><see cref="Java.Util.Set"/></returns>
        public Java.Util.Set<Org.Apache.Kafka.Common.TopicPartition> RemovePendingTaskToRecycle(Org.Apache.Kafka.Streams.Processor.TaskId arg0)
        {
            return IExecute<Java.Util.Set<Org.Apache.Kafka.Common.TopicPartition>>("removePendingTaskToRecycle", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/TasksRegistry.html#removePendingTaskToUpdateInputPartitions(org.apache.kafka.streams.processor.TaskId)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Streams.Processor.TaskId"/></param>
        /// <returns><see cref="Java.Util.Set"/></returns>
        public Java.Util.Set<Org.Apache.Kafka.Common.TopicPartition> RemovePendingTaskToUpdateInputPartitions(Org.Apache.Kafka.Streams.Processor.TaskId arg0)
        {
            return IExecute<Java.Util.Set<Org.Apache.Kafka.Common.TopicPartition>>("removePendingTaskToUpdateInputPartitions", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/TasksRegistry.html#activeTasksForInputPartition(org.apache.kafka.common.TopicPartition)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Common.TopicPartition"/></param>
        /// <returns><see cref="Org.Apache.Kafka.Streams.Processor.Internals.Task"/></returns>
        public Org.Apache.Kafka.Streams.Processor.Internals.Task ActiveTasksForInputPartition(Org.Apache.Kafka.Common.TopicPartition arg0)
        {
            return IExecute<Org.Apache.Kafka.Streams.Processor.Internals.Task>("activeTasksForInputPartition", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/TasksRegistry.html#task(org.apache.kafka.streams.processor.TaskId)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Streams.Processor.TaskId"/></param>
        /// <returns><see cref="Org.Apache.Kafka.Streams.Processor.Internals.Task"/></returns>
        public Org.Apache.Kafka.Streams.Processor.Internals.Task Task(Org.Apache.Kafka.Streams.Processor.TaskId arg0)
        {
            return IExecute<Org.Apache.Kafka.Streams.Processor.Internals.Task>("task", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/TasksRegistry.html#addActiveTasks(java.util.Collection)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Util.Collection"/></param>
        public void AddActiveTasks(Java.Util.Collection<Org.Apache.Kafka.Streams.Processor.Internals.Task> arg0)
        {
            IExecute("addActiveTasks", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/TasksRegistry.html#addPendingActiveTasksToCreate(java.util.Map)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Util.Map"/></param>
        public void AddPendingActiveTasksToCreate(Java.Util.Map<Org.Apache.Kafka.Streams.Processor.TaskId, Java.Util.Set<Org.Apache.Kafka.Common.TopicPartition>> arg0)
        {
            IExecute("addPendingActiveTasksToCreate", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/TasksRegistry.html#addPendingActiveTaskToSuspend(org.apache.kafka.streams.processor.TaskId)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Streams.Processor.TaskId"/></param>
        public void AddPendingActiveTaskToSuspend(Org.Apache.Kafka.Streams.Processor.TaskId arg0)
        {
            IExecute("addPendingActiveTaskToSuspend", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/TasksRegistry.html#addPendingStandbyTasksToCreate(java.util.Map)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Util.Map"/></param>
        public void AddPendingStandbyTasksToCreate(Java.Util.Map<Org.Apache.Kafka.Streams.Processor.TaskId, Java.Util.Set<Org.Apache.Kafka.Common.TopicPartition>> arg0)
        {
            IExecute("addPendingStandbyTasksToCreate", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/TasksRegistry.html#addPendingTaskToCloseClean(org.apache.kafka.streams.processor.TaskId)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Streams.Processor.TaskId"/></param>
        public void AddPendingTaskToCloseClean(Org.Apache.Kafka.Streams.Processor.TaskId arg0)
        {
            IExecute("addPendingTaskToCloseClean", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/TasksRegistry.html#addPendingTaskToCloseDirty(org.apache.kafka.streams.processor.TaskId)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Streams.Processor.TaskId"/></param>
        public void AddPendingTaskToCloseDirty(Org.Apache.Kafka.Streams.Processor.TaskId arg0)
        {
            IExecute("addPendingTaskToCloseDirty", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/TasksRegistry.html#addPendingTaskToInit(java.util.Collection)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Util.Collection"/></param>
        public void AddPendingTaskToInit(Java.Util.Collection<Org.Apache.Kafka.Streams.Processor.Internals.Task> arg0)
        {
            IExecute("addPendingTaskToInit", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/TasksRegistry.html#addPendingTaskToRecycle(org.apache.kafka.streams.processor.TaskId,java.util.Set)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Streams.Processor.TaskId"/></param>
        /// <param name="arg1"><see cref="Java.Util.Set"/></param>
        public void AddPendingTaskToRecycle(Org.Apache.Kafka.Streams.Processor.TaskId arg0, Java.Util.Set<Org.Apache.Kafka.Common.TopicPartition> arg1)
        {
            IExecute("addPendingTaskToRecycle", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/TasksRegistry.html#addPendingTaskToUpdateInputPartitions(org.apache.kafka.streams.processor.TaskId,java.util.Set)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Streams.Processor.TaskId"/></param>
        /// <param name="arg1"><see cref="Java.Util.Set"/></param>
        public void AddPendingTaskToUpdateInputPartitions(Org.Apache.Kafka.Streams.Processor.TaskId arg0, Java.Util.Set<Org.Apache.Kafka.Common.TopicPartition> arg1)
        {
            IExecute("addPendingTaskToUpdateInputPartitions", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/TasksRegistry.html#addStandbyTasks(java.util.Collection)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Util.Collection"/></param>
        public void AddStandbyTasks(Java.Util.Collection<Org.Apache.Kafka.Streams.Processor.Internals.Task> arg0)
        {
            IExecute("addStandbyTasks", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/TasksRegistry.html#addTask(org.apache.kafka.streams.processor.internals.Task)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Streams.Processor.Internals.Task"/></param>
        public void AddTask(Org.Apache.Kafka.Streams.Processor.Internals.Task arg0)
        {
            IExecute("addTask", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/TasksRegistry.html#clear()"/>
        /// </summary>
        public void Clear()
        {
            IExecute("clear");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/TasksRegistry.html#clearPendingTasksToCreate()"/>
        /// </summary>
        public void ClearPendingTasksToCreate()
        {
            IExecute("clearPendingTasksToCreate");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/TasksRegistry.html#removeTask(org.apache.kafka.streams.processor.internals.Task)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Streams.Processor.Internals.Task"/></param>
        public void RemoveTask(Org.Apache.Kafka.Streams.Processor.Internals.Task arg0)
        {
            IExecute("removeTask", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/TasksRegistry.html#replaceActiveWithStandby(org.apache.kafka.streams.processor.internals.StandbyTask)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Streams.Processor.Internals.StandbyTask"/></param>
        public void ReplaceActiveWithStandby(Org.Apache.Kafka.Streams.Processor.Internals.StandbyTask arg0)
        {
            IExecute("replaceActiveWithStandby", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/TasksRegistry.html#replaceStandbyWithActive(org.apache.kafka.streams.processor.internals.StreamTask)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Streams.Processor.Internals.StreamTask"/></param>
        public void ReplaceStandbyWithActive(Org.Apache.Kafka.Streams.Processor.Internals.StreamTask arg0)
        {
            IExecute("replaceStandbyWithActive", arg0);
        }

        #endregion

        #region Nested classes

        #endregion

        // TODO: complete the class
    }
    #endregion
}