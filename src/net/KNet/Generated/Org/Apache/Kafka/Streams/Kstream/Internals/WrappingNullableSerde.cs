/*
*  Copyright 2023 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 1.5.5.0)
*  using kafka-streams-3.4.0.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Org.Apache.Kafka.Streams.Kstream.Internals
{
    #region WrappingNullableSerde
    public partial class WrappingNullableSerde
    {
        #region Constructors

        #endregion

        #region Class/Interface conversion operators
        /// <summary>
        /// Converter from <see cref="Org.Apache.Kafka.Streams.Kstream.Internals.WrappingNullableSerde"/> to <see cref="Org.Apache.Kafka.Common.Serialization.Serde"/>
        /// </summary>
        public static implicit operator Org.Apache.Kafka.Common.Serialization.Serde(Org.Apache.Kafka.Streams.Kstream.Internals.WrappingNullableSerde t) => t.Cast<Org.Apache.Kafka.Common.Serialization.Serde>();

        #endregion

        #region Fields

        #endregion

        #region Static methods

        #endregion

        #region Instance methods
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/kstream/internals/WrappingNullableSerde.html#deserializer()"/> 
        /// </summary>
        public Org.Apache.Kafka.Common.Serialization.Deserializer Deserializer
        {
            get { return IExecute<Org.Apache.Kafka.Common.Serialization.Deserializer>("deserializer"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/kstream/internals/WrappingNullableSerde.html#serializer()"/> 
        /// </summary>
        public Org.Apache.Kafka.Common.Serialization.Serializer Serializer
        {
            get { return IExecute<Org.Apache.Kafka.Common.Serialization.Serializer>("serializer"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/kstream/internals/WrappingNullableSerde.html#close()"/>
        /// </summary>
        public void Close()
        {
            IExecute("close");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/kstream/internals/WrappingNullableSerde.html#configure(java.util.Map,boolean)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Util.Map"/></param>
        /// <param name="arg1"><see cref="bool"/></param>
        public void Configure(Java.Util.Map arg0, bool arg1)
        {
            IExecute("configure", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/kstream/internals/WrappingNullableSerde.html#setIfUnset(org.apache.kafka.streams.processor.internals.SerdeGetter)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Streams.Processor.Internals.SerdeGetter"/></param>
        public void SetIfUnset(Org.Apache.Kafka.Streams.Processor.Internals.SerdeGetter arg0)
        {
            IExecute("setIfUnset", arg0);
        }

        #endregion

        #region Nested classes

        #endregion

        // TODO: complete the class
    }
    #endregion

    #region WrappingNullableSerde<T, InnerK, InnerV>
    public partial class WrappingNullableSerde<T, InnerK, InnerV>
    {
        #region Constructors

        #endregion

        #region Class/Interface conversion operators
        /// <summary>
        /// Converter from <see cref="Org.Apache.Kafka.Streams.Kstream.Internals.WrappingNullableSerde{T, InnerK, InnerV}"/> to <see cref="Org.Apache.Kafka.Common.Serialization.Serde{T}"/>
        /// </summary>
        public static implicit operator Org.Apache.Kafka.Common.Serialization.Serde<T>(Org.Apache.Kafka.Streams.Kstream.Internals.WrappingNullableSerde<T, InnerK, InnerV> t) => t.Cast<Org.Apache.Kafka.Common.Serialization.Serde<T>>();
        /// <summary>
        /// Converter from <see cref="Org.Apache.Kafka.Streams.Kstream.Internals.WrappingNullableSerde{T, InnerK, InnerV}"/> to <see cref="Org.Apache.Kafka.Streams.Kstream.Internals.WrappingNullableSerde"/>
        /// </summary>
        public static implicit operator Org.Apache.Kafka.Streams.Kstream.Internals.WrappingNullableSerde(Org.Apache.Kafka.Streams.Kstream.Internals.WrappingNullableSerde<T, InnerK, InnerV> t) => t.Cast<Org.Apache.Kafka.Streams.Kstream.Internals.WrappingNullableSerde>();

        #endregion

        #region Fields

        #endregion

        #region Static methods

        #endregion

        #region Instance methods
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/kstream/internals/WrappingNullableSerde.html#deserializer()"/> 
        /// </summary>
        public Org.Apache.Kafka.Common.Serialization.Deserializer<T> Deserializer
        {
            get { return IExecute<Org.Apache.Kafka.Common.Serialization.Deserializer<T>>("deserializer"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/kstream/internals/WrappingNullableSerde.html#serializer()"/> 
        /// </summary>
        public Org.Apache.Kafka.Common.Serialization.Serializer<T> Serializer
        {
            get { return IExecute<Org.Apache.Kafka.Common.Serialization.Serializer<T>>("serializer"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/kstream/internals/WrappingNullableSerde.html#close()"/>
        /// </summary>
        public void Close()
        {
            IExecute("close");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/kstream/internals/WrappingNullableSerde.html#configure(java.util.Map,boolean)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Util.Map"/></param>
        /// <param name="arg1"><see cref="bool"/></param>
        /// <typeparam name="Arg0Extendsobject"></typeparam>
        public void Configure<Arg0Extendsobject>(Java.Util.Map<string, Arg0Extendsobject> arg0, bool arg1)
        {
            IExecute("configure", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/kstream/internals/WrappingNullableSerde.html#setIfUnset(org.apache.kafka.streams.processor.internals.SerdeGetter)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Streams.Processor.Internals.SerdeGetter"/></param>
        public void SetIfUnset(Org.Apache.Kafka.Streams.Processor.Internals.SerdeGetter arg0)
        {
            IExecute("setIfUnset", arg0);
        }

        #endregion

        #region Nested classes

        #endregion

        // TODO: complete the class
    }
    #endregion
}