/*
*  Copyright 2023 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 1.5.5.0)
*  using kafka-streams-3.4.0.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Org.Apache.Kafka.Streams
{
    #region TopologyDescription
    public partial class TopologyDescription
    {
        #region Constructors

        #endregion

        #region Class/Interface conversion operators

        #endregion

        #region Fields

        #endregion

        #region Static methods

        #endregion

        #region Instance methods
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/TopologyDescription.html#globalStores()"/> 
        /// </summary>
        public Java.Util.Set<Org.Apache.Kafka.Streams.TopologyDescription.GlobalStore> GlobalStores
        {
            get { return IExecute<Java.Util.Set<Org.Apache.Kafka.Streams.TopologyDescription.GlobalStore>>("globalStores"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/TopologyDescription.html#subtopologies()"/> 
        /// </summary>
        public Java.Util.Set<Org.Apache.Kafka.Streams.TopologyDescription.Subtopology> Subtopologies
        {
            get { return IExecute<Java.Util.Set<Org.Apache.Kafka.Streams.TopologyDescription.Subtopology>>("subtopologies"); }
        }

        #endregion

        #region Nested classes
        #region GlobalStore
        public partial class GlobalStore
        {
            #region Constructors

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields

            #endregion

            #region Static methods

            #endregion

            #region Instance methods
            /// <summary>
            /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/TopologyDescription.GlobalStore.html#id()"/> 
            /// </summary>
            public int Id
            {
                get { return IExecute<int>("id"); }
            }
            /// <summary>
            /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/TopologyDescription.GlobalStore.html#processor()"/>
            /// </summary>

            /// <returns><see cref="Org.Apache.Kafka.Streams.TopologyDescription.Processor"/></returns>
            public Org.Apache.Kafka.Streams.TopologyDescription.Processor ProcessorMethod()
            {
                return IExecute<Org.Apache.Kafka.Streams.TopologyDescription.Processor>("processor");
            }
            /// <summary>
            /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/TopologyDescription.GlobalStore.html#source()"/>
            /// </summary>

            /// <returns><see cref="Org.Apache.Kafka.Streams.TopologyDescription.Source"/></returns>
            public Org.Apache.Kafka.Streams.TopologyDescription.Source SourceMethod()
            {
                return IExecute<Org.Apache.Kafka.Streams.TopologyDescription.Source>("source");
            }

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

        #region Node
        public partial class Node
        {
            #region Constructors

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields

            #endregion

            #region Static methods

            #endregion

            #region Instance methods
            /// <summary>
            /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/TopologyDescription.Node.html#name()"/> 
            /// </summary>
            public string Name
            {
                get { return IExecute<string>("name"); }
            }
            /// <summary>
            /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/TopologyDescription.Node.html#predecessors()"/> 
            /// </summary>
            public Java.Util.Set<Org.Apache.Kafka.Streams.TopologyDescription.Node> Predecessors
            {
                get { return IExecute<Java.Util.Set<Org.Apache.Kafka.Streams.TopologyDescription.Node>>("predecessors"); }
            }
            /// <summary>
            /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/TopologyDescription.Node.html#successors()"/> 
            /// </summary>
            public Java.Util.Set<Org.Apache.Kafka.Streams.TopologyDescription.Node> Successors
            {
                get { return IExecute<Java.Util.Set<Org.Apache.Kafka.Streams.TopologyDescription.Node>>("successors"); }
            }

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

        #region Processor
        public partial class Processor
        {
            #region Constructors

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields

            #endregion

            #region Static methods

            #endregion

            #region Instance methods
            /// <summary>
            /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/TopologyDescription.Processor.html#stores()"/> 
            /// </summary>
            public Java.Util.Set<string> Stores
            {
                get { return IExecute<Java.Util.Set<string>>("stores"); }
            }

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

        #region Sink
        public partial class Sink
        {
            #region Constructors

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields

            #endregion

            #region Static methods

            #endregion

            #region Instance methods
            /// <summary>
            /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/TopologyDescription.Sink.html#topic()"/> 
            /// </summary>
            public string Topic
            {
                get { return IExecute<string>("topic"); }
            }
            /// <summary>
            /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/TopologyDescription.Sink.html#topicNameExtractor()"/> 
            /// </summary>
            public Org.Apache.Kafka.Streams.Processor.TopicNameExtractor TopicNameExtractor
            {
                get { return IExecute<Org.Apache.Kafka.Streams.Processor.TopicNameExtractor>("topicNameExtractor"); }
            }

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

        #region Source
        public partial class Source
        {
            #region Constructors

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields

            #endregion

            #region Static methods

            #endregion

            #region Instance methods
            /// <summary>
            /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/TopologyDescription.Source.html#topicPattern()"/> 
            /// </summary>
            public Java.Util.Regex.Pattern TopicPattern
            {
                get { return IExecute<Java.Util.Regex.Pattern>("topicPattern"); }
            }
            /// <summary>
            /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/TopologyDescription.Source.html#topicSet()"/> 
            /// </summary>
            public Java.Util.Set<string> TopicSet
            {
                get { return IExecute<Java.Util.Set<string>>("topicSet"); }
            }

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

        #region Subtopology
        public partial class Subtopology
        {
            #region Constructors

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields

            #endregion

            #region Static methods

            #endregion

            #region Instance methods
            /// <summary>
            /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/TopologyDescription.Subtopology.html#id()"/> 
            /// </summary>
            public int Id
            {
                get { return IExecute<int>("id"); }
            }
            /// <summary>
            /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/TopologyDescription.Subtopology.html#nodes()"/> 
            /// </summary>
            public Java.Util.Set<Org.Apache.Kafka.Streams.TopologyDescription.Node> Nodes
            {
                get { return IExecute<Java.Util.Set<Org.Apache.Kafka.Streams.TopologyDescription.Node>>("nodes"); }
            }

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

    
        #endregion

        // TODO: complete the class
    }
    #endregion
}