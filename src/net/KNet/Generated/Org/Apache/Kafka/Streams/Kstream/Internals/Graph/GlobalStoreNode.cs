/*
*  Copyright 2023 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 1.5.5.0)
*  using kafka-streams-3.4.0.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Org.Apache.Kafka.Streams.Kstream.Internals.Graph
{
    #region GlobalStoreNode
    public partial class GlobalStoreNode
    {
        #region Constructors
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/kstream/internals/graph/GlobalStoreNode.html#%3Cinit%3E(org.apache.kafka.streams.state.StoreBuilder,java.lang.String,java.lang.String,org.apache.kafka.streams.kstream.internals.ConsumedInternal,java.lang.String,org.apache.kafka.streams.processor.api.ProcessorSupplier)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Streams.State.StoreBuilder"/></param>
        /// <param name="arg1"><see cref="string"/></param>
        /// <param name="arg2"><see cref="string"/></param>
        /// <param name="arg3"><see cref="Org.Apache.Kafka.Streams.Kstream.Internals.ConsumedInternal"/></param>
        /// <param name="arg4"><see cref="string"/></param>
        /// <param name="arg5"><see cref="Org.Apache.Kafka.Streams.Processor.Api.ProcessorSupplier"/></param>
        public GlobalStoreNode(Org.Apache.Kafka.Streams.State.StoreBuilder arg0, string arg1, string arg2, Org.Apache.Kafka.Streams.Kstream.Internals.ConsumedInternal arg3, string arg4, Org.Apache.Kafka.Streams.Processor.Api.ProcessorSupplier arg5)
            : base(arg0, arg1, arg2, arg3, arg4, arg5)
        {
        }

        #endregion

        #region Class/Interface conversion operators

        #endregion

        #region Fields

        #endregion

        #region Static methods

        #endregion

        #region Instance methods

        #endregion

        #region Nested classes

        #endregion

        // TODO: complete the class
    }
    #endregion

    #region GlobalStoreNode<KIn, VIn, S>
    public partial class GlobalStoreNode<KIn, VIn, S>
    {
        #region Constructors
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/kstream/internals/graph/GlobalStoreNode.html#%3Cinit%3E(org.apache.kafka.streams.state.StoreBuilder,java.lang.String,java.lang.String,org.apache.kafka.streams.kstream.internals.ConsumedInternal,java.lang.String,org.apache.kafka.streams.processor.api.ProcessorSupplier)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Streams.State.StoreBuilder"/></param>
        /// <param name="arg1"><see cref="string"/></param>
        /// <param name="arg2"><see cref="string"/></param>
        /// <param name="arg3"><see cref="Org.Apache.Kafka.Streams.Kstream.Internals.ConsumedInternal"/></param>
        /// <param name="arg4"><see cref="string"/></param>
        /// <param name="arg5"><see cref="Org.Apache.Kafka.Streams.Processor.Api.ProcessorSupplier"/></param>
        public GlobalStoreNode(Org.Apache.Kafka.Streams.State.StoreBuilder<S> arg0, string arg1, string arg2, Org.Apache.Kafka.Streams.Kstream.Internals.ConsumedInternal<KIn, VIn> arg3, string arg4, Org.Apache.Kafka.Streams.Processor.Api.ProcessorSupplier<KIn, VIn, Java.Lang.Void, Java.Lang.Void> arg5)
            : base(arg0, arg1, arg2, arg3, arg4, arg5)
        {
        }

        #endregion

        #region Class/Interface conversion operators
        /// <summary>
        /// Converter from <see cref="Org.Apache.Kafka.Streams.Kstream.Internals.Graph.GlobalStoreNode{KIn, VIn, S}"/> to <see cref="Org.Apache.Kafka.Streams.Kstream.Internals.Graph.GlobalStoreNode"/>
        /// </summary>
        public static implicit operator Org.Apache.Kafka.Streams.Kstream.Internals.Graph.GlobalStoreNode(Org.Apache.Kafka.Streams.Kstream.Internals.Graph.GlobalStoreNode<KIn, VIn, S> t) => t.Cast<Org.Apache.Kafka.Streams.Kstream.Internals.Graph.GlobalStoreNode>();

        #endregion

        #region Fields

        #endregion

        #region Static methods

        #endregion

        #region Instance methods

        #endregion

        #region Nested classes

        #endregion

        // TODO: complete the class
    }
    #endregion
}