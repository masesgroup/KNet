/*
*  Copyright 2023 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 1.5.5.0)
*  using kafka-streams-3.4.0.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Org.Apache.Kafka.Streams.Processor.Internals.Assignment
{
    #region ReferenceContainer
    public partial class ReferenceContainer
    {
        #region Constructors

        #endregion

        #region Class/Interface conversion operators

        #endregion

        #region Fields
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/assignment/ReferenceContainer.html#assignmentErrorCode"/>
        /// </summary>
        public Java.Util.Concurrent.Atomic.AtomicInteger assignmentErrorCode { get { return IGetField<Java.Util.Concurrent.Atomic.AtomicInteger>("assignmentErrorCode"); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/assignment/ReferenceContainer.html#nextScheduledRebalanceMs"/>
        /// </summary>
        public Java.Util.Concurrent.Atomic.AtomicLong nextScheduledRebalanceMs { get { return IGetField<Java.Util.Concurrent.Atomic.AtomicLong>("nextScheduledRebalanceMs"); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/assignment/ReferenceContainer.html#nonFatalExceptionsToHandle"/>
        /// </summary>
        public Java.Util.Queue nonFatalExceptionsToHandle { get { return IGetField<Java.Util.Queue>("nonFatalExceptionsToHandle"); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/assignment/ReferenceContainer.html#clientTags"/>
        /// </summary>
        public Java.Util.Map clientTags { get { return IGetField<Java.Util.Map>("clientTags"); } set { ISetField("clientTags", value); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/assignment/ReferenceContainer.html#adminClient"/>
        /// </summary>
        public Org.Apache.Kafka.Clients.Admin.Admin adminClient { get { return IGetField<Org.Apache.Kafka.Clients.Admin.Admin>("adminClient"); } set { ISetField("adminClient", value); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/assignment/ReferenceContainer.html#mainConsumer"/>
        /// </summary>
        public Org.Apache.Kafka.Clients.Consumer.Consumer mainConsumer { get { return IGetField<Org.Apache.Kafka.Clients.Consumer.Consumer>("mainConsumer"); } set { ISetField("mainConsumer", value); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/assignment/ReferenceContainer.html#time"/>
        /// </summary>
        public Org.Apache.Kafka.Common.Utils.Time time { get { return IGetField<Org.Apache.Kafka.Common.Utils.Time>("time"); } set { ISetField("time", value); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/assignment/ReferenceContainer.html#streamsMetadataState"/>
        /// </summary>
        public Org.Apache.Kafka.Streams.Processor.Internals.StreamsMetadataState streamsMetadataState { get { return IGetField<Org.Apache.Kafka.Streams.Processor.Internals.StreamsMetadataState>("streamsMetadataState"); } set { ISetField("streamsMetadataState", value); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/assignment/ReferenceContainer.html#taskManager"/>
        /// </summary>
        public Org.Apache.Kafka.Streams.Processor.Internals.TaskManager taskManager { get { return IGetField<Org.Apache.Kafka.Streams.Processor.Internals.TaskManager>("taskManager"); } set { ISetField("taskManager", value); } }

        #endregion

        #region Static methods

        #endregion

        #region Instance methods

        #endregion

        #region Nested classes

        #endregion

        // TODO: complete the class
    }
    #endregion
}