/*
*  Copyright 2023 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 1.5.5.0)
*  using kafka-streams-3.4.0.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Org.Apache.Kafka.Streams.State.Internals
{
    #region PrefixedSessionKeySchemas
    public partial class PrefixedSessionKeySchemas
    {
        #region Constructors

        #endregion

        #region Class/Interface conversion operators

        #endregion

        #region Fields

        #endregion

        #region Static methods

        #endregion

        #region Instance methods

        #endregion

        #region Nested classes
        #region KeyFirstSessionKeySchema
        public partial class KeyFirstSessionKeySchema
        {
            #region Constructors

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields

            #endregion

            #region Static methods
            /// <summary>
            /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/state/internals/PrefixedSessionKeySchemas.KeyFirstSessionKeySchema.html#toBinary(org.apache.kafka.streams.kstream.Windowed,org.apache.kafka.common.serialization.Serializer,java.lang.String)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Org.Apache.Kafka.Streams.Kstream.Windowed"/></param>
            /// <param name="arg1"><see cref="Org.Apache.Kafka.Common.Serialization.Serializer"/></param>
            /// <param name="arg2"><see cref="string"/></param>
            /// <typeparam name="K"></typeparam>
            /// <returns><see cref="byte"/></returns>
            public static byte[] ToBinary<K>(Org.Apache.Kafka.Streams.Kstream.Windowed<K> arg0, Org.Apache.Kafka.Common.Serialization.Serializer<K> arg1, string arg2)
            {
                return SExecuteArray<byte>(LocalBridgeClazz, "toBinary", arg0, arg1, arg2);
            }
            /// <summary>
            /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/state/internals/PrefixedSessionKeySchemas.KeyFirstSessionKeySchema.html#from(byte[],org.apache.kafka.common.serialization.Deserializer,java.lang.String)"/>
            /// </summary>
            /// <param name="arg0"><see cref="byte"/></param>
            /// <param name="arg1"><see cref="Org.Apache.Kafka.Common.Serialization.Deserializer"/></param>
            /// <param name="arg2"><see cref="string"/></param>
            /// <typeparam name="K"></typeparam>
            /// <returns><see cref="Org.Apache.Kafka.Streams.Kstream.Windowed"/></returns>
            public static Org.Apache.Kafka.Streams.Kstream.Windowed<K> From<K>(byte[] arg0, Org.Apache.Kafka.Common.Serialization.Deserializer<K> arg1, string arg2)
            {
                return SExecute<Org.Apache.Kafka.Streams.Kstream.Windowed<K>>(LocalBridgeClazz, "from", arg0, arg1, arg2);
            }
            /// <summary>
            /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/state/internals/PrefixedSessionKeySchemas.KeyFirstSessionKeySchema.html#prefixNonPrefixSessionKey(byte[])"/>
            /// </summary>
            /// <param name="arg0"><see cref="byte"/></param>
            /// <returns><see cref="byte"/></returns>
            public static byte[] PrefixNonPrefixSessionKey(byte[] arg0)
            {
                return SExecuteArray<byte>(LocalBridgeClazz, "prefixNonPrefixSessionKey", new object[] { arg0 });
            }
            /// <summary>
            /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/state/internals/PrefixedSessionKeySchemas.KeyFirstSessionKeySchema.html#toBinary(org.apache.kafka.common.utils.Bytes,long,long)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Org.Apache.Kafka.Common.Utils.Bytes"/></param>
            /// <param name="arg1"><see cref="long"/></param>
            /// <param name="arg2"><see cref="long"/></param>
            /// <returns><see cref="Org.Apache.Kafka.Common.Utils.Bytes"/></returns>
            public static Org.Apache.Kafka.Common.Utils.Bytes ToBinary(Org.Apache.Kafka.Common.Utils.Bytes arg0, long arg1, long arg2)
            {
                return SExecute<Org.Apache.Kafka.Common.Utils.Bytes>(LocalBridgeClazz, "toBinary", arg0, arg1, arg2);
            }
            /// <summary>
            /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/state/internals/PrefixedSessionKeySchemas.KeyFirstSessionKeySchema.html#toBinary(org.apache.kafka.streams.kstream.Windowed)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Org.Apache.Kafka.Streams.Kstream.Windowed"/></param>
            /// <returns><see cref="Org.Apache.Kafka.Common.Utils.Bytes"/></returns>
            public static Org.Apache.Kafka.Common.Utils.Bytes ToBinary(Org.Apache.Kafka.Streams.Kstream.Windowed<Org.Apache.Kafka.Common.Utils.Bytes> arg0)
            {
                return SExecute<Org.Apache.Kafka.Common.Utils.Bytes>(LocalBridgeClazz, "toBinary", arg0);
            }
            /// <summary>
            /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/state/internals/PrefixedSessionKeySchemas.KeyFirstSessionKeySchema.html#from(org.apache.kafka.common.utils.Bytes)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Org.Apache.Kafka.Common.Utils.Bytes"/></param>
            /// <returns><see cref="Org.Apache.Kafka.Streams.Kstream.Windowed"/></returns>
            public static Org.Apache.Kafka.Streams.Kstream.Windowed<Org.Apache.Kafka.Common.Utils.Bytes> From(Org.Apache.Kafka.Common.Utils.Bytes arg0)
            {
                return SExecute<Org.Apache.Kafka.Streams.Kstream.Windowed<Org.Apache.Kafka.Common.Utils.Bytes>>(LocalBridgeClazz, "from", arg0);
            }

            #endregion

            #region Instance methods
            /// <summary>
            /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/state/internals/PrefixedSessionKeySchemas.KeyFirstSessionKeySchema.html#segmentTimestamp(org.apache.kafka.common.utils.Bytes)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Org.Apache.Kafka.Common.Utils.Bytes"/></param>
            /// <returns><see cref="long"/></returns>
            public long SegmentTimestamp(Org.Apache.Kafka.Common.Utils.Bytes arg0)
            {
                return IExecute<long>("segmentTimestamp", arg0);
            }
            /// <summary>
            /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/state/internals/PrefixedSessionKeySchemas.KeyFirstSessionKeySchema.html#lowerRange(org.apache.kafka.common.utils.Bytes,long)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Org.Apache.Kafka.Common.Utils.Bytes"/></param>
            /// <param name="arg1"><see cref="long"/></param>
            /// <returns><see cref="Org.Apache.Kafka.Common.Utils.Bytes"/></returns>
            public Org.Apache.Kafka.Common.Utils.Bytes LowerRange(Org.Apache.Kafka.Common.Utils.Bytes arg0, long arg1)
            {
                return IExecute<Org.Apache.Kafka.Common.Utils.Bytes>("lowerRange", arg0, arg1);
            }
            /// <summary>
            /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/state/internals/PrefixedSessionKeySchemas.KeyFirstSessionKeySchema.html#lowerRangeFixedSize(org.apache.kafka.common.utils.Bytes,long)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Org.Apache.Kafka.Common.Utils.Bytes"/></param>
            /// <param name="arg1"><see cref="long"/></param>
            /// <returns><see cref="Org.Apache.Kafka.Common.Utils.Bytes"/></returns>
            public Org.Apache.Kafka.Common.Utils.Bytes LowerRangeFixedSize(Org.Apache.Kafka.Common.Utils.Bytes arg0, long arg1)
            {
                return IExecute<Org.Apache.Kafka.Common.Utils.Bytes>("lowerRangeFixedSize", arg0, arg1);
            }
            /// <summary>
            /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/state/internals/PrefixedSessionKeySchemas.KeyFirstSessionKeySchema.html#upperRange(org.apache.kafka.common.utils.Bytes,long)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Org.Apache.Kafka.Common.Utils.Bytes"/></param>
            /// <param name="arg1"><see cref="long"/></param>
            /// <returns><see cref="Org.Apache.Kafka.Common.Utils.Bytes"/></returns>
            public Org.Apache.Kafka.Common.Utils.Bytes UpperRange(Org.Apache.Kafka.Common.Utils.Bytes arg0, long arg1)
            {
                return IExecute<Org.Apache.Kafka.Common.Utils.Bytes>("upperRange", arg0, arg1);
            }
            /// <summary>
            /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/state/internals/PrefixedSessionKeySchemas.KeyFirstSessionKeySchema.html#upperRangeFixedSize(org.apache.kafka.common.utils.Bytes,long)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Org.Apache.Kafka.Common.Utils.Bytes"/></param>
            /// <param name="arg1"><see cref="long"/></param>
            /// <returns><see cref="Org.Apache.Kafka.Common.Utils.Bytes"/></returns>
            public Org.Apache.Kafka.Common.Utils.Bytes UpperRangeFixedSize(Org.Apache.Kafka.Common.Utils.Bytes arg0, long arg1)
            {
                return IExecute<Org.Apache.Kafka.Common.Utils.Bytes>("upperRangeFixedSize", arg0, arg1);
            }

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

        #region TimeFirstSessionKeySchema
        public partial class TimeFirstSessionKeySchema
        {
            #region Constructors

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields

            #endregion

            #region Static methods
            /// <summary>
            /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/state/internals/PrefixedSessionKeySchemas.TimeFirstSessionKeySchema.html#toBinary(org.apache.kafka.streams.kstream.Windowed,org.apache.kafka.common.serialization.Serializer,java.lang.String)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Org.Apache.Kafka.Streams.Kstream.Windowed"/></param>
            /// <param name="arg1"><see cref="Org.Apache.Kafka.Common.Serialization.Serializer"/></param>
            /// <param name="arg2"><see cref="string"/></param>
            /// <typeparam name="K"></typeparam>
            /// <returns><see cref="byte"/></returns>
            public static byte[] ToBinary<K>(Org.Apache.Kafka.Streams.Kstream.Windowed<K> arg0, Org.Apache.Kafka.Common.Serialization.Serializer<K> arg1, string arg2)
            {
                return SExecuteArray<byte>(LocalBridgeClazz, "toBinary", arg0, arg1, arg2);
            }
            /// <summary>
            /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/state/internals/PrefixedSessionKeySchemas.TimeFirstSessionKeySchema.html#from(byte[],org.apache.kafka.common.serialization.Deserializer,java.lang.String)"/>
            /// </summary>
            /// <param name="arg0"><see cref="byte"/></param>
            /// <param name="arg1"><see cref="Org.Apache.Kafka.Common.Serialization.Deserializer"/></param>
            /// <param name="arg2"><see cref="string"/></param>
            /// <typeparam name="K"></typeparam>
            /// <returns><see cref="Org.Apache.Kafka.Streams.Kstream.Windowed"/></returns>
            public static Org.Apache.Kafka.Streams.Kstream.Windowed<K> From<K>(byte[] arg0, Org.Apache.Kafka.Common.Serialization.Deserializer<K> arg1, string arg2)
            {
                return SExecute<Org.Apache.Kafka.Streams.Kstream.Windowed<K>>(LocalBridgeClazz, "from", arg0, arg1, arg2);
            }
            /// <summary>
            /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/state/internals/PrefixedSessionKeySchemas.TimeFirstSessionKeySchema.html#extractWindowBytesFromNonPrefixSessionKey(byte[])"/>
            /// </summary>
            /// <param name="arg0"><see cref="byte"/></param>
            /// <returns><see cref="byte"/></returns>
            public static byte[] ExtractWindowBytesFromNonPrefixSessionKey(byte[] arg0)
            {
                return SExecuteArray<byte>(LocalBridgeClazz, "extractWindowBytesFromNonPrefixSessionKey", new object[] { arg0 });
            }
            /// <summary>
            /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/state/internals/PrefixedSessionKeySchemas.TimeFirstSessionKeySchema.html#toBinary(org.apache.kafka.common.utils.Bytes,long,long)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Org.Apache.Kafka.Common.Utils.Bytes"/></param>
            /// <param name="arg1"><see cref="long"/></param>
            /// <param name="arg2"><see cref="long"/></param>
            /// <returns><see cref="Org.Apache.Kafka.Common.Utils.Bytes"/></returns>
            public static Org.Apache.Kafka.Common.Utils.Bytes ToBinary(Org.Apache.Kafka.Common.Utils.Bytes arg0, long arg1, long arg2)
            {
                return SExecute<Org.Apache.Kafka.Common.Utils.Bytes>(LocalBridgeClazz, "toBinary", arg0, arg1, arg2);
            }
            /// <summary>
            /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/state/internals/PrefixedSessionKeySchemas.TimeFirstSessionKeySchema.html#toBinary(org.apache.kafka.streams.kstream.Windowed)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Org.Apache.Kafka.Streams.Kstream.Windowed"/></param>
            /// <returns><see cref="Org.Apache.Kafka.Common.Utils.Bytes"/></returns>
            public static Org.Apache.Kafka.Common.Utils.Bytes ToBinary(Org.Apache.Kafka.Streams.Kstream.Windowed<Org.Apache.Kafka.Common.Utils.Bytes> arg0)
            {
                return SExecute<Org.Apache.Kafka.Common.Utils.Bytes>(LocalBridgeClazz, "toBinary", arg0);
            }
            /// <summary>
            /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/state/internals/PrefixedSessionKeySchemas.TimeFirstSessionKeySchema.html#from(org.apache.kafka.common.utils.Bytes)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Org.Apache.Kafka.Common.Utils.Bytes"/></param>
            /// <returns><see cref="Org.Apache.Kafka.Streams.Kstream.Windowed"/></returns>
            public static Org.Apache.Kafka.Streams.Kstream.Windowed<Org.Apache.Kafka.Common.Utils.Bytes> From(Org.Apache.Kafka.Common.Utils.Bytes arg0)
            {
                return SExecute<Org.Apache.Kafka.Streams.Kstream.Windowed<Org.Apache.Kafka.Common.Utils.Bytes>>(LocalBridgeClazz, "from", arg0);
            }
            /// <summary>
            /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/state/internals/PrefixedSessionKeySchemas.TimeFirstSessionKeySchema.html#writeBinary(java.nio.ByteBuffer,org.apache.kafka.common.utils.Bytes,long,long)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Java.Nio.ByteBuffer"/></param>
            /// <param name="arg1"><see cref="Org.Apache.Kafka.Common.Utils.Bytes"/></param>
            /// <param name="arg2"><see cref="long"/></param>
            /// <param name="arg3"><see cref="long"/></param>
            public static void WriteBinary(Java.Nio.ByteBuffer arg0, Org.Apache.Kafka.Common.Utils.Bytes arg1, long arg2, long arg3)
            {
                SExecute(LocalBridgeClazz, "writeBinary", arg0, arg1, arg2, arg3);
            }

            #endregion

            #region Instance methods
            /// <summary>
            /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/state/internals/PrefixedSessionKeySchemas.TimeFirstSessionKeySchema.html#segmentTimestamp(org.apache.kafka.common.utils.Bytes)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Org.Apache.Kafka.Common.Utils.Bytes"/></param>
            /// <returns><see cref="long"/></returns>
            public long SegmentTimestamp(Org.Apache.Kafka.Common.Utils.Bytes arg0)
            {
                return IExecute<long>("segmentTimestamp", arg0);
            }
            /// <summary>
            /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/state/internals/PrefixedSessionKeySchemas.TimeFirstSessionKeySchema.html#lowerRange(org.apache.kafka.common.utils.Bytes,long)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Org.Apache.Kafka.Common.Utils.Bytes"/></param>
            /// <param name="arg1"><see cref="long"/></param>
            /// <returns><see cref="Org.Apache.Kafka.Common.Utils.Bytes"/></returns>
            public Org.Apache.Kafka.Common.Utils.Bytes LowerRange(Org.Apache.Kafka.Common.Utils.Bytes arg0, long arg1)
            {
                return IExecute<Org.Apache.Kafka.Common.Utils.Bytes>("lowerRange", arg0, arg1);
            }
            /// <summary>
            /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/state/internals/PrefixedSessionKeySchemas.TimeFirstSessionKeySchema.html#lowerRangeFixedSize(org.apache.kafka.common.utils.Bytes,long)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Org.Apache.Kafka.Common.Utils.Bytes"/></param>
            /// <param name="arg1"><see cref="long"/></param>
            /// <returns><see cref="Org.Apache.Kafka.Common.Utils.Bytes"/></returns>
            public Org.Apache.Kafka.Common.Utils.Bytes LowerRangeFixedSize(Org.Apache.Kafka.Common.Utils.Bytes arg0, long arg1)
            {
                return IExecute<Org.Apache.Kafka.Common.Utils.Bytes>("lowerRangeFixedSize", arg0, arg1);
            }
            /// <summary>
            /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/state/internals/PrefixedSessionKeySchemas.TimeFirstSessionKeySchema.html#upperRange(org.apache.kafka.common.utils.Bytes,long)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Org.Apache.Kafka.Common.Utils.Bytes"/></param>
            /// <param name="arg1"><see cref="long"/></param>
            /// <returns><see cref="Org.Apache.Kafka.Common.Utils.Bytes"/></returns>
            public Org.Apache.Kafka.Common.Utils.Bytes UpperRange(Org.Apache.Kafka.Common.Utils.Bytes arg0, long arg1)
            {
                return IExecute<Org.Apache.Kafka.Common.Utils.Bytes>("upperRange", arg0, arg1);
            }
            /// <summary>
            /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/state/internals/PrefixedSessionKeySchemas.TimeFirstSessionKeySchema.html#upperRangeFixedSize(org.apache.kafka.common.utils.Bytes,long)"/>
            /// </summary>
            /// <param name="arg0"><see cref="Org.Apache.Kafka.Common.Utils.Bytes"/></param>
            /// <param name="arg1"><see cref="long"/></param>
            /// <returns><see cref="Org.Apache.Kafka.Common.Utils.Bytes"/></returns>
            public Org.Apache.Kafka.Common.Utils.Bytes UpperRangeFixedSize(Org.Apache.Kafka.Common.Utils.Bytes arg0, long arg1)
            {
                return IExecute<Org.Apache.Kafka.Common.Utils.Bytes>("upperRangeFixedSize", arg0, arg1);
            }

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

    
        #endregion

        // TODO: complete the class
    }
    #endregion
}