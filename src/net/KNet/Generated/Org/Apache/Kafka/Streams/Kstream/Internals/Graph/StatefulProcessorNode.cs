/*
*  Copyright 2023 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 1.5.5.0)
*  using kafka-streams-3.4.0.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Org.Apache.Kafka.Streams.Kstream.Internals.Graph
{
    #region StatefulProcessorNode
    public partial class StatefulProcessorNode
    {
        #region Constructors
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/kstream/internals/graph/StatefulProcessorNode.html#%3Cinit%3E(java.lang.String,org.apache.kafka.streams.kstream.internals.graph.ProcessorParameters,java.lang.String[])"/>
        /// </summary>
        /// <param name="arg0"><see cref="string"/></param>
        /// <param name="arg1"><see cref="Org.Apache.Kafka.Streams.Kstream.Internals.Graph.ProcessorParameters"/></param>
        /// <param name="arg2"><see cref="string"/></param>
        public StatefulProcessorNode(string arg0, Org.Apache.Kafka.Streams.Kstream.Internals.Graph.ProcessorParameters arg1, string[] arg2)
            : base(arg0, arg1, arg2)
        {
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/kstream/internals/graph/StatefulProcessorNode.html#%3Cinit%3E(java.lang.String,org.apache.kafka.streams.kstream.internals.graph.ProcessorParameters,org.apache.kafka.streams.state.StoreBuilder)"/>
        /// </summary>
        /// <param name="arg0"><see cref="string"/></param>
        /// <param name="arg1"><see cref="Org.Apache.Kafka.Streams.Kstream.Internals.Graph.ProcessorParameters"/></param>
        /// <param name="arg2"><see cref="Org.Apache.Kafka.Streams.State.StoreBuilder"/></param>
        public StatefulProcessorNode(string arg0, Org.Apache.Kafka.Streams.Kstream.Internals.Graph.ProcessorParameters arg1, Org.Apache.Kafka.Streams.State.StoreBuilder arg2)
            : base(arg0, arg1, arg2)
        {
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/kstream/internals/graph/StatefulProcessorNode.html#%3Cinit%3E(org.apache.kafka.streams.kstream.internals.graph.ProcessorParameters,java.util.Set,java.util.Set)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Streams.Kstream.Internals.Graph.ProcessorParameters"/></param>
        /// <param name="arg1"><see cref="Java.Util.Set"/></param>
        /// <param name="arg2"><see cref="Java.Util.Set"/></param>
        public StatefulProcessorNode(Org.Apache.Kafka.Streams.Kstream.Internals.Graph.ProcessorParameters arg0, Java.Util.Set arg1, Java.Util.Set arg2)
            : base(arg0, arg1, arg2)
        {
        }

        #endregion

        #region Class/Interface conversion operators

        #endregion

        #region Fields

        #endregion

        #region Static methods

        #endregion

        #region Instance methods

        #endregion

        #region Nested classes

        #endregion

        // TODO: complete the class
    }
    #endregion

    #region StatefulProcessorNode<K, V>
    public partial class StatefulProcessorNode<K, V>
    {
        #region Constructors
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/kstream/internals/graph/StatefulProcessorNode.html#%3Cinit%3E(java.lang.String,org.apache.kafka.streams.kstream.internals.graph.ProcessorParameters,java.lang.String[])"/>
        /// </summary>
        /// <param name="arg0"><see cref="string"/></param>
        /// <param name="arg1"><see cref="Org.Apache.Kafka.Streams.Kstream.Internals.Graph.ProcessorParameters"/></param>
        /// <param name="arg2"><see cref="string"/></param>
        public StatefulProcessorNode(string arg0, Org.Apache.Kafka.Streams.Kstream.Internals.Graph.ProcessorParameters arg1, string[] arg2)
            : base(arg0, arg1, arg2)
        {
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/kstream/internals/graph/StatefulProcessorNode.html#%3Cinit%3E(java.lang.String,org.apache.kafka.streams.kstream.internals.graph.ProcessorParameters,org.apache.kafka.streams.state.StoreBuilder)"/>
        /// </summary>
        /// <param name="arg0"><see cref="string"/></param>
        /// <param name="arg1"><see cref="Org.Apache.Kafka.Streams.Kstream.Internals.Graph.ProcessorParameters"/></param>
        /// <param name="arg2"><see cref="Org.Apache.Kafka.Streams.State.StoreBuilder"/></param>
        public StatefulProcessorNode(string arg0, Org.Apache.Kafka.Streams.Kstream.Internals.Graph.ProcessorParameters arg1, Org.Apache.Kafka.Streams.State.StoreBuilder arg2)
            : base(arg0, arg1, arg2)
        {
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/kstream/internals/graph/StatefulProcessorNode.html#%3Cinit%3E(org.apache.kafka.streams.kstream.internals.graph.ProcessorParameters,java.util.Set,java.util.Set)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Streams.Kstream.Internals.Graph.ProcessorParameters"/></param>
        /// <param name="arg1"><see cref="Java.Util.Set"/></param>
        /// <param name="arg2"><see cref="Java.Util.Set"/></param>
        public StatefulProcessorNode(Org.Apache.Kafka.Streams.Kstream.Internals.Graph.ProcessorParameters arg0, Java.Util.Set arg1, Java.Util.Set arg2)
            : base(arg0, arg1, arg2)
        {
        }

        #endregion

        #region Class/Interface conversion operators
        /// <summary>
        /// Converter from <see cref="Org.Apache.Kafka.Streams.Kstream.Internals.Graph.StatefulProcessorNode{K, V}"/> to <see cref="Org.Apache.Kafka.Streams.Kstream.Internals.Graph.StatefulProcessorNode"/>
        /// </summary>
        public static implicit operator Org.Apache.Kafka.Streams.Kstream.Internals.Graph.StatefulProcessorNode(Org.Apache.Kafka.Streams.Kstream.Internals.Graph.StatefulProcessorNode<K, V> t) => t.Cast<Org.Apache.Kafka.Streams.Kstream.Internals.Graph.StatefulProcessorNode>();

        #endregion

        #region Fields

        #endregion

        #region Static methods

        #endregion

        #region Instance methods

        #endregion

        #region Nested classes

        #endregion

        // TODO: complete the class
    }
    #endregion
}