/*
*  Copyright 2023 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 1.5.5.0)
*  using kafka-streams-3.4.0.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Org.Apache.Kafka.Streams.Processor.Internals.Assignment
{
    #region AssignorConfiguration
    public partial class AssignorConfiguration
    {
        #region Constructors
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/assignment/AssignorConfiguration.html#%3Cinit%3E(java.util.Map)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Util.Map"/></param>
        public AssignorConfiguration(Java.Util.Map arg0)
            : base(arg0)
        {
        }

        #endregion

        #region Class/Interface conversion operators

        #endregion

        #region Fields

        #endregion

        #region Static methods

        #endregion

        #region Instance methods
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/assignment/AssignorConfiguration.html#copartitionedTopicsEnforcer()"/> 
        /// </summary>
        public Org.Apache.Kafka.Streams.Processor.Internals.Assignment.CopartitionedTopicsEnforcer CopartitionedTopicsEnforcer
        {
            get { return IExecute<Org.Apache.Kafka.Streams.Processor.Internals.Assignment.CopartitionedTopicsEnforcer>("copartitionedTopicsEnforcer"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/assignment/AssignorConfiguration.html#internalTopicManager()"/> 
        /// </summary>
        public Org.Apache.Kafka.Streams.Processor.Internals.InternalTopicManager InternalTopicManager
        {
            get { return IExecute<Org.Apache.Kafka.Streams.Processor.Internals.InternalTopicManager>("internalTopicManager"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/assignment/AssignorConfiguration.html#logPrefix()"/> 
        /// </summary>
        public string LogPrefix
        {
            get { return IExecute<string>("logPrefix"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/assignment/AssignorConfiguration.html#rebalanceProtocol()"/> 
        /// </summary>
        public Org.Apache.Kafka.Clients.Consumer.ConsumerPartitionAssignor.RebalanceProtocol RebalanceProtocol
        {
            get { return IExecute<Org.Apache.Kafka.Clients.Consumer.ConsumerPartitionAssignor.RebalanceProtocol>("rebalanceProtocol"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/assignment/AssignorConfiguration.html#referenceContainer()"/> 
        /// </summary>
        public Org.Apache.Kafka.Streams.Processor.Internals.Assignment.ReferenceContainer ReferenceContainer
        {
            get { return IExecute<Org.Apache.Kafka.Streams.Processor.Internals.Assignment.ReferenceContainer>("referenceContainer"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/assignment/AssignorConfiguration.html#taskAssignor()"/> 
        /// </summary>
        public Org.Apache.Kafka.Streams.Processor.Internals.Assignment.TaskAssignor TaskAssignor
        {
            get { return IExecute<Org.Apache.Kafka.Streams.Processor.Internals.Assignment.TaskAssignor>("taskAssignor"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/assignment/AssignorConfiguration.html#userEndPoint()"/> 
        /// </summary>
        public string UserEndPoint
        {
            get { return IExecute<string>("userEndPoint"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/assignment/AssignorConfiguration.html#configuredMetadataVersion(int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <returns><see cref="int"/></returns>
        public int ConfiguredMetadataVersion(int arg0)
        {
            return IExecute<int>("configuredMetadataVersion", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/assignment/AssignorConfiguration.html#assignmentConfigs()"/>
        /// </summary>

        /// <returns><see cref="Org.Apache.Kafka.Streams.Processor.Internals.Assignment.AssignorConfiguration.AssignmentConfigs"/></returns>
        public Org.Apache.Kafka.Streams.Processor.Internals.Assignment.AssignorConfiguration.AssignmentConfigs AssignmentConfigsMethod()
        {
            return IExecute<Org.Apache.Kafka.Streams.Processor.Internals.Assignment.AssignorConfiguration.AssignmentConfigs>("assignmentConfigs");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/assignment/AssignorConfiguration.html#assignmentListener()"/>
        /// </summary>

        /// <returns><see cref="Org.Apache.Kafka.Streams.Processor.Internals.Assignment.AssignorConfiguration.AssignmentListener"/></returns>
        public Org.Apache.Kafka.Streams.Processor.Internals.Assignment.AssignorConfiguration.AssignmentListener AssignmentListenerMethod()
        {
            return IExecute<Org.Apache.Kafka.Streams.Processor.Internals.Assignment.AssignorConfiguration.AssignmentListener>("assignmentListener");
        }

        #endregion

        #region Nested classes
        #region AssignmentConfigs
        public partial class AssignmentConfigs
        {
            #region Constructors

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields
            /// <summary>
            /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/assignment/AssignorConfiguration.AssignmentConfigs.html#maxWarmupReplicas"/>
            /// </summary>
            public int maxWarmupReplicas { get { return IGetField<int>("maxWarmupReplicas"); } }
            /// <summary>
            /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/assignment/AssignorConfiguration.AssignmentConfigs.html#numStandbyReplicas"/>
            /// </summary>
            public int numStandbyReplicas { get { return IGetField<int>("numStandbyReplicas"); } }
            /// <summary>
            /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/assignment/AssignorConfiguration.AssignmentConfigs.html#rackAwareAssignmentTags"/>
            /// </summary>
            public Java.Util.List rackAwareAssignmentTags { get { return IGetField<Java.Util.List>("rackAwareAssignmentTags"); } }
            /// <summary>
            /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/assignment/AssignorConfiguration.AssignmentConfigs.html#acceptableRecoveryLag"/>
            /// </summary>
            public long acceptableRecoveryLag { get { return IGetField<long>("acceptableRecoveryLag"); } }
            /// <summary>
            /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/processor/internals/assignment/AssignorConfiguration.AssignmentConfigs.html#probingRebalanceIntervalMs"/>
            /// </summary>
            public long probingRebalanceIntervalMs { get { return IGetField<long>("probingRebalanceIntervalMs"); } }

            #endregion

            #region Static methods

            #endregion

            #region Instance methods

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

    
        #endregion

        // TODO: complete the class
    }
    #endregion
}