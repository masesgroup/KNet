/*
*  Copyright 2023 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 1.5.5.0)
*  using kafka-streams-3.4.0.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Org.Apache.Kafka.Streams.State.Internals
{
    #region RocksDbIndexedTimeOrderedWindowBytesStoreSupplier
    public partial class RocksDbIndexedTimeOrderedWindowBytesStoreSupplier
    {
        #region Constructors
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/state/internals/RocksDbIndexedTimeOrderedWindowBytesStoreSupplier.html#%3Cinit%3E(java.lang.String,long,long,long,boolean,boolean)"/>
        /// </summary>
        /// <param name="arg0"><see cref="string"/></param>
        /// <param name="arg1"><see cref="long"/></param>
        /// <param name="arg2"><see cref="long"/></param>
        /// <param name="arg3"><see cref="long"/></param>
        /// <param name="arg4"><see cref="bool"/></param>
        /// <param name="arg5"><see cref="bool"/></param>
        public RocksDbIndexedTimeOrderedWindowBytesStoreSupplier(string arg0, long arg1, long arg2, long arg3, bool arg4, bool arg5)
            : base(arg0, arg1, arg2, arg3, arg4, arg5)
        {
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/state/internals/RocksDbIndexedTimeOrderedWindowBytesStoreSupplier.html#%3Cinit%3E(java.lang.String,long,long,long,boolean,org.apache.kafka.streams.state.internals.RocksDbIndexedTimeOrderedWindowBytesStoreSupplier.WindowStoreTypes)"/>
        /// </summary>
        /// <param name="arg0"><see cref="string"/></param>
        /// <param name="arg1"><see cref="long"/></param>
        /// <param name="arg2"><see cref="long"/></param>
        /// <param name="arg3"><see cref="long"/></param>
        /// <param name="arg4"><see cref="bool"/></param>
        /// <param name="arg5"><see cref="Org.Apache.Kafka.Streams.State.Internals.RocksDbIndexedTimeOrderedWindowBytesStoreSupplier.WindowStoreTypes"/></param>
        public RocksDbIndexedTimeOrderedWindowBytesStoreSupplier(string arg0, long arg1, long arg2, long arg3, bool arg4, Org.Apache.Kafka.Streams.State.Internals.RocksDbIndexedTimeOrderedWindowBytesStoreSupplier.WindowStoreTypes arg5)
            : base(arg0, arg1, arg2, arg3, arg4, arg5)
        {
        }

        #endregion

        #region Class/Interface conversion operators
        /// <summary>
        /// Converter from <see cref="Org.Apache.Kafka.Streams.State.Internals.RocksDbIndexedTimeOrderedWindowBytesStoreSupplier"/> to <see cref="Org.Apache.Kafka.Streams.State.WindowBytesStoreSupplier"/>
        /// </summary>
        public static implicit operator Org.Apache.Kafka.Streams.State.WindowBytesStoreSupplier(Org.Apache.Kafka.Streams.State.Internals.RocksDbIndexedTimeOrderedWindowBytesStoreSupplier t) => t.Cast<Org.Apache.Kafka.Streams.State.WindowBytesStoreSupplier>();

        #endregion

        #region Fields

        #endregion

        #region Static methods
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/state/internals/RocksDbIndexedTimeOrderedWindowBytesStoreSupplier.html#create(java.lang.String,java.time.Duration,java.time.Duration,boolean,boolean)"/>
        /// </summary>
        /// <param name="arg0"><see cref="string"/></param>
        /// <param name="arg1"><see cref="Java.Time.Duration"/></param>
        /// <param name="arg2"><see cref="Java.Time.Duration"/></param>
        /// <param name="arg3"><see cref="bool"/></param>
        /// <param name="arg4"><see cref="bool"/></param>
        /// <returns><see cref="Org.Apache.Kafka.Streams.State.Internals.RocksDbIndexedTimeOrderedWindowBytesStoreSupplier"/></returns>
        public static Org.Apache.Kafka.Streams.State.Internals.RocksDbIndexedTimeOrderedWindowBytesStoreSupplier Create(string arg0, Java.Time.Duration arg1, Java.Time.Duration arg2, bool arg3, bool arg4)
        {
            return SExecute<Org.Apache.Kafka.Streams.State.Internals.RocksDbIndexedTimeOrderedWindowBytesStoreSupplier>(LocalBridgeClazz, "create", arg0, arg1, arg2, arg3, arg4);
        }

        #endregion

        #region Instance methods
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/state/internals/RocksDbIndexedTimeOrderedWindowBytesStoreSupplier.html#get()"/> 
        /// </summary>
        public Org.Apache.Kafka.Streams.Processor.StateStore Get
        {
            get { return IExecute<Org.Apache.Kafka.Streams.Processor.StateStore>("get"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/state/internals/RocksDbIndexedTimeOrderedWindowBytesStoreSupplier.html#metricsScope()"/> 
        /// </summary>
        public string MetricsScope
        {
            get { return IExecute<string>("metricsScope"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/state/internals/RocksDbIndexedTimeOrderedWindowBytesStoreSupplier.html#name()"/> 
        /// </summary>
        public string Name
        {
            get { return IExecute<string>("name"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/state/internals/RocksDbIndexedTimeOrderedWindowBytesStoreSupplier.html#retainDuplicates()"/> 
        /// </summary>
        public bool RetainDuplicates
        {
            get { return IExecute<bool>("retainDuplicates"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/state/internals/RocksDbIndexedTimeOrderedWindowBytesStoreSupplier.html#retentionPeriod()"/> 
        /// </summary>
        public long RetentionPeriod
        {
            get { return IExecute<long>("retentionPeriod"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/state/internals/RocksDbIndexedTimeOrderedWindowBytesStoreSupplier.html#segmentIntervalMs()"/> 
        /// </summary>
        public long SegmentIntervalMs
        {
            get { return IExecute<long>("segmentIntervalMs"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/state/internals/RocksDbIndexedTimeOrderedWindowBytesStoreSupplier.html#windowSize()"/> 
        /// </summary>
        public long WindowSize
        {
            get { return IExecute<long>("windowSize"); }
        }

        #endregion

        #region Nested classes
        #region WindowStoreTypes
        public partial class WindowStoreTypes
        {
            #region Constructors

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields
            /// <summary>
            /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/state/internals/RocksDbIndexedTimeOrderedWindowBytesStoreSupplier.WindowStoreTypes.html#DEFAULT_WINDOW_STORE"/>
            /// </summary>
            public static Org.Apache.Kafka.Streams.State.Internals.RocksDbIndexedTimeOrderedWindowBytesStoreSupplier.WindowStoreTypes DEFAULT_WINDOW_STORE { get { return SGetField<Org.Apache.Kafka.Streams.State.Internals.RocksDbIndexedTimeOrderedWindowBytesStoreSupplier.WindowStoreTypes>(LocalBridgeClazz, "DEFAULT_WINDOW_STORE"); } }
            /// <summary>
            /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/state/internals/RocksDbIndexedTimeOrderedWindowBytesStoreSupplier.WindowStoreTypes.html#INDEXED_WINDOW_STORE"/>
            /// </summary>
            public static Org.Apache.Kafka.Streams.State.Internals.RocksDbIndexedTimeOrderedWindowBytesStoreSupplier.WindowStoreTypes INDEXED_WINDOW_STORE { get { return SGetField<Org.Apache.Kafka.Streams.State.Internals.RocksDbIndexedTimeOrderedWindowBytesStoreSupplier.WindowStoreTypes>(LocalBridgeClazz, "INDEXED_WINDOW_STORE"); } }

            #endregion

            #region Static methods
            /// <summary>
            /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/state/internals/RocksDbIndexedTimeOrderedWindowBytesStoreSupplier.WindowStoreTypes.html#values()"/> 
            /// </summary>
            public static Org.Apache.Kafka.Streams.State.Internals.RocksDbIndexedTimeOrderedWindowBytesStoreSupplier.WindowStoreTypes[] Values
            {
                get { return SExecuteArray<Org.Apache.Kafka.Streams.State.Internals.RocksDbIndexedTimeOrderedWindowBytesStoreSupplier.WindowStoreTypes>(LocalBridgeClazz, "values"); }
            }
            /// <summary>
            /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-streams/3.4.0/org/apache/kafka/streams/state/internals/RocksDbIndexedTimeOrderedWindowBytesStoreSupplier.WindowStoreTypes.html#valueOf(java.lang.String)"/>
            /// </summary>
            /// <param name="arg0"><see cref="string"/></param>
            /// <returns><see cref="Org.Apache.Kafka.Streams.State.Internals.RocksDbIndexedTimeOrderedWindowBytesStoreSupplier.WindowStoreTypes"/></returns>
            public static Org.Apache.Kafka.Streams.State.Internals.RocksDbIndexedTimeOrderedWindowBytesStoreSupplier.WindowStoreTypes ValueOf(string arg0)
            {
                return SExecute<Org.Apache.Kafka.Streams.State.Internals.RocksDbIndexedTimeOrderedWindowBytesStoreSupplier.WindowStoreTypes>(LocalBridgeClazz, "valueOf", arg0);
            }

            #endregion

            #region Instance methods

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

    
        #endregion

        // TODO: complete the class
    }
    #endregion
}