/*
*  Copyright (c) 2021-2025 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 2.6.4.0)
*  using kafka-streams-4.1.0.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Org.Apache.Kafka.Streams.Kstream
{
    #region KStream declaration
    /// <summary>
    /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-streams/4.1.0/org/apache/kafka/streams/kstream/KStream.html"/>
    /// </summary>
    public partial class KStream : MASES.JCOBridge.C2JBridge.JVMBridgeBase<KStream>
    {
        const string _bridgeClassName = "org.apache.kafka.streams.kstream.KStream";
        /// <summary>
        /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
        /// </summary>
        [global::System.Obsolete("KStream class represents, in .NET, an instance of a JVM interface or abstract class. This public initializer is needed for JCOBridge internal use, other uses can produce unidentible behaviors.")]
        public KStream() { }
        /// <summary>
        /// Internal constructor: used internally from JCOBridge
        /// </summary>
        [global::System.Obsolete("This public initializer is needed for JCOBridge internal use, other uses can produce unidentible behaviors.")]
        public KStream(IJVMBridgeBaseInitializer initializer) : base(initializer) { }
        /// <summary>
        /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
        /// </summary>
        [global::System.Obsolete("KStream class represents, in .NET, an instance of a JVM interface or abstract class. This public initializer is needed for JCOBridge internal use, other uses can produce unidentible behaviors.")]
        public KStream(params object[] args) : base(args) { }

        private static readonly global::System.Exception _LocalBridgeClazzException = null;
        private static readonly MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType _LocalBridgeClazz = JVMBridgeBase.ClazzOf(_bridgeClassName, out _LocalBridgeClazzException, false);
        private static MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType LocalBridgeClazz => _LocalBridgeClazz ?? throw _LocalBridgeClazzException ?? new global::System.InvalidOperationException($"Class {_bridgeClassName} was not found.");

        /// <inheritdoc/>
        public override string BridgeClassName => _bridgeClassName;
        /// <inheritdoc/>
        public override bool IsBridgeAbstract => true;
        /// <inheritdoc/>
        public override bool IsBridgeCloseable => false;
        /// <inheritdoc/>
        public override bool IsBridgeInterface => true;
        /// <inheritdoc/>
        public override bool IsBridgeStatic => false;

        // TODO: complete the class

    }
    #endregion

    #region KStream<K, V> declaration
    /// <summary>
    /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-streams/4.1.0/org/apache/kafka/streams/kstream/KStream.html"/>
    /// </summary>
    /// <typeparam name="K"></typeparam>
    /// <typeparam name="V"></typeparam>
    public partial class KStream<K, V> : MASES.JCOBridge.C2JBridge.JVMBridgeBase<KStream<K, V>>
    {
        const string _bridgeClassName = "org.apache.kafka.streams.kstream.KStream";
        /// <summary>
        /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
        /// </summary>
        [global::System.Obsolete("KStream class represents, in .NET, an instance of a JVM interface or abstract class. This public initializer is needed for JCOBridge internal use, other uses can produce unidentible behaviors.")]
        public KStream() { }
        /// <summary>
        /// Internal constructor: used internally from JCOBridge
        /// </summary>
        [global::System.Obsolete("This public initializer is needed for JCOBridge internal use, other uses can produce unidentible behaviors.")]
        public KStream(IJVMBridgeBaseInitializer initializer) : base(initializer) { }
        /// <summary>
        /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
        /// </summary>
        [global::System.Obsolete("KStream class represents, in .NET, an instance of a JVM interface or abstract class. This public initializer is needed for JCOBridge internal use, other uses can produce unidentible behaviors.")]
        public KStream(params object[] args) : base(args) { }

        private static readonly global::System.Exception _LocalBridgeClazzException = null;
        private static readonly MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType _LocalBridgeClazz = JVMBridgeBase.ClazzOf(_bridgeClassName, out _LocalBridgeClazzException, false);
        private static MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType LocalBridgeClazz => _LocalBridgeClazz ?? throw _LocalBridgeClazzException ?? new global::System.InvalidOperationException($"Class {_bridgeClassName} was not found.");

        /// <inheritdoc/>
        public override string BridgeClassName => _bridgeClassName;
        /// <inheritdoc/>
        public override bool IsBridgeAbstract => true;
        /// <inheritdoc/>
        public override bool IsBridgeCloseable => false;
        /// <inheritdoc/>
        public override bool IsBridgeInterface => true;
        /// <inheritdoc/>
        public override bool IsBridgeStatic => false;

        // TODO: complete the class
    
    }
    #endregion

    #region KStream implementation
    public partial class KStream
    {
        #region Constructors

        #endregion

        #region Class/Interface conversion operators

        #endregion

        #region Fields

        #endregion

        #region Static methods

        #endregion

        #region Instance methods
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-streams/4.1.0/org/apache/kafka/streams/kstream/KStream.html#join(org.apache.kafka.streams.kstream.GlobalKTable,org.apache.kafka.streams.kstream.KeyValueMapper,org.apache.kafka.streams.kstream.ValueJoiner,org.apache.kafka.streams.kstream.Named)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Streams.Kstream.GlobalKTable"/></param>
        /// <param name="arg1"><see cref="Org.Apache.Kafka.Streams.Kstream.KeyValueMapper"/></param>
        /// <param name="arg2"><see cref="Org.Apache.Kafka.Streams.Kstream.ValueJoiner"/></param>
        /// <param name="arg3"><see cref="Org.Apache.Kafka.Streams.Kstream.Named"/></param>
        /// <returns><see cref="Org.Apache.Kafka.Streams.Kstream.KStream"/></returns>
        public Org.Apache.Kafka.Streams.Kstream.KStream Join(Org.Apache.Kafka.Streams.Kstream.GlobalKTable arg0, Org.Apache.Kafka.Streams.Kstream.KeyValueMapper arg1, Org.Apache.Kafka.Streams.Kstream.ValueJoiner arg2, Org.Apache.Kafka.Streams.Kstream.Named arg3)
        {
            return IExecuteWithSignature<Org.Apache.Kafka.Streams.Kstream.KStream>("join", "(Lorg/apache/kafka/streams/kstream/GlobalKTable;Lorg/apache/kafka/streams/kstream/KeyValueMapper;Lorg/apache/kafka/streams/kstream/ValueJoiner;Lorg/apache/kafka/streams/kstream/Named;)Lorg/apache/kafka/streams/kstream/KStream;", arg0, arg1, arg2, arg3);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-streams/4.1.0/org/apache/kafka/streams/kstream/KStream.html#join(org.apache.kafka.streams.kstream.GlobalKTable,org.apache.kafka.streams.kstream.KeyValueMapper,org.apache.kafka.streams.kstream.ValueJoiner)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Streams.Kstream.GlobalKTable"/></param>
        /// <param name="arg1"><see cref="Org.Apache.Kafka.Streams.Kstream.KeyValueMapper"/></param>
        /// <param name="arg2"><see cref="Org.Apache.Kafka.Streams.Kstream.ValueJoiner"/></param>
        /// <returns><see cref="Org.Apache.Kafka.Streams.Kstream.KStream"/></returns>
        public Org.Apache.Kafka.Streams.Kstream.KStream Join(Org.Apache.Kafka.Streams.Kstream.GlobalKTable arg0, Org.Apache.Kafka.Streams.Kstream.KeyValueMapper arg1, Org.Apache.Kafka.Streams.Kstream.ValueJoiner arg2)
        {
            return IExecuteWithSignature<Org.Apache.Kafka.Streams.Kstream.KStream>("join", "(Lorg/apache/kafka/streams/kstream/GlobalKTable;Lorg/apache/kafka/streams/kstream/KeyValueMapper;Lorg/apache/kafka/streams/kstream/ValueJoiner;)Lorg/apache/kafka/streams/kstream/KStream;", arg0, arg1, arg2);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-streams/4.1.0/org/apache/kafka/streams/kstream/KStream.html#join(org.apache.kafka.streams.kstream.GlobalKTable,org.apache.kafka.streams.kstream.KeyValueMapper,org.apache.kafka.streams.kstream.ValueJoinerWithKey,org.apache.kafka.streams.kstream.Named)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Streams.Kstream.GlobalKTable"/></param>
        /// <param name="arg1"><see cref="Org.Apache.Kafka.Streams.Kstream.KeyValueMapper"/></param>
        /// <param name="arg2"><see cref="Org.Apache.Kafka.Streams.Kstream.ValueJoinerWithKey"/></param>
        /// <param name="arg3"><see cref="Org.Apache.Kafka.Streams.Kstream.Named"/></param>
        /// <returns><see cref="Org.Apache.Kafka.Streams.Kstream.KStream"/></returns>
        public Org.Apache.Kafka.Streams.Kstream.KStream Join(Org.Apache.Kafka.Streams.Kstream.GlobalKTable arg0, Org.Apache.Kafka.Streams.Kstream.KeyValueMapper arg1, Org.Apache.Kafka.Streams.Kstream.ValueJoinerWithKey arg2, Org.Apache.Kafka.Streams.Kstream.Named arg3)
        {
            return IExecuteWithSignature<Org.Apache.Kafka.Streams.Kstream.KStream>("join", "(Lorg/apache/kafka/streams/kstream/GlobalKTable;Lorg/apache/kafka/streams/kstream/KeyValueMapper;Lorg/apache/kafka/streams/kstream/ValueJoinerWithKey;Lorg/apache/kafka/streams/kstream/Named;)Lorg/apache/kafka/streams/kstream/KStream;", arg0, arg1, arg2, arg3);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-streams/4.1.0/org/apache/kafka/streams/kstream/KStream.html#join(org.apache.kafka.streams.kstream.GlobalKTable,org.apache.kafka.streams.kstream.KeyValueMapper,org.apache.kafka.streams.kstream.ValueJoinerWithKey)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Streams.Kstream.GlobalKTable"/></param>
        /// <param name="arg1"><see cref="Org.Apache.Kafka.Streams.Kstream.KeyValueMapper"/></param>
        /// <param name="arg2"><see cref="Org.Apache.Kafka.Streams.Kstream.ValueJoinerWithKey"/></param>
        /// <returns><see cref="Org.Apache.Kafka.Streams.Kstream.KStream"/></returns>
        public Org.Apache.Kafka.Streams.Kstream.KStream Join(Org.Apache.Kafka.Streams.Kstream.GlobalKTable arg0, Org.Apache.Kafka.Streams.Kstream.KeyValueMapper arg1, Org.Apache.Kafka.Streams.Kstream.ValueJoinerWithKey arg2)
        {
            return IExecuteWithSignature<Org.Apache.Kafka.Streams.Kstream.KStream>("join", "(Lorg/apache/kafka/streams/kstream/GlobalKTable;Lorg/apache/kafka/streams/kstream/KeyValueMapper;Lorg/apache/kafka/streams/kstream/ValueJoinerWithKey;)Lorg/apache/kafka/streams/kstream/KStream;", arg0, arg1, arg2);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-streams/4.1.0/org/apache/kafka/streams/kstream/KStream.html#leftJoin(org.apache.kafka.streams.kstream.GlobalKTable,org.apache.kafka.streams.kstream.KeyValueMapper,org.apache.kafka.streams.kstream.ValueJoiner,org.apache.kafka.streams.kstream.Named)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Streams.Kstream.GlobalKTable"/></param>
        /// <param name="arg1"><see cref="Org.Apache.Kafka.Streams.Kstream.KeyValueMapper"/></param>
        /// <param name="arg2"><see cref="Org.Apache.Kafka.Streams.Kstream.ValueJoiner"/></param>
        /// <param name="arg3"><see cref="Org.Apache.Kafka.Streams.Kstream.Named"/></param>
        /// <returns><see cref="Org.Apache.Kafka.Streams.Kstream.KStream"/></returns>
        public Org.Apache.Kafka.Streams.Kstream.KStream LeftJoin(Org.Apache.Kafka.Streams.Kstream.GlobalKTable arg0, Org.Apache.Kafka.Streams.Kstream.KeyValueMapper arg1, Org.Apache.Kafka.Streams.Kstream.ValueJoiner arg2, Org.Apache.Kafka.Streams.Kstream.Named arg3)
        {
            return IExecuteWithSignature<Org.Apache.Kafka.Streams.Kstream.KStream>("leftJoin", "(Lorg/apache/kafka/streams/kstream/GlobalKTable;Lorg/apache/kafka/streams/kstream/KeyValueMapper;Lorg/apache/kafka/streams/kstream/ValueJoiner;Lorg/apache/kafka/streams/kstream/Named;)Lorg/apache/kafka/streams/kstream/KStream;", arg0, arg1, arg2, arg3);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-streams/4.1.0/org/apache/kafka/streams/kstream/KStream.html#leftJoin(org.apache.kafka.streams.kstream.GlobalKTable,org.apache.kafka.streams.kstream.KeyValueMapper,org.apache.kafka.streams.kstream.ValueJoiner)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Streams.Kstream.GlobalKTable"/></param>
        /// <param name="arg1"><see cref="Org.Apache.Kafka.Streams.Kstream.KeyValueMapper"/></param>
        /// <param name="arg2"><see cref="Org.Apache.Kafka.Streams.Kstream.ValueJoiner"/></param>
        /// <returns><see cref="Org.Apache.Kafka.Streams.Kstream.KStream"/></returns>
        public Org.Apache.Kafka.Streams.Kstream.KStream LeftJoin(Org.Apache.Kafka.Streams.Kstream.GlobalKTable arg0, Org.Apache.Kafka.Streams.Kstream.KeyValueMapper arg1, Org.Apache.Kafka.Streams.Kstream.ValueJoiner arg2)
        {
            return IExecuteWithSignature<Org.Apache.Kafka.Streams.Kstream.KStream>("leftJoin", "(Lorg/apache/kafka/streams/kstream/GlobalKTable;Lorg/apache/kafka/streams/kstream/KeyValueMapper;Lorg/apache/kafka/streams/kstream/ValueJoiner;)Lorg/apache/kafka/streams/kstream/KStream;", arg0, arg1, arg2);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-streams/4.1.0/org/apache/kafka/streams/kstream/KStream.html#leftJoin(org.apache.kafka.streams.kstream.GlobalKTable,org.apache.kafka.streams.kstream.KeyValueMapper,org.apache.kafka.streams.kstream.ValueJoinerWithKey,org.apache.kafka.streams.kstream.Named)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Streams.Kstream.GlobalKTable"/></param>
        /// <param name="arg1"><see cref="Org.Apache.Kafka.Streams.Kstream.KeyValueMapper"/></param>
        /// <param name="arg2"><see cref="Org.Apache.Kafka.Streams.Kstream.ValueJoinerWithKey"/></param>
        /// <param name="arg3"><see cref="Org.Apache.Kafka.Streams.Kstream.Named"/></param>
        /// <returns><see cref="Org.Apache.Kafka.Streams.Kstream.KStream"/></returns>
        public Org.Apache.Kafka.Streams.Kstream.KStream LeftJoin(Org.Apache.Kafka.Streams.Kstream.GlobalKTable arg0, Org.Apache.Kafka.Streams.Kstream.KeyValueMapper arg1, Org.Apache.Kafka.Streams.Kstream.ValueJoinerWithKey arg2, Org.Apache.Kafka.Streams.Kstream.Named arg3)
        {
            return IExecuteWithSignature<Org.Apache.Kafka.Streams.Kstream.KStream>("leftJoin", "(Lorg/apache/kafka/streams/kstream/GlobalKTable;Lorg/apache/kafka/streams/kstream/KeyValueMapper;Lorg/apache/kafka/streams/kstream/ValueJoinerWithKey;Lorg/apache/kafka/streams/kstream/Named;)Lorg/apache/kafka/streams/kstream/KStream;", arg0, arg1, arg2, arg3);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-streams/4.1.0/org/apache/kafka/streams/kstream/KStream.html#leftJoin(org.apache.kafka.streams.kstream.GlobalKTable,org.apache.kafka.streams.kstream.KeyValueMapper,org.apache.kafka.streams.kstream.ValueJoinerWithKey)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Streams.Kstream.GlobalKTable"/></param>
        /// <param name="arg1"><see cref="Org.Apache.Kafka.Streams.Kstream.KeyValueMapper"/></param>
        /// <param name="arg2"><see cref="Org.Apache.Kafka.Streams.Kstream.ValueJoinerWithKey"/></param>
        /// <returns><see cref="Org.Apache.Kafka.Streams.Kstream.KStream"/></returns>
        public Org.Apache.Kafka.Streams.Kstream.KStream LeftJoin(Org.Apache.Kafka.Streams.Kstream.GlobalKTable arg0, Org.Apache.Kafka.Streams.Kstream.KeyValueMapper arg1, Org.Apache.Kafka.Streams.Kstream.ValueJoinerWithKey arg2)
        {
            return IExecuteWithSignature<Org.Apache.Kafka.Streams.Kstream.KStream>("leftJoin", "(Lorg/apache/kafka/streams/kstream/GlobalKTable;Lorg/apache/kafka/streams/kstream/KeyValueMapper;Lorg/apache/kafka/streams/kstream/ValueJoinerWithKey;)Lorg/apache/kafka/streams/kstream/KStream;", arg0, arg1, arg2);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-streams/4.1.0/org/apache/kafka/streams/kstream/KStream.html#flatMap(org.apache.kafka.streams.kstream.KeyValueMapper)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Streams.Kstream.KeyValueMapper"/></param>
        /// <returns><see cref="Org.Apache.Kafka.Streams.Kstream.KStream"/></returns>
        public Org.Apache.Kafka.Streams.Kstream.KStream FlatMap(Org.Apache.Kafka.Streams.Kstream.KeyValueMapper arg0)
        {
            return IExecuteWithSignature<Org.Apache.Kafka.Streams.Kstream.KStream>("flatMap", "(Lorg/apache/kafka/streams/kstream/KeyValueMapper;)Lorg/apache/kafka/streams/kstream/KStream;", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-streams/4.1.0/org/apache/kafka/streams/kstream/KStream.html#map(org.apache.kafka.streams.kstream.KeyValueMapper,org.apache.kafka.streams.kstream.Named)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Streams.Kstream.KeyValueMapper"/></param>
        /// <param name="arg1"><see cref="Org.Apache.Kafka.Streams.Kstream.Named"/></param>
        /// <returns><see cref="Org.Apache.Kafka.Streams.Kstream.KStream"/></returns>
        public Org.Apache.Kafka.Streams.Kstream.KStream Map(Org.Apache.Kafka.Streams.Kstream.KeyValueMapper arg0, Org.Apache.Kafka.Streams.Kstream.Named arg1)
        {
            return IExecuteWithSignature<Org.Apache.Kafka.Streams.Kstream.KStream>("map", "(Lorg/apache/kafka/streams/kstream/KeyValueMapper;Lorg/apache/kafka/streams/kstream/Named;)Lorg/apache/kafka/streams/kstream/KStream;", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-streams/4.1.0/org/apache/kafka/streams/kstream/KStream.html#map(org.apache.kafka.streams.kstream.KeyValueMapper)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Streams.Kstream.KeyValueMapper"/></param>
        /// <returns><see cref="Org.Apache.Kafka.Streams.Kstream.KStream"/></returns>
        public Org.Apache.Kafka.Streams.Kstream.KStream Map(Org.Apache.Kafka.Streams.Kstream.KeyValueMapper arg0)
        {
            return IExecuteWithSignature<Org.Apache.Kafka.Streams.Kstream.KStream>("map", "(Lorg/apache/kafka/streams/kstream/KeyValueMapper;)Lorg/apache/kafka/streams/kstream/KStream;", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-streams/4.1.0/org/apache/kafka/streams/kstream/KStream.html#process(org.apache.kafka.streams.processor.api.ProcessorSupplier,java.lang.String...)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Streams.Processor.Api.ProcessorSupplier"/></param>
        /// <param name="arg1"><see cref="Java.Lang.String"/></param>
        /// <returns><see cref="Org.Apache.Kafka.Streams.Kstream.KStream"/></returns>
        public Org.Apache.Kafka.Streams.Kstream.KStream Process(Org.Apache.Kafka.Streams.Processor.Api.ProcessorSupplier arg0, params Java.Lang.String[] arg1)
        {
            return IExecuteWithSignature<Org.Apache.Kafka.Streams.Kstream.KStream>("process", "(Lorg/apache/kafka/streams/processor/api/ProcessorSupplier;[Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/KStream;", MASES.JNet.Specific.Extensions.JNetCoreExtensions.VarArgRebuild(arg1, arg0));
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-streams/4.1.0/org/apache/kafka/streams/kstream/KStream.html#process(org.apache.kafka.streams.processor.api.ProcessorSupplier,org.apache.kafka.streams.kstream.Named,java.lang.String...)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Streams.Processor.Api.ProcessorSupplier"/></param>
        /// <param name="arg1"><see cref="Org.Apache.Kafka.Streams.Kstream.Named"/></param>
        /// <param name="arg2"><see cref="Java.Lang.String"/></param>
        /// <returns><see cref="Org.Apache.Kafka.Streams.Kstream.KStream"/></returns>
        public Org.Apache.Kafka.Streams.Kstream.KStream Process(Org.Apache.Kafka.Streams.Processor.Api.ProcessorSupplier arg0, Org.Apache.Kafka.Streams.Kstream.Named arg1, params Java.Lang.String[] arg2)
        {
            return IExecuteWithSignature<Org.Apache.Kafka.Streams.Kstream.KStream>("process", "(Lorg/apache/kafka/streams/processor/api/ProcessorSupplier;Lorg/apache/kafka/streams/kstream/Named;[Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/KStream;", MASES.JNet.Specific.Extensions.JNetCoreExtensions.VarArgRebuild(arg2, arg0, arg1));
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-streams/4.1.0/org/apache/kafka/streams/kstream/KStream.html#groupBy(org.apache.kafka.streams.kstream.KeyValueMapper,org.apache.kafka.streams.kstream.Grouped)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Streams.Kstream.KeyValueMapper"/></param>
        /// <param name="arg1"><see cref="Org.Apache.Kafka.Streams.Kstream.Grouped"/></param>
        /// <returns><see cref="Org.Apache.Kafka.Streams.Kstream.KGroupedStream"/></returns>
        public Org.Apache.Kafka.Streams.Kstream.KGroupedStream GroupBy(Org.Apache.Kafka.Streams.Kstream.KeyValueMapper arg0, Org.Apache.Kafka.Streams.Kstream.Grouped arg1)
        {
            return IExecuteWithSignature<Org.Apache.Kafka.Streams.Kstream.KGroupedStream>("groupBy", "(Lorg/apache/kafka/streams/kstream/KeyValueMapper;Lorg/apache/kafka/streams/kstream/Grouped;)Lorg/apache/kafka/streams/kstream/KGroupedStream;", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-streams/4.1.0/org/apache/kafka/streams/kstream/KStream.html#groupBy(org.apache.kafka.streams.kstream.KeyValueMapper)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Streams.Kstream.KeyValueMapper"/></param>
        /// <returns><see cref="Org.Apache.Kafka.Streams.Kstream.KGroupedStream"/></returns>
        public Org.Apache.Kafka.Streams.Kstream.KGroupedStream GroupBy(Org.Apache.Kafka.Streams.Kstream.KeyValueMapper arg0)
        {
            return IExecuteWithSignature<Org.Apache.Kafka.Streams.Kstream.KGroupedStream>("groupBy", "(Lorg/apache/kafka/streams/kstream/KeyValueMapper;)Lorg/apache/kafka/streams/kstream/KGroupedStream;", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-streams/4.1.0/org/apache/kafka/streams/kstream/KStream.html#selectKey(org.apache.kafka.streams.kstream.KeyValueMapper,org.apache.kafka.streams.kstream.Named)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Streams.Kstream.KeyValueMapper"/></param>
        /// <param name="arg1"><see cref="Org.Apache.Kafka.Streams.Kstream.Named"/></param>
        /// <returns><see cref="Org.Apache.Kafka.Streams.Kstream.KStream"/></returns>
        public Org.Apache.Kafka.Streams.Kstream.KStream SelectKey(Org.Apache.Kafka.Streams.Kstream.KeyValueMapper arg0, Org.Apache.Kafka.Streams.Kstream.Named arg1)
        {
            return IExecuteWithSignature<Org.Apache.Kafka.Streams.Kstream.KStream>("selectKey", "(Lorg/apache/kafka/streams/kstream/KeyValueMapper;Lorg/apache/kafka/streams/kstream/Named;)Lorg/apache/kafka/streams/kstream/KStream;", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-streams/4.1.0/org/apache/kafka/streams/kstream/KStream.html#selectKey(org.apache.kafka.streams.kstream.KeyValueMapper)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Streams.Kstream.KeyValueMapper"/></param>
        /// <returns><see cref="Org.Apache.Kafka.Streams.Kstream.KStream"/></returns>
        public Org.Apache.Kafka.Streams.Kstream.KStream SelectKey(Org.Apache.Kafka.Streams.Kstream.KeyValueMapper arg0)
        {
            return IExecuteWithSignature<Org.Apache.Kafka.Streams.Kstream.KStream>("selectKey", "(Lorg/apache/kafka/streams/kstream/KeyValueMapper;)Lorg/apache/kafka/streams/kstream/KStream;", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-streams/4.1.0/org/apache/kafka/streams/kstream/KStream.html#flatMap(org.apache.kafka.streams.kstream.KeyValueMapper,org.apache.kafka.streams.kstream.Named)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Streams.Kstream.KeyValueMapper"/></param>
        /// <param name="arg1"><see cref="Org.Apache.Kafka.Streams.Kstream.Named"/></param>
        /// <returns><see cref="Org.Apache.Kafka.Streams.Kstream.KStream"/></returns>
        public Org.Apache.Kafka.Streams.Kstream.KStream FlatMap(Org.Apache.Kafka.Streams.Kstream.KeyValueMapper arg0, Org.Apache.Kafka.Streams.Kstream.Named arg1)
        {
            return IExecuteWithSignature<Org.Apache.Kafka.Streams.Kstream.KStream>("flatMap", "(Lorg/apache/kafka/streams/kstream/KeyValueMapper;Lorg/apache/kafka/streams/kstream/Named;)Lorg/apache/kafka/streams/kstream/KStream;", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-streams/4.1.0/org/apache/kafka/streams/kstream/KStream.html#join(org.apache.kafka.streams.kstream.KTable,org.apache.kafka.streams.kstream.ValueJoiner,org.apache.kafka.streams.kstream.Joined)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Streams.Kstream.KTable"/></param>
        /// <param name="arg1"><see cref="Org.Apache.Kafka.Streams.Kstream.ValueJoiner"/></param>
        /// <param name="arg2"><see cref="Org.Apache.Kafka.Streams.Kstream.Joined"/></param>
        /// <returns><see cref="Org.Apache.Kafka.Streams.Kstream.KStream"/></returns>
        public Org.Apache.Kafka.Streams.Kstream.KStream Join(Org.Apache.Kafka.Streams.Kstream.KTable arg0, Org.Apache.Kafka.Streams.Kstream.ValueJoiner arg1, Org.Apache.Kafka.Streams.Kstream.Joined arg2)
        {
            return IExecuteWithSignature<Org.Apache.Kafka.Streams.Kstream.KStream>("join", "(Lorg/apache/kafka/streams/kstream/KTable;Lorg/apache/kafka/streams/kstream/ValueJoiner;Lorg/apache/kafka/streams/kstream/Joined;)Lorg/apache/kafka/streams/kstream/KStream;", arg0, arg1, arg2);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-streams/4.1.0/org/apache/kafka/streams/kstream/KStream.html#join(org.apache.kafka.streams.kstream.KTable,org.apache.kafka.streams.kstream.ValueJoiner)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Streams.Kstream.KTable"/></param>
        /// <param name="arg1"><see cref="Org.Apache.Kafka.Streams.Kstream.ValueJoiner"/></param>
        /// <returns><see cref="Org.Apache.Kafka.Streams.Kstream.KStream"/></returns>
        public Org.Apache.Kafka.Streams.Kstream.KStream Join(Org.Apache.Kafka.Streams.Kstream.KTable arg0, Org.Apache.Kafka.Streams.Kstream.ValueJoiner arg1)
        {
            return IExecuteWithSignature<Org.Apache.Kafka.Streams.Kstream.KStream>("join", "(Lorg/apache/kafka/streams/kstream/KTable;Lorg/apache/kafka/streams/kstream/ValueJoiner;)Lorg/apache/kafka/streams/kstream/KStream;", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-streams/4.1.0/org/apache/kafka/streams/kstream/KStream.html#join(org.apache.kafka.streams.kstream.KTable,org.apache.kafka.streams.kstream.ValueJoinerWithKey,org.apache.kafka.streams.kstream.Joined)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Streams.Kstream.KTable"/></param>
        /// <param name="arg1"><see cref="Org.Apache.Kafka.Streams.Kstream.ValueJoinerWithKey"/></param>
        /// <param name="arg2"><see cref="Org.Apache.Kafka.Streams.Kstream.Joined"/></param>
        /// <returns><see cref="Org.Apache.Kafka.Streams.Kstream.KStream"/></returns>
        public Org.Apache.Kafka.Streams.Kstream.KStream Join(Org.Apache.Kafka.Streams.Kstream.KTable arg0, Org.Apache.Kafka.Streams.Kstream.ValueJoinerWithKey arg1, Org.Apache.Kafka.Streams.Kstream.Joined arg2)
        {
            return IExecuteWithSignature<Org.Apache.Kafka.Streams.Kstream.KStream>("join", "(Lorg/apache/kafka/streams/kstream/KTable;Lorg/apache/kafka/streams/kstream/ValueJoinerWithKey;Lorg/apache/kafka/streams/kstream/Joined;)Lorg/apache/kafka/streams/kstream/KStream;", arg0, arg1, arg2);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-streams/4.1.0/org/apache/kafka/streams/kstream/KStream.html#join(org.apache.kafka.streams.kstream.KTable,org.apache.kafka.streams.kstream.ValueJoinerWithKey)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Streams.Kstream.KTable"/></param>
        /// <param name="arg1"><see cref="Org.Apache.Kafka.Streams.Kstream.ValueJoinerWithKey"/></param>
        /// <returns><see cref="Org.Apache.Kafka.Streams.Kstream.KStream"/></returns>
        public Org.Apache.Kafka.Streams.Kstream.KStream Join(Org.Apache.Kafka.Streams.Kstream.KTable arg0, Org.Apache.Kafka.Streams.Kstream.ValueJoinerWithKey arg1)
        {
            return IExecuteWithSignature<Org.Apache.Kafka.Streams.Kstream.KStream>("join", "(Lorg/apache/kafka/streams/kstream/KTable;Lorg/apache/kafka/streams/kstream/ValueJoinerWithKey;)Lorg/apache/kafka/streams/kstream/KStream;", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-streams/4.1.0/org/apache/kafka/streams/kstream/KStream.html#flatMapValues(org.apache.kafka.streams.kstream.ValueMapper,org.apache.kafka.streams.kstream.Named)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Streams.Kstream.ValueMapper"/></param>
        /// <param name="arg1"><see cref="Org.Apache.Kafka.Streams.Kstream.Named"/></param>
        /// <returns><see cref="Org.Apache.Kafka.Streams.Kstream.KStream"/></returns>
        public Org.Apache.Kafka.Streams.Kstream.KStream FlatMapValues(Org.Apache.Kafka.Streams.Kstream.ValueMapper arg0, Org.Apache.Kafka.Streams.Kstream.Named arg1)
        {
            return IExecuteWithSignature<Org.Apache.Kafka.Streams.Kstream.KStream>("flatMapValues", "(Lorg/apache/kafka/streams/kstream/ValueMapper;Lorg/apache/kafka/streams/kstream/Named;)Lorg/apache/kafka/streams/kstream/KStream;", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-streams/4.1.0/org/apache/kafka/streams/kstream/KStream.html#flatMapValues(org.apache.kafka.streams.kstream.ValueMapper)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Streams.Kstream.ValueMapper"/></param>
        /// <returns><see cref="Org.Apache.Kafka.Streams.Kstream.KStream"/></returns>
        public Org.Apache.Kafka.Streams.Kstream.KStream FlatMapValues(Org.Apache.Kafka.Streams.Kstream.ValueMapper arg0)
        {
            return IExecuteWithSignature<Org.Apache.Kafka.Streams.Kstream.KStream>("flatMapValues", "(Lorg/apache/kafka/streams/kstream/ValueMapper;)Lorg/apache/kafka/streams/kstream/KStream;", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-streams/4.1.0/org/apache/kafka/streams/kstream/KStream.html#flatMapValues(org.apache.kafka.streams.kstream.ValueMapperWithKey,org.apache.kafka.streams.kstream.Named)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Streams.Kstream.ValueMapperWithKey"/></param>
        /// <param name="arg1"><see cref="Org.Apache.Kafka.Streams.Kstream.Named"/></param>
        /// <returns><see cref="Org.Apache.Kafka.Streams.Kstream.KStream"/></returns>
        public Org.Apache.Kafka.Streams.Kstream.KStream FlatMapValues(Org.Apache.Kafka.Streams.Kstream.ValueMapperWithKey arg0, Org.Apache.Kafka.Streams.Kstream.Named arg1)
        {
            return IExecuteWithSignature<Org.Apache.Kafka.Streams.Kstream.KStream>("flatMapValues", "(Lorg/apache/kafka/streams/kstream/ValueMapperWithKey;Lorg/apache/kafka/streams/kstream/Named;)Lorg/apache/kafka/streams/kstream/KStream;", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-streams/4.1.0/org/apache/kafka/streams/kstream/KStream.html#flatMapValues(org.apache.kafka.streams.kstream.ValueMapperWithKey)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Streams.Kstream.ValueMapperWithKey"/></param>
        /// <returns><see cref="Org.Apache.Kafka.Streams.Kstream.KStream"/></returns>
        public Org.Apache.Kafka.Streams.Kstream.KStream FlatMapValues(Org.Apache.Kafka.Streams.Kstream.ValueMapperWithKey arg0)
        {
            return IExecuteWithSignature<Org.Apache.Kafka.Streams.Kstream.KStream>("flatMapValues", "(Lorg/apache/kafka/streams/kstream/ValueMapperWithKey;)Lorg/apache/kafka/streams/kstream/KStream;", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-streams/4.1.0/org/apache/kafka/streams/kstream/KStream.html#mapValues(org.apache.kafka.streams.kstream.ValueMapper,org.apache.kafka.streams.kstream.Named)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Streams.Kstream.ValueMapper"/></param>
        /// <param name="arg1"><see cref="Org.Apache.Kafka.Streams.Kstream.Named"/></param>
        /// <returns><see cref="Org.Apache.Kafka.Streams.Kstream.KStream"/></returns>
        public Org.Apache.Kafka.Streams.Kstream.KStream MapValues(Org.Apache.Kafka.Streams.Kstream.ValueMapper arg0, Org.Apache.Kafka.Streams.Kstream.Named arg1)
        {
            return IExecuteWithSignature<Org.Apache.Kafka.Streams.Kstream.KStream>("mapValues", "(Lorg/apache/kafka/streams/kstream/ValueMapper;Lorg/apache/kafka/streams/kstream/Named;)Lorg/apache/kafka/streams/kstream/KStream;", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-streams/4.1.0/org/apache/kafka/streams/kstream/KStream.html#mapValues(org.apache.kafka.streams.kstream.ValueMapper)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Streams.Kstream.ValueMapper"/></param>
        /// <returns><see cref="Org.Apache.Kafka.Streams.Kstream.KStream"/></returns>
        public Org.Apache.Kafka.Streams.Kstream.KStream MapValues(Org.Apache.Kafka.Streams.Kstream.ValueMapper arg0)
        {
            return IExecuteWithSignature<Org.Apache.Kafka.Streams.Kstream.KStream>("mapValues", "(Lorg/apache/kafka/streams/kstream/ValueMapper;)Lorg/apache/kafka/streams/kstream/KStream;", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-streams/4.1.0/org/apache/kafka/streams/kstream/KStream.html#mapValues(org.apache.kafka.streams.kstream.ValueMapperWithKey,org.apache.kafka.streams.kstream.Named)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Streams.Kstream.ValueMapperWithKey"/></param>
        /// <param name="arg1"><see cref="Org.Apache.Kafka.Streams.Kstream.Named"/></param>
        /// <returns><see cref="Org.Apache.Kafka.Streams.Kstream.KStream"/></returns>
        public Org.Apache.Kafka.Streams.Kstream.KStream MapValues(Org.Apache.Kafka.Streams.Kstream.ValueMapperWithKey arg0, Org.Apache.Kafka.Streams.Kstream.Named arg1)
        {
            return IExecuteWithSignature<Org.Apache.Kafka.Streams.Kstream.KStream>("mapValues", "(Lorg/apache/kafka/streams/kstream/ValueMapperWithKey;Lorg/apache/kafka/streams/kstream/Named;)Lorg/apache/kafka/streams/kstream/KStream;", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-streams/4.1.0/org/apache/kafka/streams/kstream/KStream.html#mapValues(org.apache.kafka.streams.kstream.ValueMapperWithKey)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Streams.Kstream.ValueMapperWithKey"/></param>
        /// <returns><see cref="Org.Apache.Kafka.Streams.Kstream.KStream"/></returns>
        public Org.Apache.Kafka.Streams.Kstream.KStream MapValues(Org.Apache.Kafka.Streams.Kstream.ValueMapperWithKey arg0)
        {
            return IExecuteWithSignature<Org.Apache.Kafka.Streams.Kstream.KStream>("mapValues", "(Lorg/apache/kafka/streams/kstream/ValueMapperWithKey;)Lorg/apache/kafka/streams/kstream/KStream;", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-streams/4.1.0/org/apache/kafka/streams/kstream/KStream.html#processValues(org.apache.kafka.streams.processor.api.FixedKeyProcessorSupplier,java.lang.String...)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Streams.Processor.Api.FixedKeyProcessorSupplier"/></param>
        /// <param name="arg1"><see cref="Java.Lang.String"/></param>
        /// <returns><see cref="Org.Apache.Kafka.Streams.Kstream.KStream"/></returns>
        public Org.Apache.Kafka.Streams.Kstream.KStream ProcessValues(Org.Apache.Kafka.Streams.Processor.Api.FixedKeyProcessorSupplier arg0, params Java.Lang.String[] arg1)
        {
            return IExecuteWithSignature<Org.Apache.Kafka.Streams.Kstream.KStream>("processValues", "(Lorg/apache/kafka/streams/processor/api/FixedKeyProcessorSupplier;[Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/KStream;", MASES.JNet.Specific.Extensions.JNetCoreExtensions.VarArgRebuild(arg1, arg0));
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-streams/4.1.0/org/apache/kafka/streams/kstream/KStream.html#processValues(org.apache.kafka.streams.processor.api.FixedKeyProcessorSupplier,org.apache.kafka.streams.kstream.Named,java.lang.String...)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Streams.Processor.Api.FixedKeyProcessorSupplier"/></param>
        /// <param name="arg1"><see cref="Org.Apache.Kafka.Streams.Kstream.Named"/></param>
        /// <param name="arg2"><see cref="Java.Lang.String"/></param>
        /// <returns><see cref="Org.Apache.Kafka.Streams.Kstream.KStream"/></returns>
        public Org.Apache.Kafka.Streams.Kstream.KStream ProcessValues(Org.Apache.Kafka.Streams.Processor.Api.FixedKeyProcessorSupplier arg0, Org.Apache.Kafka.Streams.Kstream.Named arg1, params Java.Lang.String[] arg2)
        {
            return IExecuteWithSignature<Org.Apache.Kafka.Streams.Kstream.KStream>("processValues", "(Lorg/apache/kafka/streams/processor/api/FixedKeyProcessorSupplier;Lorg/apache/kafka/streams/kstream/Named;[Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/KStream;", MASES.JNet.Specific.Extensions.JNetCoreExtensions.VarArgRebuild(arg2, arg0, arg1));
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-streams/4.1.0/org/apache/kafka/streams/kstream/KStream.html#join(org.apache.kafka.streams.kstream.KStream,org.apache.kafka.streams.kstream.ValueJoiner,org.apache.kafka.streams.kstream.JoinWindows,org.apache.kafka.streams.kstream.StreamJoined)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Streams.Kstream.KStream"/></param>
        /// <param name="arg1"><see cref="Org.Apache.Kafka.Streams.Kstream.ValueJoiner"/></param>
        /// <param name="arg2"><see cref="Org.Apache.Kafka.Streams.Kstream.JoinWindows"/></param>
        /// <param name="arg3"><see cref="Org.Apache.Kafka.Streams.Kstream.StreamJoined"/></param>
        /// <returns><see cref="Org.Apache.Kafka.Streams.Kstream.KStream"/></returns>
        public Org.Apache.Kafka.Streams.Kstream.KStream Join(Org.Apache.Kafka.Streams.Kstream.KStream arg0, Org.Apache.Kafka.Streams.Kstream.ValueJoiner arg1, Org.Apache.Kafka.Streams.Kstream.JoinWindows arg2, Org.Apache.Kafka.Streams.Kstream.StreamJoined arg3)
        {
            return IExecuteWithSignature<Org.Apache.Kafka.Streams.Kstream.KStream>("join", "(Lorg/apache/kafka/streams/kstream/KStream;Lorg/apache/kafka/streams/kstream/ValueJoiner;Lorg/apache/kafka/streams/kstream/JoinWindows;Lorg/apache/kafka/streams/kstream/StreamJoined;)Lorg/apache/kafka/streams/kstream/KStream;", arg0, arg1, arg2, arg3);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-streams/4.1.0/org/apache/kafka/streams/kstream/KStream.html#join(org.apache.kafka.streams.kstream.KStream,org.apache.kafka.streams.kstream.ValueJoiner,org.apache.kafka.streams.kstream.JoinWindows)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Streams.Kstream.KStream"/></param>
        /// <param name="arg1"><see cref="Org.Apache.Kafka.Streams.Kstream.ValueJoiner"/></param>
        /// <param name="arg2"><see cref="Org.Apache.Kafka.Streams.Kstream.JoinWindows"/></param>
        /// <returns><see cref="Org.Apache.Kafka.Streams.Kstream.KStream"/></returns>
        public Org.Apache.Kafka.Streams.Kstream.KStream Join(Org.Apache.Kafka.Streams.Kstream.KStream arg0, Org.Apache.Kafka.Streams.Kstream.ValueJoiner arg1, Org.Apache.Kafka.Streams.Kstream.JoinWindows arg2)
        {
            return IExecuteWithSignature<Org.Apache.Kafka.Streams.Kstream.KStream>("join", "(Lorg/apache/kafka/streams/kstream/KStream;Lorg/apache/kafka/streams/kstream/ValueJoiner;Lorg/apache/kafka/streams/kstream/JoinWindows;)Lorg/apache/kafka/streams/kstream/KStream;", arg0, arg1, arg2);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-streams/4.1.0/org/apache/kafka/streams/kstream/KStream.html#join(org.apache.kafka.streams.kstream.KStream,org.apache.kafka.streams.kstream.ValueJoinerWithKey,org.apache.kafka.streams.kstream.JoinWindows,org.apache.kafka.streams.kstream.StreamJoined)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Streams.Kstream.KStream"/></param>
        /// <param name="arg1"><see cref="Org.Apache.Kafka.Streams.Kstream.ValueJoinerWithKey"/></param>
        /// <param name="arg2"><see cref="Org.Apache.Kafka.Streams.Kstream.JoinWindows"/></param>
        /// <param name="arg3"><see cref="Org.Apache.Kafka.Streams.Kstream.StreamJoined"/></param>
        /// <returns><see cref="Org.Apache.Kafka.Streams.Kstream.KStream"/></returns>
        public Org.Apache.Kafka.Streams.Kstream.KStream Join(Org.Apache.Kafka.Streams.Kstream.KStream arg0, Org.Apache.Kafka.Streams.Kstream.ValueJoinerWithKey arg1, Org.Apache.Kafka.Streams.Kstream.JoinWindows arg2, Org.Apache.Kafka.Streams.Kstream.StreamJoined arg3)
        {
            return IExecuteWithSignature<Org.Apache.Kafka.Streams.Kstream.KStream>("join", "(Lorg/apache/kafka/streams/kstream/KStream;Lorg/apache/kafka/streams/kstream/ValueJoinerWithKey;Lorg/apache/kafka/streams/kstream/JoinWindows;Lorg/apache/kafka/streams/kstream/StreamJoined;)Lorg/apache/kafka/streams/kstream/KStream;", arg0, arg1, arg2, arg3);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-streams/4.1.0/org/apache/kafka/streams/kstream/KStream.html#join(org.apache.kafka.streams.kstream.KStream,org.apache.kafka.streams.kstream.ValueJoinerWithKey,org.apache.kafka.streams.kstream.JoinWindows)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Streams.Kstream.KStream"/></param>
        /// <param name="arg1"><see cref="Org.Apache.Kafka.Streams.Kstream.ValueJoinerWithKey"/></param>
        /// <param name="arg2"><see cref="Org.Apache.Kafka.Streams.Kstream.JoinWindows"/></param>
        /// <returns><see cref="Org.Apache.Kafka.Streams.Kstream.KStream"/></returns>
        public Org.Apache.Kafka.Streams.Kstream.KStream Join(Org.Apache.Kafka.Streams.Kstream.KStream arg0, Org.Apache.Kafka.Streams.Kstream.ValueJoinerWithKey arg1, Org.Apache.Kafka.Streams.Kstream.JoinWindows arg2)
        {
            return IExecuteWithSignature<Org.Apache.Kafka.Streams.Kstream.KStream>("join", "(Lorg/apache/kafka/streams/kstream/KStream;Lorg/apache/kafka/streams/kstream/ValueJoinerWithKey;Lorg/apache/kafka/streams/kstream/JoinWindows;)Lorg/apache/kafka/streams/kstream/KStream;", arg0, arg1, arg2);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-streams/4.1.0/org/apache/kafka/streams/kstream/KStream.html#leftJoin(org.apache.kafka.streams.kstream.KStream,org.apache.kafka.streams.kstream.ValueJoiner,org.apache.kafka.streams.kstream.JoinWindows,org.apache.kafka.streams.kstream.StreamJoined)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Streams.Kstream.KStream"/></param>
        /// <param name="arg1"><see cref="Org.Apache.Kafka.Streams.Kstream.ValueJoiner"/></param>
        /// <param name="arg2"><see cref="Org.Apache.Kafka.Streams.Kstream.JoinWindows"/></param>
        /// <param name="arg3"><see cref="Org.Apache.Kafka.Streams.Kstream.StreamJoined"/></param>
        /// <returns><see cref="Org.Apache.Kafka.Streams.Kstream.KStream"/></returns>
        public Org.Apache.Kafka.Streams.Kstream.KStream LeftJoin(Org.Apache.Kafka.Streams.Kstream.KStream arg0, Org.Apache.Kafka.Streams.Kstream.ValueJoiner arg1, Org.Apache.Kafka.Streams.Kstream.JoinWindows arg2, Org.Apache.Kafka.Streams.Kstream.StreamJoined arg3)
        {
            return IExecuteWithSignature<Org.Apache.Kafka.Streams.Kstream.KStream>("leftJoin", "(Lorg/apache/kafka/streams/kstream/KStream;Lorg/apache/kafka/streams/kstream/ValueJoiner;Lorg/apache/kafka/streams/kstream/JoinWindows;Lorg/apache/kafka/streams/kstream/StreamJoined;)Lorg/apache/kafka/streams/kstream/KStream;", arg0, arg1, arg2, arg3);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-streams/4.1.0/org/apache/kafka/streams/kstream/KStream.html#leftJoin(org.apache.kafka.streams.kstream.KStream,org.apache.kafka.streams.kstream.ValueJoiner,org.apache.kafka.streams.kstream.JoinWindows)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Streams.Kstream.KStream"/></param>
        /// <param name="arg1"><see cref="Org.Apache.Kafka.Streams.Kstream.ValueJoiner"/></param>
        /// <param name="arg2"><see cref="Org.Apache.Kafka.Streams.Kstream.JoinWindows"/></param>
        /// <returns><see cref="Org.Apache.Kafka.Streams.Kstream.KStream"/></returns>
        public Org.Apache.Kafka.Streams.Kstream.KStream LeftJoin(Org.Apache.Kafka.Streams.Kstream.KStream arg0, Org.Apache.Kafka.Streams.Kstream.ValueJoiner arg1, Org.Apache.Kafka.Streams.Kstream.JoinWindows arg2)
        {
            return IExecuteWithSignature<Org.Apache.Kafka.Streams.Kstream.KStream>("leftJoin", "(Lorg/apache/kafka/streams/kstream/KStream;Lorg/apache/kafka/streams/kstream/ValueJoiner;Lorg/apache/kafka/streams/kstream/JoinWindows;)Lorg/apache/kafka/streams/kstream/KStream;", arg0, arg1, arg2);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-streams/4.1.0/org/apache/kafka/streams/kstream/KStream.html#leftJoin(org.apache.kafka.streams.kstream.KStream,org.apache.kafka.streams.kstream.ValueJoinerWithKey,org.apache.kafka.streams.kstream.JoinWindows,org.apache.kafka.streams.kstream.StreamJoined)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Streams.Kstream.KStream"/></param>
        /// <param name="arg1"><see cref="Org.Apache.Kafka.Streams.Kstream.ValueJoinerWithKey"/></param>
        /// <param name="arg2"><see cref="Org.Apache.Kafka.Streams.Kstream.JoinWindows"/></param>
        /// <param name="arg3"><see cref="Org.Apache.Kafka.Streams.Kstream.StreamJoined"/></param>
        /// <returns><see cref="Org.Apache.Kafka.Streams.Kstream.KStream"/></returns>
        public Org.Apache.Kafka.Streams.Kstream.KStream LeftJoin(Org.Apache.Kafka.Streams.Kstream.KStream arg0, Org.Apache.Kafka.Streams.Kstream.ValueJoinerWithKey arg1, Org.Apache.Kafka.Streams.Kstream.JoinWindows arg2, Org.Apache.Kafka.Streams.Kstream.StreamJoined arg3)
        {
            return IExecuteWithSignature<Org.Apache.Kafka.Streams.Kstream.KStream>("leftJoin", "(Lorg/apache/kafka/streams/kstream/KStream;Lorg/apache/kafka/streams/kstream/ValueJoinerWithKey;Lorg/apache/kafka/streams/kstream/JoinWindows;Lorg/apache/kafka/streams/kstream/StreamJoined;)Lorg/apache/kafka/streams/kstream/KStream;", arg0, arg1, arg2, arg3);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-streams/4.1.0/org/apache/kafka/streams/kstream/KStream.html#leftJoin(org.apache.kafka.streams.kstream.KStream,org.apache.kafka.streams.kstream.ValueJoinerWithKey,org.apache.kafka.streams.kstream.JoinWindows)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Streams.Kstream.KStream"/></param>
        /// <param name="arg1"><see cref="Org.Apache.Kafka.Streams.Kstream.ValueJoinerWithKey"/></param>
        /// <param name="arg2"><see cref="Org.Apache.Kafka.Streams.Kstream.JoinWindows"/></param>
        /// <returns><see cref="Org.Apache.Kafka.Streams.Kstream.KStream"/></returns>
        public Org.Apache.Kafka.Streams.Kstream.KStream LeftJoin(Org.Apache.Kafka.Streams.Kstream.KStream arg0, Org.Apache.Kafka.Streams.Kstream.ValueJoinerWithKey arg1, Org.Apache.Kafka.Streams.Kstream.JoinWindows arg2)
        {
            return IExecuteWithSignature<Org.Apache.Kafka.Streams.Kstream.KStream>("leftJoin", "(Lorg/apache/kafka/streams/kstream/KStream;Lorg/apache/kafka/streams/kstream/ValueJoinerWithKey;Lorg/apache/kafka/streams/kstream/JoinWindows;)Lorg/apache/kafka/streams/kstream/KStream;", arg0, arg1, arg2);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-streams/4.1.0/org/apache/kafka/streams/kstream/KStream.html#outerJoin(org.apache.kafka.streams.kstream.KStream,org.apache.kafka.streams.kstream.ValueJoiner,org.apache.kafka.streams.kstream.JoinWindows,org.apache.kafka.streams.kstream.StreamJoined)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Streams.Kstream.KStream"/></param>
        /// <param name="arg1"><see cref="Org.Apache.Kafka.Streams.Kstream.ValueJoiner"/></param>
        /// <param name="arg2"><see cref="Org.Apache.Kafka.Streams.Kstream.JoinWindows"/></param>
        /// <param name="arg3"><see cref="Org.Apache.Kafka.Streams.Kstream.StreamJoined"/></param>
        /// <returns><see cref="Org.Apache.Kafka.Streams.Kstream.KStream"/></returns>
        public Org.Apache.Kafka.Streams.Kstream.KStream OuterJoin(Org.Apache.Kafka.Streams.Kstream.KStream arg0, Org.Apache.Kafka.Streams.Kstream.ValueJoiner arg1, Org.Apache.Kafka.Streams.Kstream.JoinWindows arg2, Org.Apache.Kafka.Streams.Kstream.StreamJoined arg3)
        {
            return IExecuteWithSignature<Org.Apache.Kafka.Streams.Kstream.KStream>("outerJoin", "(Lorg/apache/kafka/streams/kstream/KStream;Lorg/apache/kafka/streams/kstream/ValueJoiner;Lorg/apache/kafka/streams/kstream/JoinWindows;Lorg/apache/kafka/streams/kstream/StreamJoined;)Lorg/apache/kafka/streams/kstream/KStream;", arg0, arg1, arg2, arg3);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-streams/4.1.0/org/apache/kafka/streams/kstream/KStream.html#outerJoin(org.apache.kafka.streams.kstream.KStream,org.apache.kafka.streams.kstream.ValueJoiner,org.apache.kafka.streams.kstream.JoinWindows)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Streams.Kstream.KStream"/></param>
        /// <param name="arg1"><see cref="Org.Apache.Kafka.Streams.Kstream.ValueJoiner"/></param>
        /// <param name="arg2"><see cref="Org.Apache.Kafka.Streams.Kstream.JoinWindows"/></param>
        /// <returns><see cref="Org.Apache.Kafka.Streams.Kstream.KStream"/></returns>
        public Org.Apache.Kafka.Streams.Kstream.KStream OuterJoin(Org.Apache.Kafka.Streams.Kstream.KStream arg0, Org.Apache.Kafka.Streams.Kstream.ValueJoiner arg1, Org.Apache.Kafka.Streams.Kstream.JoinWindows arg2)
        {
            return IExecuteWithSignature<Org.Apache.Kafka.Streams.Kstream.KStream>("outerJoin", "(Lorg/apache/kafka/streams/kstream/KStream;Lorg/apache/kafka/streams/kstream/ValueJoiner;Lorg/apache/kafka/streams/kstream/JoinWindows;)Lorg/apache/kafka/streams/kstream/KStream;", arg0, arg1, arg2);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-streams/4.1.0/org/apache/kafka/streams/kstream/KStream.html#outerJoin(org.apache.kafka.streams.kstream.KStream,org.apache.kafka.streams.kstream.ValueJoinerWithKey,org.apache.kafka.streams.kstream.JoinWindows,org.apache.kafka.streams.kstream.StreamJoined)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Streams.Kstream.KStream"/></param>
        /// <param name="arg1"><see cref="Org.Apache.Kafka.Streams.Kstream.ValueJoinerWithKey"/></param>
        /// <param name="arg2"><see cref="Org.Apache.Kafka.Streams.Kstream.JoinWindows"/></param>
        /// <param name="arg3"><see cref="Org.Apache.Kafka.Streams.Kstream.StreamJoined"/></param>
        /// <returns><see cref="Org.Apache.Kafka.Streams.Kstream.KStream"/></returns>
        public Org.Apache.Kafka.Streams.Kstream.KStream OuterJoin(Org.Apache.Kafka.Streams.Kstream.KStream arg0, Org.Apache.Kafka.Streams.Kstream.ValueJoinerWithKey arg1, Org.Apache.Kafka.Streams.Kstream.JoinWindows arg2, Org.Apache.Kafka.Streams.Kstream.StreamJoined arg3)
        {
            return IExecuteWithSignature<Org.Apache.Kafka.Streams.Kstream.KStream>("outerJoin", "(Lorg/apache/kafka/streams/kstream/KStream;Lorg/apache/kafka/streams/kstream/ValueJoinerWithKey;Lorg/apache/kafka/streams/kstream/JoinWindows;Lorg/apache/kafka/streams/kstream/StreamJoined;)Lorg/apache/kafka/streams/kstream/KStream;", arg0, arg1, arg2, arg3);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-streams/4.1.0/org/apache/kafka/streams/kstream/KStream.html#outerJoin(org.apache.kafka.streams.kstream.KStream,org.apache.kafka.streams.kstream.ValueJoinerWithKey,org.apache.kafka.streams.kstream.JoinWindows)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Streams.Kstream.KStream"/></param>
        /// <param name="arg1"><see cref="Org.Apache.Kafka.Streams.Kstream.ValueJoinerWithKey"/></param>
        /// <param name="arg2"><see cref="Org.Apache.Kafka.Streams.Kstream.JoinWindows"/></param>
        /// <returns><see cref="Org.Apache.Kafka.Streams.Kstream.KStream"/></returns>
        public Org.Apache.Kafka.Streams.Kstream.KStream OuterJoin(Org.Apache.Kafka.Streams.Kstream.KStream arg0, Org.Apache.Kafka.Streams.Kstream.ValueJoinerWithKey arg1, Org.Apache.Kafka.Streams.Kstream.JoinWindows arg2)
        {
            return IExecuteWithSignature<Org.Apache.Kafka.Streams.Kstream.KStream>("outerJoin", "(Lorg/apache/kafka/streams/kstream/KStream;Lorg/apache/kafka/streams/kstream/ValueJoinerWithKey;Lorg/apache/kafka/streams/kstream/JoinWindows;)Lorg/apache/kafka/streams/kstream/KStream;", arg0, arg1, arg2);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-streams/4.1.0/org/apache/kafka/streams/kstream/KStream.html#leftJoin(org.apache.kafka.streams.kstream.KTable,org.apache.kafka.streams.kstream.ValueJoiner,org.apache.kafka.streams.kstream.Joined)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Streams.Kstream.KTable"/></param>
        /// <param name="arg1"><see cref="Org.Apache.Kafka.Streams.Kstream.ValueJoiner"/></param>
        /// <param name="arg2"><see cref="Org.Apache.Kafka.Streams.Kstream.Joined"/></param>
        /// <returns><see cref="Org.Apache.Kafka.Streams.Kstream.KStream"/></returns>
        public Org.Apache.Kafka.Streams.Kstream.KStream LeftJoin(Org.Apache.Kafka.Streams.Kstream.KTable arg0, Org.Apache.Kafka.Streams.Kstream.ValueJoiner arg1, Org.Apache.Kafka.Streams.Kstream.Joined arg2)
        {
            return IExecuteWithSignature<Org.Apache.Kafka.Streams.Kstream.KStream>("leftJoin", "(Lorg/apache/kafka/streams/kstream/KTable;Lorg/apache/kafka/streams/kstream/ValueJoiner;Lorg/apache/kafka/streams/kstream/Joined;)Lorg/apache/kafka/streams/kstream/KStream;", arg0, arg1, arg2);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-streams/4.1.0/org/apache/kafka/streams/kstream/KStream.html#leftJoin(org.apache.kafka.streams.kstream.KTable,org.apache.kafka.streams.kstream.ValueJoiner)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Streams.Kstream.KTable"/></param>
        /// <param name="arg1"><see cref="Org.Apache.Kafka.Streams.Kstream.ValueJoiner"/></param>
        /// <returns><see cref="Org.Apache.Kafka.Streams.Kstream.KStream"/></returns>
        public Org.Apache.Kafka.Streams.Kstream.KStream LeftJoin(Org.Apache.Kafka.Streams.Kstream.KTable arg0, Org.Apache.Kafka.Streams.Kstream.ValueJoiner arg1)
        {
            return IExecuteWithSignature<Org.Apache.Kafka.Streams.Kstream.KStream>("leftJoin", "(Lorg/apache/kafka/streams/kstream/KTable;Lorg/apache/kafka/streams/kstream/ValueJoiner;)Lorg/apache/kafka/streams/kstream/KStream;", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-streams/4.1.0/org/apache/kafka/streams/kstream/KStream.html#leftJoin(org.apache.kafka.streams.kstream.KTable,org.apache.kafka.streams.kstream.ValueJoinerWithKey,org.apache.kafka.streams.kstream.Joined)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Streams.Kstream.KTable"/></param>
        /// <param name="arg1"><see cref="Org.Apache.Kafka.Streams.Kstream.ValueJoinerWithKey"/></param>
        /// <param name="arg2"><see cref="Org.Apache.Kafka.Streams.Kstream.Joined"/></param>
        /// <returns><see cref="Org.Apache.Kafka.Streams.Kstream.KStream"/></returns>
        public Org.Apache.Kafka.Streams.Kstream.KStream LeftJoin(Org.Apache.Kafka.Streams.Kstream.KTable arg0, Org.Apache.Kafka.Streams.Kstream.ValueJoinerWithKey arg1, Org.Apache.Kafka.Streams.Kstream.Joined arg2)
        {
            return IExecuteWithSignature<Org.Apache.Kafka.Streams.Kstream.KStream>("leftJoin", "(Lorg/apache/kafka/streams/kstream/KTable;Lorg/apache/kafka/streams/kstream/ValueJoinerWithKey;Lorg/apache/kafka/streams/kstream/Joined;)Lorg/apache/kafka/streams/kstream/KStream;", arg0, arg1, arg2);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-streams/4.1.0/org/apache/kafka/streams/kstream/KStream.html#leftJoin(org.apache.kafka.streams.kstream.KTable,org.apache.kafka.streams.kstream.ValueJoinerWithKey)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Streams.Kstream.KTable"/></param>
        /// <param name="arg1"><see cref="Org.Apache.Kafka.Streams.Kstream.ValueJoinerWithKey"/></param>
        /// <returns><see cref="Org.Apache.Kafka.Streams.Kstream.KStream"/></returns>
        public Org.Apache.Kafka.Streams.Kstream.KStream LeftJoin(Org.Apache.Kafka.Streams.Kstream.KTable arg0, Org.Apache.Kafka.Streams.Kstream.ValueJoinerWithKey arg1)
        {
            return IExecuteWithSignature<Org.Apache.Kafka.Streams.Kstream.KStream>("leftJoin", "(Lorg/apache/kafka/streams/kstream/KTable;Lorg/apache/kafka/streams/kstream/ValueJoinerWithKey;)Lorg/apache/kafka/streams/kstream/KStream;", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-streams/4.1.0/org/apache/kafka/streams/kstream/KStream.html#split()"/>
        /// </summary>
        /// <returns><see cref="Org.Apache.Kafka.Streams.Kstream.BranchedKStream"/></returns>
        public Org.Apache.Kafka.Streams.Kstream.BranchedKStream Split()
        {
            return IExecuteWithSignature<Org.Apache.Kafka.Streams.Kstream.BranchedKStream>("split", "()Lorg/apache/kafka/streams/kstream/BranchedKStream;");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-streams/4.1.0/org/apache/kafka/streams/kstream/KStream.html#split(org.apache.kafka.streams.kstream.Named)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Streams.Kstream.Named"/></param>
        /// <returns><see cref="Org.Apache.Kafka.Streams.Kstream.BranchedKStream"/></returns>
        public Org.Apache.Kafka.Streams.Kstream.BranchedKStream Split(Org.Apache.Kafka.Streams.Kstream.Named arg0)
        {
            return IExecuteWithSignature<Org.Apache.Kafka.Streams.Kstream.BranchedKStream>("split", "(Lorg/apache/kafka/streams/kstream/Named;)Lorg/apache/kafka/streams/kstream/BranchedKStream;", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-streams/4.1.0/org/apache/kafka/streams/kstream/KStream.html#groupByKey()"/>
        /// </summary>
        /// <returns><see cref="Org.Apache.Kafka.Streams.Kstream.KGroupedStream"/></returns>
        public Org.Apache.Kafka.Streams.Kstream.KGroupedStream GroupByKey()
        {
            return IExecuteWithSignature<Org.Apache.Kafka.Streams.Kstream.KGroupedStream>("groupByKey", "()Lorg/apache/kafka/streams/kstream/KGroupedStream;");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-streams/4.1.0/org/apache/kafka/streams/kstream/KStream.html#groupByKey(org.apache.kafka.streams.kstream.Grouped)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Streams.Kstream.Grouped"/></param>
        /// <returns><see cref="Org.Apache.Kafka.Streams.Kstream.KGroupedStream"/></returns>
        public Org.Apache.Kafka.Streams.Kstream.KGroupedStream GroupByKey(Org.Apache.Kafka.Streams.Kstream.Grouped arg0)
        {
            return IExecuteWithSignature<Org.Apache.Kafka.Streams.Kstream.KGroupedStream>("groupByKey", "(Lorg/apache/kafka/streams/kstream/Grouped;)Lorg/apache/kafka/streams/kstream/KGroupedStream;", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-streams/4.1.0/org/apache/kafka/streams/kstream/KStream.html#filter(org.apache.kafka.streams.kstream.Predicate,org.apache.kafka.streams.kstream.Named)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Streams.Kstream.Predicate"/></param>
        /// <param name="arg1"><see cref="Org.Apache.Kafka.Streams.Kstream.Named"/></param>
        /// <returns><see cref="Org.Apache.Kafka.Streams.Kstream.KStream"/></returns>
        public Org.Apache.Kafka.Streams.Kstream.KStream Filter(Org.Apache.Kafka.Streams.Kstream.Predicate arg0, Org.Apache.Kafka.Streams.Kstream.Named arg1)
        {
            return IExecuteWithSignature<Org.Apache.Kafka.Streams.Kstream.KStream>("filter", "(Lorg/apache/kafka/streams/kstream/Predicate;Lorg/apache/kafka/streams/kstream/Named;)Lorg/apache/kafka/streams/kstream/KStream;", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-streams/4.1.0/org/apache/kafka/streams/kstream/KStream.html#filter(org.apache.kafka.streams.kstream.Predicate)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Streams.Kstream.Predicate"/></param>
        /// <returns><see cref="Org.Apache.Kafka.Streams.Kstream.KStream"/></returns>
        public Org.Apache.Kafka.Streams.Kstream.KStream Filter(Org.Apache.Kafka.Streams.Kstream.Predicate arg0)
        {
            return IExecuteWithSignature<Org.Apache.Kafka.Streams.Kstream.KStream>("filter", "(Lorg/apache/kafka/streams/kstream/Predicate;)Lorg/apache/kafka/streams/kstream/KStream;", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-streams/4.1.0/org/apache/kafka/streams/kstream/KStream.html#filterNot(org.apache.kafka.streams.kstream.Predicate,org.apache.kafka.streams.kstream.Named)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Streams.Kstream.Predicate"/></param>
        /// <param name="arg1"><see cref="Org.Apache.Kafka.Streams.Kstream.Named"/></param>
        /// <returns><see cref="Org.Apache.Kafka.Streams.Kstream.KStream"/></returns>
        public Org.Apache.Kafka.Streams.Kstream.KStream FilterNot(Org.Apache.Kafka.Streams.Kstream.Predicate arg0, Org.Apache.Kafka.Streams.Kstream.Named arg1)
        {
            return IExecuteWithSignature<Org.Apache.Kafka.Streams.Kstream.KStream>("filterNot", "(Lorg/apache/kafka/streams/kstream/Predicate;Lorg/apache/kafka/streams/kstream/Named;)Lorg/apache/kafka/streams/kstream/KStream;", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-streams/4.1.0/org/apache/kafka/streams/kstream/KStream.html#filterNot(org.apache.kafka.streams.kstream.Predicate)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Streams.Kstream.Predicate"/></param>
        /// <returns><see cref="Org.Apache.Kafka.Streams.Kstream.KStream"/></returns>
        public Org.Apache.Kafka.Streams.Kstream.KStream FilterNot(Org.Apache.Kafka.Streams.Kstream.Predicate arg0)
        {
            return IExecuteWithSignature<Org.Apache.Kafka.Streams.Kstream.KStream>("filterNot", "(Lorg/apache/kafka/streams/kstream/Predicate;)Lorg/apache/kafka/streams/kstream/KStream;", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-streams/4.1.0/org/apache/kafka/streams/kstream/KStream.html#merge(org.apache.kafka.streams.kstream.KStream,org.apache.kafka.streams.kstream.Named)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Streams.Kstream.KStream"/></param>
        /// <param name="arg1"><see cref="Org.Apache.Kafka.Streams.Kstream.Named"/></param>
        /// <returns><see cref="Org.Apache.Kafka.Streams.Kstream.KStream"/></returns>
        public Org.Apache.Kafka.Streams.Kstream.KStream Merge(Org.Apache.Kafka.Streams.Kstream.KStream arg0, Org.Apache.Kafka.Streams.Kstream.Named arg1)
        {
            return IExecuteWithSignature<Org.Apache.Kafka.Streams.Kstream.KStream>("merge", "(Lorg/apache/kafka/streams/kstream/KStream;Lorg/apache/kafka/streams/kstream/Named;)Lorg/apache/kafka/streams/kstream/KStream;", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-streams/4.1.0/org/apache/kafka/streams/kstream/KStream.html#merge(org.apache.kafka.streams.kstream.KStream)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Streams.Kstream.KStream"/></param>
        /// <returns><see cref="Org.Apache.Kafka.Streams.Kstream.KStream"/></returns>
        public Org.Apache.Kafka.Streams.Kstream.KStream Merge(Org.Apache.Kafka.Streams.Kstream.KStream arg0)
        {
            return IExecuteWithSignature<Org.Apache.Kafka.Streams.Kstream.KStream>("merge", "(Lorg/apache/kafka/streams/kstream/KStream;)Lorg/apache/kafka/streams/kstream/KStream;", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-streams/4.1.0/org/apache/kafka/streams/kstream/KStream.html#peek(org.apache.kafka.streams.kstream.ForeachAction,org.apache.kafka.streams.kstream.Named)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Streams.Kstream.ForeachAction"/></param>
        /// <param name="arg1"><see cref="Org.Apache.Kafka.Streams.Kstream.Named"/></param>
        /// <returns><see cref="Org.Apache.Kafka.Streams.Kstream.KStream"/></returns>
        public Org.Apache.Kafka.Streams.Kstream.KStream Peek(Org.Apache.Kafka.Streams.Kstream.ForeachAction arg0, Org.Apache.Kafka.Streams.Kstream.Named arg1)
        {
            return IExecuteWithSignature<Org.Apache.Kafka.Streams.Kstream.KStream>("peek", "(Lorg/apache/kafka/streams/kstream/ForeachAction;Lorg/apache/kafka/streams/kstream/Named;)Lorg/apache/kafka/streams/kstream/KStream;", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-streams/4.1.0/org/apache/kafka/streams/kstream/KStream.html#peek(org.apache.kafka.streams.kstream.ForeachAction)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Streams.Kstream.ForeachAction"/></param>
        /// <returns><see cref="Org.Apache.Kafka.Streams.Kstream.KStream"/></returns>
        public Org.Apache.Kafka.Streams.Kstream.KStream Peek(Org.Apache.Kafka.Streams.Kstream.ForeachAction arg0)
        {
            return IExecuteWithSignature<Org.Apache.Kafka.Streams.Kstream.KStream>("peek", "(Lorg/apache/kafka/streams/kstream/ForeachAction;)Lorg/apache/kafka/streams/kstream/KStream;", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-streams/4.1.0/org/apache/kafka/streams/kstream/KStream.html#repartition()"/>
        /// </summary>
        /// <returns><see cref="Org.Apache.Kafka.Streams.Kstream.KStream"/></returns>
        public Org.Apache.Kafka.Streams.Kstream.KStream Repartition()
        {
            return IExecuteWithSignature<Org.Apache.Kafka.Streams.Kstream.KStream>("repartition", "()Lorg/apache/kafka/streams/kstream/KStream;");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-streams/4.1.0/org/apache/kafka/streams/kstream/KStream.html#repartition(org.apache.kafka.streams.kstream.Repartitioned)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Streams.Kstream.Repartitioned"/></param>
        /// <returns><see cref="Org.Apache.Kafka.Streams.Kstream.KStream"/></returns>
        public Org.Apache.Kafka.Streams.Kstream.KStream Repartition(Org.Apache.Kafka.Streams.Kstream.Repartitioned arg0)
        {
            return IExecuteWithSignature<Org.Apache.Kafka.Streams.Kstream.KStream>("repartition", "(Lorg/apache/kafka/streams/kstream/Repartitioned;)Lorg/apache/kafka/streams/kstream/KStream;", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-streams/4.1.0/org/apache/kafka/streams/kstream/KStream.html#toTable()"/>
        /// </summary>
        /// <returns><see cref="Org.Apache.Kafka.Streams.Kstream.KTable"/></returns>
        public Org.Apache.Kafka.Streams.Kstream.KTable ToTable()
        {
            return IExecuteWithSignature<Org.Apache.Kafka.Streams.Kstream.KTable>("toTable", "()Lorg/apache/kafka/streams/kstream/KTable;");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-streams/4.1.0/org/apache/kafka/streams/kstream/KStream.html#toTable(org.apache.kafka.streams.kstream.Materialized)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Streams.Kstream.Materialized"/></param>
        /// <returns><see cref="Org.Apache.Kafka.Streams.Kstream.KTable"/></returns>
        public Org.Apache.Kafka.Streams.Kstream.KTable ToTable(Org.Apache.Kafka.Streams.Kstream.Materialized arg0)
        {
            return IExecuteWithSignature<Org.Apache.Kafka.Streams.Kstream.KTable>("toTable", "(Lorg/apache/kafka/streams/kstream/Materialized;)Lorg/apache/kafka/streams/kstream/KTable;", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-streams/4.1.0/org/apache/kafka/streams/kstream/KStream.html#toTable(org.apache.kafka.streams.kstream.Named,org.apache.kafka.streams.kstream.Materialized)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Streams.Kstream.Named"/></param>
        /// <param name="arg1"><see cref="Org.Apache.Kafka.Streams.Kstream.Materialized"/></param>
        /// <returns><see cref="Org.Apache.Kafka.Streams.Kstream.KTable"/></returns>
        public Org.Apache.Kafka.Streams.Kstream.KTable ToTable(Org.Apache.Kafka.Streams.Kstream.Named arg0, Org.Apache.Kafka.Streams.Kstream.Materialized arg1)
        {
            return IExecuteWithSignature<Org.Apache.Kafka.Streams.Kstream.KTable>("toTable", "(Lorg/apache/kafka/streams/kstream/Named;Lorg/apache/kafka/streams/kstream/Materialized;)Lorg/apache/kafka/streams/kstream/KTable;", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-streams/4.1.0/org/apache/kafka/streams/kstream/KStream.html#toTable(org.apache.kafka.streams.kstream.Named)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Streams.Kstream.Named"/></param>
        /// <returns><see cref="Org.Apache.Kafka.Streams.Kstream.KTable"/></returns>
        public Org.Apache.Kafka.Streams.Kstream.KTable ToTable(Org.Apache.Kafka.Streams.Kstream.Named arg0)
        {
            return IExecuteWithSignature<Org.Apache.Kafka.Streams.Kstream.KTable>("toTable", "(Lorg/apache/kafka/streams/kstream/Named;)Lorg/apache/kafka/streams/kstream/KTable;", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-streams/4.1.0/org/apache/kafka/streams/kstream/KStream.html#foreach(org.apache.kafka.streams.kstream.ForeachAction,org.apache.kafka.streams.kstream.Named)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Streams.Kstream.ForeachAction"/></param>
        /// <param name="arg1"><see cref="Org.Apache.Kafka.Streams.Kstream.Named"/></param>
        public void Foreach(Org.Apache.Kafka.Streams.Kstream.ForeachAction arg0, Org.Apache.Kafka.Streams.Kstream.Named arg1)
        {
            IExecuteWithSignature("foreach", "(Lorg/apache/kafka/streams/kstream/ForeachAction;Lorg/apache/kafka/streams/kstream/Named;)V", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-streams/4.1.0/org/apache/kafka/streams/kstream/KStream.html#foreach(org.apache.kafka.streams.kstream.ForeachAction)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Streams.Kstream.ForeachAction"/></param>
        public void Foreach(Org.Apache.Kafka.Streams.Kstream.ForeachAction arg0)
        {
            IExecuteWithSignature("foreach", "(Lorg/apache/kafka/streams/kstream/ForeachAction;)V", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-streams/4.1.0/org/apache/kafka/streams/kstream/KStream.html#print(org.apache.kafka.streams.kstream.Printed)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Streams.Kstream.Printed"/></param>
        public void Print(Org.Apache.Kafka.Streams.Kstream.Printed arg0)
        {
            IExecuteWithSignature("print", "(Lorg/apache/kafka/streams/kstream/Printed;)V", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-streams/4.1.0/org/apache/kafka/streams/kstream/KStream.html#to(java.lang.String,org.apache.kafka.streams.kstream.Produced)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        /// <param name="arg1"><see cref="Org.Apache.Kafka.Streams.Kstream.Produced"/></param>
        public void To(Java.Lang.String arg0, Org.Apache.Kafka.Streams.Kstream.Produced arg1)
        {
            IExecuteWithSignature("to", "(Ljava/lang/String;Lorg/apache/kafka/streams/kstream/Produced;)V", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-streams/4.1.0/org/apache/kafka/streams/kstream/KStream.html#to(java.lang.String)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        public void To(Java.Lang.String arg0)
        {
            IExecuteWithSignature("to", "(Ljava/lang/String;)V", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-streams/4.1.0/org/apache/kafka/streams/kstream/KStream.html#to(org.apache.kafka.streams.processor.TopicNameExtractor,org.apache.kafka.streams.kstream.Produced)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Streams.Processor.TopicNameExtractor"/></param>
        /// <param name="arg1"><see cref="Org.Apache.Kafka.Streams.Kstream.Produced"/></param>
        public void To(Org.Apache.Kafka.Streams.Processor.TopicNameExtractor arg0, Org.Apache.Kafka.Streams.Kstream.Produced arg1)
        {
            IExecuteWithSignature("to", "(Lorg/apache/kafka/streams/processor/TopicNameExtractor;Lorg/apache/kafka/streams/kstream/Produced;)V", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-streams/4.1.0/org/apache/kafka/streams/kstream/KStream.html#to(org.apache.kafka.streams.processor.TopicNameExtractor)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Streams.Processor.TopicNameExtractor"/></param>
        public void To(Org.Apache.Kafka.Streams.Processor.TopicNameExtractor arg0)
        {
            IExecuteWithSignature("to", "(Lorg/apache/kafka/streams/processor/TopicNameExtractor;)V", arg0);
        }

        #endregion

        #region Nested classes

        #endregion

        // TODO: complete the class
    }
    #endregion

    #region IKStream<K, V>
    /// <summary>
    /// .NET interface skeleton to be manually developed following <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-streams/4.1.0/org/apache/kafka/streams/kstream/KStream.html"/>
    /// </summary>
    public partial interface IKStream<K, V>
    {
        #region Instance methods

        #endregion

        #region Nested classes

        #endregion

        // TODO: complete the class
    }
    #endregion

    #region KStream<K, V> implementation
    public partial class KStream<K, V> : Org.Apache.Kafka.Streams.Kstream.IKStream<K, V>
    {
        #region Constructors

        #endregion

        #region Class/Interface conversion operators
        /// <summary>
        /// Converter from <see cref="Org.Apache.Kafka.Streams.Kstream.KStream{K, V}"/> to <see cref="Org.Apache.Kafka.Streams.Kstream.KStream"/>
        /// </summary>
        public static implicit operator Org.Apache.Kafka.Streams.Kstream.KStream(Org.Apache.Kafka.Streams.Kstream.KStream<K, V> t) => t.Cast<Org.Apache.Kafka.Streams.Kstream.KStream>();

        #endregion

        #region Fields

        #endregion

        #region Static methods

        #endregion

        #region Instance methods
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-streams/4.1.0/org/apache/kafka/streams/kstream/KStream.html#join(org.apache.kafka.streams.kstream.GlobalKTable,org.apache.kafka.streams.kstream.KeyValueMapper,org.apache.kafka.streams.kstream.ValueJoiner,org.apache.kafka.streams.kstream.Named)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Streams.Kstream.GlobalKTable"/></param>
        /// <param name="arg1"><see cref="Org.Apache.Kafka.Streams.Kstream.KeyValueMapper"/></param>
        /// <param name="arg2"><see cref="Org.Apache.Kafka.Streams.Kstream.ValueJoiner"/></param>
        /// <param name="arg3"><see cref="Org.Apache.Kafka.Streams.Kstream.Named"/></param>
        /// <typeparam name="VOut"></typeparam>
        /// <typeparam name="GlobalKey"></typeparam>
        /// <typeparam name="GlobalValue"></typeparam>
        /// <typeparam name="Arg1objectSuperK"><typeparamref name="K"/></typeparam>
        /// <typeparam name="Arg1objectSuperV"><typeparamref name="V"/></typeparam>
        /// <typeparam name="Arg1ExtendsGlobalKey"><typeparamref name="GlobalKey"/></typeparam>
        /// <typeparam name="Arg2objectSuperV"><typeparamref name="V"/></typeparam>
        /// <typeparam name="Arg2objectSuperGlobalValue"><typeparamref name="GlobalValue"/></typeparam>
        /// <typeparam name="Arg2ExtendsVOut"><typeparamref name="VOut"/></typeparam>
        /// <returns><see cref="Org.Apache.Kafka.Streams.Kstream.KStream"/></returns>
        public Org.Apache.Kafka.Streams.Kstream.KStream<K, VOut> Join<VOut, GlobalKey, GlobalValue, Arg1objectSuperK, Arg1objectSuperV, Arg1ExtendsGlobalKey, Arg2objectSuperV, Arg2objectSuperGlobalValue, Arg2ExtendsVOut>(Org.Apache.Kafka.Streams.Kstream.GlobalKTable<GlobalKey, GlobalValue> arg0, Org.Apache.Kafka.Streams.Kstream.KeyValueMapper<Arg1objectSuperK, Arg1objectSuperV, Arg1ExtendsGlobalKey> arg1, Org.Apache.Kafka.Streams.Kstream.ValueJoiner<Arg2objectSuperV, Arg2objectSuperGlobalValue, Arg2ExtendsVOut> arg2, Org.Apache.Kafka.Streams.Kstream.Named arg3) where Arg1objectSuperK : K where Arg1objectSuperV : V where Arg1ExtendsGlobalKey : GlobalKey where Arg2objectSuperV : V where Arg2objectSuperGlobalValue : GlobalValue where Arg2ExtendsVOut : VOut
        {
            return IExecuteWithSignature<Org.Apache.Kafka.Streams.Kstream.KStream<K, VOut>>("join", "(Lorg/apache/kafka/streams/kstream/GlobalKTable;Lorg/apache/kafka/streams/kstream/KeyValueMapper;Lorg/apache/kafka/streams/kstream/ValueJoiner;Lorg/apache/kafka/streams/kstream/Named;)Lorg/apache/kafka/streams/kstream/KStream;", arg0, arg1, arg2, arg3);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-streams/4.1.0/org/apache/kafka/streams/kstream/KStream.html#join(org.apache.kafka.streams.kstream.GlobalKTable,org.apache.kafka.streams.kstream.KeyValueMapper,org.apache.kafka.streams.kstream.ValueJoiner)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Streams.Kstream.GlobalKTable"/></param>
        /// <param name="arg1"><see cref="Org.Apache.Kafka.Streams.Kstream.KeyValueMapper"/></param>
        /// <param name="arg2"><see cref="Org.Apache.Kafka.Streams.Kstream.ValueJoiner"/></param>
        /// <typeparam name="VOut"></typeparam>
        /// <typeparam name="GlobalKey"></typeparam>
        /// <typeparam name="GlobalValue"></typeparam>
        /// <typeparam name="Arg1objectSuperK"><typeparamref name="K"/></typeparam>
        /// <typeparam name="Arg1objectSuperV"><typeparamref name="V"/></typeparam>
        /// <typeparam name="Arg1ExtendsGlobalKey"><typeparamref name="GlobalKey"/></typeparam>
        /// <typeparam name="Arg2objectSuperV"><typeparamref name="V"/></typeparam>
        /// <typeparam name="Arg2objectSuperGlobalValue"><typeparamref name="GlobalValue"/></typeparam>
        /// <typeparam name="Arg2ExtendsVOut"><typeparamref name="VOut"/></typeparam>
        /// <returns><see cref="Org.Apache.Kafka.Streams.Kstream.KStream"/></returns>
        public Org.Apache.Kafka.Streams.Kstream.KStream<K, VOut> Join<VOut, GlobalKey, GlobalValue, Arg1objectSuperK, Arg1objectSuperV, Arg1ExtendsGlobalKey, Arg2objectSuperV, Arg2objectSuperGlobalValue, Arg2ExtendsVOut>(Org.Apache.Kafka.Streams.Kstream.GlobalKTable<GlobalKey, GlobalValue> arg0, Org.Apache.Kafka.Streams.Kstream.KeyValueMapper<Arg1objectSuperK, Arg1objectSuperV, Arg1ExtendsGlobalKey> arg1, Org.Apache.Kafka.Streams.Kstream.ValueJoiner<Arg2objectSuperV, Arg2objectSuperGlobalValue, Arg2ExtendsVOut> arg2) where Arg1objectSuperK : K where Arg1objectSuperV : V where Arg1ExtendsGlobalKey : GlobalKey where Arg2objectSuperV : V where Arg2objectSuperGlobalValue : GlobalValue where Arg2ExtendsVOut : VOut
        {
            return IExecuteWithSignature<Org.Apache.Kafka.Streams.Kstream.KStream<K, VOut>>("join", "(Lorg/apache/kafka/streams/kstream/GlobalKTable;Lorg/apache/kafka/streams/kstream/KeyValueMapper;Lorg/apache/kafka/streams/kstream/ValueJoiner;)Lorg/apache/kafka/streams/kstream/KStream;", arg0, arg1, arg2);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-streams/4.1.0/org/apache/kafka/streams/kstream/KStream.html#join(org.apache.kafka.streams.kstream.GlobalKTable,org.apache.kafka.streams.kstream.KeyValueMapper,org.apache.kafka.streams.kstream.ValueJoinerWithKey,org.apache.kafka.streams.kstream.Named)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Streams.Kstream.GlobalKTable"/></param>
        /// <param name="arg1"><see cref="Org.Apache.Kafka.Streams.Kstream.KeyValueMapper"/></param>
        /// <param name="arg2"><see cref="Org.Apache.Kafka.Streams.Kstream.ValueJoinerWithKey"/></param>
        /// <param name="arg3"><see cref="Org.Apache.Kafka.Streams.Kstream.Named"/></param>
        /// <typeparam name="VOut"></typeparam>
        /// <typeparam name="GlobalKey"></typeparam>
        /// <typeparam name="GlobalValue"></typeparam>
        /// <typeparam name="Arg1objectSuperK"><typeparamref name="K"/></typeparam>
        /// <typeparam name="Arg1objectSuperV"><typeparamref name="V"/></typeparam>
        /// <typeparam name="Arg1ExtendsGlobalKey"><typeparamref name="GlobalKey"/></typeparam>
        /// <typeparam name="Arg2objectSuperK"><typeparamref name="K"/></typeparam>
        /// <typeparam name="Arg2objectSuperV"><typeparamref name="V"/></typeparam>
        /// <typeparam name="Arg2objectSuperGlobalValue"><typeparamref name="GlobalValue"/></typeparam>
        /// <typeparam name="Arg2ExtendsVOut"><typeparamref name="VOut"/></typeparam>
        /// <returns><see cref="Org.Apache.Kafka.Streams.Kstream.KStream"/></returns>
        public Org.Apache.Kafka.Streams.Kstream.KStream<K, VOut> Join<VOut, GlobalKey, GlobalValue, Arg1objectSuperK, Arg1objectSuperV, Arg1ExtendsGlobalKey, Arg2objectSuperK, Arg2objectSuperV, Arg2objectSuperGlobalValue, Arg2ExtendsVOut>(Org.Apache.Kafka.Streams.Kstream.GlobalKTable<GlobalKey, GlobalValue> arg0, Org.Apache.Kafka.Streams.Kstream.KeyValueMapper<Arg1objectSuperK, Arg1objectSuperV, Arg1ExtendsGlobalKey> arg1, Org.Apache.Kafka.Streams.Kstream.ValueJoinerWithKey<Arg2objectSuperK, Arg2objectSuperV, Arg2objectSuperGlobalValue, Arg2ExtendsVOut> arg2, Org.Apache.Kafka.Streams.Kstream.Named arg3) where Arg1objectSuperK : K where Arg1objectSuperV : V where Arg1ExtendsGlobalKey : GlobalKey where Arg2objectSuperK : K where Arg2objectSuperV : V where Arg2objectSuperGlobalValue : GlobalValue where Arg2ExtendsVOut : VOut
        {
            return IExecuteWithSignature<Org.Apache.Kafka.Streams.Kstream.KStream<K, VOut>>("join", "(Lorg/apache/kafka/streams/kstream/GlobalKTable;Lorg/apache/kafka/streams/kstream/KeyValueMapper;Lorg/apache/kafka/streams/kstream/ValueJoinerWithKey;Lorg/apache/kafka/streams/kstream/Named;)Lorg/apache/kafka/streams/kstream/KStream;", arg0, arg1, arg2, arg3);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-streams/4.1.0/org/apache/kafka/streams/kstream/KStream.html#join(org.apache.kafka.streams.kstream.GlobalKTable,org.apache.kafka.streams.kstream.KeyValueMapper,org.apache.kafka.streams.kstream.ValueJoinerWithKey)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Streams.Kstream.GlobalKTable"/></param>
        /// <param name="arg1"><see cref="Org.Apache.Kafka.Streams.Kstream.KeyValueMapper"/></param>
        /// <param name="arg2"><see cref="Org.Apache.Kafka.Streams.Kstream.ValueJoinerWithKey"/></param>
        /// <typeparam name="VOut"></typeparam>
        /// <typeparam name="GlobalKey"></typeparam>
        /// <typeparam name="GlobalValue"></typeparam>
        /// <typeparam name="Arg1objectSuperK"><typeparamref name="K"/></typeparam>
        /// <typeparam name="Arg1objectSuperV"><typeparamref name="V"/></typeparam>
        /// <typeparam name="Arg1ExtendsGlobalKey"><typeparamref name="GlobalKey"/></typeparam>
        /// <typeparam name="Arg2objectSuperK"><typeparamref name="K"/></typeparam>
        /// <typeparam name="Arg2objectSuperV"><typeparamref name="V"/></typeparam>
        /// <typeparam name="Arg2objectSuperGlobalValue"><typeparamref name="GlobalValue"/></typeparam>
        /// <typeparam name="Arg2ExtendsVOut"><typeparamref name="VOut"/></typeparam>
        /// <returns><see cref="Org.Apache.Kafka.Streams.Kstream.KStream"/></returns>
        public Org.Apache.Kafka.Streams.Kstream.KStream<K, VOut> Join<VOut, GlobalKey, GlobalValue, Arg1objectSuperK, Arg1objectSuperV, Arg1ExtendsGlobalKey, Arg2objectSuperK, Arg2objectSuperV, Arg2objectSuperGlobalValue, Arg2ExtendsVOut>(Org.Apache.Kafka.Streams.Kstream.GlobalKTable<GlobalKey, GlobalValue> arg0, Org.Apache.Kafka.Streams.Kstream.KeyValueMapper<Arg1objectSuperK, Arg1objectSuperV, Arg1ExtendsGlobalKey> arg1, Org.Apache.Kafka.Streams.Kstream.ValueJoinerWithKey<Arg2objectSuperK, Arg2objectSuperV, Arg2objectSuperGlobalValue, Arg2ExtendsVOut> arg2) where Arg1objectSuperK : K where Arg1objectSuperV : V where Arg1ExtendsGlobalKey : GlobalKey where Arg2objectSuperK : K where Arg2objectSuperV : V where Arg2objectSuperGlobalValue : GlobalValue where Arg2ExtendsVOut : VOut
        {
            return IExecuteWithSignature<Org.Apache.Kafka.Streams.Kstream.KStream<K, VOut>>("join", "(Lorg/apache/kafka/streams/kstream/GlobalKTable;Lorg/apache/kafka/streams/kstream/KeyValueMapper;Lorg/apache/kafka/streams/kstream/ValueJoinerWithKey;)Lorg/apache/kafka/streams/kstream/KStream;", arg0, arg1, arg2);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-streams/4.1.0/org/apache/kafka/streams/kstream/KStream.html#leftJoin(org.apache.kafka.streams.kstream.GlobalKTable,org.apache.kafka.streams.kstream.KeyValueMapper,org.apache.kafka.streams.kstream.ValueJoiner,org.apache.kafka.streams.kstream.Named)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Streams.Kstream.GlobalKTable"/></param>
        /// <param name="arg1"><see cref="Org.Apache.Kafka.Streams.Kstream.KeyValueMapper"/></param>
        /// <param name="arg2"><see cref="Org.Apache.Kafka.Streams.Kstream.ValueJoiner"/></param>
        /// <param name="arg3"><see cref="Org.Apache.Kafka.Streams.Kstream.Named"/></param>
        /// <typeparam name="VOut"></typeparam>
        /// <typeparam name="GlobalKey"></typeparam>
        /// <typeparam name="GlobalValue"></typeparam>
        /// <typeparam name="Arg1objectSuperK"><typeparamref name="K"/></typeparam>
        /// <typeparam name="Arg1objectSuperV"><typeparamref name="V"/></typeparam>
        /// <typeparam name="Arg1ExtendsGlobalKey"><typeparamref name="GlobalKey"/></typeparam>
        /// <typeparam name="Arg2objectSuperV"><typeparamref name="V"/></typeparam>
        /// <typeparam name="Arg2objectSuperGlobalValue"><typeparamref name="GlobalValue"/></typeparam>
        /// <typeparam name="Arg2ExtendsVOut"><typeparamref name="VOut"/></typeparam>
        /// <returns><see cref="Org.Apache.Kafka.Streams.Kstream.KStream"/></returns>
        public Org.Apache.Kafka.Streams.Kstream.KStream<K, VOut> LeftJoin<VOut, GlobalKey, GlobalValue, Arg1objectSuperK, Arg1objectSuperV, Arg1ExtendsGlobalKey, Arg2objectSuperV, Arg2objectSuperGlobalValue, Arg2ExtendsVOut>(Org.Apache.Kafka.Streams.Kstream.GlobalKTable<GlobalKey, GlobalValue> arg0, Org.Apache.Kafka.Streams.Kstream.KeyValueMapper<Arg1objectSuperK, Arg1objectSuperV, Arg1ExtendsGlobalKey> arg1, Org.Apache.Kafka.Streams.Kstream.ValueJoiner<Arg2objectSuperV, Arg2objectSuperGlobalValue, Arg2ExtendsVOut> arg2, Org.Apache.Kafka.Streams.Kstream.Named arg3) where Arg1objectSuperK : K where Arg1objectSuperV : V where Arg1ExtendsGlobalKey : GlobalKey where Arg2objectSuperV : V where Arg2objectSuperGlobalValue : GlobalValue where Arg2ExtendsVOut : VOut
        {
            return IExecuteWithSignature<Org.Apache.Kafka.Streams.Kstream.KStream<K, VOut>>("leftJoin", "(Lorg/apache/kafka/streams/kstream/GlobalKTable;Lorg/apache/kafka/streams/kstream/KeyValueMapper;Lorg/apache/kafka/streams/kstream/ValueJoiner;Lorg/apache/kafka/streams/kstream/Named;)Lorg/apache/kafka/streams/kstream/KStream;", arg0, arg1, arg2, arg3);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-streams/4.1.0/org/apache/kafka/streams/kstream/KStream.html#leftJoin(org.apache.kafka.streams.kstream.GlobalKTable,org.apache.kafka.streams.kstream.KeyValueMapper,org.apache.kafka.streams.kstream.ValueJoiner)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Streams.Kstream.GlobalKTable"/></param>
        /// <param name="arg1"><see cref="Org.Apache.Kafka.Streams.Kstream.KeyValueMapper"/></param>
        /// <param name="arg2"><see cref="Org.Apache.Kafka.Streams.Kstream.ValueJoiner"/></param>
        /// <typeparam name="VOut"></typeparam>
        /// <typeparam name="GlobalKey"></typeparam>
        /// <typeparam name="GlobalValue"></typeparam>
        /// <typeparam name="Arg1objectSuperK"><typeparamref name="K"/></typeparam>
        /// <typeparam name="Arg1objectSuperV"><typeparamref name="V"/></typeparam>
        /// <typeparam name="Arg1ExtendsGlobalKey"><typeparamref name="GlobalKey"/></typeparam>
        /// <typeparam name="Arg2objectSuperV"><typeparamref name="V"/></typeparam>
        /// <typeparam name="Arg2objectSuperGlobalValue"><typeparamref name="GlobalValue"/></typeparam>
        /// <typeparam name="Arg2ExtendsVOut"><typeparamref name="VOut"/></typeparam>
        /// <returns><see cref="Org.Apache.Kafka.Streams.Kstream.KStream"/></returns>
        public Org.Apache.Kafka.Streams.Kstream.KStream<K, VOut> LeftJoin<VOut, GlobalKey, GlobalValue, Arg1objectSuperK, Arg1objectSuperV, Arg1ExtendsGlobalKey, Arg2objectSuperV, Arg2objectSuperGlobalValue, Arg2ExtendsVOut>(Org.Apache.Kafka.Streams.Kstream.GlobalKTable<GlobalKey, GlobalValue> arg0, Org.Apache.Kafka.Streams.Kstream.KeyValueMapper<Arg1objectSuperK, Arg1objectSuperV, Arg1ExtendsGlobalKey> arg1, Org.Apache.Kafka.Streams.Kstream.ValueJoiner<Arg2objectSuperV, Arg2objectSuperGlobalValue, Arg2ExtendsVOut> arg2) where Arg1objectSuperK : K where Arg1objectSuperV : V where Arg1ExtendsGlobalKey : GlobalKey where Arg2objectSuperV : V where Arg2objectSuperGlobalValue : GlobalValue where Arg2ExtendsVOut : VOut
        {
            return IExecuteWithSignature<Org.Apache.Kafka.Streams.Kstream.KStream<K, VOut>>("leftJoin", "(Lorg/apache/kafka/streams/kstream/GlobalKTable;Lorg/apache/kafka/streams/kstream/KeyValueMapper;Lorg/apache/kafka/streams/kstream/ValueJoiner;)Lorg/apache/kafka/streams/kstream/KStream;", arg0, arg1, arg2);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-streams/4.1.0/org/apache/kafka/streams/kstream/KStream.html#leftJoin(org.apache.kafka.streams.kstream.GlobalKTable,org.apache.kafka.streams.kstream.KeyValueMapper,org.apache.kafka.streams.kstream.ValueJoinerWithKey,org.apache.kafka.streams.kstream.Named)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Streams.Kstream.GlobalKTable"/></param>
        /// <param name="arg1"><see cref="Org.Apache.Kafka.Streams.Kstream.KeyValueMapper"/></param>
        /// <param name="arg2"><see cref="Org.Apache.Kafka.Streams.Kstream.ValueJoinerWithKey"/></param>
        /// <param name="arg3"><see cref="Org.Apache.Kafka.Streams.Kstream.Named"/></param>
        /// <typeparam name="VOut"></typeparam>
        /// <typeparam name="GlobalKey"></typeparam>
        /// <typeparam name="GlobalValue"></typeparam>
        /// <typeparam name="Arg1objectSuperK"><typeparamref name="K"/></typeparam>
        /// <typeparam name="Arg1objectSuperV"><typeparamref name="V"/></typeparam>
        /// <typeparam name="Arg1ExtendsGlobalKey"><typeparamref name="GlobalKey"/></typeparam>
        /// <typeparam name="Arg2objectSuperK"><typeparamref name="K"/></typeparam>
        /// <typeparam name="Arg2objectSuperV"><typeparamref name="V"/></typeparam>
        /// <typeparam name="Arg2objectSuperGlobalValue"><typeparamref name="GlobalValue"/></typeparam>
        /// <typeparam name="Arg2ExtendsVOut"><typeparamref name="VOut"/></typeparam>
        /// <returns><see cref="Org.Apache.Kafka.Streams.Kstream.KStream"/></returns>
        public Org.Apache.Kafka.Streams.Kstream.KStream<K, VOut> LeftJoin<VOut, GlobalKey, GlobalValue, Arg1objectSuperK, Arg1objectSuperV, Arg1ExtendsGlobalKey, Arg2objectSuperK, Arg2objectSuperV, Arg2objectSuperGlobalValue, Arg2ExtendsVOut>(Org.Apache.Kafka.Streams.Kstream.GlobalKTable<GlobalKey, GlobalValue> arg0, Org.Apache.Kafka.Streams.Kstream.KeyValueMapper<Arg1objectSuperK, Arg1objectSuperV, Arg1ExtendsGlobalKey> arg1, Org.Apache.Kafka.Streams.Kstream.ValueJoinerWithKey<Arg2objectSuperK, Arg2objectSuperV, Arg2objectSuperGlobalValue, Arg2ExtendsVOut> arg2, Org.Apache.Kafka.Streams.Kstream.Named arg3) where Arg1objectSuperK : K where Arg1objectSuperV : V where Arg1ExtendsGlobalKey : GlobalKey where Arg2objectSuperK : K where Arg2objectSuperV : V where Arg2objectSuperGlobalValue : GlobalValue where Arg2ExtendsVOut : VOut
        {
            return IExecuteWithSignature<Org.Apache.Kafka.Streams.Kstream.KStream<K, VOut>>("leftJoin", "(Lorg/apache/kafka/streams/kstream/GlobalKTable;Lorg/apache/kafka/streams/kstream/KeyValueMapper;Lorg/apache/kafka/streams/kstream/ValueJoinerWithKey;Lorg/apache/kafka/streams/kstream/Named;)Lorg/apache/kafka/streams/kstream/KStream;", arg0, arg1, arg2, arg3);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-streams/4.1.0/org/apache/kafka/streams/kstream/KStream.html#leftJoin(org.apache.kafka.streams.kstream.GlobalKTable,org.apache.kafka.streams.kstream.KeyValueMapper,org.apache.kafka.streams.kstream.ValueJoinerWithKey)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Streams.Kstream.GlobalKTable"/></param>
        /// <param name="arg1"><see cref="Org.Apache.Kafka.Streams.Kstream.KeyValueMapper"/></param>
        /// <param name="arg2"><see cref="Org.Apache.Kafka.Streams.Kstream.ValueJoinerWithKey"/></param>
        /// <typeparam name="VOut"></typeparam>
        /// <typeparam name="GlobalKey"></typeparam>
        /// <typeparam name="GlobalValue"></typeparam>
        /// <typeparam name="Arg1objectSuperK"><typeparamref name="K"/></typeparam>
        /// <typeparam name="Arg1objectSuperV"><typeparamref name="V"/></typeparam>
        /// <typeparam name="Arg1ExtendsGlobalKey"><typeparamref name="GlobalKey"/></typeparam>
        /// <typeparam name="Arg2objectSuperK"><typeparamref name="K"/></typeparam>
        /// <typeparam name="Arg2objectSuperV"><typeparamref name="V"/></typeparam>
        /// <typeparam name="Arg2objectSuperGlobalValue"><typeparamref name="GlobalValue"/></typeparam>
        /// <typeparam name="Arg2ExtendsVOut"><typeparamref name="VOut"/></typeparam>
        /// <returns><see cref="Org.Apache.Kafka.Streams.Kstream.KStream"/></returns>
        public Org.Apache.Kafka.Streams.Kstream.KStream<K, VOut> LeftJoin<VOut, GlobalKey, GlobalValue, Arg1objectSuperK, Arg1objectSuperV, Arg1ExtendsGlobalKey, Arg2objectSuperK, Arg2objectSuperV, Arg2objectSuperGlobalValue, Arg2ExtendsVOut>(Org.Apache.Kafka.Streams.Kstream.GlobalKTable<GlobalKey, GlobalValue> arg0, Org.Apache.Kafka.Streams.Kstream.KeyValueMapper<Arg1objectSuperK, Arg1objectSuperV, Arg1ExtendsGlobalKey> arg1, Org.Apache.Kafka.Streams.Kstream.ValueJoinerWithKey<Arg2objectSuperK, Arg2objectSuperV, Arg2objectSuperGlobalValue, Arg2ExtendsVOut> arg2) where Arg1objectSuperK : K where Arg1objectSuperV : V where Arg1ExtendsGlobalKey : GlobalKey where Arg2objectSuperK : K where Arg2objectSuperV : V where Arg2objectSuperGlobalValue : GlobalValue where Arg2ExtendsVOut : VOut
        {
            return IExecuteWithSignature<Org.Apache.Kafka.Streams.Kstream.KStream<K, VOut>>("leftJoin", "(Lorg/apache/kafka/streams/kstream/GlobalKTable;Lorg/apache/kafka/streams/kstream/KeyValueMapper;Lorg/apache/kafka/streams/kstream/ValueJoinerWithKey;)Lorg/apache/kafka/streams/kstream/KStream;", arg0, arg1, arg2);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-streams/4.1.0/org/apache/kafka/streams/kstream/KStream.html#flatMap(org.apache.kafka.streams.kstream.KeyValueMapper)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Streams.Kstream.KeyValueMapper"/></param>
        /// <typeparam name="KOut"></typeparam>
        /// <typeparam name="VOut"></typeparam>
        /// <typeparam name="Arg0objectSuperK"><typeparamref name="K"/></typeparam>
        /// <typeparam name="Arg0objectSuperV"><typeparamref name="V"/></typeparam>
        /// <typeparam name="Arg0ExtendsJava_Lang_Iterable_Arg0ExtendsOrg_Apache_Kafka_Streams_KeyValue_Arg0ExtendsKOut_Arg0ExtendsVOut__"><see cref="Java.Lang.Iterable{Arg0ExtendsOrg_Apache_Kafka_Streams_KeyValue_Arg0ExtendsKOut_Arg0ExtendsVOut_}"/></typeparam>
        /// <typeparam name="Arg0ExtendsOrg_Apache_Kafka_Streams_KeyValue_Arg0ExtendsKOut_Arg0ExtendsVOut_"><see cref="Org.Apache.Kafka.Streams.KeyValue{Arg0ExtendsKOut, Arg0ExtendsVOut}"/></typeparam>
        /// <typeparam name="Arg0ExtendsKOut"><typeparamref name="KOut"/></typeparam>
        /// <typeparam name="Arg0ExtendsVOut"><typeparamref name="VOut"/></typeparam>
        /// <returns><see cref="Org.Apache.Kafka.Streams.Kstream.KStream"/></returns>
        public Org.Apache.Kafka.Streams.Kstream.KStream<KOut, VOut> FlatMap<KOut, VOut, Arg0objectSuperK, Arg0objectSuperV, Arg0ExtendsJava_Lang_Iterable_Arg0ExtendsOrg_Apache_Kafka_Streams_KeyValue_Arg0ExtendsKOut_Arg0ExtendsVOut__, Arg0ExtendsOrg_Apache_Kafka_Streams_KeyValue_Arg0ExtendsKOut_Arg0ExtendsVOut_, Arg0ExtendsKOut, Arg0ExtendsVOut>(Org.Apache.Kafka.Streams.Kstream.KeyValueMapper<Arg0objectSuperK, Arg0objectSuperV, Arg0ExtendsJava_Lang_Iterable_Arg0ExtendsOrg_Apache_Kafka_Streams_KeyValue_Arg0ExtendsKOut_Arg0ExtendsVOut__> arg0) where Arg0objectSuperK : K where Arg0objectSuperV : V where Arg0ExtendsJava_Lang_Iterable_Arg0ExtendsOrg_Apache_Kafka_Streams_KeyValue_Arg0ExtendsKOut_Arg0ExtendsVOut__ : Java.Lang.Iterable<Arg0ExtendsOrg_Apache_Kafka_Streams_KeyValue_Arg0ExtendsKOut_Arg0ExtendsVOut_> where Arg0ExtendsOrg_Apache_Kafka_Streams_KeyValue_Arg0ExtendsKOut_Arg0ExtendsVOut_ : Org.Apache.Kafka.Streams.KeyValue<Arg0ExtendsKOut, Arg0ExtendsVOut> where Arg0ExtendsKOut : KOut where Arg0ExtendsVOut : VOut
        {
            return IExecuteWithSignature<Org.Apache.Kafka.Streams.Kstream.KStream<KOut, VOut>>("flatMap", "(Lorg/apache/kafka/streams/kstream/KeyValueMapper;)Lorg/apache/kafka/streams/kstream/KStream;", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-streams/4.1.0/org/apache/kafka/streams/kstream/KStream.html#map(org.apache.kafka.streams.kstream.KeyValueMapper,org.apache.kafka.streams.kstream.Named)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Streams.Kstream.KeyValueMapper"/></param>
        /// <param name="arg1"><see cref="Org.Apache.Kafka.Streams.Kstream.Named"/></param>
        /// <typeparam name="KOut"></typeparam>
        /// <typeparam name="VOut"></typeparam>
        /// <typeparam name="Arg0objectSuperK"><typeparamref name="K"/></typeparam>
        /// <typeparam name="Arg0objectSuperV"><typeparamref name="V"/></typeparam>
        /// <typeparam name="Arg0ExtendsOrg_Apache_Kafka_Streams_KeyValue_Arg0ExtendsKOut_Arg0ExtendsVOut_"><see cref="Org.Apache.Kafka.Streams.KeyValue{Arg0ExtendsKOut, Arg0ExtendsVOut}"/></typeparam>
        /// <typeparam name="Arg0ExtendsKOut"><typeparamref name="KOut"/></typeparam>
        /// <typeparam name="Arg0ExtendsVOut"><typeparamref name="VOut"/></typeparam>
        /// <returns><see cref="Org.Apache.Kafka.Streams.Kstream.KStream"/></returns>
        public Org.Apache.Kafka.Streams.Kstream.KStream<KOut, VOut> Map<KOut, VOut, Arg0objectSuperK, Arg0objectSuperV, Arg0ExtendsOrg_Apache_Kafka_Streams_KeyValue_Arg0ExtendsKOut_Arg0ExtendsVOut_, Arg0ExtendsKOut, Arg0ExtendsVOut>(Org.Apache.Kafka.Streams.Kstream.KeyValueMapper<Arg0objectSuperK, Arg0objectSuperV, Arg0ExtendsOrg_Apache_Kafka_Streams_KeyValue_Arg0ExtendsKOut_Arg0ExtendsVOut_> arg0, Org.Apache.Kafka.Streams.Kstream.Named arg1) where Arg0objectSuperK : K where Arg0objectSuperV : V where Arg0ExtendsOrg_Apache_Kafka_Streams_KeyValue_Arg0ExtendsKOut_Arg0ExtendsVOut_ : Org.Apache.Kafka.Streams.KeyValue<Arg0ExtendsKOut, Arg0ExtendsVOut> where Arg0ExtendsKOut : KOut where Arg0ExtendsVOut : VOut
        {
            return IExecuteWithSignature<Org.Apache.Kafka.Streams.Kstream.KStream<KOut, VOut>>("map", "(Lorg/apache/kafka/streams/kstream/KeyValueMapper;Lorg/apache/kafka/streams/kstream/Named;)Lorg/apache/kafka/streams/kstream/KStream;", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-streams/4.1.0/org/apache/kafka/streams/kstream/KStream.html#map(org.apache.kafka.streams.kstream.KeyValueMapper)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Streams.Kstream.KeyValueMapper"/></param>
        /// <typeparam name="KOut"></typeparam>
        /// <typeparam name="VOut"></typeparam>
        /// <typeparam name="Arg0objectSuperK"><typeparamref name="K"/></typeparam>
        /// <typeparam name="Arg0objectSuperV"><typeparamref name="V"/></typeparam>
        /// <typeparam name="Arg0ExtendsOrg_Apache_Kafka_Streams_KeyValue_Arg0ExtendsKOut_Arg0ExtendsVOut_"><see cref="Org.Apache.Kafka.Streams.KeyValue{Arg0ExtendsKOut, Arg0ExtendsVOut}"/></typeparam>
        /// <typeparam name="Arg0ExtendsKOut"><typeparamref name="KOut"/></typeparam>
        /// <typeparam name="Arg0ExtendsVOut"><typeparamref name="VOut"/></typeparam>
        /// <returns><see cref="Org.Apache.Kafka.Streams.Kstream.KStream"/></returns>
        public Org.Apache.Kafka.Streams.Kstream.KStream<KOut, VOut> Map<KOut, VOut, Arg0objectSuperK, Arg0objectSuperV, Arg0ExtendsOrg_Apache_Kafka_Streams_KeyValue_Arg0ExtendsKOut_Arg0ExtendsVOut_, Arg0ExtendsKOut, Arg0ExtendsVOut>(Org.Apache.Kafka.Streams.Kstream.KeyValueMapper<Arg0objectSuperK, Arg0objectSuperV, Arg0ExtendsOrg_Apache_Kafka_Streams_KeyValue_Arg0ExtendsKOut_Arg0ExtendsVOut_> arg0) where Arg0objectSuperK : K where Arg0objectSuperV : V where Arg0ExtendsOrg_Apache_Kafka_Streams_KeyValue_Arg0ExtendsKOut_Arg0ExtendsVOut_ : Org.Apache.Kafka.Streams.KeyValue<Arg0ExtendsKOut, Arg0ExtendsVOut> where Arg0ExtendsKOut : KOut where Arg0ExtendsVOut : VOut
        {
            return IExecuteWithSignature<Org.Apache.Kafka.Streams.Kstream.KStream<KOut, VOut>>("map", "(Lorg/apache/kafka/streams/kstream/KeyValueMapper;)Lorg/apache/kafka/streams/kstream/KStream;", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-streams/4.1.0/org/apache/kafka/streams/kstream/KStream.html#process(org.apache.kafka.streams.processor.api.ProcessorSupplier,java.lang.String...)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Streams.Processor.Api.ProcessorSupplier"/></param>
        /// <param name="arg1"><see cref="Java.Lang.String"/></param>
        /// <typeparam name="KOut"></typeparam>
        /// <typeparam name="VOut"></typeparam>
        /// <typeparam name="Arg0objectSuperK"><typeparamref name="K"/></typeparam>
        /// <typeparam name="Arg0objectSuperV"><typeparamref name="V"/></typeparam>
        /// <typeparam name="Arg0ExtendsKOut"><typeparamref name="KOut"/></typeparam>
        /// <typeparam name="Arg0ExtendsVOut"><typeparamref name="VOut"/></typeparam>
        /// <returns><see cref="Org.Apache.Kafka.Streams.Kstream.KStream"/></returns>
        public Org.Apache.Kafka.Streams.Kstream.KStream<KOut, VOut> Process<KOut, VOut, Arg0objectSuperK, Arg0objectSuperV, Arg0ExtendsKOut, Arg0ExtendsVOut>(Org.Apache.Kafka.Streams.Processor.Api.ProcessorSupplier<Arg0objectSuperK, Arg0objectSuperV, Arg0ExtendsKOut, Arg0ExtendsVOut> arg0, params Java.Lang.String[] arg1) where Arg0objectSuperK : K where Arg0objectSuperV : V where Arg0ExtendsKOut : KOut where Arg0ExtendsVOut : VOut
        {
            return IExecuteWithSignature<Org.Apache.Kafka.Streams.Kstream.KStream<KOut, VOut>>("process", "(Lorg/apache/kafka/streams/processor/api/ProcessorSupplier;[Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/KStream;", MASES.JNet.Specific.Extensions.JNetCoreExtensions.VarArgRebuild(arg1, arg0));
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-streams/4.1.0/org/apache/kafka/streams/kstream/KStream.html#process(org.apache.kafka.streams.processor.api.ProcessorSupplier,org.apache.kafka.streams.kstream.Named,java.lang.String...)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Streams.Processor.Api.ProcessorSupplier"/></param>
        /// <param name="arg1"><see cref="Org.Apache.Kafka.Streams.Kstream.Named"/></param>
        /// <param name="arg2"><see cref="Java.Lang.String"/></param>
        /// <typeparam name="KOut"></typeparam>
        /// <typeparam name="VOut"></typeparam>
        /// <typeparam name="Arg0objectSuperK"><typeparamref name="K"/></typeparam>
        /// <typeparam name="Arg0objectSuperV"><typeparamref name="V"/></typeparam>
        /// <typeparam name="Arg0ExtendsKOut"><typeparamref name="KOut"/></typeparam>
        /// <typeparam name="Arg0ExtendsVOut"><typeparamref name="VOut"/></typeparam>
        /// <returns><see cref="Org.Apache.Kafka.Streams.Kstream.KStream"/></returns>
        public Org.Apache.Kafka.Streams.Kstream.KStream<KOut, VOut> Process<KOut, VOut, Arg0objectSuperK, Arg0objectSuperV, Arg0ExtendsKOut, Arg0ExtendsVOut>(Org.Apache.Kafka.Streams.Processor.Api.ProcessorSupplier<Arg0objectSuperK, Arg0objectSuperV, Arg0ExtendsKOut, Arg0ExtendsVOut> arg0, Org.Apache.Kafka.Streams.Kstream.Named arg1, params Java.Lang.String[] arg2) where Arg0objectSuperK : K where Arg0objectSuperV : V where Arg0ExtendsKOut : KOut where Arg0ExtendsVOut : VOut
        {
            return IExecuteWithSignature<Org.Apache.Kafka.Streams.Kstream.KStream<KOut, VOut>>("process", "(Lorg/apache/kafka/streams/processor/api/ProcessorSupplier;Lorg/apache/kafka/streams/kstream/Named;[Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/KStream;", MASES.JNet.Specific.Extensions.JNetCoreExtensions.VarArgRebuild(arg2, arg0, arg1));
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-streams/4.1.0/org/apache/kafka/streams/kstream/KStream.html#groupBy(org.apache.kafka.streams.kstream.KeyValueMapper,org.apache.kafka.streams.kstream.Grouped)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Streams.Kstream.KeyValueMapper"/></param>
        /// <param name="arg1"><see cref="Org.Apache.Kafka.Streams.Kstream.Grouped"/></param>
        /// <typeparam name="KOut"></typeparam>
        /// <typeparam name="Arg0objectSuperK"><typeparamref name="K"/></typeparam>
        /// <typeparam name="Arg0objectSuperV"><typeparamref name="V"/></typeparam>
        /// <returns><see cref="Org.Apache.Kafka.Streams.Kstream.KGroupedStream"/></returns>
        public Org.Apache.Kafka.Streams.Kstream.KGroupedStream<KOut, V> GroupBy<KOut, Arg0objectSuperK, Arg0objectSuperV>(Org.Apache.Kafka.Streams.Kstream.KeyValueMapper<Arg0objectSuperK, Arg0objectSuperV, KOut> arg0, Org.Apache.Kafka.Streams.Kstream.Grouped<KOut, V> arg1) where Arg0objectSuperK : K where Arg0objectSuperV : V
        {
            return IExecuteWithSignature<Org.Apache.Kafka.Streams.Kstream.KGroupedStream<KOut, V>>("groupBy", "(Lorg/apache/kafka/streams/kstream/KeyValueMapper;Lorg/apache/kafka/streams/kstream/Grouped;)Lorg/apache/kafka/streams/kstream/KGroupedStream;", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-streams/4.1.0/org/apache/kafka/streams/kstream/KStream.html#groupBy(org.apache.kafka.streams.kstream.KeyValueMapper)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Streams.Kstream.KeyValueMapper"/></param>
        /// <typeparam name="KOut"></typeparam>
        /// <typeparam name="Arg0objectSuperK"><typeparamref name="K"/></typeparam>
        /// <typeparam name="Arg0objectSuperV"><typeparamref name="V"/></typeparam>
        /// <returns><see cref="Org.Apache.Kafka.Streams.Kstream.KGroupedStream"/></returns>
        public Org.Apache.Kafka.Streams.Kstream.KGroupedStream<KOut, V> GroupBy<KOut, Arg0objectSuperK, Arg0objectSuperV>(Org.Apache.Kafka.Streams.Kstream.KeyValueMapper<Arg0objectSuperK, Arg0objectSuperV, KOut> arg0) where Arg0objectSuperK : K where Arg0objectSuperV : V
        {
            return IExecuteWithSignature<Org.Apache.Kafka.Streams.Kstream.KGroupedStream<KOut, V>>("groupBy", "(Lorg/apache/kafka/streams/kstream/KeyValueMapper;)Lorg/apache/kafka/streams/kstream/KGroupedStream;", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-streams/4.1.0/org/apache/kafka/streams/kstream/KStream.html#selectKey(org.apache.kafka.streams.kstream.KeyValueMapper,org.apache.kafka.streams.kstream.Named)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Streams.Kstream.KeyValueMapper"/></param>
        /// <param name="arg1"><see cref="Org.Apache.Kafka.Streams.Kstream.Named"/></param>
        /// <typeparam name="KOut"></typeparam>
        /// <typeparam name="Arg0objectSuperK"><typeparamref name="K"/></typeparam>
        /// <typeparam name="Arg0objectSuperV"><typeparamref name="V"/></typeparam>
        /// <typeparam name="Arg0ExtendsKOut"><typeparamref name="KOut"/></typeparam>
        /// <returns><see cref="Org.Apache.Kafka.Streams.Kstream.KStream"/></returns>
        public Org.Apache.Kafka.Streams.Kstream.KStream<KOut, V> SelectKey<KOut, Arg0objectSuperK, Arg0objectSuperV, Arg0ExtendsKOut>(Org.Apache.Kafka.Streams.Kstream.KeyValueMapper<Arg0objectSuperK, Arg0objectSuperV, Arg0ExtendsKOut> arg0, Org.Apache.Kafka.Streams.Kstream.Named arg1) where Arg0objectSuperK : K where Arg0objectSuperV : V where Arg0ExtendsKOut : KOut
        {
            return IExecuteWithSignature<Org.Apache.Kafka.Streams.Kstream.KStream<KOut, V>>("selectKey", "(Lorg/apache/kafka/streams/kstream/KeyValueMapper;Lorg/apache/kafka/streams/kstream/Named;)Lorg/apache/kafka/streams/kstream/KStream;", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-streams/4.1.0/org/apache/kafka/streams/kstream/KStream.html#selectKey(org.apache.kafka.streams.kstream.KeyValueMapper)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Streams.Kstream.KeyValueMapper"/></param>
        /// <typeparam name="KOut"></typeparam>
        /// <typeparam name="Arg0objectSuperK"><typeparamref name="K"/></typeparam>
        /// <typeparam name="Arg0objectSuperV"><typeparamref name="V"/></typeparam>
        /// <typeparam name="Arg0ExtendsKOut"><typeparamref name="KOut"/></typeparam>
        /// <returns><see cref="Org.Apache.Kafka.Streams.Kstream.KStream"/></returns>
        public Org.Apache.Kafka.Streams.Kstream.KStream<KOut, V> SelectKey<KOut, Arg0objectSuperK, Arg0objectSuperV, Arg0ExtendsKOut>(Org.Apache.Kafka.Streams.Kstream.KeyValueMapper<Arg0objectSuperK, Arg0objectSuperV, Arg0ExtendsKOut> arg0) where Arg0objectSuperK : K where Arg0objectSuperV : V where Arg0ExtendsKOut : KOut
        {
            return IExecuteWithSignature<Org.Apache.Kafka.Streams.Kstream.KStream<KOut, V>>("selectKey", "(Lorg/apache/kafka/streams/kstream/KeyValueMapper;)Lorg/apache/kafka/streams/kstream/KStream;", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-streams/4.1.0/org/apache/kafka/streams/kstream/KStream.html#flatMap(org.apache.kafka.streams.kstream.KeyValueMapper,org.apache.kafka.streams.kstream.Named)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Streams.Kstream.KeyValueMapper"/></param>
        /// <param name="arg1"><see cref="Org.Apache.Kafka.Streams.Kstream.Named"/></param>
        /// <typeparam name="KR"></typeparam>
        /// <typeparam name="VOut"></typeparam>
        /// <typeparam name="Arg0objectSuperK"><typeparamref name="K"/></typeparam>
        /// <typeparam name="Arg0objectSuperV"><typeparamref name="V"/></typeparam>
        /// <typeparam name="Arg0ExtendsJava_Lang_Iterable_Arg0ExtendsOrg_Apache_Kafka_Streams_KeyValue_Arg0ExtendsKR_Arg0ExtendsVOut__"><see cref="Java.Lang.Iterable{Arg0ExtendsOrg_Apache_Kafka_Streams_KeyValue_Arg0ExtendsKR_Arg0ExtendsVOut_}"/></typeparam>
        /// <typeparam name="Arg0ExtendsOrg_Apache_Kafka_Streams_KeyValue_Arg0ExtendsKR_Arg0ExtendsVOut_"><see cref="Org.Apache.Kafka.Streams.KeyValue{Arg0ExtendsKR, Arg0ExtendsVOut}"/></typeparam>
        /// <typeparam name="Arg0ExtendsKR"><typeparamref name="KR"/></typeparam>
        /// <typeparam name="Arg0ExtendsVOut"><typeparamref name="VOut"/></typeparam>
        /// <returns><see cref="Org.Apache.Kafka.Streams.Kstream.KStream"/></returns>
        public Org.Apache.Kafka.Streams.Kstream.KStream<KR, VOut> FlatMap<KR, VOut, Arg0objectSuperK, Arg0objectSuperV, Arg0ExtendsJava_Lang_Iterable_Arg0ExtendsOrg_Apache_Kafka_Streams_KeyValue_Arg0ExtendsKR_Arg0ExtendsVOut__, Arg0ExtendsOrg_Apache_Kafka_Streams_KeyValue_Arg0ExtendsKR_Arg0ExtendsVOut_, Arg0ExtendsKR, Arg0ExtendsVOut>(Org.Apache.Kafka.Streams.Kstream.KeyValueMapper<Arg0objectSuperK, Arg0objectSuperV, Arg0ExtendsJava_Lang_Iterable_Arg0ExtendsOrg_Apache_Kafka_Streams_KeyValue_Arg0ExtendsKR_Arg0ExtendsVOut__> arg0, Org.Apache.Kafka.Streams.Kstream.Named arg1) where Arg0objectSuperK : K where Arg0objectSuperV : V where Arg0ExtendsJava_Lang_Iterable_Arg0ExtendsOrg_Apache_Kafka_Streams_KeyValue_Arg0ExtendsKR_Arg0ExtendsVOut__ : Java.Lang.Iterable<Arg0ExtendsOrg_Apache_Kafka_Streams_KeyValue_Arg0ExtendsKR_Arg0ExtendsVOut_> where Arg0ExtendsOrg_Apache_Kafka_Streams_KeyValue_Arg0ExtendsKR_Arg0ExtendsVOut_ : Org.Apache.Kafka.Streams.KeyValue<Arg0ExtendsKR, Arg0ExtendsVOut> where Arg0ExtendsKR : KR where Arg0ExtendsVOut : VOut
        {
            return IExecuteWithSignature<Org.Apache.Kafka.Streams.Kstream.KStream<KR, VOut>>("flatMap", "(Lorg/apache/kafka/streams/kstream/KeyValueMapper;Lorg/apache/kafka/streams/kstream/Named;)Lorg/apache/kafka/streams/kstream/KStream;", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-streams/4.1.0/org/apache/kafka/streams/kstream/KStream.html#join(org.apache.kafka.streams.kstream.KTable,org.apache.kafka.streams.kstream.ValueJoiner,org.apache.kafka.streams.kstream.Joined)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Streams.Kstream.KTable"/></param>
        /// <param name="arg1"><see cref="Org.Apache.Kafka.Streams.Kstream.ValueJoiner"/></param>
        /// <param name="arg2"><see cref="Org.Apache.Kafka.Streams.Kstream.Joined"/></param>
        /// <typeparam name="VOut"></typeparam>
        /// <typeparam name="TableValue"></typeparam>
        /// <typeparam name="Arg1objectSuperV"><typeparamref name="V"/></typeparam>
        /// <typeparam name="Arg1objectSuperTableValue"><typeparamref name="TableValue"/></typeparam>
        /// <typeparam name="Arg1ExtendsVOut"><typeparamref name="VOut"/></typeparam>
        /// <returns><see cref="Org.Apache.Kafka.Streams.Kstream.KStream"/></returns>
        public Org.Apache.Kafka.Streams.Kstream.KStream<K, VOut> Join<VOut, TableValue, Arg1objectSuperV, Arg1objectSuperTableValue, Arg1ExtendsVOut>(Org.Apache.Kafka.Streams.Kstream.KTable<K, TableValue> arg0, Org.Apache.Kafka.Streams.Kstream.ValueJoiner<Arg1objectSuperV, Arg1objectSuperTableValue, Arg1ExtendsVOut> arg1, Org.Apache.Kafka.Streams.Kstream.Joined<K, V, TableValue> arg2) where Arg1objectSuperV : V where Arg1objectSuperTableValue : TableValue where Arg1ExtendsVOut : VOut
        {
            return IExecuteWithSignature<Org.Apache.Kafka.Streams.Kstream.KStream<K, VOut>>("join", "(Lorg/apache/kafka/streams/kstream/KTable;Lorg/apache/kafka/streams/kstream/ValueJoiner;Lorg/apache/kafka/streams/kstream/Joined;)Lorg/apache/kafka/streams/kstream/KStream;", arg0, arg1, arg2);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-streams/4.1.0/org/apache/kafka/streams/kstream/KStream.html#join(org.apache.kafka.streams.kstream.KTable,org.apache.kafka.streams.kstream.ValueJoiner)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Streams.Kstream.KTable"/></param>
        /// <param name="arg1"><see cref="Org.Apache.Kafka.Streams.Kstream.ValueJoiner"/></param>
        /// <typeparam name="VOut"></typeparam>
        /// <typeparam name="TableValue"></typeparam>
        /// <typeparam name="Arg1objectSuperV"><typeparamref name="V"/></typeparam>
        /// <typeparam name="Arg1objectSuperTableValue"><typeparamref name="TableValue"/></typeparam>
        /// <typeparam name="Arg1ExtendsVOut"><typeparamref name="VOut"/></typeparam>
        /// <returns><see cref="Org.Apache.Kafka.Streams.Kstream.KStream"/></returns>
        public Org.Apache.Kafka.Streams.Kstream.KStream<K, VOut> Join<VOut, TableValue, Arg1objectSuperV, Arg1objectSuperTableValue, Arg1ExtendsVOut>(Org.Apache.Kafka.Streams.Kstream.KTable<K, TableValue> arg0, Org.Apache.Kafka.Streams.Kstream.ValueJoiner<Arg1objectSuperV, Arg1objectSuperTableValue, Arg1ExtendsVOut> arg1) where Arg1objectSuperV : V where Arg1objectSuperTableValue : TableValue where Arg1ExtendsVOut : VOut
        {
            return IExecuteWithSignature<Org.Apache.Kafka.Streams.Kstream.KStream<K, VOut>>("join", "(Lorg/apache/kafka/streams/kstream/KTable;Lorg/apache/kafka/streams/kstream/ValueJoiner;)Lorg/apache/kafka/streams/kstream/KStream;", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-streams/4.1.0/org/apache/kafka/streams/kstream/KStream.html#join(org.apache.kafka.streams.kstream.KTable,org.apache.kafka.streams.kstream.ValueJoinerWithKey,org.apache.kafka.streams.kstream.Joined)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Streams.Kstream.KTable"/></param>
        /// <param name="arg1"><see cref="Org.Apache.Kafka.Streams.Kstream.ValueJoinerWithKey"/></param>
        /// <param name="arg2"><see cref="Org.Apache.Kafka.Streams.Kstream.Joined"/></param>
        /// <typeparam name="VOut"></typeparam>
        /// <typeparam name="TableValue"></typeparam>
        /// <typeparam name="Arg1objectSuperK"><typeparamref name="K"/></typeparam>
        /// <typeparam name="Arg1objectSuperV"><typeparamref name="V"/></typeparam>
        /// <typeparam name="Arg1objectSuperTableValue"><typeparamref name="TableValue"/></typeparam>
        /// <typeparam name="Arg1ExtendsVOut"><typeparamref name="VOut"/></typeparam>
        /// <returns><see cref="Org.Apache.Kafka.Streams.Kstream.KStream"/></returns>
        public Org.Apache.Kafka.Streams.Kstream.KStream<K, VOut> Join<VOut, TableValue, Arg1objectSuperK, Arg1objectSuperV, Arg1objectSuperTableValue, Arg1ExtendsVOut>(Org.Apache.Kafka.Streams.Kstream.KTable<K, TableValue> arg0, Org.Apache.Kafka.Streams.Kstream.ValueJoinerWithKey<Arg1objectSuperK, Arg1objectSuperV, Arg1objectSuperTableValue, Arg1ExtendsVOut> arg1, Org.Apache.Kafka.Streams.Kstream.Joined<K, V, TableValue> arg2) where Arg1objectSuperK : K where Arg1objectSuperV : V where Arg1objectSuperTableValue : TableValue where Arg1ExtendsVOut : VOut
        {
            return IExecuteWithSignature<Org.Apache.Kafka.Streams.Kstream.KStream<K, VOut>>("join", "(Lorg/apache/kafka/streams/kstream/KTable;Lorg/apache/kafka/streams/kstream/ValueJoinerWithKey;Lorg/apache/kafka/streams/kstream/Joined;)Lorg/apache/kafka/streams/kstream/KStream;", arg0, arg1, arg2);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-streams/4.1.0/org/apache/kafka/streams/kstream/KStream.html#join(org.apache.kafka.streams.kstream.KTable,org.apache.kafka.streams.kstream.ValueJoinerWithKey)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Streams.Kstream.KTable"/></param>
        /// <param name="arg1"><see cref="Org.Apache.Kafka.Streams.Kstream.ValueJoinerWithKey"/></param>
        /// <typeparam name="VOut"></typeparam>
        /// <typeparam name="TableValue"></typeparam>
        /// <typeparam name="Arg1objectSuperK"><typeparamref name="K"/></typeparam>
        /// <typeparam name="Arg1objectSuperV"><typeparamref name="V"/></typeparam>
        /// <typeparam name="Arg1objectSuperTableValue"><typeparamref name="TableValue"/></typeparam>
        /// <typeparam name="Arg1ExtendsVOut"><typeparamref name="VOut"/></typeparam>
        /// <returns><see cref="Org.Apache.Kafka.Streams.Kstream.KStream"/></returns>
        public Org.Apache.Kafka.Streams.Kstream.KStream<K, VOut> Join<VOut, TableValue, Arg1objectSuperK, Arg1objectSuperV, Arg1objectSuperTableValue, Arg1ExtendsVOut>(Org.Apache.Kafka.Streams.Kstream.KTable<K, TableValue> arg0, Org.Apache.Kafka.Streams.Kstream.ValueJoinerWithKey<Arg1objectSuperK, Arg1objectSuperV, Arg1objectSuperTableValue, Arg1ExtendsVOut> arg1) where Arg1objectSuperK : K where Arg1objectSuperV : V where Arg1objectSuperTableValue : TableValue where Arg1ExtendsVOut : VOut
        {
            return IExecuteWithSignature<Org.Apache.Kafka.Streams.Kstream.KStream<K, VOut>>("join", "(Lorg/apache/kafka/streams/kstream/KTable;Lorg/apache/kafka/streams/kstream/ValueJoinerWithKey;)Lorg/apache/kafka/streams/kstream/KStream;", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-streams/4.1.0/org/apache/kafka/streams/kstream/KStream.html#flatMapValues(org.apache.kafka.streams.kstream.ValueMapper,org.apache.kafka.streams.kstream.Named)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Streams.Kstream.ValueMapper"/></param>
        /// <param name="arg1"><see cref="Org.Apache.Kafka.Streams.Kstream.Named"/></param>
        /// <typeparam name="VOut"></typeparam>
        /// <typeparam name="Arg0objectSuperV"><typeparamref name="V"/></typeparam>
        /// <typeparam name="Arg0ExtendsJava_Lang_Iterable_Arg0ExtendsVOut_"><see cref="Java.Lang.Iterable{Arg0ExtendsVOut}"/></typeparam>
        /// <typeparam name="Arg0ExtendsVOut"><typeparamref name="VOut"/></typeparam>
        /// <returns><see cref="Org.Apache.Kafka.Streams.Kstream.KStream"/></returns>
        public Org.Apache.Kafka.Streams.Kstream.KStream<K, VOut> FlatMapValues<VOut, Arg0objectSuperV, Arg0ExtendsJava_Lang_Iterable_Arg0ExtendsVOut_, Arg0ExtendsVOut>(Org.Apache.Kafka.Streams.Kstream.ValueMapper<Arg0objectSuperV, Arg0ExtendsJava_Lang_Iterable_Arg0ExtendsVOut_> arg0, Org.Apache.Kafka.Streams.Kstream.Named arg1) where Arg0objectSuperV : V where Arg0ExtendsJava_Lang_Iterable_Arg0ExtendsVOut_ : Java.Lang.Iterable<Arg0ExtendsVOut> where Arg0ExtendsVOut : VOut
        {
            return IExecuteWithSignature<Org.Apache.Kafka.Streams.Kstream.KStream<K, VOut>>("flatMapValues", "(Lorg/apache/kafka/streams/kstream/ValueMapper;Lorg/apache/kafka/streams/kstream/Named;)Lorg/apache/kafka/streams/kstream/KStream;", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-streams/4.1.0/org/apache/kafka/streams/kstream/KStream.html#flatMapValues(org.apache.kafka.streams.kstream.ValueMapper)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Streams.Kstream.ValueMapper"/></param>
        /// <typeparam name="VOut"></typeparam>
        /// <typeparam name="Arg0objectSuperV"><typeparamref name="V"/></typeparam>
        /// <typeparam name="Arg0ExtendsJava_Lang_Iterable_Arg0ExtendsVOut_"><see cref="Java.Lang.Iterable{Arg0ExtendsVOut}"/></typeparam>
        /// <typeparam name="Arg0ExtendsVOut"><typeparamref name="VOut"/></typeparam>
        /// <returns><see cref="Org.Apache.Kafka.Streams.Kstream.KStream"/></returns>
        public Org.Apache.Kafka.Streams.Kstream.KStream<K, VOut> FlatMapValues<VOut, Arg0objectSuperV, Arg0ExtendsJava_Lang_Iterable_Arg0ExtendsVOut_, Arg0ExtendsVOut>(Org.Apache.Kafka.Streams.Kstream.ValueMapper<Arg0objectSuperV, Arg0ExtendsJava_Lang_Iterable_Arg0ExtendsVOut_> arg0) where Arg0objectSuperV : V where Arg0ExtendsJava_Lang_Iterable_Arg0ExtendsVOut_ : Java.Lang.Iterable<Arg0ExtendsVOut> where Arg0ExtendsVOut : VOut
        {
            return IExecuteWithSignature<Org.Apache.Kafka.Streams.Kstream.KStream<K, VOut>>("flatMapValues", "(Lorg/apache/kafka/streams/kstream/ValueMapper;)Lorg/apache/kafka/streams/kstream/KStream;", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-streams/4.1.0/org/apache/kafka/streams/kstream/KStream.html#flatMapValues(org.apache.kafka.streams.kstream.ValueMapperWithKey,org.apache.kafka.streams.kstream.Named)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Streams.Kstream.ValueMapperWithKey"/></param>
        /// <param name="arg1"><see cref="Org.Apache.Kafka.Streams.Kstream.Named"/></param>
        /// <typeparam name="VOut"></typeparam>
        /// <typeparam name="Arg0objectSuperK"><typeparamref name="K"/></typeparam>
        /// <typeparam name="Arg0objectSuperV"><typeparamref name="V"/></typeparam>
        /// <typeparam name="Arg0ExtendsJava_Lang_Iterable_Arg0ExtendsVOut_"><see cref="Java.Lang.Iterable{Arg0ExtendsVOut}"/></typeparam>
        /// <typeparam name="Arg0ExtendsVOut"><typeparamref name="VOut"/></typeparam>
        /// <returns><see cref="Org.Apache.Kafka.Streams.Kstream.KStream"/></returns>
        public Org.Apache.Kafka.Streams.Kstream.KStream<K, VOut> FlatMapValues<VOut, Arg0objectSuperK, Arg0objectSuperV, Arg0ExtendsJava_Lang_Iterable_Arg0ExtendsVOut_, Arg0ExtendsVOut>(Org.Apache.Kafka.Streams.Kstream.ValueMapperWithKey<Arg0objectSuperK, Arg0objectSuperV, Arg0ExtendsJava_Lang_Iterable_Arg0ExtendsVOut_> arg0, Org.Apache.Kafka.Streams.Kstream.Named arg1) where Arg0objectSuperK : K where Arg0objectSuperV : V where Arg0ExtendsJava_Lang_Iterable_Arg0ExtendsVOut_ : Java.Lang.Iterable<Arg0ExtendsVOut> where Arg0ExtendsVOut : VOut
        {
            return IExecuteWithSignature<Org.Apache.Kafka.Streams.Kstream.KStream<K, VOut>>("flatMapValues", "(Lorg/apache/kafka/streams/kstream/ValueMapperWithKey;Lorg/apache/kafka/streams/kstream/Named;)Lorg/apache/kafka/streams/kstream/KStream;", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-streams/4.1.0/org/apache/kafka/streams/kstream/KStream.html#flatMapValues(org.apache.kafka.streams.kstream.ValueMapperWithKey)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Streams.Kstream.ValueMapperWithKey"/></param>
        /// <typeparam name="VOut"></typeparam>
        /// <typeparam name="Arg0objectSuperK"><typeparamref name="K"/></typeparam>
        /// <typeparam name="Arg0objectSuperV"><typeparamref name="V"/></typeparam>
        /// <typeparam name="Arg0ExtendsJava_Lang_Iterable_Arg0ExtendsVOut_"><see cref="Java.Lang.Iterable{Arg0ExtendsVOut}"/></typeparam>
        /// <typeparam name="Arg0ExtendsVOut"><typeparamref name="VOut"/></typeparam>
        /// <returns><see cref="Org.Apache.Kafka.Streams.Kstream.KStream"/></returns>
        public Org.Apache.Kafka.Streams.Kstream.KStream<K, VOut> FlatMapValues<VOut, Arg0objectSuperK, Arg0objectSuperV, Arg0ExtendsJava_Lang_Iterable_Arg0ExtendsVOut_, Arg0ExtendsVOut>(Org.Apache.Kafka.Streams.Kstream.ValueMapperWithKey<Arg0objectSuperK, Arg0objectSuperV, Arg0ExtendsJava_Lang_Iterable_Arg0ExtendsVOut_> arg0) where Arg0objectSuperK : K where Arg0objectSuperV : V where Arg0ExtendsJava_Lang_Iterable_Arg0ExtendsVOut_ : Java.Lang.Iterable<Arg0ExtendsVOut> where Arg0ExtendsVOut : VOut
        {
            return IExecuteWithSignature<Org.Apache.Kafka.Streams.Kstream.KStream<K, VOut>>("flatMapValues", "(Lorg/apache/kafka/streams/kstream/ValueMapperWithKey;)Lorg/apache/kafka/streams/kstream/KStream;", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-streams/4.1.0/org/apache/kafka/streams/kstream/KStream.html#mapValues(org.apache.kafka.streams.kstream.ValueMapper,org.apache.kafka.streams.kstream.Named)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Streams.Kstream.ValueMapper"/></param>
        /// <param name="arg1"><see cref="Org.Apache.Kafka.Streams.Kstream.Named"/></param>
        /// <typeparam name="VOut"></typeparam>
        /// <typeparam name="Arg0objectSuperV"><typeparamref name="V"/></typeparam>
        /// <typeparam name="Arg0ExtendsVOut"><typeparamref name="VOut"/></typeparam>
        /// <returns><see cref="Org.Apache.Kafka.Streams.Kstream.KStream"/></returns>
        public Org.Apache.Kafka.Streams.Kstream.KStream<K, VOut> MapValues<VOut, Arg0objectSuperV, Arg0ExtendsVOut>(Org.Apache.Kafka.Streams.Kstream.ValueMapper<Arg0objectSuperV, Arg0ExtendsVOut> arg0, Org.Apache.Kafka.Streams.Kstream.Named arg1) where Arg0objectSuperV : V where Arg0ExtendsVOut : VOut
        {
            return IExecuteWithSignature<Org.Apache.Kafka.Streams.Kstream.KStream<K, VOut>>("mapValues", "(Lorg/apache/kafka/streams/kstream/ValueMapper;Lorg/apache/kafka/streams/kstream/Named;)Lorg/apache/kafka/streams/kstream/KStream;", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-streams/4.1.0/org/apache/kafka/streams/kstream/KStream.html#mapValues(org.apache.kafka.streams.kstream.ValueMapper)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Streams.Kstream.ValueMapper"/></param>
        /// <typeparam name="VOut"></typeparam>
        /// <typeparam name="Arg0objectSuperV"><typeparamref name="V"/></typeparam>
        /// <typeparam name="Arg0ExtendsVOut"><typeparamref name="VOut"/></typeparam>
        /// <returns><see cref="Org.Apache.Kafka.Streams.Kstream.KStream"/></returns>
        public Org.Apache.Kafka.Streams.Kstream.KStream<K, VOut> MapValues<VOut, Arg0objectSuperV, Arg0ExtendsVOut>(Org.Apache.Kafka.Streams.Kstream.ValueMapper<Arg0objectSuperV, Arg0ExtendsVOut> arg0) where Arg0objectSuperV : V where Arg0ExtendsVOut : VOut
        {
            return IExecuteWithSignature<Org.Apache.Kafka.Streams.Kstream.KStream<K, VOut>>("mapValues", "(Lorg/apache/kafka/streams/kstream/ValueMapper;)Lorg/apache/kafka/streams/kstream/KStream;", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-streams/4.1.0/org/apache/kafka/streams/kstream/KStream.html#mapValues(org.apache.kafka.streams.kstream.ValueMapperWithKey,org.apache.kafka.streams.kstream.Named)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Streams.Kstream.ValueMapperWithKey"/></param>
        /// <param name="arg1"><see cref="Org.Apache.Kafka.Streams.Kstream.Named"/></param>
        /// <typeparam name="VOut"></typeparam>
        /// <typeparam name="Arg0objectSuperK"><typeparamref name="K"/></typeparam>
        /// <typeparam name="Arg0objectSuperV"><typeparamref name="V"/></typeparam>
        /// <typeparam name="Arg0ExtendsVOut"><typeparamref name="VOut"/></typeparam>
        /// <returns><see cref="Org.Apache.Kafka.Streams.Kstream.KStream"/></returns>
        public Org.Apache.Kafka.Streams.Kstream.KStream<K, VOut> MapValues<VOut, Arg0objectSuperK, Arg0objectSuperV, Arg0ExtendsVOut>(Org.Apache.Kafka.Streams.Kstream.ValueMapperWithKey<Arg0objectSuperK, Arg0objectSuperV, Arg0ExtendsVOut> arg0, Org.Apache.Kafka.Streams.Kstream.Named arg1) where Arg0objectSuperK : K where Arg0objectSuperV : V where Arg0ExtendsVOut : VOut
        {
            return IExecuteWithSignature<Org.Apache.Kafka.Streams.Kstream.KStream<K, VOut>>("mapValues", "(Lorg/apache/kafka/streams/kstream/ValueMapperWithKey;Lorg/apache/kafka/streams/kstream/Named;)Lorg/apache/kafka/streams/kstream/KStream;", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-streams/4.1.0/org/apache/kafka/streams/kstream/KStream.html#mapValues(org.apache.kafka.streams.kstream.ValueMapperWithKey)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Streams.Kstream.ValueMapperWithKey"/></param>
        /// <typeparam name="VOut"></typeparam>
        /// <typeparam name="Arg0objectSuperK"><typeparamref name="K"/></typeparam>
        /// <typeparam name="Arg0objectSuperV"><typeparamref name="V"/></typeparam>
        /// <typeparam name="Arg0ExtendsVOut"><typeparamref name="VOut"/></typeparam>
        /// <returns><see cref="Org.Apache.Kafka.Streams.Kstream.KStream"/></returns>
        public Org.Apache.Kafka.Streams.Kstream.KStream<K, VOut> MapValues<VOut, Arg0objectSuperK, Arg0objectSuperV, Arg0ExtendsVOut>(Org.Apache.Kafka.Streams.Kstream.ValueMapperWithKey<Arg0objectSuperK, Arg0objectSuperV, Arg0ExtendsVOut> arg0) where Arg0objectSuperK : K where Arg0objectSuperV : V where Arg0ExtendsVOut : VOut
        {
            return IExecuteWithSignature<Org.Apache.Kafka.Streams.Kstream.KStream<K, VOut>>("mapValues", "(Lorg/apache/kafka/streams/kstream/ValueMapperWithKey;)Lorg/apache/kafka/streams/kstream/KStream;", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-streams/4.1.0/org/apache/kafka/streams/kstream/KStream.html#processValues(org.apache.kafka.streams.processor.api.FixedKeyProcessorSupplier,java.lang.String...)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Streams.Processor.Api.FixedKeyProcessorSupplier"/></param>
        /// <param name="arg1"><see cref="Java.Lang.String"/></param>
        /// <typeparam name="VOut"></typeparam>
        /// <typeparam name="Arg0objectSuperK"><typeparamref name="K"/></typeparam>
        /// <typeparam name="Arg0objectSuperV"><typeparamref name="V"/></typeparam>
        /// <typeparam name="Arg0ExtendsVOut"><typeparamref name="VOut"/></typeparam>
        /// <returns><see cref="Org.Apache.Kafka.Streams.Kstream.KStream"/></returns>
        public Org.Apache.Kafka.Streams.Kstream.KStream<K, VOut> ProcessValues<VOut, Arg0objectSuperK, Arg0objectSuperV, Arg0ExtendsVOut>(Org.Apache.Kafka.Streams.Processor.Api.FixedKeyProcessorSupplier<Arg0objectSuperK, Arg0objectSuperV, Arg0ExtendsVOut> arg0, params Java.Lang.String[] arg1) where Arg0objectSuperK : K where Arg0objectSuperV : V where Arg0ExtendsVOut : VOut
        {
            return IExecuteWithSignature<Org.Apache.Kafka.Streams.Kstream.KStream<K, VOut>>("processValues", "(Lorg/apache/kafka/streams/processor/api/FixedKeyProcessorSupplier;[Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/KStream;", MASES.JNet.Specific.Extensions.JNetCoreExtensions.VarArgRebuild(arg1, arg0));
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-streams/4.1.0/org/apache/kafka/streams/kstream/KStream.html#processValues(org.apache.kafka.streams.processor.api.FixedKeyProcessorSupplier,org.apache.kafka.streams.kstream.Named,java.lang.String...)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Streams.Processor.Api.FixedKeyProcessorSupplier"/></param>
        /// <param name="arg1"><see cref="Org.Apache.Kafka.Streams.Kstream.Named"/></param>
        /// <param name="arg2"><see cref="Java.Lang.String"/></param>
        /// <typeparam name="VOut"></typeparam>
        /// <typeparam name="Arg0objectSuperK"><typeparamref name="K"/></typeparam>
        /// <typeparam name="Arg0objectSuperV"><typeparamref name="V"/></typeparam>
        /// <typeparam name="Arg0ExtendsVOut"><typeparamref name="VOut"/></typeparam>
        /// <returns><see cref="Org.Apache.Kafka.Streams.Kstream.KStream"/></returns>
        public Org.Apache.Kafka.Streams.Kstream.KStream<K, VOut> ProcessValues<VOut, Arg0objectSuperK, Arg0objectSuperV, Arg0ExtendsVOut>(Org.Apache.Kafka.Streams.Processor.Api.FixedKeyProcessorSupplier<Arg0objectSuperK, Arg0objectSuperV, Arg0ExtendsVOut> arg0, Org.Apache.Kafka.Streams.Kstream.Named arg1, params Java.Lang.String[] arg2) where Arg0objectSuperK : K where Arg0objectSuperV : V where Arg0ExtendsVOut : VOut
        {
            return IExecuteWithSignature<Org.Apache.Kafka.Streams.Kstream.KStream<K, VOut>>("processValues", "(Lorg/apache/kafka/streams/processor/api/FixedKeyProcessorSupplier;Lorg/apache/kafka/streams/kstream/Named;[Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/KStream;", MASES.JNet.Specific.Extensions.JNetCoreExtensions.VarArgRebuild(arg2, arg0, arg1));
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-streams/4.1.0/org/apache/kafka/streams/kstream/KStream.html#join(org.apache.kafka.streams.kstream.KStream,org.apache.kafka.streams.kstream.ValueJoiner,org.apache.kafka.streams.kstream.JoinWindows,org.apache.kafka.streams.kstream.StreamJoined)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Streams.Kstream.KStream"/></param>
        /// <param name="arg1"><see cref="Org.Apache.Kafka.Streams.Kstream.ValueJoiner"/></param>
        /// <param name="arg2"><see cref="Org.Apache.Kafka.Streams.Kstream.JoinWindows"/></param>
        /// <param name="arg3"><see cref="Org.Apache.Kafka.Streams.Kstream.StreamJoined"/></param>
        /// <typeparam name="VOut"></typeparam>
        /// <typeparam name="VRight"></typeparam>
        /// <typeparam name="Arg1objectSuperV"><typeparamref name="V"/></typeparam>
        /// <typeparam name="Arg1objectSuperVRight"><typeparamref name="VRight"/></typeparam>
        /// <typeparam name="Arg1ExtendsVOut"><typeparamref name="VOut"/></typeparam>
        /// <returns><see cref="Org.Apache.Kafka.Streams.Kstream.KStream"/></returns>
        public Org.Apache.Kafka.Streams.Kstream.KStream<K, VOut> Join<VOut, VRight, Arg1objectSuperV, Arg1objectSuperVRight, Arg1ExtendsVOut>(Org.Apache.Kafka.Streams.Kstream.KStream<K, VRight> arg0, Org.Apache.Kafka.Streams.Kstream.ValueJoiner<Arg1objectSuperV, Arg1objectSuperVRight, Arg1ExtendsVOut> arg1, Org.Apache.Kafka.Streams.Kstream.JoinWindows arg2, Org.Apache.Kafka.Streams.Kstream.StreamJoined<K, V, VRight> arg3) where Arg1objectSuperV : V where Arg1objectSuperVRight : VRight where Arg1ExtendsVOut : VOut
        {
            return IExecuteWithSignature<Org.Apache.Kafka.Streams.Kstream.KStream<K, VOut>>("join", "(Lorg/apache/kafka/streams/kstream/KStream;Lorg/apache/kafka/streams/kstream/ValueJoiner;Lorg/apache/kafka/streams/kstream/JoinWindows;Lorg/apache/kafka/streams/kstream/StreamJoined;)Lorg/apache/kafka/streams/kstream/KStream;", arg0, arg1, arg2, arg3);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-streams/4.1.0/org/apache/kafka/streams/kstream/KStream.html#join(org.apache.kafka.streams.kstream.KStream,org.apache.kafka.streams.kstream.ValueJoiner,org.apache.kafka.streams.kstream.JoinWindows)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Streams.Kstream.KStream"/></param>
        /// <param name="arg1"><see cref="Org.Apache.Kafka.Streams.Kstream.ValueJoiner"/></param>
        /// <param name="arg2"><see cref="Org.Apache.Kafka.Streams.Kstream.JoinWindows"/></param>
        /// <typeparam name="VOut"></typeparam>
        /// <typeparam name="VRight"></typeparam>
        /// <typeparam name="Arg1objectSuperV"><typeparamref name="V"/></typeparam>
        /// <typeparam name="Arg1objectSuperVRight"><typeparamref name="VRight"/></typeparam>
        /// <typeparam name="Arg1ExtendsVOut"><typeparamref name="VOut"/></typeparam>
        /// <returns><see cref="Org.Apache.Kafka.Streams.Kstream.KStream"/></returns>
        public Org.Apache.Kafka.Streams.Kstream.KStream<K, VOut> Join<VOut, VRight, Arg1objectSuperV, Arg1objectSuperVRight, Arg1ExtendsVOut>(Org.Apache.Kafka.Streams.Kstream.KStream<K, VRight> arg0, Org.Apache.Kafka.Streams.Kstream.ValueJoiner<Arg1objectSuperV, Arg1objectSuperVRight, Arg1ExtendsVOut> arg1, Org.Apache.Kafka.Streams.Kstream.JoinWindows arg2) where Arg1objectSuperV : V where Arg1objectSuperVRight : VRight where Arg1ExtendsVOut : VOut
        {
            return IExecuteWithSignature<Org.Apache.Kafka.Streams.Kstream.KStream<K, VOut>>("join", "(Lorg/apache/kafka/streams/kstream/KStream;Lorg/apache/kafka/streams/kstream/ValueJoiner;Lorg/apache/kafka/streams/kstream/JoinWindows;)Lorg/apache/kafka/streams/kstream/KStream;", arg0, arg1, arg2);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-streams/4.1.0/org/apache/kafka/streams/kstream/KStream.html#join(org.apache.kafka.streams.kstream.KStream,org.apache.kafka.streams.kstream.ValueJoinerWithKey,org.apache.kafka.streams.kstream.JoinWindows,org.apache.kafka.streams.kstream.StreamJoined)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Streams.Kstream.KStream"/></param>
        /// <param name="arg1"><see cref="Org.Apache.Kafka.Streams.Kstream.ValueJoinerWithKey"/></param>
        /// <param name="arg2"><see cref="Org.Apache.Kafka.Streams.Kstream.JoinWindows"/></param>
        /// <param name="arg3"><see cref="Org.Apache.Kafka.Streams.Kstream.StreamJoined"/></param>
        /// <typeparam name="VOut"></typeparam>
        /// <typeparam name="VRight"></typeparam>
        /// <typeparam name="Arg1objectSuperK"><typeparamref name="K"/></typeparam>
        /// <typeparam name="Arg1objectSuperV"><typeparamref name="V"/></typeparam>
        /// <typeparam name="Arg1objectSuperVRight"><typeparamref name="VRight"/></typeparam>
        /// <typeparam name="Arg1ExtendsVOut"><typeparamref name="VOut"/></typeparam>
        /// <returns><see cref="Org.Apache.Kafka.Streams.Kstream.KStream"/></returns>
        public Org.Apache.Kafka.Streams.Kstream.KStream<K, VOut> Join<VOut, VRight, Arg1objectSuperK, Arg1objectSuperV, Arg1objectSuperVRight, Arg1ExtendsVOut>(Org.Apache.Kafka.Streams.Kstream.KStream<K, VRight> arg0, Org.Apache.Kafka.Streams.Kstream.ValueJoinerWithKey<Arg1objectSuperK, Arg1objectSuperV, Arg1objectSuperVRight, Arg1ExtendsVOut> arg1, Org.Apache.Kafka.Streams.Kstream.JoinWindows arg2, Org.Apache.Kafka.Streams.Kstream.StreamJoined<K, V, VRight> arg3) where Arg1objectSuperK : K where Arg1objectSuperV : V where Arg1objectSuperVRight : VRight where Arg1ExtendsVOut : VOut
        {
            return IExecuteWithSignature<Org.Apache.Kafka.Streams.Kstream.KStream<K, VOut>>("join", "(Lorg/apache/kafka/streams/kstream/KStream;Lorg/apache/kafka/streams/kstream/ValueJoinerWithKey;Lorg/apache/kafka/streams/kstream/JoinWindows;Lorg/apache/kafka/streams/kstream/StreamJoined;)Lorg/apache/kafka/streams/kstream/KStream;", arg0, arg1, arg2, arg3);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-streams/4.1.0/org/apache/kafka/streams/kstream/KStream.html#join(org.apache.kafka.streams.kstream.KStream,org.apache.kafka.streams.kstream.ValueJoinerWithKey,org.apache.kafka.streams.kstream.JoinWindows)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Streams.Kstream.KStream"/></param>
        /// <param name="arg1"><see cref="Org.Apache.Kafka.Streams.Kstream.ValueJoinerWithKey"/></param>
        /// <param name="arg2"><see cref="Org.Apache.Kafka.Streams.Kstream.JoinWindows"/></param>
        /// <typeparam name="VOut"></typeparam>
        /// <typeparam name="VRight"></typeparam>
        /// <typeparam name="Arg1objectSuperK"><typeparamref name="K"/></typeparam>
        /// <typeparam name="Arg1objectSuperV"><typeparamref name="V"/></typeparam>
        /// <typeparam name="Arg1objectSuperVRight"><typeparamref name="VRight"/></typeparam>
        /// <typeparam name="Arg1ExtendsVOut"><typeparamref name="VOut"/></typeparam>
        /// <returns><see cref="Org.Apache.Kafka.Streams.Kstream.KStream"/></returns>
        public Org.Apache.Kafka.Streams.Kstream.KStream<K, VOut> Join<VOut, VRight, Arg1objectSuperK, Arg1objectSuperV, Arg1objectSuperVRight, Arg1ExtendsVOut>(Org.Apache.Kafka.Streams.Kstream.KStream<K, VRight> arg0, Org.Apache.Kafka.Streams.Kstream.ValueJoinerWithKey<Arg1objectSuperK, Arg1objectSuperV, Arg1objectSuperVRight, Arg1ExtendsVOut> arg1, Org.Apache.Kafka.Streams.Kstream.JoinWindows arg2) where Arg1objectSuperK : K where Arg1objectSuperV : V where Arg1objectSuperVRight : VRight where Arg1ExtendsVOut : VOut
        {
            return IExecuteWithSignature<Org.Apache.Kafka.Streams.Kstream.KStream<K, VOut>>("join", "(Lorg/apache/kafka/streams/kstream/KStream;Lorg/apache/kafka/streams/kstream/ValueJoinerWithKey;Lorg/apache/kafka/streams/kstream/JoinWindows;)Lorg/apache/kafka/streams/kstream/KStream;", arg0, arg1, arg2);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-streams/4.1.0/org/apache/kafka/streams/kstream/KStream.html#leftJoin(org.apache.kafka.streams.kstream.KStream,org.apache.kafka.streams.kstream.ValueJoiner,org.apache.kafka.streams.kstream.JoinWindows,org.apache.kafka.streams.kstream.StreamJoined)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Streams.Kstream.KStream"/></param>
        /// <param name="arg1"><see cref="Org.Apache.Kafka.Streams.Kstream.ValueJoiner"/></param>
        /// <param name="arg2"><see cref="Org.Apache.Kafka.Streams.Kstream.JoinWindows"/></param>
        /// <param name="arg3"><see cref="Org.Apache.Kafka.Streams.Kstream.StreamJoined"/></param>
        /// <typeparam name="VOut"></typeparam>
        /// <typeparam name="VRight"></typeparam>
        /// <typeparam name="Arg1objectSuperV"><typeparamref name="V"/></typeparam>
        /// <typeparam name="Arg1objectSuperVRight"><typeparamref name="VRight"/></typeparam>
        /// <typeparam name="Arg1ExtendsVOut"><typeparamref name="VOut"/></typeparam>
        /// <returns><see cref="Org.Apache.Kafka.Streams.Kstream.KStream"/></returns>
        public Org.Apache.Kafka.Streams.Kstream.KStream<K, VOut> LeftJoin<VOut, VRight, Arg1objectSuperV, Arg1objectSuperVRight, Arg1ExtendsVOut>(Org.Apache.Kafka.Streams.Kstream.KStream<K, VRight> arg0, Org.Apache.Kafka.Streams.Kstream.ValueJoiner<Arg1objectSuperV, Arg1objectSuperVRight, Arg1ExtendsVOut> arg1, Org.Apache.Kafka.Streams.Kstream.JoinWindows arg2, Org.Apache.Kafka.Streams.Kstream.StreamJoined<K, V, VRight> arg3) where Arg1objectSuperV : V where Arg1objectSuperVRight : VRight where Arg1ExtendsVOut : VOut
        {
            return IExecuteWithSignature<Org.Apache.Kafka.Streams.Kstream.KStream<K, VOut>>("leftJoin", "(Lorg/apache/kafka/streams/kstream/KStream;Lorg/apache/kafka/streams/kstream/ValueJoiner;Lorg/apache/kafka/streams/kstream/JoinWindows;Lorg/apache/kafka/streams/kstream/StreamJoined;)Lorg/apache/kafka/streams/kstream/KStream;", arg0, arg1, arg2, arg3);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-streams/4.1.0/org/apache/kafka/streams/kstream/KStream.html#leftJoin(org.apache.kafka.streams.kstream.KStream,org.apache.kafka.streams.kstream.ValueJoiner,org.apache.kafka.streams.kstream.JoinWindows)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Streams.Kstream.KStream"/></param>
        /// <param name="arg1"><see cref="Org.Apache.Kafka.Streams.Kstream.ValueJoiner"/></param>
        /// <param name="arg2"><see cref="Org.Apache.Kafka.Streams.Kstream.JoinWindows"/></param>
        /// <typeparam name="VOut"></typeparam>
        /// <typeparam name="VRight"></typeparam>
        /// <typeparam name="Arg1objectSuperV"><typeparamref name="V"/></typeparam>
        /// <typeparam name="Arg1objectSuperVRight"><typeparamref name="VRight"/></typeparam>
        /// <typeparam name="Arg1ExtendsVOut"><typeparamref name="VOut"/></typeparam>
        /// <returns><see cref="Org.Apache.Kafka.Streams.Kstream.KStream"/></returns>
        public Org.Apache.Kafka.Streams.Kstream.KStream<K, VOut> LeftJoin<VOut, VRight, Arg1objectSuperV, Arg1objectSuperVRight, Arg1ExtendsVOut>(Org.Apache.Kafka.Streams.Kstream.KStream<K, VRight> arg0, Org.Apache.Kafka.Streams.Kstream.ValueJoiner<Arg1objectSuperV, Arg1objectSuperVRight, Arg1ExtendsVOut> arg1, Org.Apache.Kafka.Streams.Kstream.JoinWindows arg2) where Arg1objectSuperV : V where Arg1objectSuperVRight : VRight where Arg1ExtendsVOut : VOut
        {
            return IExecuteWithSignature<Org.Apache.Kafka.Streams.Kstream.KStream<K, VOut>>("leftJoin", "(Lorg/apache/kafka/streams/kstream/KStream;Lorg/apache/kafka/streams/kstream/ValueJoiner;Lorg/apache/kafka/streams/kstream/JoinWindows;)Lorg/apache/kafka/streams/kstream/KStream;", arg0, arg1, arg2);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-streams/4.1.0/org/apache/kafka/streams/kstream/KStream.html#leftJoin(org.apache.kafka.streams.kstream.KStream,org.apache.kafka.streams.kstream.ValueJoinerWithKey,org.apache.kafka.streams.kstream.JoinWindows,org.apache.kafka.streams.kstream.StreamJoined)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Streams.Kstream.KStream"/></param>
        /// <param name="arg1"><see cref="Org.Apache.Kafka.Streams.Kstream.ValueJoinerWithKey"/></param>
        /// <param name="arg2"><see cref="Org.Apache.Kafka.Streams.Kstream.JoinWindows"/></param>
        /// <param name="arg3"><see cref="Org.Apache.Kafka.Streams.Kstream.StreamJoined"/></param>
        /// <typeparam name="VOut"></typeparam>
        /// <typeparam name="VRight"></typeparam>
        /// <typeparam name="Arg1objectSuperK"><typeparamref name="K"/></typeparam>
        /// <typeparam name="Arg1objectSuperV"><typeparamref name="V"/></typeparam>
        /// <typeparam name="Arg1objectSuperVRight"><typeparamref name="VRight"/></typeparam>
        /// <typeparam name="Arg1ExtendsVOut"><typeparamref name="VOut"/></typeparam>
        /// <returns><see cref="Org.Apache.Kafka.Streams.Kstream.KStream"/></returns>
        public Org.Apache.Kafka.Streams.Kstream.KStream<K, VOut> LeftJoin<VOut, VRight, Arg1objectSuperK, Arg1objectSuperV, Arg1objectSuperVRight, Arg1ExtendsVOut>(Org.Apache.Kafka.Streams.Kstream.KStream<K, VRight> arg0, Org.Apache.Kafka.Streams.Kstream.ValueJoinerWithKey<Arg1objectSuperK, Arg1objectSuperV, Arg1objectSuperVRight, Arg1ExtendsVOut> arg1, Org.Apache.Kafka.Streams.Kstream.JoinWindows arg2, Org.Apache.Kafka.Streams.Kstream.StreamJoined<K, V, VRight> arg3) where Arg1objectSuperK : K where Arg1objectSuperV : V where Arg1objectSuperVRight : VRight where Arg1ExtendsVOut : VOut
        {
            return IExecuteWithSignature<Org.Apache.Kafka.Streams.Kstream.KStream<K, VOut>>("leftJoin", "(Lorg/apache/kafka/streams/kstream/KStream;Lorg/apache/kafka/streams/kstream/ValueJoinerWithKey;Lorg/apache/kafka/streams/kstream/JoinWindows;Lorg/apache/kafka/streams/kstream/StreamJoined;)Lorg/apache/kafka/streams/kstream/KStream;", arg0, arg1, arg2, arg3);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-streams/4.1.0/org/apache/kafka/streams/kstream/KStream.html#leftJoin(org.apache.kafka.streams.kstream.KStream,org.apache.kafka.streams.kstream.ValueJoinerWithKey,org.apache.kafka.streams.kstream.JoinWindows)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Streams.Kstream.KStream"/></param>
        /// <param name="arg1"><see cref="Org.Apache.Kafka.Streams.Kstream.ValueJoinerWithKey"/></param>
        /// <param name="arg2"><see cref="Org.Apache.Kafka.Streams.Kstream.JoinWindows"/></param>
        /// <typeparam name="VOut"></typeparam>
        /// <typeparam name="VRight"></typeparam>
        /// <typeparam name="Arg1objectSuperK"><typeparamref name="K"/></typeparam>
        /// <typeparam name="Arg1objectSuperV"><typeparamref name="V"/></typeparam>
        /// <typeparam name="Arg1objectSuperVRight"><typeparamref name="VRight"/></typeparam>
        /// <typeparam name="Arg1ExtendsVOut"><typeparamref name="VOut"/></typeparam>
        /// <returns><see cref="Org.Apache.Kafka.Streams.Kstream.KStream"/></returns>
        public Org.Apache.Kafka.Streams.Kstream.KStream<K, VOut> LeftJoin<VOut, VRight, Arg1objectSuperK, Arg1objectSuperV, Arg1objectSuperVRight, Arg1ExtendsVOut>(Org.Apache.Kafka.Streams.Kstream.KStream<K, VRight> arg0, Org.Apache.Kafka.Streams.Kstream.ValueJoinerWithKey<Arg1objectSuperK, Arg1objectSuperV, Arg1objectSuperVRight, Arg1ExtendsVOut> arg1, Org.Apache.Kafka.Streams.Kstream.JoinWindows arg2) where Arg1objectSuperK : K where Arg1objectSuperV : V where Arg1objectSuperVRight : VRight where Arg1ExtendsVOut : VOut
        {
            return IExecuteWithSignature<Org.Apache.Kafka.Streams.Kstream.KStream<K, VOut>>("leftJoin", "(Lorg/apache/kafka/streams/kstream/KStream;Lorg/apache/kafka/streams/kstream/ValueJoinerWithKey;Lorg/apache/kafka/streams/kstream/JoinWindows;)Lorg/apache/kafka/streams/kstream/KStream;", arg0, arg1, arg2);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-streams/4.1.0/org/apache/kafka/streams/kstream/KStream.html#outerJoin(org.apache.kafka.streams.kstream.KStream,org.apache.kafka.streams.kstream.ValueJoiner,org.apache.kafka.streams.kstream.JoinWindows,org.apache.kafka.streams.kstream.StreamJoined)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Streams.Kstream.KStream"/></param>
        /// <param name="arg1"><see cref="Org.Apache.Kafka.Streams.Kstream.ValueJoiner"/></param>
        /// <param name="arg2"><see cref="Org.Apache.Kafka.Streams.Kstream.JoinWindows"/></param>
        /// <param name="arg3"><see cref="Org.Apache.Kafka.Streams.Kstream.StreamJoined"/></param>
        /// <typeparam name="VOut"></typeparam>
        /// <typeparam name="VRight"></typeparam>
        /// <typeparam name="Arg1objectSuperV"><typeparamref name="V"/></typeparam>
        /// <typeparam name="Arg1objectSuperVRight"><typeparamref name="VRight"/></typeparam>
        /// <typeparam name="Arg1ExtendsVOut"><typeparamref name="VOut"/></typeparam>
        /// <returns><see cref="Org.Apache.Kafka.Streams.Kstream.KStream"/></returns>
        public Org.Apache.Kafka.Streams.Kstream.KStream<K, VOut> OuterJoin<VOut, VRight, Arg1objectSuperV, Arg1objectSuperVRight, Arg1ExtendsVOut>(Org.Apache.Kafka.Streams.Kstream.KStream<K, VRight> arg0, Org.Apache.Kafka.Streams.Kstream.ValueJoiner<Arg1objectSuperV, Arg1objectSuperVRight, Arg1ExtendsVOut> arg1, Org.Apache.Kafka.Streams.Kstream.JoinWindows arg2, Org.Apache.Kafka.Streams.Kstream.StreamJoined<K, V, VRight> arg3) where Arg1objectSuperV : V where Arg1objectSuperVRight : VRight where Arg1ExtendsVOut : VOut
        {
            return IExecuteWithSignature<Org.Apache.Kafka.Streams.Kstream.KStream<K, VOut>>("outerJoin", "(Lorg/apache/kafka/streams/kstream/KStream;Lorg/apache/kafka/streams/kstream/ValueJoiner;Lorg/apache/kafka/streams/kstream/JoinWindows;Lorg/apache/kafka/streams/kstream/StreamJoined;)Lorg/apache/kafka/streams/kstream/KStream;", arg0, arg1, arg2, arg3);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-streams/4.1.0/org/apache/kafka/streams/kstream/KStream.html#outerJoin(org.apache.kafka.streams.kstream.KStream,org.apache.kafka.streams.kstream.ValueJoiner,org.apache.kafka.streams.kstream.JoinWindows)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Streams.Kstream.KStream"/></param>
        /// <param name="arg1"><see cref="Org.Apache.Kafka.Streams.Kstream.ValueJoiner"/></param>
        /// <param name="arg2"><see cref="Org.Apache.Kafka.Streams.Kstream.JoinWindows"/></param>
        /// <typeparam name="VOut"></typeparam>
        /// <typeparam name="VRight"></typeparam>
        /// <typeparam name="Arg1objectSuperV"><typeparamref name="V"/></typeparam>
        /// <typeparam name="Arg1objectSuperVRight"><typeparamref name="VRight"/></typeparam>
        /// <typeparam name="Arg1ExtendsVOut"><typeparamref name="VOut"/></typeparam>
        /// <returns><see cref="Org.Apache.Kafka.Streams.Kstream.KStream"/></returns>
        public Org.Apache.Kafka.Streams.Kstream.KStream<K, VOut> OuterJoin<VOut, VRight, Arg1objectSuperV, Arg1objectSuperVRight, Arg1ExtendsVOut>(Org.Apache.Kafka.Streams.Kstream.KStream<K, VRight> arg0, Org.Apache.Kafka.Streams.Kstream.ValueJoiner<Arg1objectSuperV, Arg1objectSuperVRight, Arg1ExtendsVOut> arg1, Org.Apache.Kafka.Streams.Kstream.JoinWindows arg2) where Arg1objectSuperV : V where Arg1objectSuperVRight : VRight where Arg1ExtendsVOut : VOut
        {
            return IExecuteWithSignature<Org.Apache.Kafka.Streams.Kstream.KStream<K, VOut>>("outerJoin", "(Lorg/apache/kafka/streams/kstream/KStream;Lorg/apache/kafka/streams/kstream/ValueJoiner;Lorg/apache/kafka/streams/kstream/JoinWindows;)Lorg/apache/kafka/streams/kstream/KStream;", arg0, arg1, arg2);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-streams/4.1.0/org/apache/kafka/streams/kstream/KStream.html#outerJoin(org.apache.kafka.streams.kstream.KStream,org.apache.kafka.streams.kstream.ValueJoinerWithKey,org.apache.kafka.streams.kstream.JoinWindows,org.apache.kafka.streams.kstream.StreamJoined)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Streams.Kstream.KStream"/></param>
        /// <param name="arg1"><see cref="Org.Apache.Kafka.Streams.Kstream.ValueJoinerWithKey"/></param>
        /// <param name="arg2"><see cref="Org.Apache.Kafka.Streams.Kstream.JoinWindows"/></param>
        /// <param name="arg3"><see cref="Org.Apache.Kafka.Streams.Kstream.StreamJoined"/></param>
        /// <typeparam name="VOut"></typeparam>
        /// <typeparam name="VRight"></typeparam>
        /// <typeparam name="Arg1objectSuperK"><typeparamref name="K"/></typeparam>
        /// <typeparam name="Arg1objectSuperV"><typeparamref name="V"/></typeparam>
        /// <typeparam name="Arg1objectSuperVRight"><typeparamref name="VRight"/></typeparam>
        /// <typeparam name="Arg1ExtendsVOut"><typeparamref name="VOut"/></typeparam>
        /// <returns><see cref="Org.Apache.Kafka.Streams.Kstream.KStream"/></returns>
        public Org.Apache.Kafka.Streams.Kstream.KStream<K, VOut> OuterJoin<VOut, VRight, Arg1objectSuperK, Arg1objectSuperV, Arg1objectSuperVRight, Arg1ExtendsVOut>(Org.Apache.Kafka.Streams.Kstream.KStream<K, VRight> arg0, Org.Apache.Kafka.Streams.Kstream.ValueJoinerWithKey<Arg1objectSuperK, Arg1objectSuperV, Arg1objectSuperVRight, Arg1ExtendsVOut> arg1, Org.Apache.Kafka.Streams.Kstream.JoinWindows arg2, Org.Apache.Kafka.Streams.Kstream.StreamJoined<K, V, VRight> arg3) where Arg1objectSuperK : K where Arg1objectSuperV : V where Arg1objectSuperVRight : VRight where Arg1ExtendsVOut : VOut
        {
            return IExecuteWithSignature<Org.Apache.Kafka.Streams.Kstream.KStream<K, VOut>>("outerJoin", "(Lorg/apache/kafka/streams/kstream/KStream;Lorg/apache/kafka/streams/kstream/ValueJoinerWithKey;Lorg/apache/kafka/streams/kstream/JoinWindows;Lorg/apache/kafka/streams/kstream/StreamJoined;)Lorg/apache/kafka/streams/kstream/KStream;", arg0, arg1, arg2, arg3);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-streams/4.1.0/org/apache/kafka/streams/kstream/KStream.html#outerJoin(org.apache.kafka.streams.kstream.KStream,org.apache.kafka.streams.kstream.ValueJoinerWithKey,org.apache.kafka.streams.kstream.JoinWindows)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Streams.Kstream.KStream"/></param>
        /// <param name="arg1"><see cref="Org.Apache.Kafka.Streams.Kstream.ValueJoinerWithKey"/></param>
        /// <param name="arg2"><see cref="Org.Apache.Kafka.Streams.Kstream.JoinWindows"/></param>
        /// <typeparam name="VOut"></typeparam>
        /// <typeparam name="VRight"></typeparam>
        /// <typeparam name="Arg1objectSuperK"><typeparamref name="K"/></typeparam>
        /// <typeparam name="Arg1objectSuperV"><typeparamref name="V"/></typeparam>
        /// <typeparam name="Arg1objectSuperVRight"><typeparamref name="VRight"/></typeparam>
        /// <typeparam name="Arg1ExtendsVOut"><typeparamref name="VOut"/></typeparam>
        /// <returns><see cref="Org.Apache.Kafka.Streams.Kstream.KStream"/></returns>
        public Org.Apache.Kafka.Streams.Kstream.KStream<K, VOut> OuterJoin<VOut, VRight, Arg1objectSuperK, Arg1objectSuperV, Arg1objectSuperVRight, Arg1ExtendsVOut>(Org.Apache.Kafka.Streams.Kstream.KStream<K, VRight> arg0, Org.Apache.Kafka.Streams.Kstream.ValueJoinerWithKey<Arg1objectSuperK, Arg1objectSuperV, Arg1objectSuperVRight, Arg1ExtendsVOut> arg1, Org.Apache.Kafka.Streams.Kstream.JoinWindows arg2) where Arg1objectSuperK : K where Arg1objectSuperV : V where Arg1objectSuperVRight : VRight where Arg1ExtendsVOut : VOut
        {
            return IExecuteWithSignature<Org.Apache.Kafka.Streams.Kstream.KStream<K, VOut>>("outerJoin", "(Lorg/apache/kafka/streams/kstream/KStream;Lorg/apache/kafka/streams/kstream/ValueJoinerWithKey;Lorg/apache/kafka/streams/kstream/JoinWindows;)Lorg/apache/kafka/streams/kstream/KStream;", arg0, arg1, arg2);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-streams/4.1.0/org/apache/kafka/streams/kstream/KStream.html#leftJoin(org.apache.kafka.streams.kstream.KTable,org.apache.kafka.streams.kstream.ValueJoiner,org.apache.kafka.streams.kstream.Joined)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Streams.Kstream.KTable"/></param>
        /// <param name="arg1"><see cref="Org.Apache.Kafka.Streams.Kstream.ValueJoiner"/></param>
        /// <param name="arg2"><see cref="Org.Apache.Kafka.Streams.Kstream.Joined"/></param>
        /// <typeparam name="VOut"></typeparam>
        /// <typeparam name="VTable"></typeparam>
        /// <typeparam name="Arg1objectSuperV"><typeparamref name="V"/></typeparam>
        /// <typeparam name="Arg1objectSuperVTable"><typeparamref name="VTable"/></typeparam>
        /// <typeparam name="Arg1ExtendsVOut"><typeparamref name="VOut"/></typeparam>
        /// <returns><see cref="Org.Apache.Kafka.Streams.Kstream.KStream"/></returns>
        public Org.Apache.Kafka.Streams.Kstream.KStream<K, VOut> LeftJoin<VOut, VTable, Arg1objectSuperV, Arg1objectSuperVTable, Arg1ExtendsVOut>(Org.Apache.Kafka.Streams.Kstream.KTable<K, VTable> arg0, Org.Apache.Kafka.Streams.Kstream.ValueJoiner<Arg1objectSuperV, Arg1objectSuperVTable, Arg1ExtendsVOut> arg1, Org.Apache.Kafka.Streams.Kstream.Joined<K, V, VTable> arg2) where Arg1objectSuperV : V where Arg1objectSuperVTable : VTable where Arg1ExtendsVOut : VOut
        {
            return IExecuteWithSignature<Org.Apache.Kafka.Streams.Kstream.KStream<K, VOut>>("leftJoin", "(Lorg/apache/kafka/streams/kstream/KTable;Lorg/apache/kafka/streams/kstream/ValueJoiner;Lorg/apache/kafka/streams/kstream/Joined;)Lorg/apache/kafka/streams/kstream/KStream;", arg0, arg1, arg2);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-streams/4.1.0/org/apache/kafka/streams/kstream/KStream.html#leftJoin(org.apache.kafka.streams.kstream.KTable,org.apache.kafka.streams.kstream.ValueJoiner)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Streams.Kstream.KTable"/></param>
        /// <param name="arg1"><see cref="Org.Apache.Kafka.Streams.Kstream.ValueJoiner"/></param>
        /// <typeparam name="VOut"></typeparam>
        /// <typeparam name="VTable"></typeparam>
        /// <typeparam name="Arg1objectSuperV"><typeparamref name="V"/></typeparam>
        /// <typeparam name="Arg1objectSuperVTable"><typeparamref name="VTable"/></typeparam>
        /// <typeparam name="Arg1ExtendsVOut"><typeparamref name="VOut"/></typeparam>
        /// <returns><see cref="Org.Apache.Kafka.Streams.Kstream.KStream"/></returns>
        public Org.Apache.Kafka.Streams.Kstream.KStream<K, VOut> LeftJoin<VOut, VTable, Arg1objectSuperV, Arg1objectSuperVTable, Arg1ExtendsVOut>(Org.Apache.Kafka.Streams.Kstream.KTable<K, VTable> arg0, Org.Apache.Kafka.Streams.Kstream.ValueJoiner<Arg1objectSuperV, Arg1objectSuperVTable, Arg1ExtendsVOut> arg1) where Arg1objectSuperV : V where Arg1objectSuperVTable : VTable where Arg1ExtendsVOut : VOut
        {
            return IExecuteWithSignature<Org.Apache.Kafka.Streams.Kstream.KStream<K, VOut>>("leftJoin", "(Lorg/apache/kafka/streams/kstream/KTable;Lorg/apache/kafka/streams/kstream/ValueJoiner;)Lorg/apache/kafka/streams/kstream/KStream;", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-streams/4.1.0/org/apache/kafka/streams/kstream/KStream.html#leftJoin(org.apache.kafka.streams.kstream.KTable,org.apache.kafka.streams.kstream.ValueJoinerWithKey,org.apache.kafka.streams.kstream.Joined)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Streams.Kstream.KTable"/></param>
        /// <param name="arg1"><see cref="Org.Apache.Kafka.Streams.Kstream.ValueJoinerWithKey"/></param>
        /// <param name="arg2"><see cref="Org.Apache.Kafka.Streams.Kstream.Joined"/></param>
        /// <typeparam name="VOut"></typeparam>
        /// <typeparam name="VTable"></typeparam>
        /// <typeparam name="Arg1objectSuperK"><typeparamref name="K"/></typeparam>
        /// <typeparam name="Arg1objectSuperV"><typeparamref name="V"/></typeparam>
        /// <typeparam name="Arg1objectSuperVTable"><typeparamref name="VTable"/></typeparam>
        /// <typeparam name="Arg1ExtendsVOut"><typeparamref name="VOut"/></typeparam>
        /// <returns><see cref="Org.Apache.Kafka.Streams.Kstream.KStream"/></returns>
        public Org.Apache.Kafka.Streams.Kstream.KStream<K, VOut> LeftJoin<VOut, VTable, Arg1objectSuperK, Arg1objectSuperV, Arg1objectSuperVTable, Arg1ExtendsVOut>(Org.Apache.Kafka.Streams.Kstream.KTable<K, VTable> arg0, Org.Apache.Kafka.Streams.Kstream.ValueJoinerWithKey<Arg1objectSuperK, Arg1objectSuperV, Arg1objectSuperVTable, Arg1ExtendsVOut> arg1, Org.Apache.Kafka.Streams.Kstream.Joined<K, V, VTable> arg2) where Arg1objectSuperK : K where Arg1objectSuperV : V where Arg1objectSuperVTable : VTable where Arg1ExtendsVOut : VOut
        {
            return IExecuteWithSignature<Org.Apache.Kafka.Streams.Kstream.KStream<K, VOut>>("leftJoin", "(Lorg/apache/kafka/streams/kstream/KTable;Lorg/apache/kafka/streams/kstream/ValueJoinerWithKey;Lorg/apache/kafka/streams/kstream/Joined;)Lorg/apache/kafka/streams/kstream/KStream;", arg0, arg1, arg2);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-streams/4.1.0/org/apache/kafka/streams/kstream/KStream.html#leftJoin(org.apache.kafka.streams.kstream.KTable,org.apache.kafka.streams.kstream.ValueJoinerWithKey)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Streams.Kstream.KTable"/></param>
        /// <param name="arg1"><see cref="Org.Apache.Kafka.Streams.Kstream.ValueJoinerWithKey"/></param>
        /// <typeparam name="VOut"></typeparam>
        /// <typeparam name="VTable"></typeparam>
        /// <typeparam name="Arg1objectSuperK"><typeparamref name="K"/></typeparam>
        /// <typeparam name="Arg1objectSuperV"><typeparamref name="V"/></typeparam>
        /// <typeparam name="Arg1objectSuperVTable"><typeparamref name="VTable"/></typeparam>
        /// <typeparam name="Arg1ExtendsVOut"><typeparamref name="VOut"/></typeparam>
        /// <returns><see cref="Org.Apache.Kafka.Streams.Kstream.KStream"/></returns>
        public Org.Apache.Kafka.Streams.Kstream.KStream<K, VOut> LeftJoin<VOut, VTable, Arg1objectSuperK, Arg1objectSuperV, Arg1objectSuperVTable, Arg1ExtendsVOut>(Org.Apache.Kafka.Streams.Kstream.KTable<K, VTable> arg0, Org.Apache.Kafka.Streams.Kstream.ValueJoinerWithKey<Arg1objectSuperK, Arg1objectSuperV, Arg1objectSuperVTable, Arg1ExtendsVOut> arg1) where Arg1objectSuperK : K where Arg1objectSuperV : V where Arg1objectSuperVTable : VTable where Arg1ExtendsVOut : VOut
        {
            return IExecuteWithSignature<Org.Apache.Kafka.Streams.Kstream.KStream<K, VOut>>("leftJoin", "(Lorg/apache/kafka/streams/kstream/KTable;Lorg/apache/kafka/streams/kstream/ValueJoinerWithKey;)Lorg/apache/kafka/streams/kstream/KStream;", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-streams/4.1.0/org/apache/kafka/streams/kstream/KStream.html#split()"/>
        /// </summary>
        /// <returns><see cref="Org.Apache.Kafka.Streams.Kstream.BranchedKStream"/></returns>
        public Org.Apache.Kafka.Streams.Kstream.BranchedKStream<K, V> Split()
        {
            return IExecuteWithSignature<Org.Apache.Kafka.Streams.Kstream.BranchedKStream<K, V>>("split", "()Lorg/apache/kafka/streams/kstream/BranchedKStream;");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-streams/4.1.0/org/apache/kafka/streams/kstream/KStream.html#split(org.apache.kafka.streams.kstream.Named)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Streams.Kstream.Named"/></param>
        /// <returns><see cref="Org.Apache.Kafka.Streams.Kstream.BranchedKStream"/></returns>
        public Org.Apache.Kafka.Streams.Kstream.BranchedKStream<K, V> Split(Org.Apache.Kafka.Streams.Kstream.Named arg0)
        {
            return IExecuteWithSignature<Org.Apache.Kafka.Streams.Kstream.BranchedKStream<K, V>>("split", "(Lorg/apache/kafka/streams/kstream/Named;)Lorg/apache/kafka/streams/kstream/BranchedKStream;", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-streams/4.1.0/org/apache/kafka/streams/kstream/KStream.html#groupByKey()"/>
        /// </summary>
        /// <returns><see cref="Org.Apache.Kafka.Streams.Kstream.KGroupedStream"/></returns>
        public Org.Apache.Kafka.Streams.Kstream.KGroupedStream<K, V> GroupByKey()
        {
            return IExecuteWithSignature<Org.Apache.Kafka.Streams.Kstream.KGroupedStream<K, V>>("groupByKey", "()Lorg/apache/kafka/streams/kstream/KGroupedStream;");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-streams/4.1.0/org/apache/kafka/streams/kstream/KStream.html#groupByKey(org.apache.kafka.streams.kstream.Grouped)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Streams.Kstream.Grouped"/></param>
        /// <returns><see cref="Org.Apache.Kafka.Streams.Kstream.KGroupedStream"/></returns>
        public Org.Apache.Kafka.Streams.Kstream.KGroupedStream<K, V> GroupByKey(Org.Apache.Kafka.Streams.Kstream.Grouped<K, V> arg0)
        {
            return IExecuteWithSignature<Org.Apache.Kafka.Streams.Kstream.KGroupedStream<K, V>>("groupByKey", "(Lorg/apache/kafka/streams/kstream/Grouped;)Lorg/apache/kafka/streams/kstream/KGroupedStream;", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-streams/4.1.0/org/apache/kafka/streams/kstream/KStream.html#filter(org.apache.kafka.streams.kstream.Predicate,org.apache.kafka.streams.kstream.Named)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Streams.Kstream.Predicate"/></param>
        /// <param name="arg1"><see cref="Org.Apache.Kafka.Streams.Kstream.Named"/></param>
        /// <typeparam name="Arg0objectSuperK"><typeparamref name="K"/></typeparam>
        /// <typeparam name="Arg0objectSuperV"><typeparamref name="V"/></typeparam>
        /// <returns><see cref="Org.Apache.Kafka.Streams.Kstream.KStream"/></returns>
        public Org.Apache.Kafka.Streams.Kstream.KStream<K, V> Filter<Arg0objectSuperK, Arg0objectSuperV>(Org.Apache.Kafka.Streams.Kstream.Predicate<Arg0objectSuperK, Arg0objectSuperV> arg0, Org.Apache.Kafka.Streams.Kstream.Named arg1) where Arg0objectSuperK : K where Arg0objectSuperV : V
        {
            return IExecuteWithSignature<Org.Apache.Kafka.Streams.Kstream.KStream<K, V>>("filter", "(Lorg/apache/kafka/streams/kstream/Predicate;Lorg/apache/kafka/streams/kstream/Named;)Lorg/apache/kafka/streams/kstream/KStream;", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-streams/4.1.0/org/apache/kafka/streams/kstream/KStream.html#filter(org.apache.kafka.streams.kstream.Predicate)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Streams.Kstream.Predicate"/></param>
        /// <typeparam name="Arg0objectSuperK"><typeparamref name="K"/></typeparam>
        /// <typeparam name="Arg0objectSuperV"><typeparamref name="V"/></typeparam>
        /// <returns><see cref="Org.Apache.Kafka.Streams.Kstream.KStream"/></returns>
        public Org.Apache.Kafka.Streams.Kstream.KStream<K, V> Filter<Arg0objectSuperK, Arg0objectSuperV>(Org.Apache.Kafka.Streams.Kstream.Predicate<Arg0objectSuperK, Arg0objectSuperV> arg0) where Arg0objectSuperK : K where Arg0objectSuperV : V
        {
            return IExecuteWithSignature<Org.Apache.Kafka.Streams.Kstream.KStream<K, V>>("filter", "(Lorg/apache/kafka/streams/kstream/Predicate;)Lorg/apache/kafka/streams/kstream/KStream;", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-streams/4.1.0/org/apache/kafka/streams/kstream/KStream.html#filterNot(org.apache.kafka.streams.kstream.Predicate,org.apache.kafka.streams.kstream.Named)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Streams.Kstream.Predicate"/></param>
        /// <param name="arg1"><see cref="Org.Apache.Kafka.Streams.Kstream.Named"/></param>
        /// <typeparam name="Arg0objectSuperK"><typeparamref name="K"/></typeparam>
        /// <typeparam name="Arg0objectSuperV"><typeparamref name="V"/></typeparam>
        /// <returns><see cref="Org.Apache.Kafka.Streams.Kstream.KStream"/></returns>
        public Org.Apache.Kafka.Streams.Kstream.KStream<K, V> FilterNot<Arg0objectSuperK, Arg0objectSuperV>(Org.Apache.Kafka.Streams.Kstream.Predicate<Arg0objectSuperK, Arg0objectSuperV> arg0, Org.Apache.Kafka.Streams.Kstream.Named arg1) where Arg0objectSuperK : K where Arg0objectSuperV : V
        {
            return IExecuteWithSignature<Org.Apache.Kafka.Streams.Kstream.KStream<K, V>>("filterNot", "(Lorg/apache/kafka/streams/kstream/Predicate;Lorg/apache/kafka/streams/kstream/Named;)Lorg/apache/kafka/streams/kstream/KStream;", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-streams/4.1.0/org/apache/kafka/streams/kstream/KStream.html#filterNot(org.apache.kafka.streams.kstream.Predicate)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Streams.Kstream.Predicate"/></param>
        /// <typeparam name="Arg0objectSuperK"><typeparamref name="K"/></typeparam>
        /// <typeparam name="Arg0objectSuperV"><typeparamref name="V"/></typeparam>
        /// <returns><see cref="Org.Apache.Kafka.Streams.Kstream.KStream"/></returns>
        public Org.Apache.Kafka.Streams.Kstream.KStream<K, V> FilterNot<Arg0objectSuperK, Arg0objectSuperV>(Org.Apache.Kafka.Streams.Kstream.Predicate<Arg0objectSuperK, Arg0objectSuperV> arg0) where Arg0objectSuperK : K where Arg0objectSuperV : V
        {
            return IExecuteWithSignature<Org.Apache.Kafka.Streams.Kstream.KStream<K, V>>("filterNot", "(Lorg/apache/kafka/streams/kstream/Predicate;)Lorg/apache/kafka/streams/kstream/KStream;", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-streams/4.1.0/org/apache/kafka/streams/kstream/KStream.html#merge(org.apache.kafka.streams.kstream.KStream,org.apache.kafka.streams.kstream.Named)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Streams.Kstream.KStream"/></param>
        /// <param name="arg1"><see cref="Org.Apache.Kafka.Streams.Kstream.Named"/></param>
        /// <returns><see cref="Org.Apache.Kafka.Streams.Kstream.KStream"/></returns>
        public Org.Apache.Kafka.Streams.Kstream.KStream<K, V> Merge(Org.Apache.Kafka.Streams.Kstream.KStream<K, V> arg0, Org.Apache.Kafka.Streams.Kstream.Named arg1)
        {
            return IExecuteWithSignature<Org.Apache.Kafka.Streams.Kstream.KStream<K, V>>("merge", "(Lorg/apache/kafka/streams/kstream/KStream;Lorg/apache/kafka/streams/kstream/Named;)Lorg/apache/kafka/streams/kstream/KStream;", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-streams/4.1.0/org/apache/kafka/streams/kstream/KStream.html#merge(org.apache.kafka.streams.kstream.KStream)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Streams.Kstream.KStream"/></param>
        /// <returns><see cref="Org.Apache.Kafka.Streams.Kstream.KStream"/></returns>
        public Org.Apache.Kafka.Streams.Kstream.KStream<K, V> Merge(Org.Apache.Kafka.Streams.Kstream.KStream<K, V> arg0)
        {
            return IExecuteWithSignature<Org.Apache.Kafka.Streams.Kstream.KStream<K, V>>("merge", "(Lorg/apache/kafka/streams/kstream/KStream;)Lorg/apache/kafka/streams/kstream/KStream;", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-streams/4.1.0/org/apache/kafka/streams/kstream/KStream.html#peek(org.apache.kafka.streams.kstream.ForeachAction,org.apache.kafka.streams.kstream.Named)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Streams.Kstream.ForeachAction"/></param>
        /// <param name="arg1"><see cref="Org.Apache.Kafka.Streams.Kstream.Named"/></param>
        /// <typeparam name="Arg0objectSuperK"><typeparamref name="K"/></typeparam>
        /// <typeparam name="Arg0objectSuperV"><typeparamref name="V"/></typeparam>
        /// <returns><see cref="Org.Apache.Kafka.Streams.Kstream.KStream"/></returns>
        public Org.Apache.Kafka.Streams.Kstream.KStream<K, V> Peek<Arg0objectSuperK, Arg0objectSuperV>(Org.Apache.Kafka.Streams.Kstream.ForeachAction<Arg0objectSuperK, Arg0objectSuperV> arg0, Org.Apache.Kafka.Streams.Kstream.Named arg1) where Arg0objectSuperK : K where Arg0objectSuperV : V
        {
            return IExecuteWithSignature<Org.Apache.Kafka.Streams.Kstream.KStream<K, V>>("peek", "(Lorg/apache/kafka/streams/kstream/ForeachAction;Lorg/apache/kafka/streams/kstream/Named;)Lorg/apache/kafka/streams/kstream/KStream;", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-streams/4.1.0/org/apache/kafka/streams/kstream/KStream.html#peek(org.apache.kafka.streams.kstream.ForeachAction)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Streams.Kstream.ForeachAction"/></param>
        /// <typeparam name="Arg0objectSuperK"><typeparamref name="K"/></typeparam>
        /// <typeparam name="Arg0objectSuperV"><typeparamref name="V"/></typeparam>
        /// <returns><see cref="Org.Apache.Kafka.Streams.Kstream.KStream"/></returns>
        public Org.Apache.Kafka.Streams.Kstream.KStream<K, V> Peek<Arg0objectSuperK, Arg0objectSuperV>(Org.Apache.Kafka.Streams.Kstream.ForeachAction<Arg0objectSuperK, Arg0objectSuperV> arg0) where Arg0objectSuperK : K where Arg0objectSuperV : V
        {
            return IExecuteWithSignature<Org.Apache.Kafka.Streams.Kstream.KStream<K, V>>("peek", "(Lorg/apache/kafka/streams/kstream/ForeachAction;)Lorg/apache/kafka/streams/kstream/KStream;", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-streams/4.1.0/org/apache/kafka/streams/kstream/KStream.html#repartition()"/>
        /// </summary>
        /// <returns><see cref="Org.Apache.Kafka.Streams.Kstream.KStream"/></returns>
        public Org.Apache.Kafka.Streams.Kstream.KStream<K, V> Repartition()
        {
            return IExecuteWithSignature<Org.Apache.Kafka.Streams.Kstream.KStream<K, V>>("repartition", "()Lorg/apache/kafka/streams/kstream/KStream;");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-streams/4.1.0/org/apache/kafka/streams/kstream/KStream.html#repartition(org.apache.kafka.streams.kstream.Repartitioned)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Streams.Kstream.Repartitioned"/></param>
        /// <returns><see cref="Org.Apache.Kafka.Streams.Kstream.KStream"/></returns>
        public Org.Apache.Kafka.Streams.Kstream.KStream<K, V> Repartition(Org.Apache.Kafka.Streams.Kstream.Repartitioned<K, V> arg0)
        {
            return IExecuteWithSignature<Org.Apache.Kafka.Streams.Kstream.KStream<K, V>>("repartition", "(Lorg/apache/kafka/streams/kstream/Repartitioned;)Lorg/apache/kafka/streams/kstream/KStream;", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-streams/4.1.0/org/apache/kafka/streams/kstream/KStream.html#toTable()"/>
        /// </summary>
        /// <returns><see cref="Org.Apache.Kafka.Streams.Kstream.KTable"/></returns>
        public Org.Apache.Kafka.Streams.Kstream.KTable<K, V> ToTable()
        {
            return IExecuteWithSignature<Org.Apache.Kafka.Streams.Kstream.KTable<K, V>>("toTable", "()Lorg/apache/kafka/streams/kstream/KTable;");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-streams/4.1.0/org/apache/kafka/streams/kstream/KStream.html#toTable(org.apache.kafka.streams.kstream.Materialized)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Streams.Kstream.Materialized"/></param>
        /// <returns><see cref="Org.Apache.Kafka.Streams.Kstream.KTable"/></returns>
        public Org.Apache.Kafka.Streams.Kstream.KTable<K, V> ToTable(Org.Apache.Kafka.Streams.Kstream.Materialized<K, V, Org.Apache.Kafka.Streams.State.KeyValueStore<Org.Apache.Kafka.Common.Utils.Bytes, byte[]>> arg0)
        {
            return IExecuteWithSignature<Org.Apache.Kafka.Streams.Kstream.KTable<K, V>>("toTable", "(Lorg/apache/kafka/streams/kstream/Materialized;)Lorg/apache/kafka/streams/kstream/KTable;", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-streams/4.1.0/org/apache/kafka/streams/kstream/KStream.html#toTable(org.apache.kafka.streams.kstream.Named,org.apache.kafka.streams.kstream.Materialized)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Streams.Kstream.Named"/></param>
        /// <param name="arg1"><see cref="Org.Apache.Kafka.Streams.Kstream.Materialized"/></param>
        /// <returns><see cref="Org.Apache.Kafka.Streams.Kstream.KTable"/></returns>
        public Org.Apache.Kafka.Streams.Kstream.KTable<K, V> ToTable(Org.Apache.Kafka.Streams.Kstream.Named arg0, Org.Apache.Kafka.Streams.Kstream.Materialized<K, V, Org.Apache.Kafka.Streams.State.KeyValueStore<Org.Apache.Kafka.Common.Utils.Bytes, byte[]>> arg1)
        {
            return IExecuteWithSignature<Org.Apache.Kafka.Streams.Kstream.KTable<K, V>>("toTable", "(Lorg/apache/kafka/streams/kstream/Named;Lorg/apache/kafka/streams/kstream/Materialized;)Lorg/apache/kafka/streams/kstream/KTable;", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-streams/4.1.0/org/apache/kafka/streams/kstream/KStream.html#toTable(org.apache.kafka.streams.kstream.Named)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Streams.Kstream.Named"/></param>
        /// <returns><see cref="Org.Apache.Kafka.Streams.Kstream.KTable"/></returns>
        public Org.Apache.Kafka.Streams.Kstream.KTable<K, V> ToTable(Org.Apache.Kafka.Streams.Kstream.Named arg0)
        {
            return IExecuteWithSignature<Org.Apache.Kafka.Streams.Kstream.KTable<K, V>>("toTable", "(Lorg/apache/kafka/streams/kstream/Named;)Lorg/apache/kafka/streams/kstream/KTable;", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-streams/4.1.0/org/apache/kafka/streams/kstream/KStream.html#foreach(org.apache.kafka.streams.kstream.ForeachAction,org.apache.kafka.streams.kstream.Named)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Streams.Kstream.ForeachAction"/></param>
        /// <param name="arg1"><see cref="Org.Apache.Kafka.Streams.Kstream.Named"/></param>
        /// <typeparam name="Arg0objectSuperK"><typeparamref name="K"/></typeparam>
        /// <typeparam name="Arg0objectSuperV"><typeparamref name="V"/></typeparam>
        public void Foreach<Arg0objectSuperK, Arg0objectSuperV>(Org.Apache.Kafka.Streams.Kstream.ForeachAction<Arg0objectSuperK, Arg0objectSuperV> arg0, Org.Apache.Kafka.Streams.Kstream.Named arg1) where Arg0objectSuperK : K where Arg0objectSuperV : V
        {
            IExecuteWithSignature("foreach", "(Lorg/apache/kafka/streams/kstream/ForeachAction;Lorg/apache/kafka/streams/kstream/Named;)V", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-streams/4.1.0/org/apache/kafka/streams/kstream/KStream.html#foreach(org.apache.kafka.streams.kstream.ForeachAction)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Streams.Kstream.ForeachAction"/></param>
        /// <typeparam name="Arg0objectSuperK"><typeparamref name="K"/></typeparam>
        /// <typeparam name="Arg0objectSuperV"><typeparamref name="V"/></typeparam>
        public void Foreach<Arg0objectSuperK, Arg0objectSuperV>(Org.Apache.Kafka.Streams.Kstream.ForeachAction<Arg0objectSuperK, Arg0objectSuperV> arg0) where Arg0objectSuperK : K where Arg0objectSuperV : V
        {
            IExecuteWithSignature("foreach", "(Lorg/apache/kafka/streams/kstream/ForeachAction;)V", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-streams/4.1.0/org/apache/kafka/streams/kstream/KStream.html#print(org.apache.kafka.streams.kstream.Printed)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Streams.Kstream.Printed"/></param>
        public void Print(Org.Apache.Kafka.Streams.Kstream.Printed<K, V> arg0)
        {
            IExecuteWithSignature("print", "(Lorg/apache/kafka/streams/kstream/Printed;)V", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-streams/4.1.0/org/apache/kafka/streams/kstream/KStream.html#to(java.lang.String,org.apache.kafka.streams.kstream.Produced)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        /// <param name="arg1"><see cref="Org.Apache.Kafka.Streams.Kstream.Produced"/></param>
        public void To(Java.Lang.String arg0, Org.Apache.Kafka.Streams.Kstream.Produced<K, V> arg1)
        {
            IExecuteWithSignature("to", "(Ljava/lang/String;Lorg/apache/kafka/streams/kstream/Produced;)V", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-streams/4.1.0/org/apache/kafka/streams/kstream/KStream.html#to(java.lang.String)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Lang.String"/></param>
        public void To(Java.Lang.String arg0)
        {
            IExecuteWithSignature("to", "(Ljava/lang/String;)V", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-streams/4.1.0/org/apache/kafka/streams/kstream/KStream.html#to(org.apache.kafka.streams.processor.TopicNameExtractor,org.apache.kafka.streams.kstream.Produced)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Streams.Processor.TopicNameExtractor"/></param>
        /// <param name="arg1"><see cref="Org.Apache.Kafka.Streams.Kstream.Produced"/></param>
        public void To(Org.Apache.Kafka.Streams.Processor.TopicNameExtractor<K, V> arg0, Org.Apache.Kafka.Streams.Kstream.Produced<K, V> arg1)
        {
            IExecuteWithSignature("to", "(Lorg/apache/kafka/streams/processor/TopicNameExtractor;Lorg/apache/kafka/streams/kstream/Produced;)V", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka-streams/4.1.0/org/apache/kafka/streams/kstream/KStream.html#to(org.apache.kafka.streams.processor.TopicNameExtractor)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Streams.Processor.TopicNameExtractor"/></param>
        public void To(Org.Apache.Kafka.Streams.Processor.TopicNameExtractor<K, V> arg0)
        {
            IExecuteWithSignature("to", "(Lorg/apache/kafka/streams/processor/TopicNameExtractor;)V", arg0);
        }

        #endregion

        #region Nested classes

        #endregion

        // TODO: complete the class
    }
    #endregion
}