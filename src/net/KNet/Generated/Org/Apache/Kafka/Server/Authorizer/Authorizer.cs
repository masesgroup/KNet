/*
*  Copyright 2023 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 1.5.5.0)
*  using kafka-clients-3.4.0.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Org.Apache.Kafka.Server.Authorizer
{
    #region Authorizer
    public partial class Authorizer
    {
        #region Constructors

        #endregion

        #region Class/Interface conversion operators
        /// <summary>
        /// Converter from <see cref="Org.Apache.Kafka.Server.Authorizer.Authorizer"/> to <see cref="Org.Apache.Kafka.Common.Configurable"/>
        /// </summary>
        public static implicit operator Org.Apache.Kafka.Common.Configurable(Org.Apache.Kafka.Server.Authorizer.Authorizer t) => t.Cast<Org.Apache.Kafka.Common.Configurable>();
        /// <summary>
        /// Converter from <see cref="Org.Apache.Kafka.Server.Authorizer.Authorizer"/> to <see cref="Java.Io.Closeable"/>
        /// </summary>
        public static implicit operator Java.Io.Closeable(Org.Apache.Kafka.Server.Authorizer.Authorizer t) => t.Cast<Java.Io.Closeable>();

        #endregion

        #region Fields

        #endregion

        #region Static methods

        #endregion

        #region Instance methods
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/server/authorizer/Authorizer.html#aclCount()"/> 
        /// </summary>
        public int AclCount
        {
            get { return IExecute<int>("aclCount"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/server/authorizer/Authorizer.html#acls(org.apache.kafka.common.acl.AclBindingFilter)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Common.Acl.AclBindingFilter"/></param>
        /// <returns><see cref="Java.Lang.Iterable"/></returns>
        public Java.Lang.Iterable<Org.Apache.Kafka.Common.Acl.AclBinding> Acls(Org.Apache.Kafka.Common.Acl.AclBindingFilter arg0)
        {
            return IExecute<Java.Lang.Iterable<Org.Apache.Kafka.Common.Acl.AclBinding>>("acls", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/server/authorizer/Authorizer.html#createAcls(org.apache.kafka.server.authorizer.AuthorizableRequestContext,java.util.List)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Server.Authorizer.AuthorizableRequestContext"/></param>
        /// <param name="arg1"><see cref="Java.Util.List"/></param>
        /// <typeparam name="ReturnExtendsJava_Util_Concurrent_CompletionStage_Org_Apache_Kafka_Server_Authorizer_AclCreateResult_"><see cref="Java.Util.Concurrent.CompletionStage{Org.Apache.Kafka.Server.Authorizer.AclCreateResult}"/></typeparam>
        /// <returns><see cref="Java.Util.List"/></returns>
        public Java.Util.List<ReturnExtendsJava_Util_Concurrent_CompletionStage_Org_Apache_Kafka_Server_Authorizer_AclCreateResult_> CreateAcls<ReturnExtendsJava_Util_Concurrent_CompletionStage_Org_Apache_Kafka_Server_Authorizer_AclCreateResult_>(Org.Apache.Kafka.Server.Authorizer.AuthorizableRequestContext arg0, Java.Util.List<Org.Apache.Kafka.Common.Acl.AclBinding> arg1) where ReturnExtendsJava_Util_Concurrent_CompletionStage_Org_Apache_Kafka_Server_Authorizer_AclCreateResult_: Java.Util.Concurrent.CompletionStage<Org.Apache.Kafka.Server.Authorizer.AclCreateResult>
        {
            return IExecute<Java.Util.List<ReturnExtendsJava_Util_Concurrent_CompletionStage_Org_Apache_Kafka_Server_Authorizer_AclCreateResult_>>("createAcls", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/server/authorizer/Authorizer.html#deleteAcls(org.apache.kafka.server.authorizer.AuthorizableRequestContext,java.util.List)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Server.Authorizer.AuthorizableRequestContext"/></param>
        /// <param name="arg1"><see cref="Java.Util.List"/></param>
        /// <typeparam name="ReturnExtendsJava_Util_Concurrent_CompletionStage_Org_Apache_Kafka_Server_Authorizer_AclDeleteResult_"><see cref="Java.Util.Concurrent.CompletionStage{Org.Apache.Kafka.Server.Authorizer.AclDeleteResult}"/></typeparam>
        /// <returns><see cref="Java.Util.List"/></returns>
        public Java.Util.List<ReturnExtendsJava_Util_Concurrent_CompletionStage_Org_Apache_Kafka_Server_Authorizer_AclDeleteResult_> DeleteAcls<ReturnExtendsJava_Util_Concurrent_CompletionStage_Org_Apache_Kafka_Server_Authorizer_AclDeleteResult_>(Org.Apache.Kafka.Server.Authorizer.AuthorizableRequestContext arg0, Java.Util.List<Org.Apache.Kafka.Common.Acl.AclBindingFilter> arg1) where ReturnExtendsJava_Util_Concurrent_CompletionStage_Org_Apache_Kafka_Server_Authorizer_AclDeleteResult_: Java.Util.Concurrent.CompletionStage<Org.Apache.Kafka.Server.Authorizer.AclDeleteResult>
        {
            return IExecute<Java.Util.List<ReturnExtendsJava_Util_Concurrent_CompletionStage_Org_Apache_Kafka_Server_Authorizer_AclDeleteResult_>>("deleteAcls", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/server/authorizer/Authorizer.html#authorize(org.apache.kafka.server.authorizer.AuthorizableRequestContext,java.util.List)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Server.Authorizer.AuthorizableRequestContext"/></param>
        /// <param name="arg1"><see cref="Java.Util.List"/></param>
        /// <returns><see cref="Java.Util.List"/></returns>
        public Java.Util.List<Org.Apache.Kafka.Server.Authorizer.AuthorizationResult> Authorize(Org.Apache.Kafka.Server.Authorizer.AuthorizableRequestContext arg0, Java.Util.List<Org.Apache.Kafka.Server.Authorizer.Action> arg1)
        {
            return IExecute<Java.Util.List<Org.Apache.Kafka.Server.Authorizer.AuthorizationResult>>("authorize", arg0, arg1);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/server/authorizer/Authorizer.html#start(org.apache.kafka.server.authorizer.AuthorizerServerInfo)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Server.Authorizer.AuthorizerServerInfo"/></param>
        /// <typeparam name="ReturnExtendsJava_Util_Concurrent_CompletionStage_Java_Lang_Void_"><see cref="Java.Util.Concurrent.CompletionStage{Java.Lang.Void}"/></typeparam>
        /// <returns><see cref="Java.Util.Map"/></returns>
        public Java.Util.Map<Org.Apache.Kafka.Common.Endpoint, ReturnExtendsJava_Util_Concurrent_CompletionStage_Java_Lang_Void_> Start<ReturnExtendsJava_Util_Concurrent_CompletionStage_Java_Lang_Void_>(Org.Apache.Kafka.Server.Authorizer.AuthorizerServerInfo arg0) where ReturnExtendsJava_Util_Concurrent_CompletionStage_Java_Lang_Void_: Java.Util.Concurrent.CompletionStage<Java.Lang.Void>
        {
            return IExecute<Java.Util.Map<Org.Apache.Kafka.Common.Endpoint, ReturnExtendsJava_Util_Concurrent_CompletionStage_Java_Lang_Void_>>("start", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka-clients/3.4.0/org/apache/kafka/server/authorizer/Authorizer.html#authorizeByResourceType(org.apache.kafka.server.authorizer.AuthorizableRequestContext,org.apache.kafka.common.acl.AclOperation,org.apache.kafka.common.resource.ResourceType)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Server.Authorizer.AuthorizableRequestContext"/></param>
        /// <param name="arg1"><see cref="Org.Apache.Kafka.Common.Acl.AclOperation"/></param>
        /// <param name="arg2"><see cref="Org.Apache.Kafka.Common.Resource.ResourceType"/></param>
        /// <returns><see cref="Org.Apache.Kafka.Server.Authorizer.AuthorizationResult"/></returns>
        public Org.Apache.Kafka.Server.Authorizer.AuthorizationResult AuthorizeByResourceType(Org.Apache.Kafka.Server.Authorizer.AuthorizableRequestContext arg0, Org.Apache.Kafka.Common.Acl.AclOperation arg1, Org.Apache.Kafka.Common.Resource.ResourceType arg2)
        {
            return IExecute<Org.Apache.Kafka.Server.Authorizer.AuthorizationResult>("authorizeByResourceType", arg0, arg1, arg2);
        }

        #endregion

        #region Nested classes

        #endregion

        // TODO: complete the class
    }
    #endregion
}