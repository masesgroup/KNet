/*
*  Copyright 2023 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 1.5.5.0)
*  using kafka_2.13-3.4.0.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Kafka.Common
{
    #region InterBrokerSendThread
    public partial class InterBrokerSendThread
    {
        #region Constructors
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/common/InterBrokerSendThread.html#%3Cinit%3E(java.lang.String,org.apache.kafka.clients.KafkaClient,int,org.apache.kafka.common.utils.Time,boolean)"/>
        /// </summary>
        /// <param name="name"><see cref="string"/></param>
        /// <param name="networkClient"><see cref="Org.Apache.Kafka.Clients.KafkaClient"/></param>
        /// <param name="requestTimeoutMs"><see cref="int"/></param>
        /// <param name="time"><see cref="Org.Apache.Kafka.Common.Utils.Time"/></param>
        /// <param name="isInterruptible"><see cref="bool"/></param>
        public InterBrokerSendThread(string name, Org.Apache.Kafka.Clients.KafkaClient networkClient, int requestTimeoutMs, Org.Apache.Kafka.Common.Utils.Time time, bool isInterruptible)
            : base(name, networkClient, requestTimeoutMs, time, isInterruptible)
        {
        }

        #endregion

        #region Class/Interface conversion operators

        #endregion

        #region Fields

        #endregion

        #region Static methods

        #endregion

        #region Instance methods
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/common/InterBrokerSendThread.html#hasUnsentRequests()"/> 
        /// </summary>
        public bool HasUnsentRequests
        {
            get { return IExecute<bool>("hasUnsentRequests"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/common/InterBrokerSendThread.html#networkClient()"/> 
        /// </summary>
        public Org.Apache.Kafka.Clients.KafkaClient NetworkClient
        {
            get { return IExecute<Org.Apache.Kafka.Clients.KafkaClient>("networkClient"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/common/InterBrokerSendThread.html#completeWithDisconnect(org.apache.kafka.clients.ClientRequest,long,org.apache.kafka.common.errors.AuthenticationException)"/>
        /// </summary>
        /// <param name="request"><see cref="Org.Apache.Kafka.Clients.ClientRequest"/></param>
        /// <param name="now"><see cref="long"/></param>
        /// <param name="authenticationException"><see cref="Org.Apache.Kafka.Common.Errors.AuthenticationException"/></param>
        public void CompleteWithDisconnect(Org.Apache.Kafka.Clients.ClientRequest request, long now, Org.Apache.Kafka.Common.Errors.AuthenticationException authenticationException)
        {
            IExecute("completeWithDisconnect", request, now, authenticationException);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/common/InterBrokerSendThread.html#pollOnce(long)"/>
        /// </summary>
        /// <param name="maxTimeoutMs"><see cref="long"/></param>
        public void PollOnce(long maxTimeoutMs)
        {
            IExecute("pollOnce", maxTimeoutMs);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/common/InterBrokerSendThread.html#wakeup()"/>
        /// </summary>
        public void Wakeup()
        {
            IExecute("wakeup");
        }

        #endregion

        #region Nested classes

        #endregion

        // TODO: complete the class
    }
    #endregion
}