/*
*  Copyright 2023 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 1.5.5.0)
*  using kafka_2.13-3.4.0.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Kafka.Common
{
    #region UnsentRequests
    public partial class UnsentRequests
    {
        #region Constructors

        #endregion

        #region Class/Interface conversion operators

        #endregion

        #region Fields

        #endregion

        #region Static methods

        #endregion

        #region Instance methods
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/common/UnsentRequests.html#iterator()"/> 
        /// </summary>
        public Java.Util.Iterator<Java.Util.Map.Entry<Org.Apache.Kafka.Common.Node, Java.Util.ArrayDeque<Org.Apache.Kafka.Clients.ClientRequest>>> Iterator
        {
            get { return IExecute<Java.Util.Iterator<Java.Util.Map.Entry<Org.Apache.Kafka.Common.Node, Java.Util.ArrayDeque<Org.Apache.Kafka.Clients.ClientRequest>>>>("iterator"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/common/UnsentRequests.html#nodes()"/> 
        /// </summary>
        public Java.Util.Set<Org.Apache.Kafka.Common.Node> Nodes
        {
            get { return IExecute<Java.Util.Set<Org.Apache.Kafka.Common.Node>>("nodes"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/common/UnsentRequests.html#removeAllTimedOut(long)"/>
        /// </summary>
        /// <param name="now"><see cref="long"/></param>
        /// <returns><see cref="Java.Util.Collection"/></returns>
        public Java.Util.Collection<Org.Apache.Kafka.Clients.ClientRequest> RemoveAllTimedOut(long now)
        {
            return IExecute<Java.Util.Collection<Org.Apache.Kafka.Clients.ClientRequest>>("removeAllTimedOut", now);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/common/UnsentRequests.html#requestIterator(org.apache.kafka.common.Node)"/>
        /// </summary>
        /// <param name="node"><see cref="Org.Apache.Kafka.Common.Node"/></param>
        /// <returns><see cref="Java.Util.Iterator"/></returns>
        public Java.Util.Iterator<Org.Apache.Kafka.Clients.ClientRequest> RequestIterator(Org.Apache.Kafka.Common.Node node)
        {
            return IExecute<Java.Util.Iterator<Org.Apache.Kafka.Clients.ClientRequest>>("requestIterator", node);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/common/UnsentRequests.html#clean()"/>
        /// </summary>
        public void Clean()
        {
            IExecute("clean");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/common/UnsentRequests.html#put(org.apache.kafka.common.Node,org.apache.kafka.clients.ClientRequest)"/>
        /// </summary>
        /// <param name="node"><see cref="Org.Apache.Kafka.Common.Node"/></param>
        /// <param name="request"><see cref="Org.Apache.Kafka.Clients.ClientRequest"/></param>
        public void Put(Org.Apache.Kafka.Common.Node node, Org.Apache.Kafka.Clients.ClientRequest request)
        {
            IExecute("put", node, request);
        }

        #endregion

        #region Nested classes

        #endregion

        // TODO: complete the class
    }
    #endregion
}