/*
*  Copyright 2023 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 1.5.5.0)
*  using kafka_2.13-3.4.0.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Kafka.Api
{
    #region package
    public partial class package
    {
        #region Constructors

        #endregion

        #region Class/Interface conversion operators

        #endregion

        #region Fields

        #endregion

        #region Static methods
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/api/package.html#ElectLeadersRequestOps(org.apache.kafka.common.requests.ElectLeadersRequest)"/>
        /// </summary>
        /// <param name="self"><see cref="Org.Apache.Kafka.Common.Requests.ElectLeadersRequest"/></param>
        /// <returns><see cref="Org.Apache.Kafka.Common.Requests.ElectLeadersRequest"/></returns>
        public static Org.Apache.Kafka.Common.Requests.ElectLeadersRequest ElectLeadersRequestOpsMethod(Org.Apache.Kafka.Common.Requests.ElectLeadersRequest self)
        {
            return SExecute<Org.Apache.Kafka.Common.Requests.ElectLeadersRequest>(LocalBridgeClazz, "ElectLeadersRequestOps", self);
        }

        #endregion

        #region Instance methods

        #endregion

        #region Nested classes
        #region ElectLeadersRequestOps
        public partial class ElectLeadersRequestOps
        {
            #region Constructors
            /// <summary>
            /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/api/package.ElectLeadersRequestOps.html#%3Cinit%3E(org.apache.kafka.common.requests.ElectLeadersRequest)"/>
            /// </summary>
            /// <param name="self"><see cref="Org.Apache.Kafka.Common.Requests.ElectLeadersRequest"/></param>
            public ElectLeadersRequestOps(Org.Apache.Kafka.Common.Requests.ElectLeadersRequest self)
                : base(self)
            {
            }

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields

            #endregion

            #region Static methods

            #endregion

            #region Instance methods
            /// <summary>
            /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/api/package.ElectLeadersRequestOps.html#electionType()"/> 
            /// </summary>
            public Org.Apache.Kafka.Common.ElectionType ElectionType
            {
                get { return IExecute<Org.Apache.Kafka.Common.ElectionType>("electionType"); }
            }
            /// <summary>
            /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/api/package.ElectLeadersRequestOps.html#self()"/> 
            /// </summary>
            public Org.Apache.Kafka.Common.Requests.ElectLeadersRequest Self
            {
                get { return IExecute<Org.Apache.Kafka.Common.Requests.ElectLeadersRequest>("self"); }
            }

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

    
        #endregion

        // TODO: complete the class
    }
    #endregion
}