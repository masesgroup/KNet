/*
*  Copyright 2023 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 1.5.5.0)
*  using kafka_2.13-3.4.0.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Kafka.Network
{
    #region RequestConvertToJson
    public partial class RequestConvertToJson
    {
        #region Constructors

        #endregion

        #region Class/Interface conversion operators

        #endregion

        #region Fields

        #endregion

        #region Static methods
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/network/RequestConvertToJson.html#clientInfoNode(org.apache.kafka.common.network.ClientInformation)"/>
        /// </summary>
        /// <param name="clientInfo"><see cref="Org.Apache.Kafka.Common.Network.ClientInformation"/></param>
        /// <returns><see cref="Com.Fasterxml.Jackson.Databind.JsonNode"/></returns>
        public static Com.Fasterxml.Jackson.Databind.JsonNode ClientInfoNode(Org.Apache.Kafka.Common.Network.ClientInformation clientInfo)
        {
            return SExecute<Com.Fasterxml.Jackson.Databind.JsonNode>(LocalBridgeClazz, "clientInfoNode", clientInfo);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/network/RequestConvertToJson.html#request(org.apache.kafka.common.requests.AbstractRequest)"/>
        /// </summary>
        /// <param name="request"><see cref="Org.Apache.Kafka.Common.Requests.AbstractRequest"/></param>
        /// <returns><see cref="Com.Fasterxml.Jackson.Databind.JsonNode"/></returns>
        public static Com.Fasterxml.Jackson.Databind.JsonNode Request(Org.Apache.Kafka.Common.Requests.AbstractRequest request)
        {
            return SExecute<Com.Fasterxml.Jackson.Databind.JsonNode>(LocalBridgeClazz, "request", request);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/network/RequestConvertToJson.html#requestHeaderNode(org.apache.kafka.common.requests.RequestHeader)"/>
        /// </summary>
        /// <param name="header"><see cref="Org.Apache.Kafka.Common.Requests.RequestHeader"/></param>
        /// <returns><see cref="Com.Fasterxml.Jackson.Databind.JsonNode"/></returns>
        public static Com.Fasterxml.Jackson.Databind.JsonNode RequestHeaderNode(Org.Apache.Kafka.Common.Requests.RequestHeader header)
        {
            return SExecute<Com.Fasterxml.Jackson.Databind.JsonNode>(LocalBridgeClazz, "requestHeaderNode", header);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/network/RequestConvertToJson.html#response(org.apache.kafka.common.requests.AbstractResponse,short)"/>
        /// </summary>
        /// <param name="response"><see cref="Org.Apache.Kafka.Common.Requests.AbstractResponse"/></param>
        /// <param name="version"><see cref="short"/></param>
        /// <returns><see cref="Com.Fasterxml.Jackson.Databind.JsonNode"/></returns>
        public static Com.Fasterxml.Jackson.Databind.JsonNode Response(Org.Apache.Kafka.Common.Requests.AbstractResponse response, short version)
        {
            return SExecute<Com.Fasterxml.Jackson.Databind.JsonNode>(LocalBridgeClazz, "response", response, version);
        }

        #endregion

        #region Instance methods

        #endregion

        #region Nested classes

        #endregion

        // TODO: complete the class
    }
    #endregion
}