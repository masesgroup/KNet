/*
*  Copyright 2023 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 1.5.5.0)
*  using kafka_2.13-3.4.0.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Kafka.Coordinator.Group
{
    #region MemberMetadata
    public partial class MemberMetadata
    {
        #region Constructors

        #endregion

        #region Class/Interface conversion operators

        #endregion

        #region Fields

        #endregion

        #region Static methods

        #endregion

        #region Instance methods
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/coordinator/group/MemberMetadata.html#assignment()"/> 
        /// </summary>
        public byte[] Assignment
        {
            get { return IExecuteArray<byte>("assignment"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/coordinator/group/MemberMetadata.html#clientHost()"/> 
        /// </summary>
        public string ClientHost
        {
            get { return IExecute<string>("clientHost"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/coordinator/group/MemberMetadata.html#clientId()"/> 
        /// </summary>
        public string ClientId
        {
            get { return IExecute<string>("clientId"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/coordinator/group/MemberMetadata.html#hasSatisfiedHeartbeat()"/> 
        /// </summary>
        public bool HasSatisfiedHeartbeat
        {
            get { return IExecute<bool>("hasSatisfiedHeartbeat"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/coordinator/group/MemberMetadata.html#heartbeatSatisfied()"/> 
        /// </summary>
        public bool HeartbeatSatisfied
        {
            get { return IExecute<bool>("heartbeatSatisfied"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/coordinator/group/MemberMetadata.html#isAwaitingJoin()"/> 
        /// </summary>
        public bool IsAwaitingJoin
        {
            get { return IExecute<bool>("isAwaitingJoin"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/coordinator/group/MemberMetadata.html#isAwaitingSync()"/> 
        /// </summary>
        public bool IsAwaitingSync
        {
            get { return IExecute<bool>("isAwaitingSync"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/coordinator/group/MemberMetadata.html#isNew()"/> 
        /// </summary>
        public bool IsNew
        {
            get { return IExecute<bool>("isNew"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/coordinator/group/MemberMetadata.html#isStaticMember()"/> 
        /// </summary>
        public bool IsStaticMember
        {
            get { return IExecute<bool>("isStaticMember"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/coordinator/group/MemberMetadata.html#memberId()"/> 
        /// </summary>
        public string MemberId
        {
            get { return IExecute<string>("memberId"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/coordinator/group/MemberMetadata.html#protocolType()"/> 
        /// </summary>
        public string ProtocolType
        {
            get { return IExecute<string>("protocolType"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/coordinator/group/MemberMetadata.html#rebalanceTimeoutMs()"/> 
        /// </summary>
        public int RebalanceTimeoutMs
        {
            get { return IExecute<int>("rebalanceTimeoutMs"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/coordinator/group/MemberMetadata.html#sessionTimeoutMs()"/> 
        /// </summary>
        public int SessionTimeoutMs
        {
            get { return IExecute<int>("sessionTimeoutMs"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/coordinator/group/MemberMetadata.html#summaryNoMetadata()"/> 
        /// </summary>
        public Kafka.Coordinator.Group.MemberSummary SummaryNoMetadata
        {
            get { return IExecute<Kafka.Coordinator.Group.MemberSummary>("summaryNoMetadata"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/coordinator/group/MemberMetadata.html#metadata(java.lang.String)"/>
        /// </summary>
        /// <param name="protocol"><see cref="string"/></param>
        /// <returns><see cref="byte"/></returns>
        public byte[] Metadata(string protocol)
        {
            return IExecuteArray<byte>("metadata", protocol);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/coordinator/group/MemberMetadata.html#summary(java.lang.String)"/>
        /// </summary>
        /// <param name="protocol"><see cref="string"/></param>
        /// <returns><see cref="Kafka.Coordinator.Group.MemberSummary"/></returns>
        public Kafka.Coordinator.Group.MemberSummary Summary(string protocol)
        {
            return IExecute<Kafka.Coordinator.Group.MemberSummary>("summary", protocol);
        }

        #endregion

        #region Nested classes

        #endregion

        // TODO: complete the class
    }
    #endregion
}