/*
*  Copyright 2023 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 1.5.5.0)
*  using kafka_2.13-3.4.0.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Kafka.Coordinator.Transaction
{
    #region TransactionConfig
    public partial class TransactionConfig
    {
        #region Constructors
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/coordinator/transaction/TransactionConfig.html#%3Cinit%3E(int,int,int,short,int,int,int,int,int,int)"/>
        /// </summary>
        /// <param name="transactionalIdExpirationMs"><see cref="int"/></param>
        /// <param name="transactionMaxTimeoutMs"><see cref="int"/></param>
        /// <param name="transactionLogNumPartitions"><see cref="int"/></param>
        /// <param name="transactionLogReplicationFactor"><see cref="short"/></param>
        /// <param name="transactionLogSegmentBytes"><see cref="int"/></param>
        /// <param name="transactionLogLoadBufferSize"><see cref="int"/></param>
        /// <param name="transactionLogMinInsyncReplicas"><see cref="int"/></param>
        /// <param name="abortTimedOutTransactionsIntervalMs"><see cref="int"/></param>
        /// <param name="removeExpiredTransactionalIdsIntervalMs"><see cref="int"/></param>
        /// <param name="requestTimeoutMs"><see cref="int"/></param>
        public TransactionConfig(int transactionalIdExpirationMs, int transactionMaxTimeoutMs, int transactionLogNumPartitions, short transactionLogReplicationFactor, int transactionLogSegmentBytes, int transactionLogLoadBufferSize, int transactionLogMinInsyncReplicas, int abortTimedOutTransactionsIntervalMs, int removeExpiredTransactionalIdsIntervalMs, int requestTimeoutMs)
            : base(transactionalIdExpirationMs, transactionMaxTimeoutMs, transactionLogNumPartitions, transactionLogReplicationFactor, transactionLogSegmentBytes, transactionLogLoadBufferSize, transactionLogMinInsyncReplicas, abortTimedOutTransactionsIntervalMs, removeExpiredTransactionalIdsIntervalMs, requestTimeoutMs)
        {
        }

        #endregion

        #region Class/Interface conversion operators
        /// <summary>
        /// Converter from <see cref="Kafka.Coordinator.Transaction.TransactionConfig"/> to <see cref="Java.Io.Serializable"/>
        /// </summary>
        public static implicit operator Java.Io.Serializable(Kafka.Coordinator.Transaction.TransactionConfig t) => t.Cast<Java.Io.Serializable>();

        #endregion

        #region Fields

        #endregion

        #region Static methods
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/coordinator/transaction/TransactionConfig.html#apply(int,int,int,short,int,int,int,int,int,int)"/>
        /// </summary>
        /// <param name="transactionalIdExpirationMs"><see cref="int"/></param>
        /// <param name="transactionMaxTimeoutMs"><see cref="int"/></param>
        /// <param name="transactionLogNumPartitions"><see cref="int"/></param>
        /// <param name="transactionLogReplicationFactor"><see cref="short"/></param>
        /// <param name="transactionLogSegmentBytes"><see cref="int"/></param>
        /// <param name="transactionLogLoadBufferSize"><see cref="int"/></param>
        /// <param name="transactionLogMinInsyncReplicas"><see cref="int"/></param>
        /// <param name="abortTimedOutTransactionsIntervalMs"><see cref="int"/></param>
        /// <param name="removeExpiredTransactionalIdsIntervalMs"><see cref="int"/></param>
        /// <param name="requestTimeoutMs"><see cref="int"/></param>
        /// <returns><see cref="Kafka.Coordinator.Transaction.TransactionConfig"/></returns>
        public static Kafka.Coordinator.Transaction.TransactionConfig Apply(int transactionalIdExpirationMs, int transactionMaxTimeoutMs, int transactionLogNumPartitions, short transactionLogReplicationFactor, int transactionLogSegmentBytes, int transactionLogLoadBufferSize, int transactionLogMinInsyncReplicas, int abortTimedOutTransactionsIntervalMs, int removeExpiredTransactionalIdsIntervalMs, int requestTimeoutMs)
        {
            return SExecute<Kafka.Coordinator.Transaction.TransactionConfig>(LocalBridgeClazz, "apply", transactionalIdExpirationMs, transactionMaxTimeoutMs, transactionLogNumPartitions, transactionLogReplicationFactor, transactionLogSegmentBytes, transactionLogLoadBufferSize, transactionLogMinInsyncReplicas, abortTimedOutTransactionsIntervalMs, removeExpiredTransactionalIdsIntervalMs, requestTimeoutMs);
        }

        #endregion

        #region Instance methods
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/coordinator/transaction/TransactionConfig.html#abortTimedOutTransactionsIntervalMs()"/> 
        /// </summary>
        public int AbortTimedOutTransactionsIntervalMs
        {
            get { return IExecute<int>("abortTimedOutTransactionsIntervalMs"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/coordinator/transaction/TransactionConfig.html#productArity()"/> 
        /// </summary>
        public int ProductArity
        {
            get { return IExecute<int>("productArity"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/coordinator/transaction/TransactionConfig.html#productPrefix()"/> 
        /// </summary>
        public string ProductPrefix
        {
            get { return IExecute<string>("productPrefix"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/coordinator/transaction/TransactionConfig.html#removeExpiredTransactionalIdsIntervalMs()"/> 
        /// </summary>
        public int RemoveExpiredTransactionalIdsIntervalMs
        {
            get { return IExecute<int>("removeExpiredTransactionalIdsIntervalMs"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/coordinator/transaction/TransactionConfig.html#requestTimeoutMs()"/> 
        /// </summary>
        public int RequestTimeoutMs
        {
            get { return IExecute<int>("requestTimeoutMs"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/coordinator/transaction/TransactionConfig.html#transactionalIdExpirationMs()"/> 
        /// </summary>
        public int TransactionalIdExpirationMs
        {
            get { return IExecute<int>("transactionalIdExpirationMs"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/coordinator/transaction/TransactionConfig.html#transactionLogLoadBufferSize()"/> 
        /// </summary>
        public int TransactionLogLoadBufferSize
        {
            get { return IExecute<int>("transactionLogLoadBufferSize"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/coordinator/transaction/TransactionConfig.html#transactionLogMinInsyncReplicas()"/> 
        /// </summary>
        public int TransactionLogMinInsyncReplicas
        {
            get { return IExecute<int>("transactionLogMinInsyncReplicas"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/coordinator/transaction/TransactionConfig.html#transactionLogNumPartitions()"/> 
        /// </summary>
        public int TransactionLogNumPartitions
        {
            get { return IExecute<int>("transactionLogNumPartitions"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/coordinator/transaction/TransactionConfig.html#transactionLogReplicationFactor()"/> 
        /// </summary>
        public short TransactionLogReplicationFactor
        {
            get { return IExecute<short>("transactionLogReplicationFactor"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/coordinator/transaction/TransactionConfig.html#transactionLogSegmentBytes()"/> 
        /// </summary>
        public int TransactionLogSegmentBytes
        {
            get { return IExecute<int>("transactionLogSegmentBytes"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/coordinator/transaction/TransactionConfig.html#transactionMaxTimeoutMs()"/> 
        /// </summary>
        public int TransactionMaxTimeoutMs
        {
            get { return IExecute<int>("transactionMaxTimeoutMs"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/coordinator/transaction/TransactionConfig.html#canEqual(java.lang.Object)"/>
        /// </summary>
        /// <param name="x$1"><see cref="object"/></param>
        /// <returns><see cref="bool"/></returns>
        public bool CanEqual(object x_1)
        {
            return IExecute<bool>("canEqual", x_1);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/coordinator/transaction/TransactionConfig.html#productElement(int)"/>
        /// </summary>
        /// <param name="x$1"><see cref="int"/></param>
        /// <returns><see cref="object"/></returns>
        public object ProductElement(int x_1)
        {
            return IExecute("productElement", x_1);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/coordinator/transaction/TransactionConfig.html#productElementName(int)"/>
        /// </summary>
        /// <param name="x$1"><see cref="int"/></param>
        /// <returns><see cref="string"/></returns>
        public string ProductElementName(int x_1)
        {
            return IExecute<string>("productElementName", x_1);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/coordinator/transaction/TransactionConfig.html#copy(int,int,int,short,int,int,int,int,int,int)"/>
        /// </summary>
        /// <param name="transactionalIdExpirationMs"><see cref="int"/></param>
        /// <param name="transactionMaxTimeoutMs"><see cref="int"/></param>
        /// <param name="transactionLogNumPartitions"><see cref="int"/></param>
        /// <param name="transactionLogReplicationFactor"><see cref="short"/></param>
        /// <param name="transactionLogSegmentBytes"><see cref="int"/></param>
        /// <param name="transactionLogLoadBufferSize"><see cref="int"/></param>
        /// <param name="transactionLogMinInsyncReplicas"><see cref="int"/></param>
        /// <param name="abortTimedOutTransactionsIntervalMs"><see cref="int"/></param>
        /// <param name="removeExpiredTransactionalIdsIntervalMs"><see cref="int"/></param>
        /// <param name="requestTimeoutMs"><see cref="int"/></param>
        /// <returns><see cref="Kafka.Coordinator.Transaction.TransactionConfig"/></returns>
        public Kafka.Coordinator.Transaction.TransactionConfig Copy(int transactionalIdExpirationMs, int transactionMaxTimeoutMs, int transactionLogNumPartitions, short transactionLogReplicationFactor, int transactionLogSegmentBytes, int transactionLogLoadBufferSize, int transactionLogMinInsyncReplicas, int abortTimedOutTransactionsIntervalMs, int removeExpiredTransactionalIdsIntervalMs, int requestTimeoutMs)
        {
            return IExecute<Kafka.Coordinator.Transaction.TransactionConfig>("copy", transactionalIdExpirationMs, transactionMaxTimeoutMs, transactionLogNumPartitions, transactionLogReplicationFactor, transactionLogSegmentBytes, transactionLogLoadBufferSize, transactionLogMinInsyncReplicas, abortTimedOutTransactionsIntervalMs, removeExpiredTransactionalIdsIntervalMs, requestTimeoutMs);
        }

        #endregion

        #region Nested classes

        #endregion

        // TODO: complete the class
    }
    #endregion
}