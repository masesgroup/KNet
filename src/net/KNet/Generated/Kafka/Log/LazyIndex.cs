/*
*  Copyright 2023 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 1.5.5.0)
*  using kafka_2.13-3.4.0.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Kafka.Log
{
    #region LazyIndex
    public partial class LazyIndex
    {
        #region Constructors

        #endregion

        #region Class/Interface conversion operators

        #endregion

        #region Fields

        #endregion

        #region Static methods
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/log/LazyIndex.html#forOffset(java.io.File,long,int,boolean)"/>
        /// </summary>
        /// <param name="file"><see cref="Java.Io.File"/></param>
        /// <param name="baseOffset"><see cref="long"/></param>
        /// <param name="maxIndexSize"><see cref="int"/></param>
        /// <param name="writable"><see cref="bool"/></param>
        /// <returns><see cref="Kafka.Log.LazyIndex"/></returns>
        public static Kafka.Log.LazyIndex ForOffset(Java.Io.File file, long baseOffset, int maxIndexSize, bool writable)
        {
            return SExecute<Kafka.Log.LazyIndex>(LocalBridgeClazz, "forOffset", file, baseOffset, maxIndexSize, writable);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/log/LazyIndex.html#forTime(java.io.File,long,int,boolean)"/>
        /// </summary>
        /// <param name="file"><see cref="Java.Io.File"/></param>
        /// <param name="baseOffset"><see cref="long"/></param>
        /// <param name="maxIndexSize"><see cref="int"/></param>
        /// <param name="writable"><see cref="bool"/></param>
        /// <returns><see cref="Kafka.Log.LazyIndex"/></returns>
        public static Kafka.Log.LazyIndex ForTime(Java.Io.File file, long baseOffset, int maxIndexSize, bool writable)
        {
            return SExecute<Kafka.Log.LazyIndex>(LocalBridgeClazz, "forTime", file, baseOffset, maxIndexSize, writable);
        }

        #endregion

        #region Instance methods
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/log/LazyIndex.html#deleteIfExists()"/> 
        /// </summary>
        public bool DeleteIfExists
        {
            get { return IExecute<bool>("deleteIfExists"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/log/LazyIndex.html#file()"/> 
        /// </summary>
        public Java.Io.File File
        {
            get { return IExecute<Java.Io.File>("file"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/log/LazyIndex.html#get()"/> 
        /// </summary>
        public Kafka.Log.AbstractIndex Get
        {
            get { return IExecute<Kafka.Log.AbstractIndex>("get"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/log/LazyIndex.html#close()"/>
        /// </summary>
        public void Close()
        {
            IExecute("close");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/log/LazyIndex.html#closeHandler()"/>
        /// </summary>
        public void CloseHandler()
        {
            IExecute("closeHandler");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/log/LazyIndex.html#renameTo(java.io.File)"/>
        /// </summary>
        /// <param name="f"><see cref="Java.Io.File"/></param>
        public void RenameTo(Java.Io.File f)
        {
            IExecute("renameTo", f);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/log/LazyIndex.html#updateParentDir(java.io.File)"/>
        /// </summary>
        /// <param name="parentDir"><see cref="Java.Io.File"/></param>
        public void UpdateParentDir(Java.Io.File parentDir)
        {
            IExecute("updateParentDir", parentDir);
        }

        #endregion

        #region Nested classes

        #endregion

        // TODO: complete the class
    }
    #endregion

    #region LazyIndex<T>
    public partial class LazyIndex<T>
    {
        #region Constructors

        #endregion

        #region Class/Interface conversion operators
        /// <summary>
        /// Converter from <see cref="Kafka.Log.LazyIndex{T}"/> to <see cref="Kafka.Log.LazyIndex"/>
        /// </summary>
        public static implicit operator Kafka.Log.LazyIndex(Kafka.Log.LazyIndex<T> t) => t.Cast<Kafka.Log.LazyIndex>();

        #endregion

        #region Fields

        #endregion

        #region Static methods
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/log/LazyIndex.html#forOffset(java.io.File,long,int,boolean)"/>
        /// </summary>
        /// <param name="file"><see cref="Java.Io.File"/></param>
        /// <param name="baseOffset"><see cref="long"/></param>
        /// <param name="maxIndexSize"><see cref="int"/></param>
        /// <param name="writable"><see cref="bool"/></param>
        /// <returns><see cref="Kafka.Log.LazyIndex"/></returns>
        public static Kafka.Log.LazyIndex ForOffset(Java.Io.File file, long baseOffset, int maxIndexSize, bool writable)
        {
            return SExecute<Kafka.Log.LazyIndex>(LocalBridgeClazz, "forOffset", file, baseOffset, maxIndexSize, writable);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/log/LazyIndex.html#forTime(java.io.File,long,int,boolean)"/>
        /// </summary>
        /// <param name="file"><see cref="Java.Io.File"/></param>
        /// <param name="baseOffset"><see cref="long"/></param>
        /// <param name="maxIndexSize"><see cref="int"/></param>
        /// <param name="writable"><see cref="bool"/></param>
        /// <returns><see cref="Kafka.Log.LazyIndex"/></returns>
        public static Kafka.Log.LazyIndex ForTime(Java.Io.File file, long baseOffset, int maxIndexSize, bool writable)
        {
            return SExecute<Kafka.Log.LazyIndex>(LocalBridgeClazz, "forTime", file, baseOffset, maxIndexSize, writable);
        }

        #endregion

        #region Instance methods
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/log/LazyIndex.html#deleteIfExists()"/> 
        /// </summary>
        public bool DeleteIfExists
        {
            get { return IExecute<bool>("deleteIfExists"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/log/LazyIndex.html#file()"/> 
        /// </summary>
        public Java.Io.File File
        {
            get { return IExecute<Java.Io.File>("file"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/log/LazyIndex.html#get()"/> 
        /// </summary>
        public T Get
        {
            get { return IExecute<T>("get"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/log/LazyIndex.html#close()"/>
        /// </summary>
        public void Close()
        {
            IExecute("close");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/log/LazyIndex.html#closeHandler()"/>
        /// </summary>
        public void CloseHandler()
        {
            IExecute("closeHandler");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/log/LazyIndex.html#renameTo(java.io.File)"/>
        /// </summary>
        /// <param name="f"><see cref="Java.Io.File"/></param>
        public void RenameTo(Java.Io.File f)
        {
            IExecute("renameTo", f);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/log/LazyIndex.html#updateParentDir(java.io.File)"/>
        /// </summary>
        /// <param name="parentDir"><see cref="Java.Io.File"/></param>
        public void UpdateParentDir(Java.Io.File parentDir)
        {
            IExecute("updateParentDir", parentDir);
        }

        #endregion

        #region Nested classes

        #endregion

        // TODO: complete the class
    }
    #endregion
}