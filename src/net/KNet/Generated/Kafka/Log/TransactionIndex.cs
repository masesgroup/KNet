/*
*  Copyright 2023 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 1.5.5.0)
*  using kafka_2.13-3.4.0.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Kafka.Log
{
    #region TransactionIndex
    public partial class TransactionIndex
    {
        #region Constructors
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/log/TransactionIndex.html#%3Cinit%3E(long,java.io.File)"/>
        /// </summary>
        /// <param name="startOffset"><see cref="long"/></param>
        /// <param name="_file"><see cref="Java.Io.File"/></param>
        public TransactionIndex(long startOffset, Java.Io.File _file)
            : base(startOffset, _file)
        {
        }

        #endregion

        #region Class/Interface conversion operators
        /// <summary>
        /// Converter from <see cref="Kafka.Log.TransactionIndex"/> to <see cref="Kafka.Utils.Logging"/>
        /// </summary>
        public static implicit operator Kafka.Utils.Logging(Kafka.Log.TransactionIndex t) => t.Cast<Kafka.Utils.Logging>();

        #endregion

        #region Fields

        #endregion

        #region Static methods

        #endregion

        #region Instance methods
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/log/TransactionIndex.html#deleteIfExists()"/> 
        /// </summary>
        public bool DeleteIfExists
        {
            get { return IExecute<bool>("deleteIfExists"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/log/TransactionIndex.html#file()"/> 
        /// </summary>
        public Java.Io.File File
        {
            get { return IExecute<Java.Io.File>("file"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/log/TransactionIndex.html#isDebugEnabled()"/> 
        /// </summary>
        public bool IsDebugEnabled
        {
            get { return IExecute<bool>("isDebugEnabled"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/log/TransactionIndex.html#isTraceEnabled()"/> 
        /// </summary>
        public bool IsTraceEnabled
        {
            get { return IExecute<bool>("isTraceEnabled"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/log/TransactionIndex.html#logger()"/> 
        /// </summary>
        public Com.Typesafe.Scalalogging.Logger Logger
        {
            get { return IExecute<Com.Typesafe.Scalalogging.Logger>("logger"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/log/TransactionIndex.html#loggerName()"/> 
        /// </summary>
        public string LoggerName
        {
            get { return IExecute<string>("loggerName"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/log/TransactionIndex.html#logIdent()"/> 
        /// </summary>
        public string LogIdent
        {
            get { return IExecute<string>("logIdent"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/log/TransactionIndex.html#startOffset()"/> 
        /// </summary>
        public long StartOffset
        {
            get { return IExecute<long>("startOffset"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/log/TransactionIndex.html#msgWithLogIdent(java.lang.String)"/>
        /// </summary>
        /// <param name="msg"><see cref="string"/></param>
        /// <returns><see cref="string"/></returns>
        public string MsgWithLogIdent(string msg)
        {
            return IExecute<string>("msgWithLogIdent", msg);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/log/TransactionIndex.html#collectAbortedTxns(long,long)"/>
        /// </summary>
        /// <param name="fetchOffset"><see cref="long"/></param>
        /// <param name="upperBoundOffset"><see cref="long"/></param>
        /// <returns><see cref="Kafka.Log.TxnIndexSearchResult"/></returns>
        public Kafka.Log.TxnIndexSearchResult CollectAbortedTxns(long fetchOffset, long upperBoundOffset)
        {
            return IExecute<Kafka.Log.TxnIndexSearchResult>("collectAbortedTxns", fetchOffset, upperBoundOffset);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/log/TransactionIndex.html#append(kafka.log.AbortedTxn)"/>
        /// </summary>
        /// <param name="abortedTxn"><see cref="Kafka.Log.AbortedTxn"/></param>
        public void Append(Kafka.Log.AbortedTxn abortedTxn)
        {
            IExecute("append", abortedTxn);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/log/TransactionIndex.html#close()"/>
        /// </summary>
        public void Close()
        {
            IExecute("close");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/log/TransactionIndex.html#flush()"/>
        /// </summary>
        public void Flush()
        {
            IExecute("flush");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/log/TransactionIndex.html#renameTo(java.io.File)"/>
        /// </summary>
        /// <param name="f"><see cref="Java.Io.File"/></param>
        public void RenameTo(Java.Io.File f)
        {
            IExecute("renameTo", f);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/log/TransactionIndex.html#reset()"/>
        /// </summary>
        public void Reset()
        {
            IExecute("reset");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/log/TransactionIndex.html#sanityCheck()"/>
        /// </summary>
        public void SanityCheck()
        {
            IExecute("sanityCheck");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/log/TransactionIndex.html#truncateTo(long)"/>
        /// </summary>
        /// <param name="offset"><see cref="long"/></param>
        public void TruncateTo(long offset)
        {
            IExecute("truncateTo", offset);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/log/TransactionIndex.html#updateParentDir(java.io.File)"/>
        /// </summary>
        /// <param name="parentDir"><see cref="Java.Io.File"/></param>
        public void UpdateParentDir(Java.Io.File parentDir)
        {
            IExecute("updateParentDir", parentDir);
        }

        #endregion

        #region Nested classes

        #endregion

        // TODO: complete the class
    }
    #endregion
}