/*
*  Copyright 2023 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 1.5.5.0)
*  using kafka_2.13-3.4.0.jar as reference
*/

using MASES.JCOBridge.C2JBridge.JVMInterop;

namespace Kafka.Admin
{
    #region AclCommand
    /// <summary>
    /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/admin/AclCommand.html"/>
    /// </summary>
    public partial class AclCommand : MASES.JCOBridge.C2JBridge.JVMBridgeMain<AclCommand>
    {
        /// <summary>
        /// Initialize a new <see cref="AclCommand"/>
        /// </summary>
        public AclCommand()
            : base("kafka.admin.AclCommand")
        {
        }
    }
    #endregion

    #region AdminOperationException
    /// <summary>
    /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/admin/AdminOperationException.html"/>
    /// </summary>
    public partial class AdminOperationException : Java.Lang.RuntimeException
    {
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeException_BridgeClassName.htm"/>
        /// </summary>
        public override string BridgeClassName => "kafka.admin.AdminOperationException";

        // TODO: complete the class

    }
    #endregion

    #region AdminUtils
    /// <summary>
    /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/admin/AdminUtils.html"/>
    /// </summary>
    public partial class AdminUtils : MASES.JCOBridge.C2JBridge.JVMBridgeBase<AdminUtils>
    {
        /// <summary>
        /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
        /// </summary>
        public AdminUtils() { }
        /// <summary>
        /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
        /// </summary>
        public AdminUtils(params object[] args) : base(args) { }

        private static IJavaType LocalBridgeClazz = ClazzOf("kafka.admin.AdminUtils");

        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_BridgeClassName.htm"/>
        /// </summary>
        public override string BridgeClassName => "kafka.admin.AdminUtils";
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeAbstract.htm"/>
        /// </summary>
        public override bool IsBridgeAbstract => false;
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeCloseable.htm"/>
        /// </summary>
        public override bool IsBridgeCloseable => false;
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeInterface.htm"/>
        /// </summary>
        public override bool IsBridgeInterface => false;
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeStatic.htm"/>
        /// </summary>
        public override bool IsBridgeStatic => false;

        // TODO: complete the class

    }
    #endregion

    #region BrokerApiVersionsCommand
    /// <summary>
    /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/admin/BrokerApiVersionsCommand.html"/>
    /// </summary>
    public partial class BrokerApiVersionsCommand : MASES.JCOBridge.C2JBridge.JVMBridgeMain<BrokerApiVersionsCommand>
    {
        /// <summary>
        /// Initialize a new <see cref="BrokerApiVersionsCommand"/>
        /// </summary>
        public BrokerApiVersionsCommand()
            : base("kafka.admin.BrokerApiVersionsCommand")
        {
        }
    }
    #endregion

    #region BrokerMetadata
    /// <summary>
    /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/admin/BrokerMetadata.html"/>
    /// </summary>
    public partial class BrokerMetadata : MASES.JCOBridge.C2JBridge.JVMBridgeBase<BrokerMetadata>
    {
        /// <summary>
        /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
        /// </summary>
        public BrokerMetadata() { }
        /// <summary>
        /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
        /// </summary>
        public BrokerMetadata(params object[] args) : base(args) { }

        private static IJavaType LocalBridgeClazz = ClazzOf("kafka.admin.BrokerMetadata");

        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_BridgeClassName.htm"/>
        /// </summary>
        public override string BridgeClassName => "kafka.admin.BrokerMetadata";
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeAbstract.htm"/>
        /// </summary>
        public override bool IsBridgeAbstract => false;
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeCloseable.htm"/>
        /// </summary>
        public override bool IsBridgeCloseable => false;
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeInterface.htm"/>
        /// </summary>
        public override bool IsBridgeInterface => false;
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeStatic.htm"/>
        /// </summary>
        public override bool IsBridgeStatic => false;

        // TODO: complete the class

    }
    #endregion

    #region ConfigCommand
    /// <summary>
    /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/admin/ConfigCommand.html"/>
    /// </summary>
    public partial class ConfigCommand : MASES.JCOBridge.C2JBridge.JVMBridgeMain<ConfigCommand>
    {
        /// <summary>
        /// Initialize a new <see cref="ConfigCommand"/>
        /// </summary>
        public ConfigCommand()
            : base("kafka.admin.ConfigCommand")
        {
        }
    }
    #endregion

    #region ConsumerGroupCommand
    /// <summary>
    /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/admin/ConsumerGroupCommand.html"/>
    /// </summary>
    public partial class ConsumerGroupCommand : MASES.JCOBridge.C2JBridge.JVMBridgeMain<ConsumerGroupCommand>
    {
        /// <summary>
        /// Initialize a new <see cref="ConsumerGroupCommand"/>
        /// </summary>
        public ConsumerGroupCommand()
            : base("kafka.admin.ConsumerGroupCommand")
        {
        }
    }
    #endregion

    #region DelegationTokenCommand
    /// <summary>
    /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/admin/DelegationTokenCommand.html"/>
    /// </summary>
    public partial class DelegationTokenCommand : MASES.JCOBridge.C2JBridge.JVMBridgeMain<DelegationTokenCommand>
    {
        /// <summary>
        /// Initialize a new <see cref="DelegationTokenCommand"/>
        /// </summary>
        public DelegationTokenCommand()
            : base("kafka.admin.DelegationTokenCommand")
        {
        }
    }
    #endregion

    #region DeleteRecordsCommand
    /// <summary>
    /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/admin/DeleteRecordsCommand.html"/>
    /// </summary>
    public partial class DeleteRecordsCommand : MASES.JCOBridge.C2JBridge.JVMBridgeMain<DeleteRecordsCommand>
    {
        /// <summary>
        /// Initialize a new <see cref="DeleteRecordsCommand"/>
        /// </summary>
        public DeleteRecordsCommand()
            : base("kafka.admin.DeleteRecordsCommand")
        {
        }
    }
    #endregion

    #region ElectionTypeConverter
    /// <summary>
    /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/admin/ElectionTypeConverter.html"/>
    /// </summary>
    public partial class ElectionTypeConverter : MASES.JCOBridge.C2JBridge.JVMBridgeBase<ElectionTypeConverter>
    {
        /// <summary>
        /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
        /// </summary>
        public ElectionTypeConverter() { }
        /// <summary>
        /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
        /// </summary>
        public ElectionTypeConverter(params object[] args) : base(args) { }

        private static IJavaType LocalBridgeClazz = ClazzOf("kafka.admin.ElectionTypeConverter");

        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_BridgeClassName.htm"/>
        /// </summary>
        public override string BridgeClassName => "kafka.admin.ElectionTypeConverter";
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeAbstract.htm"/>
        /// </summary>
        public override bool IsBridgeAbstract => false;
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeCloseable.htm"/>
        /// </summary>
        public override bool IsBridgeCloseable => false;
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeInterface.htm"/>
        /// </summary>
        public override bool IsBridgeInterface => false;
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeStatic.htm"/>
        /// </summary>
        public override bool IsBridgeStatic => false;

        // TODO: complete the class

    }
    #endregion

    #region FeatureCommand
    /// <summary>
    /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/admin/FeatureCommand.html"/>
    /// </summary>
    public partial class FeatureCommand : MASES.JCOBridge.C2JBridge.JVMBridgeMain<FeatureCommand>
    {
        /// <summary>
        /// Initialize a new <see cref="FeatureCommand"/>
        /// </summary>
        public FeatureCommand()
            : base("kafka.admin.FeatureCommand")
        {
        }
    }
    #endregion

    #region LeaderElectionCommand
    /// <summary>
    /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/admin/LeaderElectionCommand.html"/>
    /// </summary>
    public partial class LeaderElectionCommand : MASES.JCOBridge.C2JBridge.JVMBridgeMain<LeaderElectionCommand>
    {
        /// <summary>
        /// Initialize a new <see cref="LeaderElectionCommand"/>
        /// </summary>
        public LeaderElectionCommand()
            : base("kafka.admin.LeaderElectionCommand")
        {
        }
    }
    #endregion

    #region LeaderElectionCommandOptions
    /// <summary>
    /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/admin/LeaderElectionCommandOptions.html"/>
    /// </summary>
    public partial class LeaderElectionCommandOptions : Kafka.Utils.CommandDefaultOptions
    {
        /// <summary>
        /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
        /// </summary>
        public LeaderElectionCommandOptions() { }
        /// <summary>
        /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
        /// </summary>
        public LeaderElectionCommandOptions(params object[] args) : base(args) { }

        private static IJavaType LocalBridgeClazz = ClazzOf("kafka.admin.LeaderElectionCommandOptions");

        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_BridgeClassName.htm"/>
        /// </summary>
        public override string BridgeClassName => "kafka.admin.LeaderElectionCommandOptions";
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeAbstract.htm"/>
        /// </summary>
        public override bool IsBridgeAbstract => false;
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeCloseable.htm"/>
        /// </summary>
        public override bool IsBridgeCloseable => false;
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeInterface.htm"/>
        /// </summary>
        public override bool IsBridgeInterface => false;
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeStatic.htm"/>
        /// </summary>
        public override bool IsBridgeStatic => false;

        // TODO: complete the class

    }
    #endregion

    #region LogDirsCommand
    /// <summary>
    /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/admin/LogDirsCommand.html"/>
    /// </summary>
    public partial class LogDirsCommand : MASES.JCOBridge.C2JBridge.JVMBridgeMain<LogDirsCommand>
    {
        /// <summary>
        /// Initialize a new <see cref="LogDirsCommand"/>
        /// </summary>
        public LogDirsCommand()
            : base("kafka.admin.LogDirsCommand")
        {
        }
    }
    #endregion

    #region PatternTypeConverter
    /// <summary>
    /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/admin/PatternTypeConverter.html"/>
    /// </summary>
    public partial class PatternTypeConverter : Joptsimple.Util.EnumConverter
    {
        /// <summary>
        /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
        /// </summary>
        public PatternTypeConverter() { }
        /// <summary>
        /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
        /// </summary>
        public PatternTypeConverter(params object[] args) : base(args) { }

        private static IJavaType LocalBridgeClazz = ClazzOf("kafka.admin.PatternTypeConverter");

        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_BridgeClassName.htm"/>
        /// </summary>
        public override string BridgeClassName => "kafka.admin.PatternTypeConverter";
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeAbstract.htm"/>
        /// </summary>
        public override bool IsBridgeAbstract => false;
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeCloseable.htm"/>
        /// </summary>
        public override bool IsBridgeCloseable => false;
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeInterface.htm"/>
        /// </summary>
        public override bool IsBridgeInterface => false;
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeStatic.htm"/>
        /// </summary>
        public override bool IsBridgeStatic => false;

        // TODO: complete the class

    }
    #endregion

    #region RackAwareMode
    /// <summary>
    /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/admin/RackAwareMode.html"/>
    /// </summary>
    public partial class RackAwareMode : MASES.JCOBridge.C2JBridge.JVMBridgeBase<RackAwareMode>
    {
        /// <summary>
        /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
        /// </summary>
        public RackAwareMode() { }
        /// <summary>
        /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
        /// </summary>
        public RackAwareMode(params object[] args) : base(args) { }

        private static IJavaType LocalBridgeClazz = ClazzOf("kafka.admin.RackAwareMode");

        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_BridgeClassName.htm"/>
        /// </summary>
        public override string BridgeClassName => "kafka.admin.RackAwareMode";
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeAbstract.htm"/>
        /// </summary>
        public override bool IsBridgeAbstract => true;
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeCloseable.htm"/>
        /// </summary>
        public override bool IsBridgeCloseable => false;
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeInterface.htm"/>
        /// </summary>
        public override bool IsBridgeInterface => true;
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeStatic.htm"/>
        /// </summary>
        public override bool IsBridgeStatic => false;

        // TODO: complete the class

    }
    #endregion

    #region ReassignPartitionsCommand
    /// <summary>
    /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/admin/ReassignPartitionsCommand.html"/>
    /// </summary>
    public partial class ReassignPartitionsCommand : MASES.JCOBridge.C2JBridge.JVMBridgeMain<ReassignPartitionsCommand>
    {
        /// <summary>
        /// Initialize a new <see cref="ReassignPartitionsCommand"/>
        /// </summary>
        public ReassignPartitionsCommand()
            : base("kafka.admin.ReassignPartitionsCommand")
        {
        }
    }
    #endregion

    #region TopicCommand
    /// <summary>
    /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/admin/TopicCommand.html"/>
    /// </summary>
    public partial class TopicCommand : MASES.JCOBridge.C2JBridge.JVMBridgeMain<TopicCommand>
    {
        /// <summary>
        /// Initialize a new <see cref="TopicCommand"/>
        /// </summary>
        public TopicCommand()
            : base("kafka.admin.TopicCommand")
        {
        }
    }
    #endregion

    #region ZkSecurityMigrator
    /// <summary>
    /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/admin/ZkSecurityMigrator.html"/>
    /// </summary>
    public partial class ZkSecurityMigrator : MASES.JCOBridge.C2JBridge.JVMBridgeMain<ZkSecurityMigrator>
    {
        /// <summary>
        /// Initialize a new <see cref="ZkSecurityMigrator"/>
        /// </summary>
        public ZkSecurityMigrator()
            : base("kafka.admin.ZkSecurityMigrator")
        {
        }
    }
    #endregion


}