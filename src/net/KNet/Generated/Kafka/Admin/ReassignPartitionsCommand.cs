/*
*  Copyright 2024 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 2.5.10.0)
*  using kafka_2.13-3.6.2.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Kafka.Admin
{
    #region ReassignPartitionsCommand declaration
    /// <summary>
    /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka_2.13/3.6.2/kafka/admin/ReassignPartitionsCommand.html"/>
    /// </summary>
    public partial class ReassignPartitionsCommand : MASES.JCOBridge.C2JBridge.JVMBridgeBase<ReassignPartitionsCommand>, MASES.JCOBridge.C2JBridge.IJVMBridgeMain
    {
        const string _bridgeClassName = "kafka.admin.ReassignPartitionsCommand";
        /// <summary>
        /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
        /// </summary>
        public ReassignPartitionsCommand() { }
        /// <summary>
        /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
        /// </summary>
        public ReassignPartitionsCommand(params object[] args) : base(args) { }

        private static readonly MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType _LocalBridgeClazz = JVMBridgeBase.ClazzOf(_bridgeClassName);
        private static MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType LocalBridgeClazz => _LocalBridgeClazz ?? throw new global::System.InvalidOperationException($"Class {_bridgeClassName} was not found.");

        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_BridgeClassName.htm"/>
        /// </summary>
        public override string BridgeClassName => _bridgeClassName;
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeAbstract.htm"/>
        /// </summary>
        public override bool IsBridgeAbstract => false;
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeCloseable.htm"/>
        /// </summary>
        public override bool IsBridgeCloseable => false;
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeInterface.htm"/>
        /// </summary>
        public override bool IsBridgeInterface => false;
        /// <summary>
        /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeStatic.htm"/>
        /// </summary>
        public override bool IsBridgeStatic => false;

        // TODO: complete the class
        #region ActiveMoveState declaration
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka_2.13/3.6.2/kafka/admin/ReassignPartitionsCommand.ActiveMoveState.html"/>
        /// </summary>
        public partial class ActiveMoveState : MASES.JCOBridge.C2JBridge.JVMBridgeBase<ActiveMoveState>
        {
            const string _bridgeClassName = "kafka.admin.ReassignPartitionsCommand$ActiveMoveState";
            /// <summary>
            /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
            /// </summary>
            public ActiveMoveState() { }
            /// <summary>
            /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
            /// </summary>
            public ActiveMoveState(params object[] args) : base(args) { }

            private static readonly MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType _LocalBridgeClazz = JVMBridgeBase.ClazzOf(_bridgeClassName);
            private static MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType LocalBridgeClazz => _LocalBridgeClazz ?? throw new global::System.InvalidOperationException($"Class {_bridgeClassName} was not found.");

            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_BridgeClassName.htm"/>
            /// </summary>
            public override string BridgeClassName => _bridgeClassName;
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeAbstract.htm"/>
            /// </summary>
            public override bool IsBridgeAbstract => false;
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeCloseable.htm"/>
            /// </summary>
            public override bool IsBridgeCloseable => false;
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeInterface.htm"/>
            /// </summary>
            public override bool IsBridgeInterface => false;
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeStatic.htm"/>
            /// </summary>
            public override bool IsBridgeStatic => true;

            // TODO: complete the class

        }
        #endregion

        #region CancelledMoveState declaration
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka_2.13/3.6.2/kafka/admin/ReassignPartitionsCommand.CancelledMoveState.html"/>
        /// </summary>
        public partial class CancelledMoveState : MASES.JCOBridge.C2JBridge.JVMBridgeBase<CancelledMoveState>
        {
            const string _bridgeClassName = "kafka.admin.ReassignPartitionsCommand$CancelledMoveState";
            /// <summary>
            /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
            /// </summary>
            public CancelledMoveState() { }
            /// <summary>
            /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
            /// </summary>
            public CancelledMoveState(params object[] args) : base(args) { }

            private static readonly MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType _LocalBridgeClazz = JVMBridgeBase.ClazzOf(_bridgeClassName);
            private static MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType LocalBridgeClazz => _LocalBridgeClazz ?? throw new global::System.InvalidOperationException($"Class {_bridgeClassName} was not found.");

            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_BridgeClassName.htm"/>
            /// </summary>
            public override string BridgeClassName => _bridgeClassName;
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeAbstract.htm"/>
            /// </summary>
            public override bool IsBridgeAbstract => false;
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeCloseable.htm"/>
            /// </summary>
            public override bool IsBridgeCloseable => false;
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeInterface.htm"/>
            /// </summary>
            public override bool IsBridgeInterface => false;
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeStatic.htm"/>
            /// </summary>
            public override bool IsBridgeStatic => true;

            // TODO: complete the class

        }
        #endregion

        #region CompletedMoveState declaration
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka_2.13/3.6.2/kafka/admin/ReassignPartitionsCommand.CompletedMoveState.html"/>
        /// </summary>
        public partial class CompletedMoveState : MASES.JCOBridge.C2JBridge.JVMBridgeBase<CompletedMoveState>
        {
            const string _bridgeClassName = "kafka.admin.ReassignPartitionsCommand$CompletedMoveState";
            /// <summary>
            /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
            /// </summary>
            public CompletedMoveState() { }
            /// <summary>
            /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
            /// </summary>
            public CompletedMoveState(params object[] args) : base(args) { }

            private static readonly MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType _LocalBridgeClazz = JVMBridgeBase.ClazzOf(_bridgeClassName);
            private static MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType LocalBridgeClazz => _LocalBridgeClazz ?? throw new global::System.InvalidOperationException($"Class {_bridgeClassName} was not found.");

            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_BridgeClassName.htm"/>
            /// </summary>
            public override string BridgeClassName => _bridgeClassName;
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeAbstract.htm"/>
            /// </summary>
            public override bool IsBridgeAbstract => false;
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeCloseable.htm"/>
            /// </summary>
            public override bool IsBridgeCloseable => false;
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeInterface.htm"/>
            /// </summary>
            public override bool IsBridgeInterface => false;
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeStatic.htm"/>
            /// </summary>
            public override bool IsBridgeStatic => true;

            // TODO: complete the class

        }
        #endregion

        #region LogDirMoveState declaration
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka_2.13/3.6.2/kafka/admin/ReassignPartitionsCommand.LogDirMoveState.html"/>
        /// </summary>
        public partial class LogDirMoveState : MASES.JCOBridge.C2JBridge.JVMBridgeBase<LogDirMoveState>
        {
            const string _bridgeClassName = "kafka.admin.ReassignPartitionsCommand$LogDirMoveState";
            /// <summary>
            /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
            /// </summary>
            [global::System.Obsolete("LogDirMoveState class represents, in .NET, an instance of a JVM interface or abstract class. This public initializer is needed for JCOBridge internal use, other uses can produce unidentible behaviors.")]
            public LogDirMoveState() { }
            /// <summary>
            /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
            /// </summary>
            [global::System.Obsolete("LogDirMoveState class represents, in .NET, an instance of a JVM interface or abstract class. This public initializer is needed for JCOBridge internal use, other uses can produce unidentible behaviors.")]
            public LogDirMoveState(params object[] args) : base(args) { }

            private static readonly MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType _LocalBridgeClazz = JVMBridgeBase.ClazzOf(_bridgeClassName);
            private static MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType LocalBridgeClazz => _LocalBridgeClazz ?? throw new global::System.InvalidOperationException($"Class {_bridgeClassName} was not found.");

            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_BridgeClassName.htm"/>
            /// </summary>
            public override string BridgeClassName => _bridgeClassName;
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeAbstract.htm"/>
            /// </summary>
            public override bool IsBridgeAbstract => true;
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeCloseable.htm"/>
            /// </summary>
            public override bool IsBridgeCloseable => false;
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeInterface.htm"/>
            /// </summary>
            public override bool IsBridgeInterface => true;
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeStatic.htm"/>
            /// </summary>
            public override bool IsBridgeStatic => true;

            // TODO: complete the class

        }
        #endregion

        #region MissingLogDirMoveState declaration
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka_2.13/3.6.2/kafka/admin/ReassignPartitionsCommand.MissingLogDirMoveState.html"/>
        /// </summary>
        public partial class MissingLogDirMoveState : MASES.JCOBridge.C2JBridge.JVMBridgeBase<MissingLogDirMoveState>
        {
            const string _bridgeClassName = "kafka.admin.ReassignPartitionsCommand$MissingLogDirMoveState";
            /// <summary>
            /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
            /// </summary>
            public MissingLogDirMoveState() { }
            /// <summary>
            /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
            /// </summary>
            public MissingLogDirMoveState(params object[] args) : base(args) { }

            private static readonly MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType _LocalBridgeClazz = JVMBridgeBase.ClazzOf(_bridgeClassName);
            private static MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType LocalBridgeClazz => _LocalBridgeClazz ?? throw new global::System.InvalidOperationException($"Class {_bridgeClassName} was not found.");

            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_BridgeClassName.htm"/>
            /// </summary>
            public override string BridgeClassName => _bridgeClassName;
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeAbstract.htm"/>
            /// </summary>
            public override bool IsBridgeAbstract => false;
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeCloseable.htm"/>
            /// </summary>
            public override bool IsBridgeCloseable => false;
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeInterface.htm"/>
            /// </summary>
            public override bool IsBridgeInterface => false;
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeStatic.htm"/>
            /// </summary>
            public override bool IsBridgeStatic => true;

            // TODO: complete the class

        }
        #endregion

        #region MissingReplicaMoveState declaration
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka_2.13/3.6.2/kafka/admin/ReassignPartitionsCommand.MissingReplicaMoveState.html"/>
        /// </summary>
        public partial class MissingReplicaMoveState : MASES.JCOBridge.C2JBridge.JVMBridgeBase<MissingReplicaMoveState>
        {
            const string _bridgeClassName = "kafka.admin.ReassignPartitionsCommand$MissingReplicaMoveState";
            /// <summary>
            /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
            /// </summary>
            public MissingReplicaMoveState() { }
            /// <summary>
            /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
            /// </summary>
            public MissingReplicaMoveState(params object[] args) : base(args) { }

            private static readonly MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType _LocalBridgeClazz = JVMBridgeBase.ClazzOf(_bridgeClassName);
            private static MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType LocalBridgeClazz => _LocalBridgeClazz ?? throw new global::System.InvalidOperationException($"Class {_bridgeClassName} was not found.");

            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_BridgeClassName.htm"/>
            /// </summary>
            public override string BridgeClassName => _bridgeClassName;
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeAbstract.htm"/>
            /// </summary>
            public override bool IsBridgeAbstract => false;
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeCloseable.htm"/>
            /// </summary>
            public override bool IsBridgeCloseable => false;
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeInterface.htm"/>
            /// </summary>
            public override bool IsBridgeInterface => false;
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeStatic.htm"/>
            /// </summary>
            public override bool IsBridgeStatic => true;

            // TODO: complete the class

        }
        #endregion

        #region PartitionMove declaration
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka_2.13/3.6.2/kafka/admin/ReassignPartitionsCommand.PartitionMove.html"/>
        /// </summary>
        public partial class PartitionMove : MASES.JCOBridge.C2JBridge.JVMBridgeBase<PartitionMove>
        {
            const string _bridgeClassName = "kafka.admin.ReassignPartitionsCommand$PartitionMove";
            /// <summary>
            /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
            /// </summary>
            public PartitionMove() { }
            /// <summary>
            /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
            /// </summary>
            public PartitionMove(params object[] args) : base(args) { }

            private static readonly MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType _LocalBridgeClazz = JVMBridgeBase.ClazzOf(_bridgeClassName);
            private static MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType LocalBridgeClazz => _LocalBridgeClazz ?? throw new global::System.InvalidOperationException($"Class {_bridgeClassName} was not found.");

            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_BridgeClassName.htm"/>
            /// </summary>
            public override string BridgeClassName => _bridgeClassName;
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeAbstract.htm"/>
            /// </summary>
            public override bool IsBridgeAbstract => false;
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeCloseable.htm"/>
            /// </summary>
            public override bool IsBridgeCloseable => false;
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeInterface.htm"/>
            /// </summary>
            public override bool IsBridgeInterface => false;
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeStatic.htm"/>
            /// </summary>
            public override bool IsBridgeStatic => true;

            // TODO: complete the class

        }
        #endregion

        #region PartitionReassignmentState declaration
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka_2.13/3.6.2/kafka/admin/ReassignPartitionsCommand.PartitionReassignmentState.html"/>
        /// </summary>
        public partial class PartitionReassignmentState : MASES.JCOBridge.C2JBridge.JVMBridgeBase<PartitionReassignmentState>
        {
            const string _bridgeClassName = "kafka.admin.ReassignPartitionsCommand$PartitionReassignmentState";
            /// <summary>
            /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
            /// </summary>
            public PartitionReassignmentState() { }
            /// <summary>
            /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
            /// </summary>
            public PartitionReassignmentState(params object[] args) : base(args) { }

            private static readonly MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType _LocalBridgeClazz = JVMBridgeBase.ClazzOf(_bridgeClassName);
            private static MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType LocalBridgeClazz => _LocalBridgeClazz ?? throw new global::System.InvalidOperationException($"Class {_bridgeClassName} was not found.");

            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_BridgeClassName.htm"/>
            /// </summary>
            public override string BridgeClassName => _bridgeClassName;
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeAbstract.htm"/>
            /// </summary>
            public override bool IsBridgeAbstract => false;
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeCloseable.htm"/>
            /// </summary>
            public override bool IsBridgeCloseable => false;
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeInterface.htm"/>
            /// </summary>
            public override bool IsBridgeInterface => false;
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeStatic.htm"/>
            /// </summary>
            public override bool IsBridgeStatic => true;

            // TODO: complete the class

        }
        #endregion

        #region ReassignPartitionsCommandOptions declaration
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka_2.13/3.6.2/kafka/admin/ReassignPartitionsCommand.ReassignPartitionsCommandOptions.html"/>
        /// </summary>
        public partial class ReassignPartitionsCommandOptions : MASES.JCOBridge.C2JBridge.JVMBridgeBase<ReassignPartitionsCommandOptions>
        {
            const string _bridgeClassName = "kafka.admin.ReassignPartitionsCommand$ReassignPartitionsCommandOptions";
            /// <summary>
            /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
            /// </summary>
            public ReassignPartitionsCommandOptions() { }
            /// <summary>
            /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
            /// </summary>
            public ReassignPartitionsCommandOptions(params object[] args) : base(args) { }

            private static readonly MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType _LocalBridgeClazz = JVMBridgeBase.ClazzOf(_bridgeClassName);
            private static MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType LocalBridgeClazz => _LocalBridgeClazz ?? throw new global::System.InvalidOperationException($"Class {_bridgeClassName} was not found.");

            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_BridgeClassName.htm"/>
            /// </summary>
            public override string BridgeClassName => _bridgeClassName;
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeAbstract.htm"/>
            /// </summary>
            public override bool IsBridgeAbstract => false;
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeCloseable.htm"/>
            /// </summary>
            public override bool IsBridgeCloseable => false;
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeInterface.htm"/>
            /// </summary>
            public override bool IsBridgeInterface => false;
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeStatic.htm"/>
            /// </summary>
            public override bool IsBridgeStatic => true;

            // TODO: complete the class

        }
        #endregion

        #region TerseReassignmentFailureException declaration
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka_2.13/3.6.2/kafka/admin/ReassignPartitionsCommand.TerseReassignmentFailureException.html"/>
        /// </summary>
        public partial class TerseReassignmentFailureException : Org.Apache.Kafka.Common.KafkaException
        {
            const string _bridgeClassName = "kafka.admin.ReassignPartitionsCommand$TerseReassignmentFailureException";
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeException_BridgeClassName.htm"/>
            /// </summary>
            public override string BridgeClassName => _bridgeClassName;

            // TODO: complete the class

        }
        #endregion

        #region VerifyAssignmentResult declaration
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka_2.13/3.6.2/kafka/admin/ReassignPartitionsCommand.VerifyAssignmentResult.html"/>
        /// </summary>
        public partial class VerifyAssignmentResult : MASES.JCOBridge.C2JBridge.JVMBridgeBase<VerifyAssignmentResult>
        {
            const string _bridgeClassName = "kafka.admin.ReassignPartitionsCommand$VerifyAssignmentResult";
            /// <summary>
            /// Default constructor: even if the corresponding Java class does not have one, it is mandatory for JCOBridge
            /// </summary>
            public VerifyAssignmentResult() { }
            /// <summary>
            /// Generic constructor: it is useful for JCOBridge when there is a derived class which needs to pass arguments to the highest JVMBridgeBase class
            /// </summary>
            public VerifyAssignmentResult(params object[] args) : base(args) { }

            private static readonly MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType _LocalBridgeClazz = JVMBridgeBase.ClazzOf(_bridgeClassName);
            private static MASES.JCOBridge.C2JBridge.JVMInterop.IJavaType LocalBridgeClazz => _LocalBridgeClazz ?? throw new global::System.InvalidOperationException($"Class {_bridgeClassName} was not found.");

            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_BridgeClassName.htm"/>
            /// </summary>
            public override string BridgeClassName => _bridgeClassName;
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeAbstract.htm"/>
            /// </summary>
            public override bool IsBridgeAbstract => false;
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeCloseable.htm"/>
            /// </summary>
            public override bool IsBridgeCloseable => false;
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeInterface.htm"/>
            /// </summary>
            public override bool IsBridgeInterface => false;
            /// <summary>
            /// <see href="https://www.jcobridge.com/api-clr/html/P_MASES_JCOBridge_C2JBridge_JVMBridgeBase_IsBridgeStatic.htm"/>
            /// </summary>
            public override bool IsBridgeStatic => true;

            // TODO: complete the class

        }
        #endregion

    
    }
    #endregion

    #region ReassignPartitionsCommand implementation
    public partial class ReassignPartitionsCommand
    {
        #region Constructors

        #endregion

        #region Class/Interface conversion operators

        #endregion

        #region Fields

        #endregion

        #region Static methods
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka_2.13/3.6.2/kafka/admin/ReassignPartitionsCommand.html#compareTopicPartitionReplicas-org.apache.kafka.common.TopicPartitionReplica-org.apache.kafka.common.TopicPartitionReplica-"/>
        /// </summary>
        /// <param name="a"><see cref="Org.Apache.Kafka.Common.TopicPartitionReplica"/></param>
        /// <param name="b"><see cref="Org.Apache.Kafka.Common.TopicPartitionReplica"/></param>
        /// <returns><see cref="bool"/></returns>
        public static bool CompareTopicPartitionReplicas(Org.Apache.Kafka.Common.TopicPartitionReplica a, Org.Apache.Kafka.Common.TopicPartitionReplica b)
        {
            return SExecuteWithSignature<bool>(LocalBridgeClazz, "compareTopicPartitionReplicas", "(Lorg/apache/kafka/common/TopicPartitionReplica;Lorg/apache/kafka/common/TopicPartitionReplica;)Z", a, b);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka_2.13/3.6.2/kafka/admin/ReassignPartitionsCommand.html#compareTopicPartitions-org.apache.kafka.common.TopicPartition-org.apache.kafka.common.TopicPartition-"/>
        /// </summary>
        /// <param name="a"><see cref="Org.Apache.Kafka.Common.TopicPartition"/></param>
        /// <param name="b"><see cref="Org.Apache.Kafka.Common.TopicPartition"/></param>
        /// <returns><see cref="bool"/></returns>
        public static bool CompareTopicPartitions(Org.Apache.Kafka.Common.TopicPartition a, Org.Apache.Kafka.Common.TopicPartition b)
        {
            return SExecuteWithSignature<bool>(LocalBridgeClazz, "compareTopicPartitions", "(Lorg/apache/kafka/common/TopicPartition;Lorg/apache/kafka/common/TopicPartition;)Z", a, b);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka_2.13/3.6.2/kafka/admin/ReassignPartitionsCommand.html#isDebugEnabled--"/>
        /// </summary>
        /// <returns><see cref="bool"/></returns>
        public static bool IsDebugEnabled()
        {
            return SExecuteWithSignature<bool>(LocalBridgeClazz, "isDebugEnabled", "()Z");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka_2.13/3.6.2/kafka/admin/ReassignPartitionsCommand.html#isTraceEnabled--"/>
        /// </summary>
        /// <returns><see cref="bool"/></returns>
        public static bool IsTraceEnabled()
        {
            return SExecuteWithSignature<bool>(LocalBridgeClazz, "isTraceEnabled", "()Z");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka_2.13/3.6.2/kafka/admin/ReassignPartitionsCommand.html#curReassignmentsToString-org.apache.kafka.clients.admin.Admin-"/>
        /// </summary>
        /// <param name="adminClient"><see cref="Org.Apache.Kafka.Clients.Admin.Admin"/></param>
        /// <returns><see cref="Java.Lang.String"/></returns>
        public static Java.Lang.String CurReassignmentsToString(Org.Apache.Kafka.Clients.Admin.Admin adminClient)
        {
            return SExecuteWithSignature<Java.Lang.String>(LocalBridgeClazz, "curReassignmentsToString", "(Lorg/apache/kafka/clients/admin/Admin;)Ljava/lang/String;", adminClient);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka_2.13/3.6.2/kafka/admin/ReassignPartitionsCommand.html#helpText--"/>
        /// </summary>
        /// <returns><see cref="Java.Lang.String"/></returns>
        public static Java.Lang.String HelpText()
        {
            return SExecuteWithSignature<Java.Lang.String>(LocalBridgeClazz, "helpText", "()Ljava/lang/String;");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka_2.13/3.6.2/kafka/admin/ReassignPartitionsCommand.html#validateAndParseArgs-java.lang.String[]-"/>
        /// </summary>
        /// <param name="args"><see cref="Java.Lang.String"/></param>
        /// <returns><see cref="Kafka.Admin.ReassignPartitionsCommand.ReassignPartitionsCommandOptions"/></returns>
        public static Kafka.Admin.ReassignPartitionsCommand.ReassignPartitionsCommandOptions ValidateAndParseArgs(Java.Lang.String[] args)
        {
            return SExecuteWithSignature<Kafka.Admin.ReassignPartitionsCommand.ReassignPartitionsCommandOptions>(LocalBridgeClazz, "validateAndParseArgs", "([Ljava/lang/String;)Lkafka/admin/ReassignPartitionsCommand$ReassignPartitionsCommandOptions;", new object[] { args });
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka_2.13/3.6.2/kafka/admin/ReassignPartitionsCommand.html#verifyAssignment-org.apache.kafka.clients.admin.Admin-java.lang.String-boolean-"/>
        /// </summary>
        /// <param name="adminClient"><see cref="Org.Apache.Kafka.Clients.Admin.Admin"/></param>
        /// <param name="jsonString"><see cref="Java.Lang.String"/></param>
        /// <param name="preserveThrottles"><see cref="bool"/></param>
        /// <returns><see cref="Kafka.Admin.ReassignPartitionsCommand.VerifyAssignmentResult"/></returns>
        public static Kafka.Admin.ReassignPartitionsCommand.VerifyAssignmentResult VerifyAssignment(Org.Apache.Kafka.Clients.Admin.Admin adminClient, Java.Lang.String jsonString, bool preserveThrottles)
        {
            return SExecuteWithSignature<Kafka.Admin.ReassignPartitionsCommand.VerifyAssignmentResult>(LocalBridgeClazz, "verifyAssignment", "(Lorg/apache/kafka/clients/admin/Admin;Ljava/lang/String;Z)Lkafka/admin/ReassignPartitionsCommand$VerifyAssignmentResult;", adminClient, jsonString, preserveThrottles);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka_2.13/3.6.2/kafka/admin/ReassignPartitionsCommand.html#executeAssignment-org.apache.kafka.clients.admin.Admin-boolean-java.lang.String-long-long-long-org.apache.kafka.common.utils.Time-"/>
        /// </summary>
        /// <param name="adminClient"><see cref="Org.Apache.Kafka.Clients.Admin.Admin"/></param>
        /// <param name="additional"><see cref="bool"/></param>
        /// <param name="reassignmentJson"><see cref="Java.Lang.String"/></param>
        /// <param name="interBrokerThrottle"><see cref="long"/></param>
        /// <param name="logDirThrottle"><see cref="long"/></param>
        /// <param name="timeoutMs"><see cref="long"/></param>
        /// <param name="time"><see cref="Org.Apache.Kafka.Common.Utils.Time"/></param>
        public static void ExecuteAssignment(Org.Apache.Kafka.Clients.Admin.Admin adminClient, bool additional, Java.Lang.String reassignmentJson, long interBrokerThrottle, long logDirThrottle, long timeoutMs, Org.Apache.Kafka.Common.Utils.Time time)
        {
            SExecuteWithSignature(LocalBridgeClazz, "executeAssignment", "(Lorg/apache/kafka/clients/admin/Admin;ZLjava/lang/String;JJJLorg/apache/kafka/common/utils/Time;)V", adminClient, additional, reassignmentJson, interBrokerThrottle, logDirThrottle, timeoutMs, time);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka_2.13/3.6.2/kafka/admin/ReassignPartitionsCommand.html#listReassignments-org.apache.kafka.clients.admin.Admin-"/>
        /// </summary>
        /// <param name="adminClient"><see cref="Org.Apache.Kafka.Clients.Admin.Admin"/></param>
        public static void ListReassignments(Org.Apache.Kafka.Clients.Admin.Admin adminClient)
        {
            SExecuteWithSignature(LocalBridgeClazz, "listReassignments", "(Lorg/apache/kafka/clients/admin/Admin;)V", adminClient);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka_2.13/3.6.2/kafka/admin/ReassignPartitionsCommand.html#main-java.lang.String[]-"/>
        /// </summary>
        /// <param name="args"><see cref="Java.Lang.String"/></param>
        public static void Main(Java.Lang.String[] args)
        {
            SExecuteWithSignature(LocalBridgeClazz, "main", "([Ljava/lang/String;)V", new object[] { args });
        }

        #endregion

        #region Instance methods

        #endregion

        #region Nested classes
        #region ActiveMoveState implementation
        public partial class ActiveMoveState : Java.Io.ISerializable
        {
            #region Constructors
            /// <summary>
            /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka_2.13/3.6.2/kafka/admin/ReassignPartitionsCommand.ActiveMoveState.html#kafka.admin.ReassignPartitionsCommand$ActiveMoveState(java.lang.String,java.lang.String,java.lang.String)"/>
            /// </summary>
            /// <param name="currentLogDir"><see cref="Java.Lang.String"/></param>
            /// <param name="targetLogDir"><see cref="Java.Lang.String"/></param>
            /// <param name="futureLogDir"><see cref="Java.Lang.String"/></param>
            public ActiveMoveState(Java.Lang.String currentLogDir, Java.Lang.String targetLogDir, Java.Lang.String futureLogDir)
                : base(currentLogDir, targetLogDir, futureLogDir)
            {
            }

            #endregion

            #region Class/Interface conversion operators
            /// <summary>
            /// Converter from <see cref="Kafka.Admin.ReassignPartitionsCommand.ActiveMoveState"/> to <see cref="Java.Io.Serializable"/>
            /// </summary>
            public static implicit operator Java.Io.Serializable(Kafka.Admin.ReassignPartitionsCommand.ActiveMoveState t) => t.Cast<Java.Io.Serializable>();

            #endregion

            #region Fields

            #endregion

            #region Static methods

            #endregion

            #region Instance methods
            /// <summary>
            /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka_2.13/3.6.2/kafka/admin/ReassignPartitionsCommand.ActiveMoveState.html#canEqual-java.lang.Object-"/>
            /// </summary>
            /// <param name="x_1"><see cref="object"/></param>
            /// <returns><see cref="bool"/></returns>
            public bool CanEqual(object x_1)
            {
                return IExecuteWithSignature<bool>("canEqual", "(Ljava/lang/Object;)Z", x_1);
            }
            /// <summary>
            /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka_2.13/3.6.2/kafka/admin/ReassignPartitionsCommand.ActiveMoveState.html#done--"/>
            /// </summary>
            /// <returns><see cref="bool"/></returns>
            public bool Done()
            {
                return IExecuteWithSignature<bool>("done", "()Z");
            }
            /// <summary>
            /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka_2.13/3.6.2/kafka/admin/ReassignPartitionsCommand.ActiveMoveState.html#productArity--"/>
            /// </summary>
            /// <returns><see cref="int"/></returns>
            public int ProductArity()
            {
                return IExecuteWithSignature<int>("productArity", "()I");
            }
            /// <summary>
            /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka_2.13/3.6.2/kafka/admin/ReassignPartitionsCommand.ActiveMoveState.html#productElement-int-"/>
            /// </summary>
            /// <param name="x_1"><see cref="int"/></param>
            /// <returns><see cref="object"/></returns>
            public object ProductElement(int x_1)
            {
                return IExecuteWithSignature("productElement", "(I)Ljava/lang/Object;", x_1);
            }
            /// <summary>
            /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka_2.13/3.6.2/kafka/admin/ReassignPartitionsCommand.ActiveMoveState.html#currentLogDir--"/>
            /// </summary>
            /// <returns><see cref="Java.Lang.String"/></returns>
            public Java.Lang.String CurrentLogDir()
            {
                return IExecuteWithSignature<Java.Lang.String>("currentLogDir", "()Ljava/lang/String;");
            }
            /// <summary>
            /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka_2.13/3.6.2/kafka/admin/ReassignPartitionsCommand.ActiveMoveState.html#futureLogDir--"/>
            /// </summary>
            /// <returns><see cref="Java.Lang.String"/></returns>
            public Java.Lang.String FutureLogDir()
            {
                return IExecuteWithSignature<Java.Lang.String>("futureLogDir", "()Ljava/lang/String;");
            }
            /// <summary>
            /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka_2.13/3.6.2/kafka/admin/ReassignPartitionsCommand.ActiveMoveState.html#productElementName-int-"/>
            /// </summary>
            /// <param name="x_1"><see cref="int"/></param>
            /// <returns><see cref="Java.Lang.String"/></returns>
            public Java.Lang.String ProductElementName(int x_1)
            {
                return IExecuteWithSignature<Java.Lang.String>("productElementName", "(I)Ljava/lang/String;", x_1);
            }
            /// <summary>
            /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka_2.13/3.6.2/kafka/admin/ReassignPartitionsCommand.ActiveMoveState.html#productPrefix--"/>
            /// </summary>
            /// <returns><see cref="Java.Lang.String"/></returns>
            public Java.Lang.String ProductPrefix()
            {
                return IExecuteWithSignature<Java.Lang.String>("productPrefix", "()Ljava/lang/String;");
            }
            /// <summary>
            /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka_2.13/3.6.2/kafka/admin/ReassignPartitionsCommand.ActiveMoveState.html#targetLogDir--"/>
            /// </summary>
            /// <returns><see cref="Java.Lang.String"/></returns>
            public Java.Lang.String TargetLogDir()
            {
                return IExecuteWithSignature<Java.Lang.String>("targetLogDir", "()Ljava/lang/String;");
            }
            /// <summary>
            /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka_2.13/3.6.2/kafka/admin/ReassignPartitionsCommand.ActiveMoveState.html#copy-java.lang.String-java.lang.String-java.lang.String-"/>
            /// </summary>
            /// <param name="currentLogDir"><see cref="Java.Lang.String"/></param>
            /// <param name="targetLogDir"><see cref="Java.Lang.String"/></param>
            /// <param name="futureLogDir"><see cref="Java.Lang.String"/></param>
            /// <returns><see cref="Kafka.Admin.ReassignPartitionsCommand.ActiveMoveState"/></returns>
            public Kafka.Admin.ReassignPartitionsCommand.ActiveMoveState Copy(Java.Lang.String currentLogDir, Java.Lang.String targetLogDir, Java.Lang.String futureLogDir)
            {
                return IExecuteWithSignature<Kafka.Admin.ReassignPartitionsCommand.ActiveMoveState>("copy", "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lkafka/admin/ReassignPartitionsCommand$ActiveMoveState;", currentLogDir, targetLogDir, futureLogDir);
            }

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

        #region CancelledMoveState implementation
        public partial class CancelledMoveState : Java.Io.ISerializable
        {
            #region Constructors
            /// <summary>
            /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka_2.13/3.6.2/kafka/admin/ReassignPartitionsCommand.CancelledMoveState.html#kafka.admin.ReassignPartitionsCommand$CancelledMoveState(java.lang.String,java.lang.String)"/>
            /// </summary>
            /// <param name="currentLogDir"><see cref="Java.Lang.String"/></param>
            /// <param name="targetLogDir"><see cref="Java.Lang.String"/></param>
            public CancelledMoveState(Java.Lang.String currentLogDir, Java.Lang.String targetLogDir)
                : base(currentLogDir, targetLogDir)
            {
            }

            #endregion

            #region Class/Interface conversion operators
            /// <summary>
            /// Converter from <see cref="Kafka.Admin.ReassignPartitionsCommand.CancelledMoveState"/> to <see cref="Java.Io.Serializable"/>
            /// </summary>
            public static implicit operator Java.Io.Serializable(Kafka.Admin.ReassignPartitionsCommand.CancelledMoveState t) => t.Cast<Java.Io.Serializable>();

            #endregion

            #region Fields

            #endregion

            #region Static methods

            #endregion

            #region Instance methods
            /// <summary>
            /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka_2.13/3.6.2/kafka/admin/ReassignPartitionsCommand.CancelledMoveState.html#canEqual-java.lang.Object-"/>
            /// </summary>
            /// <param name="x_1"><see cref="object"/></param>
            /// <returns><see cref="bool"/></returns>
            public bool CanEqual(object x_1)
            {
                return IExecuteWithSignature<bool>("canEqual", "(Ljava/lang/Object;)Z", x_1);
            }
            /// <summary>
            /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka_2.13/3.6.2/kafka/admin/ReassignPartitionsCommand.CancelledMoveState.html#done--"/>
            /// </summary>
            /// <returns><see cref="bool"/></returns>
            public bool Done()
            {
                return IExecuteWithSignature<bool>("done", "()Z");
            }
            /// <summary>
            /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka_2.13/3.6.2/kafka/admin/ReassignPartitionsCommand.CancelledMoveState.html#productArity--"/>
            /// </summary>
            /// <returns><see cref="int"/></returns>
            public int ProductArity()
            {
                return IExecuteWithSignature<int>("productArity", "()I");
            }
            /// <summary>
            /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka_2.13/3.6.2/kafka/admin/ReassignPartitionsCommand.CancelledMoveState.html#productElement-int-"/>
            /// </summary>
            /// <param name="x_1"><see cref="int"/></param>
            /// <returns><see cref="object"/></returns>
            public object ProductElement(int x_1)
            {
                return IExecuteWithSignature("productElement", "(I)Ljava/lang/Object;", x_1);
            }
            /// <summary>
            /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka_2.13/3.6.2/kafka/admin/ReassignPartitionsCommand.CancelledMoveState.html#currentLogDir--"/>
            /// </summary>
            /// <returns><see cref="Java.Lang.String"/></returns>
            public Java.Lang.String CurrentLogDir()
            {
                return IExecuteWithSignature<Java.Lang.String>("currentLogDir", "()Ljava/lang/String;");
            }
            /// <summary>
            /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka_2.13/3.6.2/kafka/admin/ReassignPartitionsCommand.CancelledMoveState.html#productElementName-int-"/>
            /// </summary>
            /// <param name="x_1"><see cref="int"/></param>
            /// <returns><see cref="Java.Lang.String"/></returns>
            public Java.Lang.String ProductElementName(int x_1)
            {
                return IExecuteWithSignature<Java.Lang.String>("productElementName", "(I)Ljava/lang/String;", x_1);
            }
            /// <summary>
            /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka_2.13/3.6.2/kafka/admin/ReassignPartitionsCommand.CancelledMoveState.html#productPrefix--"/>
            /// </summary>
            /// <returns><see cref="Java.Lang.String"/></returns>
            public Java.Lang.String ProductPrefix()
            {
                return IExecuteWithSignature<Java.Lang.String>("productPrefix", "()Ljava/lang/String;");
            }
            /// <summary>
            /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka_2.13/3.6.2/kafka/admin/ReassignPartitionsCommand.CancelledMoveState.html#targetLogDir--"/>
            /// </summary>
            /// <returns><see cref="Java.Lang.String"/></returns>
            public Java.Lang.String TargetLogDir()
            {
                return IExecuteWithSignature<Java.Lang.String>("targetLogDir", "()Ljava/lang/String;");
            }
            /// <summary>
            /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka_2.13/3.6.2/kafka/admin/ReassignPartitionsCommand.CancelledMoveState.html#copy-java.lang.String-java.lang.String-"/>
            /// </summary>
            /// <param name="currentLogDir"><see cref="Java.Lang.String"/></param>
            /// <param name="targetLogDir"><see cref="Java.Lang.String"/></param>
            /// <returns><see cref="Kafka.Admin.ReassignPartitionsCommand.CancelledMoveState"/></returns>
            public Kafka.Admin.ReassignPartitionsCommand.CancelledMoveState Copy(Java.Lang.String currentLogDir, Java.Lang.String targetLogDir)
            {
                return IExecuteWithSignature<Kafka.Admin.ReassignPartitionsCommand.CancelledMoveState>("copy", "(Ljava/lang/String;Ljava/lang/String;)Lkafka/admin/ReassignPartitionsCommand$CancelledMoveState;", currentLogDir, targetLogDir);
            }

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

        #region CompletedMoveState implementation
        public partial class CompletedMoveState : Java.Io.ISerializable
        {
            #region Constructors
            /// <summary>
            /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka_2.13/3.6.2/kafka/admin/ReassignPartitionsCommand.CompletedMoveState.html#kafka.admin.ReassignPartitionsCommand$CompletedMoveState(java.lang.String)"/>
            /// </summary>
            /// <param name="targetLogDir"><see cref="Java.Lang.String"/></param>
            public CompletedMoveState(Java.Lang.String targetLogDir)
                : base(targetLogDir)
            {
            }

            #endregion

            #region Class/Interface conversion operators
            /// <summary>
            /// Converter from <see cref="Kafka.Admin.ReassignPartitionsCommand.CompletedMoveState"/> to <see cref="Java.Io.Serializable"/>
            /// </summary>
            public static implicit operator Java.Io.Serializable(Kafka.Admin.ReassignPartitionsCommand.CompletedMoveState t) => t.Cast<Java.Io.Serializable>();

            #endregion

            #region Fields

            #endregion

            #region Static methods

            #endregion

            #region Instance methods
            /// <summary>
            /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka_2.13/3.6.2/kafka/admin/ReassignPartitionsCommand.CompletedMoveState.html#canEqual-java.lang.Object-"/>
            /// </summary>
            /// <param name="x_1"><see cref="object"/></param>
            /// <returns><see cref="bool"/></returns>
            public bool CanEqual(object x_1)
            {
                return IExecuteWithSignature<bool>("canEqual", "(Ljava/lang/Object;)Z", x_1);
            }
            /// <summary>
            /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka_2.13/3.6.2/kafka/admin/ReassignPartitionsCommand.CompletedMoveState.html#done--"/>
            /// </summary>
            /// <returns><see cref="bool"/></returns>
            public bool Done()
            {
                return IExecuteWithSignature<bool>("done", "()Z");
            }
            /// <summary>
            /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka_2.13/3.6.2/kafka/admin/ReassignPartitionsCommand.CompletedMoveState.html#productArity--"/>
            /// </summary>
            /// <returns><see cref="int"/></returns>
            public int ProductArity()
            {
                return IExecuteWithSignature<int>("productArity", "()I");
            }
            /// <summary>
            /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka_2.13/3.6.2/kafka/admin/ReassignPartitionsCommand.CompletedMoveState.html#productElement-int-"/>
            /// </summary>
            /// <param name="x_1"><see cref="int"/></param>
            /// <returns><see cref="object"/></returns>
            public object ProductElement(int x_1)
            {
                return IExecuteWithSignature("productElement", "(I)Ljava/lang/Object;", x_1);
            }
            /// <summary>
            /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka_2.13/3.6.2/kafka/admin/ReassignPartitionsCommand.CompletedMoveState.html#productElementName-int-"/>
            /// </summary>
            /// <param name="x_1"><see cref="int"/></param>
            /// <returns><see cref="Java.Lang.String"/></returns>
            public Java.Lang.String ProductElementName(int x_1)
            {
                return IExecuteWithSignature<Java.Lang.String>("productElementName", "(I)Ljava/lang/String;", x_1);
            }
            /// <summary>
            /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka_2.13/3.6.2/kafka/admin/ReassignPartitionsCommand.CompletedMoveState.html#productPrefix--"/>
            /// </summary>
            /// <returns><see cref="Java.Lang.String"/></returns>
            public Java.Lang.String ProductPrefix()
            {
                return IExecuteWithSignature<Java.Lang.String>("productPrefix", "()Ljava/lang/String;");
            }
            /// <summary>
            /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka_2.13/3.6.2/kafka/admin/ReassignPartitionsCommand.CompletedMoveState.html#targetLogDir--"/>
            /// </summary>
            /// <returns><see cref="Java.Lang.String"/></returns>
            public Java.Lang.String TargetLogDir()
            {
                return IExecuteWithSignature<Java.Lang.String>("targetLogDir", "()Ljava/lang/String;");
            }
            /// <summary>
            /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka_2.13/3.6.2/kafka/admin/ReassignPartitionsCommand.CompletedMoveState.html#copy-java.lang.String-"/>
            /// </summary>
            /// <param name="targetLogDir"><see cref="Java.Lang.String"/></param>
            /// <returns><see cref="Kafka.Admin.ReassignPartitionsCommand.CompletedMoveState"/></returns>
            public Kafka.Admin.ReassignPartitionsCommand.CompletedMoveState Copy(Java.Lang.String targetLogDir)
            {
                return IExecuteWithSignature<Kafka.Admin.ReassignPartitionsCommand.CompletedMoveState>("copy", "(Ljava/lang/String;)Lkafka/admin/ReassignPartitionsCommand$CompletedMoveState;", targetLogDir);
            }

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

        #region LogDirMoveState implementation
        public partial class LogDirMoveState
        {
            #region Constructors

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields

            #endregion

            #region Static methods

            #endregion

            #region Instance methods
            /// <summary>
            /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka_2.13/3.6.2/kafka/admin/ReassignPartitionsCommand.LogDirMoveState.html#done--"/>
            /// </summary>
            /// <returns><see cref="bool"/></returns>
            public bool Done()
            {
                return IExecuteWithSignature<bool>("done", "()Z");
            }

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

        #region MissingLogDirMoveState implementation
        public partial class MissingLogDirMoveState : Java.Io.ISerializable
        {
            #region Constructors
            /// <summary>
            /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka_2.13/3.6.2/kafka/admin/ReassignPartitionsCommand.MissingLogDirMoveState.html#kafka.admin.ReassignPartitionsCommand$MissingLogDirMoveState(java.lang.String)"/>
            /// </summary>
            /// <param name="targetLogDir"><see cref="Java.Lang.String"/></param>
            public MissingLogDirMoveState(Java.Lang.String targetLogDir)
                : base(targetLogDir)
            {
            }

            #endregion

            #region Class/Interface conversion operators
            /// <summary>
            /// Converter from <see cref="Kafka.Admin.ReassignPartitionsCommand.MissingLogDirMoveState"/> to <see cref="Java.Io.Serializable"/>
            /// </summary>
            public static implicit operator Java.Io.Serializable(Kafka.Admin.ReassignPartitionsCommand.MissingLogDirMoveState t) => t.Cast<Java.Io.Serializable>();

            #endregion

            #region Fields

            #endregion

            #region Static methods

            #endregion

            #region Instance methods
            /// <summary>
            /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka_2.13/3.6.2/kafka/admin/ReassignPartitionsCommand.MissingLogDirMoveState.html#canEqual-java.lang.Object-"/>
            /// </summary>
            /// <param name="x_1"><see cref="object"/></param>
            /// <returns><see cref="bool"/></returns>
            public bool CanEqual(object x_1)
            {
                return IExecuteWithSignature<bool>("canEqual", "(Ljava/lang/Object;)Z", x_1);
            }
            /// <summary>
            /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka_2.13/3.6.2/kafka/admin/ReassignPartitionsCommand.MissingLogDirMoveState.html#done--"/>
            /// </summary>
            /// <returns><see cref="bool"/></returns>
            public bool Done()
            {
                return IExecuteWithSignature<bool>("done", "()Z");
            }
            /// <summary>
            /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka_2.13/3.6.2/kafka/admin/ReassignPartitionsCommand.MissingLogDirMoveState.html#productArity--"/>
            /// </summary>
            /// <returns><see cref="int"/></returns>
            public int ProductArity()
            {
                return IExecuteWithSignature<int>("productArity", "()I");
            }
            /// <summary>
            /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka_2.13/3.6.2/kafka/admin/ReassignPartitionsCommand.MissingLogDirMoveState.html#productElement-int-"/>
            /// </summary>
            /// <param name="x_1"><see cref="int"/></param>
            /// <returns><see cref="object"/></returns>
            public object ProductElement(int x_1)
            {
                return IExecuteWithSignature("productElement", "(I)Ljava/lang/Object;", x_1);
            }
            /// <summary>
            /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka_2.13/3.6.2/kafka/admin/ReassignPartitionsCommand.MissingLogDirMoveState.html#productElementName-int-"/>
            /// </summary>
            /// <param name="x_1"><see cref="int"/></param>
            /// <returns><see cref="Java.Lang.String"/></returns>
            public Java.Lang.String ProductElementName(int x_1)
            {
                return IExecuteWithSignature<Java.Lang.String>("productElementName", "(I)Ljava/lang/String;", x_1);
            }
            /// <summary>
            /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka_2.13/3.6.2/kafka/admin/ReassignPartitionsCommand.MissingLogDirMoveState.html#productPrefix--"/>
            /// </summary>
            /// <returns><see cref="Java.Lang.String"/></returns>
            public Java.Lang.String ProductPrefix()
            {
                return IExecuteWithSignature<Java.Lang.String>("productPrefix", "()Ljava/lang/String;");
            }
            /// <summary>
            /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka_2.13/3.6.2/kafka/admin/ReassignPartitionsCommand.MissingLogDirMoveState.html#targetLogDir--"/>
            /// </summary>
            /// <returns><see cref="Java.Lang.String"/></returns>
            public Java.Lang.String TargetLogDir()
            {
                return IExecuteWithSignature<Java.Lang.String>("targetLogDir", "()Ljava/lang/String;");
            }
            /// <summary>
            /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka_2.13/3.6.2/kafka/admin/ReassignPartitionsCommand.MissingLogDirMoveState.html#copy-java.lang.String-"/>
            /// </summary>
            /// <param name="targetLogDir"><see cref="Java.Lang.String"/></param>
            /// <returns><see cref="Kafka.Admin.ReassignPartitionsCommand.MissingLogDirMoveState"/></returns>
            public Kafka.Admin.ReassignPartitionsCommand.MissingLogDirMoveState Copy(Java.Lang.String targetLogDir)
            {
                return IExecuteWithSignature<Kafka.Admin.ReassignPartitionsCommand.MissingLogDirMoveState>("copy", "(Ljava/lang/String;)Lkafka/admin/ReassignPartitionsCommand$MissingLogDirMoveState;", targetLogDir);
            }

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

        #region MissingReplicaMoveState implementation
        public partial class MissingReplicaMoveState : Java.Io.ISerializable
        {
            #region Constructors
            /// <summary>
            /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka_2.13/3.6.2/kafka/admin/ReassignPartitionsCommand.MissingReplicaMoveState.html#kafka.admin.ReassignPartitionsCommand$MissingReplicaMoveState(java.lang.String)"/>
            /// </summary>
            /// <param name="targetLogDir"><see cref="Java.Lang.String"/></param>
            public MissingReplicaMoveState(Java.Lang.String targetLogDir)
                : base(targetLogDir)
            {
            }

            #endregion

            #region Class/Interface conversion operators
            /// <summary>
            /// Converter from <see cref="Kafka.Admin.ReassignPartitionsCommand.MissingReplicaMoveState"/> to <see cref="Java.Io.Serializable"/>
            /// </summary>
            public static implicit operator Java.Io.Serializable(Kafka.Admin.ReassignPartitionsCommand.MissingReplicaMoveState t) => t.Cast<Java.Io.Serializable>();

            #endregion

            #region Fields

            #endregion

            #region Static methods

            #endregion

            #region Instance methods
            /// <summary>
            /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka_2.13/3.6.2/kafka/admin/ReassignPartitionsCommand.MissingReplicaMoveState.html#canEqual-java.lang.Object-"/>
            /// </summary>
            /// <param name="x_1"><see cref="object"/></param>
            /// <returns><see cref="bool"/></returns>
            public bool CanEqual(object x_1)
            {
                return IExecuteWithSignature<bool>("canEqual", "(Ljava/lang/Object;)Z", x_1);
            }
            /// <summary>
            /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka_2.13/3.6.2/kafka/admin/ReassignPartitionsCommand.MissingReplicaMoveState.html#done--"/>
            /// </summary>
            /// <returns><see cref="bool"/></returns>
            public bool Done()
            {
                return IExecuteWithSignature<bool>("done", "()Z");
            }
            /// <summary>
            /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka_2.13/3.6.2/kafka/admin/ReassignPartitionsCommand.MissingReplicaMoveState.html#productArity--"/>
            /// </summary>
            /// <returns><see cref="int"/></returns>
            public int ProductArity()
            {
                return IExecuteWithSignature<int>("productArity", "()I");
            }
            /// <summary>
            /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka_2.13/3.6.2/kafka/admin/ReassignPartitionsCommand.MissingReplicaMoveState.html#productElement-int-"/>
            /// </summary>
            /// <param name="x_1"><see cref="int"/></param>
            /// <returns><see cref="object"/></returns>
            public object ProductElement(int x_1)
            {
                return IExecuteWithSignature("productElement", "(I)Ljava/lang/Object;", x_1);
            }
            /// <summary>
            /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka_2.13/3.6.2/kafka/admin/ReassignPartitionsCommand.MissingReplicaMoveState.html#productElementName-int-"/>
            /// </summary>
            /// <param name="x_1"><see cref="int"/></param>
            /// <returns><see cref="Java.Lang.String"/></returns>
            public Java.Lang.String ProductElementName(int x_1)
            {
                return IExecuteWithSignature<Java.Lang.String>("productElementName", "(I)Ljava/lang/String;", x_1);
            }
            /// <summary>
            /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka_2.13/3.6.2/kafka/admin/ReassignPartitionsCommand.MissingReplicaMoveState.html#productPrefix--"/>
            /// </summary>
            /// <returns><see cref="Java.Lang.String"/></returns>
            public Java.Lang.String ProductPrefix()
            {
                return IExecuteWithSignature<Java.Lang.String>("productPrefix", "()Ljava/lang/String;");
            }
            /// <summary>
            /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka_2.13/3.6.2/kafka/admin/ReassignPartitionsCommand.MissingReplicaMoveState.html#targetLogDir--"/>
            /// </summary>
            /// <returns><see cref="Java.Lang.String"/></returns>
            public Java.Lang.String TargetLogDir()
            {
                return IExecuteWithSignature<Java.Lang.String>("targetLogDir", "()Ljava/lang/String;");
            }
            /// <summary>
            /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka_2.13/3.6.2/kafka/admin/ReassignPartitionsCommand.MissingReplicaMoveState.html#copy-java.lang.String-"/>
            /// </summary>
            /// <param name="targetLogDir"><see cref="Java.Lang.String"/></param>
            /// <returns><see cref="Kafka.Admin.ReassignPartitionsCommand.MissingReplicaMoveState"/></returns>
            public Kafka.Admin.ReassignPartitionsCommand.MissingReplicaMoveState Copy(Java.Lang.String targetLogDir)
            {
                return IExecuteWithSignature<Kafka.Admin.ReassignPartitionsCommand.MissingReplicaMoveState>("copy", "(Ljava/lang/String;)Lkafka/admin/ReassignPartitionsCommand$MissingReplicaMoveState;", targetLogDir);
            }

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

        #region PartitionMove implementation
        public partial class PartitionMove : Java.Io.ISerializable
        {
            #region Constructors

            #endregion

            #region Class/Interface conversion operators
            /// <summary>
            /// Converter from <see cref="Kafka.Admin.ReassignPartitionsCommand.PartitionMove"/> to <see cref="Java.Io.Serializable"/>
            /// </summary>
            public static implicit operator Java.Io.Serializable(Kafka.Admin.ReassignPartitionsCommand.PartitionMove t) => t.Cast<Java.Io.Serializable>();

            #endregion

            #region Fields

            #endregion

            #region Static methods

            #endregion

            #region Instance methods
            /// <summary>
            /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka_2.13/3.6.2/kafka/admin/ReassignPartitionsCommand.PartitionMove.html#canEqual-java.lang.Object-"/>
            /// </summary>
            /// <param name="x_1"><see cref="object"/></param>
            /// <returns><see cref="bool"/></returns>
            public bool CanEqual(object x_1)
            {
                return IExecuteWithSignature<bool>("canEqual", "(Ljava/lang/Object;)Z", x_1);
            }
            /// <summary>
            /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka_2.13/3.6.2/kafka/admin/ReassignPartitionsCommand.PartitionMove.html#productArity--"/>
            /// </summary>
            /// <returns><see cref="int"/></returns>
            public int ProductArity()
            {
                return IExecuteWithSignature<int>("productArity", "()I");
            }
            /// <summary>
            /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka_2.13/3.6.2/kafka/admin/ReassignPartitionsCommand.PartitionMove.html#productElement-int-"/>
            /// </summary>
            /// <param name="x_1"><see cref="int"/></param>
            /// <returns><see cref="object"/></returns>
            public object ProductElement(int x_1)
            {
                return IExecuteWithSignature("productElement", "(I)Ljava/lang/Object;", x_1);
            }
            /// <summary>
            /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka_2.13/3.6.2/kafka/admin/ReassignPartitionsCommand.PartitionMove.html#productElementName-int-"/>
            /// </summary>
            /// <param name="x_1"><see cref="int"/></param>
            /// <returns><see cref="Java.Lang.String"/></returns>
            public Java.Lang.String ProductElementName(int x_1)
            {
                return IExecuteWithSignature<Java.Lang.String>("productElementName", "(I)Ljava/lang/String;", x_1);
            }
            /// <summary>
            /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka_2.13/3.6.2/kafka/admin/ReassignPartitionsCommand.PartitionMove.html#productPrefix--"/>
            /// </summary>
            /// <returns><see cref="Java.Lang.String"/></returns>
            public Java.Lang.String ProductPrefix()
            {
                return IExecuteWithSignature<Java.Lang.String>("productPrefix", "()Ljava/lang/String;");
            }

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

        #region PartitionReassignmentState implementation
        public partial class PartitionReassignmentState : Java.Io.ISerializable
        {
            #region Constructors

            #endregion

            #region Class/Interface conversion operators
            /// <summary>
            /// Converter from <see cref="Kafka.Admin.ReassignPartitionsCommand.PartitionReassignmentState"/> to <see cref="Java.Io.Serializable"/>
            /// </summary>
            public static implicit operator Java.Io.Serializable(Kafka.Admin.ReassignPartitionsCommand.PartitionReassignmentState t) => t.Cast<Java.Io.Serializable>();

            #endregion

            #region Fields

            #endregion

            #region Static methods

            #endregion

            #region Instance methods
            /// <summary>
            /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka_2.13/3.6.2/kafka/admin/ReassignPartitionsCommand.PartitionReassignmentState.html#canEqual-java.lang.Object-"/>
            /// </summary>
            /// <param name="x_1"><see cref="object"/></param>
            /// <returns><see cref="bool"/></returns>
            public bool CanEqual(object x_1)
            {
                return IExecuteWithSignature<bool>("canEqual", "(Ljava/lang/Object;)Z", x_1);
            }
            /// <summary>
            /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka_2.13/3.6.2/kafka/admin/ReassignPartitionsCommand.PartitionReassignmentState.html#done--"/>
            /// </summary>
            /// <returns><see cref="bool"/></returns>
            public bool Done()
            {
                return IExecuteWithSignature<bool>("done", "()Z");
            }
            /// <summary>
            /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka_2.13/3.6.2/kafka/admin/ReassignPartitionsCommand.PartitionReassignmentState.html#productArity--"/>
            /// </summary>
            /// <returns><see cref="int"/></returns>
            public int ProductArity()
            {
                return IExecuteWithSignature<int>("productArity", "()I");
            }
            /// <summary>
            /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka_2.13/3.6.2/kafka/admin/ReassignPartitionsCommand.PartitionReassignmentState.html#productElement-int-"/>
            /// </summary>
            /// <param name="x_1"><see cref="int"/></param>
            /// <returns><see cref="object"/></returns>
            public object ProductElement(int x_1)
            {
                return IExecuteWithSignature("productElement", "(I)Ljava/lang/Object;", x_1);
            }
            /// <summary>
            /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka_2.13/3.6.2/kafka/admin/ReassignPartitionsCommand.PartitionReassignmentState.html#productElementName-int-"/>
            /// </summary>
            /// <param name="x_1"><see cref="int"/></param>
            /// <returns><see cref="Java.Lang.String"/></returns>
            public Java.Lang.String ProductElementName(int x_1)
            {
                return IExecuteWithSignature<Java.Lang.String>("productElementName", "(I)Ljava/lang/String;", x_1);
            }
            /// <summary>
            /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka_2.13/3.6.2/kafka/admin/ReassignPartitionsCommand.PartitionReassignmentState.html#productPrefix--"/>
            /// </summary>
            /// <returns><see cref="Java.Lang.String"/></returns>
            public Java.Lang.String ProductPrefix()
            {
                return IExecuteWithSignature<Java.Lang.String>("productPrefix", "()Ljava/lang/String;");
            }

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

        #region ReassignPartitionsCommandOptions implementation
        public partial class ReassignPartitionsCommandOptions
        {
            #region Constructors
            /// <summary>
            /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka_2.13/3.6.2/kafka/admin/ReassignPartitionsCommand.ReassignPartitionsCommandOptions.html#kafka.admin.ReassignPartitionsCommand$ReassignPartitionsCommandOptions(java.lang.String[])"/>
            /// </summary>
            /// <param name="args"><see cref="Java.Lang.String"/></param>
            public ReassignPartitionsCommandOptions(Java.Lang.String[] args)
                : base(args)
            {
            }

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields

            #endregion

            #region Static methods

            #endregion

            #region Instance methods

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

        #region TerseReassignmentFailureException implementation
        public partial class TerseReassignmentFailureException
        {
            #region Constructors

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields

            #endregion

            #region Static methods

            #endregion

            #region Instance methods

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

        #region VerifyAssignmentResult implementation
        public partial class VerifyAssignmentResult : Java.Io.ISerializable
        {
            #region Constructors

            #endregion

            #region Class/Interface conversion operators
            /// <summary>
            /// Converter from <see cref="Kafka.Admin.ReassignPartitionsCommand.VerifyAssignmentResult"/> to <see cref="Java.Io.Serializable"/>
            /// </summary>
            public static implicit operator Java.Io.Serializable(Kafka.Admin.ReassignPartitionsCommand.VerifyAssignmentResult t) => t.Cast<Java.Io.Serializable>();

            #endregion

            #region Fields

            #endregion

            #region Static methods

            #endregion

            #region Instance methods
            /// <summary>
            /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka_2.13/3.6.2/kafka/admin/ReassignPartitionsCommand.VerifyAssignmentResult.html#canEqual-java.lang.Object-"/>
            /// </summary>
            /// <param name="x_1"><see cref="object"/></param>
            /// <returns><see cref="bool"/></returns>
            public bool CanEqual(object x_1)
            {
                return IExecuteWithSignature<bool>("canEqual", "(Ljava/lang/Object;)Z", x_1);
            }
            /// <summary>
            /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka_2.13/3.6.2/kafka/admin/ReassignPartitionsCommand.VerifyAssignmentResult.html#movesOngoing--"/>
            /// </summary>
            /// <returns><see cref="bool"/></returns>
            public bool MovesOngoing()
            {
                return IExecuteWithSignature<bool>("movesOngoing", "()Z");
            }
            /// <summary>
            /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka_2.13/3.6.2/kafka/admin/ReassignPartitionsCommand.VerifyAssignmentResult.html#partsOngoing--"/>
            /// </summary>
            /// <returns><see cref="bool"/></returns>
            public bool PartsOngoing()
            {
                return IExecuteWithSignature<bool>("partsOngoing", "()Z");
            }
            /// <summary>
            /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka_2.13/3.6.2/kafka/admin/ReassignPartitionsCommand.VerifyAssignmentResult.html#productArity--"/>
            /// </summary>
            /// <returns><see cref="int"/></returns>
            public int ProductArity()
            {
                return IExecuteWithSignature<int>("productArity", "()I");
            }
            /// <summary>
            /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka_2.13/3.6.2/kafka/admin/ReassignPartitionsCommand.VerifyAssignmentResult.html#productElement-int-"/>
            /// </summary>
            /// <param name="x_1"><see cref="int"/></param>
            /// <returns><see cref="object"/></returns>
            public object ProductElement(int x_1)
            {
                return IExecuteWithSignature("productElement", "(I)Ljava/lang/Object;", x_1);
            }
            /// <summary>
            /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka_2.13/3.6.2/kafka/admin/ReassignPartitionsCommand.VerifyAssignmentResult.html#productElementName-int-"/>
            /// </summary>
            /// <param name="x_1"><see cref="int"/></param>
            /// <returns><see cref="Java.Lang.String"/></returns>
            public Java.Lang.String ProductElementName(int x_1)
            {
                return IExecuteWithSignature<Java.Lang.String>("productElementName", "(I)Ljava/lang/String;", x_1);
            }
            /// <summary>
            /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka_2.13/3.6.2/kafka/admin/ReassignPartitionsCommand.VerifyAssignmentResult.html#productPrefix--"/>
            /// </summary>
            /// <returns><see cref="Java.Lang.String"/></returns>
            public Java.Lang.String ProductPrefix()
            {
                return IExecuteWithSignature<Java.Lang.String>("productPrefix", "()Ljava/lang/String;");
            }

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

    
        #endregion

        // TODO: complete the class
    }
    #endregion
}