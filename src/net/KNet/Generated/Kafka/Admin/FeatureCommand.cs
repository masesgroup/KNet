/*
*  Copyright 2023 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 1.5.5.0)
*  using kafka_2.13-3.4.0.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Kafka.Admin
{
    #region FeatureCommand
    public partial class FeatureCommand
    {
        #region Constructors

        #endregion

        #region Class/Interface conversion operators

        #endregion

        #region Fields

        #endregion

        #region Static methods
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka_2.13/3.4.0/kafka/admin/FeatureCommand.html#mainNoExit(java.lang.String[],java.io.PrintStream)"/>
        /// </summary>
        /// <param name="args"><see cref="string"/></param>
        /// <param name="out"><see cref="Java.Io.PrintStream"/></param>
        /// <returns><see cref="int"/></returns>
        public static int MainNoExit(string[] args, Java.Io.PrintStream _out)
        {
            return SExecute<int>(LocalBridgeClazz, "mainNoExit", args, _out);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka_2.13/3.4.0/kafka/admin/FeatureCommand.html#levelToString(java.lang.String,short)"/>
        /// </summary>
        /// <param name="feature"><see cref="string"/></param>
        /// <param name="level"><see cref="short"/></param>
        /// <returns><see cref="string"/></returns>
        public static string LevelToString(string feature, short level)
        {
            return SExecute<string>(LocalBridgeClazz, "levelToString", feature, level);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka_2.13/3.4.0/kafka/admin/FeatureCommand.html#handleDescribe(java.io.PrintStream,org.apache.kafka.clients.admin.Admin)"/>
        /// </summary>
        /// <param name="out"><see cref="Java.Io.PrintStream"/></param>
        /// <param name="admin"><see cref="Org.Apache.Kafka.Clients.Admin.Admin"/></param>
        public static void HandleDescribe(Java.Io.PrintStream _out, Org.Apache.Kafka.Clients.Admin.Admin admin)
        {
            SExecute(LocalBridgeClazz, "handleDescribe", _out, admin);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka_2.13/3.4.0/kafka/admin/FeatureCommand.html#main(java.lang.String[])"/>
        /// </summary>
        /// <param name="args"><see cref="string"/></param>
        public static void Main(string[] args)
        {
            SExecute(LocalBridgeClazz, "main", new object[] { args });
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/doc/org.apache.kafka/kafka_2.13/3.4.0/kafka/admin/FeatureCommand.html#update(java.lang.String,java.io.PrintStream,org.apache.kafka.clients.admin.Admin,java.util.HashMap,boolean)"/>
        /// </summary>
        /// <param name="op"><see cref="string"/></param>
        /// <param name="out"><see cref="Java.Io.PrintStream"/></param>
        /// <param name="admin"><see cref="Org.Apache.Kafka.Clients.Admin.Admin"/></param>
        /// <param name="updates"><see cref="Java.Util.HashMap"/></param>
        /// <param name="dryRun"><see cref="bool"/></param>
        public static void Update(string op, Java.Io.PrintStream _out, Org.Apache.Kafka.Clients.Admin.Admin admin, Java.Util.HashMap<string, Org.Apache.Kafka.Clients.Admin.FeatureUpdate> updates, bool dryRun)
        {
            SExecute(LocalBridgeClazz, "update", op, _out, admin, updates, dryRun);
        }

        #endregion

        #region Instance methods

        #endregion

        #region Nested classes

        #endregion

        // TODO: complete the class
    }
    #endregion
}