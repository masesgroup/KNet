/*
*  Copyright 2023 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 1.5.5.0)
*  using kafka_2.13-3.4.0.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Kafka.Zk
{
    #region ZkAclStore
    public partial class ZkAclStore
    {
        #region Constructors

        #endregion

        #region Class/Interface conversion operators

        #endregion

        #region Fields

        #endregion

        #region Static methods
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/zk/ZkAclStore.html#apply(org.apache.kafka.common.resource.PatternType)"/>
        /// </summary>
        /// <param name="patternType"><see cref="Org.Apache.Kafka.Common.Resource.PatternType"/></param>
        /// <returns><see cref="Kafka.Zk.ZkAclStore"/></returns>
        public static Kafka.Zk.ZkAclStore Apply(Org.Apache.Kafka.Common.Resource.PatternType patternType)
        {
            return SExecute<Kafka.Zk.ZkAclStore>(LocalBridgeClazz, "apply", patternType);
        }

        #endregion

        #region Instance methods
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/zk/ZkAclStore.html#aclPath()"/> 
        /// </summary>
        public string AclPath
        {
            get { return IExecute<string>("aclPath"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/zk/ZkAclStore.html#changeStore()"/> 
        /// </summary>
        public Kafka.Zk.ZkAclChangeStore ChangeStore
        {
            get { return IExecute<Kafka.Zk.ZkAclChangeStore>("changeStore"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/zk/ZkAclStore.html#patternType()"/> 
        /// </summary>
        public Org.Apache.Kafka.Common.Resource.PatternType PatternType
        {
            get { return IExecute<Org.Apache.Kafka.Common.Resource.PatternType>("patternType"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/zk/ZkAclStore.html#path(org.apache.kafka.common.resource.ResourceType,java.lang.String)"/>
        /// </summary>
        /// <param name="resourceType"><see cref="Org.Apache.Kafka.Common.Resource.ResourceType"/></param>
        /// <param name="resourceName"><see cref="string"/></param>
        /// <returns><see cref="string"/></returns>
        public string Path(Org.Apache.Kafka.Common.Resource.ResourceType resourceType, string resourceName)
        {
            return IExecute<string>("path", resourceType, resourceName);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/zk/ZkAclStore.html#path(org.apache.kafka.common.resource.ResourceType)"/>
        /// </summary>
        /// <param name="resourceType"><see cref="Org.Apache.Kafka.Common.Resource.ResourceType"/></param>
        /// <returns><see cref="string"/></returns>
        public string Path(Org.Apache.Kafka.Common.Resource.ResourceType resourceType)
        {
            return IExecute<string>("path", resourceType);
        }

        #endregion

        #region Nested classes

        #endregion

        // TODO: complete the class
    }
    #endregion
}