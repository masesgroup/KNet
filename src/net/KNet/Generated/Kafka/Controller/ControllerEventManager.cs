/*
*  Copyright 2023 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 1.5.5.0)
*  using kafka_2.13-3.4.0.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Kafka.Controller
{
    #region ControllerEventManager
    public partial class ControllerEventManager
    {
        #region Constructors

        #endregion

        #region Class/Interface conversion operators
        /// <summary>
        /// Converter from <see cref="Kafka.Controller.ControllerEventManager"/> to <see cref="Kafka.Metrics.KafkaMetricsGroup"/>
        /// </summary>
        public static implicit operator Kafka.Metrics.KafkaMetricsGroup(Kafka.Controller.ControllerEventManager t) => t.Cast<Kafka.Metrics.KafkaMetricsGroup>();

        #endregion

        #region Fields
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/controller/ControllerEventManager.html#kafka$controller$ControllerEventManager$$controllerId"/>
        /// </summary>
        public int kafka$controller$ControllerEventManager$$controllerId { get { return IGetField<int>("kafka$controller$ControllerEventManager$$controllerId"); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/controller/ControllerEventManager.html#kafka$controller$ControllerEventManager$$processor"/>
        /// </summary>
        public Kafka.Controller.ControllerEventProcessor kafka$controller$ControllerEventManager$$processor { get { return IGetField<Kafka.Controller.ControllerEventProcessor>("kafka$controller$ControllerEventManager$$processor"); } }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/controller/ControllerEventManager.html#kafka$controller$ControllerEventManager$$time"/>
        /// </summary>
        public Org.Apache.Kafka.Common.Utils.Time kafka$controller$ControllerEventManager$$time { get { return IGetField<Org.Apache.Kafka.Common.Utils.Time>("kafka$controller$ControllerEventManager$$time"); } }

        #endregion

        #region Static methods
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/controller/ControllerEventManager.html#ControllerEventThreadName()"/> 
        /// </summary>
        public static string ControllerEventThreadName
        {
            get { return SExecute<string>(LocalBridgeClazz, "ControllerEventThreadName"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/controller/ControllerEventManager.html#EventQueueSizeMetricName()"/> 
        /// </summary>
        public static string EventQueueSizeMetricName
        {
            get { return SExecute<string>(LocalBridgeClazz, "EventQueueSizeMetricName"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/controller/ControllerEventManager.html#EventQueueTimeMetricName()"/> 
        /// </summary>
        public static string EventQueueTimeMetricName
        {
            get { return SExecute<string>(LocalBridgeClazz, "EventQueueTimeMetricName"); }
        }

        #endregion

        #region Instance methods
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/controller/ControllerEventManager.html#isDebugEnabled()"/> 
        /// </summary>
        public bool IsDebugEnabled
        {
            get { return IExecute<bool>("isDebugEnabled"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/controller/ControllerEventManager.html#isEmpty()"/> 
        /// </summary>
        public bool IsEmpty
        {
            get { return IExecute<bool>("isEmpty"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/controller/ControllerEventManager.html#isTraceEnabled()"/> 
        /// </summary>
        public bool IsTraceEnabled
        {
            get { return IExecute<bool>("isTraceEnabled"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/controller/ControllerEventManager.html#logger()"/> 
        /// </summary>
        public Com.Typesafe.Scalalogging.Logger Logger
        {
            get { return IExecute<Com.Typesafe.Scalalogging.Logger>("logger"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/controller/ControllerEventManager.html#loggerName()"/> 
        /// </summary>
        public string LoggerName
        {
            get { return IExecute<string>("loggerName"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/controller/ControllerEventManager.html#logIdent()"/> 
        /// </summary>
        public string LogIdent
        {
            get { return IExecute<string>("logIdent"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/controller/ControllerEventManager.html#state()"/> 
        /// </summary>
        public Kafka.Controller.ControllerState State
        {
            get { return IExecute<Kafka.Controller.ControllerState>("state"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/controller/ControllerEventManager.html#thread()"/> 
        /// </summary>
        public Kafka.Controller.ControllerEventManager.ControllerEventThread Thread
        {
            get { return IExecute<Kafka.Controller.ControllerEventManager.ControllerEventThread>("thread"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/controller/ControllerEventManager.html#newMeter(com.yammer.metrics.core.MetricName,java.lang.String,java.util.concurrent.TimeUnit)"/>
        /// </summary>
        /// <param name="metricName"><see cref="Com.Yammer.Metrics.Core.MetricName"/></param>
        /// <param name="eventType"><see cref="string"/></param>
        /// <param name="timeUnit"><see cref="Java.Util.Concurrent.TimeUnit"/></param>
        /// <returns><see cref="Com.Yammer.Metrics.Core.Meter"/></returns>
        public Com.Yammer.Metrics.Core.Meter NewMeter(Com.Yammer.Metrics.Core.MetricName metricName, string eventType, Java.Util.Concurrent.TimeUnit timeUnit)
        {
            return IExecute<Com.Yammer.Metrics.Core.Meter>("newMeter", metricName, eventType, timeUnit);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/controller/ControllerEventManager.html#msgWithLogIdent(java.lang.String)"/>
        /// </summary>
        /// <param name="msg"><see cref="string"/></param>
        /// <returns><see cref="string"/></returns>
        public string MsgWithLogIdent(string msg)
        {
            return IExecute<string>("msgWithLogIdent", msg);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/controller/ControllerEventManager.html#clearAndPut(kafka.controller.ControllerEvent)"/>
        /// </summary>
        /// <param name="event"><see cref="Kafka.Controller.ControllerEvent"/></param>
        /// <returns><see cref="Kafka.Controller.QueuedEvent"/></returns>
        public Kafka.Controller.QueuedEvent ClearAndPut(Kafka.Controller.ControllerEvent event)
        {
            return IExecute<Kafka.Controller.QueuedEvent>("clearAndPut", event);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/controller/ControllerEventManager.html#put(kafka.controller.ControllerEvent)"/>
        /// </summary>
        /// <param name="event"><see cref="Kafka.Controller.ControllerEvent"/></param>
        /// <returns><see cref="Kafka.Controller.QueuedEvent"/></returns>
        public Kafka.Controller.QueuedEvent Put(Kafka.Controller.ControllerEvent event)
        {
            return IExecute<Kafka.Controller.QueuedEvent>("put", event);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/controller/ControllerEventManager.html#close()"/>
        /// </summary>
        public void Close()
        {
            IExecute("close");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/controller/ControllerEventManager.html#start()"/>
        /// </summary>
        public void Start()
        {
            IExecute("start");
        }

        #endregion

        #region Nested classes
        #region ControllerEventThread
        public partial class ControllerEventThread
        {
            #region Constructors
            /// <summary>
            /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/controller/ControllerEventManager.ControllerEventThread.html#%3Cinit%3E(kafka.controller.ControllerEventManager,java.lang.String)"/>
            /// </summary>
            /// <param name="$outer"><see cref="Kafka.Controller.ControllerEventManager"/></param>
            /// <param name="name"><see cref="string"/></param>
            public ControllerEventThread(Kafka.Controller.ControllerEventManager _outer, string name)
                : base(_outer, name)
            {
            }

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields
            /// <summary>
            /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/controller/ControllerEventManager.ControllerEventThread.html#$outer"/>
            /// </summary>
            public Kafka.Controller.ControllerEventManager $outer { get { return IGetField<Kafka.Controller.ControllerEventManager>("$outer"); } }

            #endregion

            #region Static methods

            #endregion

            #region Instance methods

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

    
        #endregion

        // TODO: complete the class
    }
    #endregion
}