/*
*  Copyright 2023 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 1.5.5.0)
*  using kafka_2.13-3.4.0.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Kafka.Utils.Timer
{
    #region TimerTaskList
    public partial class TimerTaskList
    {
        #region Constructors
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/utils/timer/TimerTaskList.html#%3Cinit%3E(java.util.concurrent.atomic.AtomicInteger)"/>
        /// </summary>
        /// <param name="taskCounter"><see cref="Java.Util.Concurrent.Atomic.AtomicInteger"/></param>
        public TimerTaskList(Java.Util.Concurrent.Atomic.AtomicInteger taskCounter)
            : base(taskCounter)
        {
        }

        #endregion

        #region Class/Interface conversion operators
        /// <summary>
        /// Converter from <see cref="Kafka.Utils.Timer.TimerTaskList"/> to <see cref="Java.Util.Concurrent.Delayed"/>
        /// </summary>
        public static implicit operator Java.Util.Concurrent.Delayed(Kafka.Utils.Timer.TimerTaskList t) => t.Cast<Java.Util.Concurrent.Delayed>();

        #endregion

        #region Fields

        #endregion

        #region Static methods

        #endregion

        #region Instance methods
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/utils/timer/TimerTaskList.html#getExpiration()"/> 
        /// </summary>
        public long Expiration
        {
            get { return IExecute<long>("getExpiration"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/utils/timer/TimerTaskList.html#setExpiration(long)"/>
        /// </summary>
        /// <param name="expirationMs"><see cref="long"/></param>
        /// <returns><see cref="bool"/></returns>
        public bool SetExpiration(long expirationMs)
        {
            return IExecute<bool>("setExpiration", expirationMs);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/utils/timer/TimerTaskList.html#compareTo(java.lang.Object)"/>
        /// </summary>
        /// <param name="x$1"><see cref="object"/></param>
        /// <returns><see cref="int"/></returns>
        public int CompareTo(object x_1)
        {
            return IExecute<int>("compareTo", x_1);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/utils/timer/TimerTaskList.html#compareTo(java.util.concurrent.Delayed)"/>
        /// </summary>
        /// <param name="d"><see cref="Java.Util.Concurrent.Delayed"/></param>
        /// <returns><see cref="int"/></returns>
        public int CompareTo(Java.Util.Concurrent.Delayed d)
        {
            return IExecute<int>("compareTo", d);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/utils/timer/TimerTaskList.html#getDelay(java.util.concurrent.TimeUnit)"/>
        /// </summary>
        /// <param name="unit"><see cref="Java.Util.Concurrent.TimeUnit"/></param>
        /// <returns><see cref="long"/></returns>
        public long GetDelay(Java.Util.Concurrent.TimeUnit unit)
        {
            return IExecute<long>("getDelay", unit);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/utils/timer/TimerTaskList.html#add(kafka.utils.timer.TimerTaskEntry)"/>
        /// </summary>
        /// <param name="timerTaskEntry"><see cref="Kafka.Utils.Timer.TimerTaskEntry"/></param>
        public void Add(Kafka.Utils.Timer.TimerTaskEntry timerTaskEntry)
        {
            IExecute("add", timerTaskEntry);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/utils/timer/TimerTaskList.html#remove(kafka.utils.timer.TimerTaskEntry)"/>
        /// </summary>
        /// <param name="timerTaskEntry"><see cref="Kafka.Utils.Timer.TimerTaskEntry"/></param>
        public void Remove(Kafka.Utils.Timer.TimerTaskEntry timerTaskEntry)
        {
            IExecute("remove", timerTaskEntry);
        }

        #endregion

        #region Nested classes

        #endregion

        // TODO: complete the class
    }
    #endregion
}