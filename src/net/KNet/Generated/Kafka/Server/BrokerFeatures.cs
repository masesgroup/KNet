/*
*  Copyright 2023 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 1.5.5.0)
*  using kafka_2.13-3.4.0.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Kafka.Server
{
    #region BrokerFeatures
    public partial class BrokerFeatures
    {
        #region Constructors
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/server/BrokerFeatures.html#%3Cinit%3E(org.apache.kafka.common.feature.Features)"/>
        /// </summary>
        /// <param name="supportedFeatures"><see cref="Org.Apache.Kafka.Common.Feature.Features"/></param>
        public BrokerFeatures(Org.Apache.Kafka.Common.Feature.Features supportedFeatures)
            : base(supportedFeatures)
        {
        }

        #endregion

        #region Class/Interface conversion operators

        #endregion

        #region Fields

        #endregion

        #region Static methods
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/server/BrokerFeatures.html#createDefault()"/> 
        /// </summary>
        public static Kafka.Server.BrokerFeatures CreateDefault
        {
            get { return SExecute<Kafka.Server.BrokerFeatures>(LocalBridgeClazz, "createDefault"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/server/BrokerFeatures.html#createEmpty()"/> 
        /// </summary>
        public static Kafka.Server.BrokerFeatures CreateEmpty
        {
            get { return SExecute<Kafka.Server.BrokerFeatures>(LocalBridgeClazz, "createEmpty"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/server/BrokerFeatures.html#defaultSupportedFeatures()"/> 
        /// </summary>
        public static Org.Apache.Kafka.Common.Feature.Features<Org.Apache.Kafka.Common.Feature.SupportedVersionRange> DefaultSupportedFeatures
        {
            get { return SExecute<Org.Apache.Kafka.Common.Feature.Features<Org.Apache.Kafka.Common.Feature.SupportedVersionRange>>(LocalBridgeClazz, "defaultSupportedFeatures"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/server/BrokerFeatures.html#isDebugEnabled()"/> 
        /// </summary>
        public static bool IsDebugEnabled
        {
            get { return SExecute<bool>(LocalBridgeClazz, "isDebugEnabled"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/server/BrokerFeatures.html#isTraceEnabled()"/> 
        /// </summary>
        public static bool IsTraceEnabled
        {
            get { return SExecute<bool>(LocalBridgeClazz, "isTraceEnabled"); }
        }

        #endregion

        #region Instance methods
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/server/BrokerFeatures.html#supportedFeatures()"/> 
        /// </summary>
        public Org.Apache.Kafka.Common.Feature.Features<Org.Apache.Kafka.Common.Feature.SupportedVersionRange> SupportedFeatures
        {
            get { return IExecute<Org.Apache.Kafka.Common.Feature.Features<Org.Apache.Kafka.Common.Feature.SupportedVersionRange>>("supportedFeatures"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/server/BrokerFeatures.html#setSupportedFeatures(org.apache.kafka.common.feature.Features)"/>
        /// </summary>
        /// <param name="newFeatures"><see cref="Org.Apache.Kafka.Common.Feature.Features"/></param>
        public void SetSupportedFeatures(Org.Apache.Kafka.Common.Feature.Features newFeatures)
        {
            IExecute("setSupportedFeatures", newFeatures);
        }

        #endregion

        #region Nested classes

        #endregion

        // TODO: complete the class
    }
    #endregion
}