/*
*  Copyright 2023 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 1.5.5.0)
*  using kafka_2.13-3.4.0.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Kafka.Server
{
    #region SimpleApiVersionManager
    public partial class SimpleApiVersionManager
    {
        #region Constructors
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/server/SimpleApiVersionManager.html#%3Cinit%3E(org.apache.kafka.common.message.ApiMessageType.ListenerType)"/>
        /// </summary>
        /// <param name="listenerType"><see cref="Org.Apache.Kafka.Common.Message.ApiMessageType.ListenerType"/></param>
        public SimpleApiVersionManager(Org.Apache.Kafka.Common.Message.ApiMessageType.ListenerType listenerType)
            : base(listenerType)
        {
        }

        #endregion

        #region Class/Interface conversion operators
        /// <summary>
        /// Converter from <see cref="Kafka.Server.SimpleApiVersionManager"/> to <see cref="Kafka.Server.ApiVersionManager"/>
        /// </summary>
        public static implicit operator Kafka.Server.ApiVersionManager(Kafka.Server.SimpleApiVersionManager t) => t.Cast<Kafka.Server.ApiVersionManager>();

        #endregion

        #region Fields

        #endregion

        #region Static methods

        #endregion

        #region Instance methods
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/server/SimpleApiVersionManager.html#listenerType()"/> 
        /// </summary>
        public Org.Apache.Kafka.Common.Message.ApiMessageType.ListenerType ListenerType
        {
            get { return IExecute<Org.Apache.Kafka.Common.Message.ApiMessageType.ListenerType>("listenerType"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/server/SimpleApiVersionManager.html#newRequestMetrics()"/> 
        /// </summary>
        public Kafka.Network.RequestChannel.Metrics NewRequestMetrics
        {
            get { return IExecute<Kafka.Network.RequestChannel.Metrics>("newRequestMetrics"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/server/SimpleApiVersionManager.html#isApiEnabled(org.apache.kafka.common.protocol.ApiKeys)"/>
        /// </summary>
        /// <param name="apiKey"><see cref="Org.Apache.Kafka.Common.Protocol.ApiKeys"/></param>
        /// <returns><see cref="bool"/></returns>
        public bool IsApiEnabled(Org.Apache.Kafka.Common.Protocol.ApiKeys apiKey)
        {
            return IExecute<bool>("isApiEnabled", apiKey);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/server/SimpleApiVersionManager.html#apiVersionResponse(int)"/>
        /// </summary>
        /// <param name="requestThrottleMs"><see cref="int"/></param>
        /// <returns><see cref="Org.Apache.Kafka.Common.Requests.ApiVersionsResponse"/></returns>
        public Org.Apache.Kafka.Common.Requests.ApiVersionsResponse ApiVersionResponse(int requestThrottleMs)
        {
            return IExecute<Org.Apache.Kafka.Common.Requests.ApiVersionsResponse>("apiVersionResponse", requestThrottleMs);
        }

        #endregion

        #region Nested classes

        #endregion

        // TODO: complete the class
    }
    #endregion
}