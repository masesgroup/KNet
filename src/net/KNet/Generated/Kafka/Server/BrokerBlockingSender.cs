/*
*  Copyright 2023 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 1.5.5.0)
*  using kafka_2.13-3.4.0.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Kafka.Server
{
    #region BrokerBlockingSender
    public partial class BrokerBlockingSender
    {
        #region Constructors
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/server/BrokerBlockingSender.html#%3Cinit%3E(kafka.cluster.BrokerEndPoint,kafka.server.KafkaConfig,org.apache.kafka.common.metrics.Metrics,org.apache.kafka.common.utils.Time,int,java.lang.String,org.apache.kafka.common.utils.LogContext)"/>
        /// </summary>
        /// <param name="sourceBroker"><see cref="Kafka.Cluster.BrokerEndPoint"/></param>
        /// <param name="brokerConfig"><see cref="Kafka.Server.KafkaConfig"/></param>
        /// <param name="metrics"><see cref="Org.Apache.Kafka.Common.Metrics.Metrics"/></param>
        /// <param name="time"><see cref="Org.Apache.Kafka.Common.Utils.Time"/></param>
        /// <param name="fetcherId"><see cref="int"/></param>
        /// <param name="clientId"><see cref="string"/></param>
        /// <param name="logContext"><see cref="Org.Apache.Kafka.Common.Utils.LogContext"/></param>
        public BrokerBlockingSender(Kafka.Cluster.BrokerEndPoint sourceBroker, Kafka.Server.KafkaConfig brokerConfig, Org.Apache.Kafka.Common.Metrics.Metrics metrics, Org.Apache.Kafka.Common.Utils.Time time, int fetcherId, string clientId, Org.Apache.Kafka.Common.Utils.LogContext logContext)
            : base(sourceBroker, brokerConfig, metrics, time, fetcherId, clientId, logContext)
        {
        }

        #endregion

        #region Class/Interface conversion operators
        /// <summary>
        /// Converter from <see cref="Kafka.Server.BrokerBlockingSender"/> to <see cref="Kafka.Server.BlockingSend"/>
        /// </summary>
        public static implicit operator Kafka.Server.BlockingSend(Kafka.Server.BrokerBlockingSender t) => t.Cast<Kafka.Server.BlockingSend>();

        #endregion

        #region Fields

        #endregion

        #region Static methods

        #endregion

        #region Instance methods
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/server/BrokerBlockingSender.html#brokerEndPoint()"/> 
        /// </summary>
        public Kafka.Cluster.BrokerEndPoint BrokerEndPoint
        {
            get { return IExecute<Kafka.Cluster.BrokerEndPoint>("brokerEndPoint"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/server/BrokerBlockingSender.html#sendRequest(org.apache.kafka.common.requests.AbstractRequest.Builder)"/>
        /// </summary>
        /// <param name="requestBuilder"><see cref="Org.Apache.Kafka.Common.Requests.AbstractRequest.Builder"/></param>
        /// <typeparam name="RequestBuilderExtendsOrg_Apache_Kafka_Common_Requests_AbstractRequest"><see cref="Org.Apache.Kafka.Common.Requests.AbstractRequest"/></typeparam>
        /// <returns><see cref="Org.Apache.Kafka.Clients.ClientResponse"/></returns>
        public Org.Apache.Kafka.Clients.ClientResponse SendRequest<RequestBuilderExtendsOrg_Apache_Kafka_Common_Requests_AbstractRequest>(Org.Apache.Kafka.Common.Requests.AbstractRequest.Builder<RequestBuilderExtendsOrg_Apache_Kafka_Common_Requests_AbstractRequest> requestBuilder) where RequestBuilderExtendsOrg_Apache_Kafka_Common_Requests_AbstractRequest: Org.Apache.Kafka.Common.Requests.AbstractRequest
        {
            return IExecute<Org.Apache.Kafka.Clients.ClientResponse>("sendRequest", requestBuilder);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/server/BrokerBlockingSender.html#close()"/>
        /// </summary>
        public void Close()
        {
            IExecute("close");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/server/BrokerBlockingSender.html#initiateClose()"/>
        /// </summary>
        public void InitiateClose()
        {
            IExecute("initiateClose");
        }

        #endregion

        #region Nested classes

        #endregion

        // TODO: complete the class
    }
    #endregion
}