/*
*  Copyright 2023 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 1.5.5.0)
*  using kafka_2.13-3.4.0.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Kafka.Server
{
    #region KafkaApis
    public partial class KafkaApis
    {
        #region Constructors

        #endregion

        #region Class/Interface conversion operators
        /// <summary>
        /// Converter from <see cref="Kafka.Server.KafkaApis"/> to <see cref="Kafka.Server.ApiRequestHandler"/>
        /// </summary>
        public static implicit operator Kafka.Server.ApiRequestHandler(Kafka.Server.KafkaApis t) => t.Cast<Kafka.Server.ApiRequestHandler>();
        /// <summary>
        /// Converter from <see cref="Kafka.Server.KafkaApis"/> to <see cref="Kafka.Utils.Logging"/>
        /// </summary>
        public static implicit operator Kafka.Utils.Logging(Kafka.Server.KafkaApis t) => t.Cast<Kafka.Utils.Logging>();

        #endregion

        #region Fields

        #endregion

        #region Static methods

        #endregion

        #region Instance methods
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/server/KafkaApis.html#aclApis()"/> 
        /// </summary>
        public Kafka.Server.AclApis AclApis
        {
            get { return IExecute<Kafka.Server.AclApis>("aclApis"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/server/KafkaApis.html#apiVersionManager()"/> 
        /// </summary>
        public Kafka.Server.ApiVersionManager ApiVersionManager
        {
            get { return IExecute<Kafka.Server.ApiVersionManager>("apiVersionManager"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/server/KafkaApis.html#authHelper()"/> 
        /// </summary>
        public Kafka.Server.AuthHelper AuthHelper
        {
            get { return IExecute<Kafka.Server.AuthHelper>("authHelper"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/server/KafkaApis.html#autoTopicCreationManager()"/> 
        /// </summary>
        public Kafka.Server.AutoTopicCreationManager AutoTopicCreationManager
        {
            get { return IExecute<Kafka.Server.AutoTopicCreationManager>("autoTopicCreationManager"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/server/KafkaApis.html#brokerId()"/> 
        /// </summary>
        public int BrokerId
        {
            get { return IExecute<int>("brokerId"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/server/KafkaApis.html#clusterId()"/> 
        /// </summary>
        public string ClusterId
        {
            get { return IExecute<string>("clusterId"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/server/KafkaApis.html#config()"/> 
        /// </summary>
        public Kafka.Server.KafkaConfig Config
        {
            get { return IExecute<Kafka.Server.KafkaConfig>("config"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/server/KafkaApis.html#configHelper()"/> 
        /// </summary>
        public Kafka.Server.ConfigHelper ConfigHelper
        {
            get { return IExecute<Kafka.Server.ConfigHelper>("configHelper"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/server/KafkaApis.html#configManager()"/> 
        /// </summary>
        public Kafka.Server.ConfigAdminManager ConfigManager
        {
            get { return IExecute<Kafka.Server.ConfigAdminManager>("configManager"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/server/KafkaApis.html#configRepository()"/> 
        /// </summary>
        public Kafka.Server.Metadata.ConfigRepository ConfigRepository
        {
            get { return IExecute<Kafka.Server.Metadata.ConfigRepository>("configRepository"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/server/KafkaApis.html#fetchManager()"/> 
        /// </summary>
        public Kafka.Server.FetchManager FetchManager
        {
            get { return IExecute<Kafka.Server.FetchManager>("fetchManager"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/server/KafkaApis.html#groupCoordinator()"/> 
        /// </summary>
        public Kafka.Coordinator.Group.GroupCoordinator GroupCoordinator
        {
            get { return IExecute<Kafka.Coordinator.Group.GroupCoordinator>("groupCoordinator"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/server/KafkaApis.html#isDebugEnabled()"/> 
        /// </summary>
        public bool IsDebugEnabled
        {
            get { return IExecute<bool>("isDebugEnabled"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/server/KafkaApis.html#isTraceEnabled()"/> 
        /// </summary>
        public bool IsTraceEnabled
        {
            get { return IExecute<bool>("isTraceEnabled"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/server/KafkaApis.html#logger()"/> 
        /// </summary>
        public Com.Typesafe.Scalalogging.Logger Logger
        {
            get { return IExecute<Com.Typesafe.Scalalogging.Logger>("logger"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/server/KafkaApis.html#loggerName()"/> 
        /// </summary>
        public string LoggerName
        {
            get { return IExecute<string>("loggerName"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/server/KafkaApis.html#logIdent()"/> 
        /// </summary>
        public string LogIdent
        {
            get { return IExecute<string>("logIdent"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/server/KafkaApis.html#metadataCache()"/> 
        /// </summary>
        public Kafka.Server.MetadataCache MetadataCache
        {
            get { return IExecute<Kafka.Server.MetadataCache>("metadataCache"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/server/KafkaApis.html#metadataSupport()"/> 
        /// </summary>
        public Kafka.Server.MetadataSupport MetadataSupport
        {
            get { return IExecute<Kafka.Server.MetadataSupport>("metadataSupport"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/server/KafkaApis.html#metrics()"/> 
        /// </summary>
        public Org.Apache.Kafka.Common.Metrics.Metrics Metrics
        {
            get { return IExecute<Org.Apache.Kafka.Common.Metrics.Metrics>("metrics"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/server/KafkaApis.html#newGroupCoordinator()"/> 
        /// </summary>
        public Org.Apache.Kafka.Coordinator.Group.GroupCoordinator NewGroupCoordinator
        {
            get { return IExecute<Org.Apache.Kafka.Coordinator.Group.GroupCoordinator>("newGroupCoordinator"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/server/KafkaApis.html#quotas()"/> 
        /// </summary>
        public Kafka.Server.QuotaFactory.QuotaManagers Quotas
        {
            get { return IExecute<Kafka.Server.QuotaFactory.QuotaManagers>("quotas"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/server/KafkaApis.html#replicaManager()"/> 
        /// </summary>
        public Kafka.Server.ReplicaManager ReplicaManager
        {
            get { return IExecute<Kafka.Server.ReplicaManager>("replicaManager"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/server/KafkaApis.html#requestChannel()"/> 
        /// </summary>
        public Kafka.Network.RequestChannel RequestChannel
        {
            get { return IExecute<Kafka.Network.RequestChannel>("requestChannel"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/server/KafkaApis.html#requestHelper()"/> 
        /// </summary>
        public Kafka.Server.RequestHandlerHelper RequestHelper
        {
            get { return IExecute<Kafka.Server.RequestHandlerHelper>("requestHelper"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/server/KafkaApis.html#tokenManager()"/> 
        /// </summary>
        public Kafka.Server.DelegationTokenManager TokenManager
        {
            get { return IExecute<Kafka.Server.DelegationTokenManager>("tokenManager"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/server/KafkaApis.html#txnCoordinator()"/> 
        /// </summary>
        public Kafka.Coordinator.Transaction.TransactionCoordinator TxnCoordinator
        {
            get { return IExecute<Kafka.Coordinator.Transaction.TransactionCoordinator>("txnCoordinator"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/server/KafkaApis.html#allowTokenRequests(kafka.network.RequestChannel.Request)"/>
        /// </summary>
        /// <param name="request"><see cref="Kafka.Network.RequestChannel.Request"/></param>
        /// <returns><see cref="bool"/></returns>
        public bool AllowTokenRequests(Kafka.Network.RequestChannel.Request request)
        {
            return IExecute<bool>("allowTokenRequests", request);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/server/KafkaApis.html#msgWithLogIdent(java.lang.String)"/>
        /// </summary>
        /// <param name="msg"><see cref="string"/></param>
        /// <returns><see cref="string"/></returns>
        public string MsgWithLogIdent(string msg)
        {
            return IExecute<string>("msgWithLogIdent", msg);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/server/KafkaApis.html#handleHeartbeatRequest(kafka.network.RequestChannel.Request)"/>
        /// </summary>
        /// <param name="request"><see cref="Kafka.Network.RequestChannel.Request"/></param>
        /// <returns><see cref="Java.Util.Concurrent.CompletableFuture"/></returns>
        public Java.Util.Concurrent.CompletableFuture<Scala.Runtime.BoxedUnit> HandleHeartbeatRequest(Kafka.Network.RequestChannel.Request request)
        {
            return IExecute<Java.Util.Concurrent.CompletableFuture<Scala.Runtime.BoxedUnit>>("handleHeartbeatRequest", request);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/server/KafkaApis.html#handleJoinGroupRequest(kafka.network.RequestChannel.Request,kafka.server.RequestLocal)"/>
        /// </summary>
        /// <param name="request"><see cref="Kafka.Network.RequestChannel.Request"/></param>
        /// <param name="requestLocal"><see cref="Kafka.Server.RequestLocal"/></param>
        /// <returns><see cref="Java.Util.Concurrent.CompletableFuture"/></returns>
        public Java.Util.Concurrent.CompletableFuture<Scala.Runtime.BoxedUnit> HandleJoinGroupRequest(Kafka.Network.RequestChannel.Request request, Kafka.Server.RequestLocal requestLocal)
        {
            return IExecute<Java.Util.Concurrent.CompletableFuture<Scala.Runtime.BoxedUnit>>("handleJoinGroupRequest", request, requestLocal);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/server/KafkaApis.html#handleLeaveGroupRequest(kafka.network.RequestChannel.Request)"/>
        /// </summary>
        /// <param name="request"><see cref="Kafka.Network.RequestChannel.Request"/></param>
        /// <returns><see cref="Java.Util.Concurrent.CompletableFuture"/></returns>
        public Java.Util.Concurrent.CompletableFuture<Scala.Runtime.BoxedUnit> HandleLeaveGroupRequest(Kafka.Network.RequestChannel.Request request)
        {
            return IExecute<Java.Util.Concurrent.CompletableFuture<Scala.Runtime.BoxedUnit>>("handleLeaveGroupRequest", request);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/server/KafkaApis.html#handleSyncGroupRequest(kafka.network.RequestChannel.Request,kafka.server.RequestLocal)"/>
        /// </summary>
        /// <param name="request"><see cref="Kafka.Network.RequestChannel.Request"/></param>
        /// <param name="requestLocal"><see cref="Kafka.Server.RequestLocal"/></param>
        /// <returns><see cref="Java.Util.Concurrent.CompletableFuture"/></returns>
        public Java.Util.Concurrent.CompletableFuture<Scala.Runtime.BoxedUnit> HandleSyncGroupRequest(Kafka.Network.RequestChannel.Request request, Kafka.Server.RequestLocal requestLocal)
        {
            return IExecute<Java.Util.Concurrent.CompletableFuture<Scala.Runtime.BoxedUnit>>("handleSyncGroupRequest", request, requestLocal);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/server/KafkaApis.html#replicationQuota(org.apache.kafka.common.requests.FetchRequest)"/>
        /// </summary>
        /// <param name="fetchRequest"><see cref="Org.Apache.Kafka.Common.Requests.FetchRequest"/></param>
        /// <returns><see cref="Kafka.Server.ReplicaQuota"/></returns>
        public Kafka.Server.ReplicaQuota ReplicationQuota(Org.Apache.Kafka.Common.Requests.FetchRequest fetchRequest)
        {
            return IExecute<Kafka.Server.ReplicaQuota>("replicationQuota", fetchRequest);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/server/KafkaApis.html#processLegacyAlterConfigsRequest(kafka.network.RequestChannel.Request,org.apache.kafka.common.message.AlterConfigsRequestData)"/>
        /// </summary>
        /// <param name="originalRequest"><see cref="Kafka.Network.RequestChannel.Request"/></param>
        /// <param name="data"><see cref="Org.Apache.Kafka.Common.Message.AlterConfigsRequestData"/></param>
        /// <returns><see cref="Org.Apache.Kafka.Common.Message.AlterConfigsResponseData"/></returns>
        public Org.Apache.Kafka.Common.Message.AlterConfigsResponseData ProcessLegacyAlterConfigsRequest(Kafka.Network.RequestChannel.Request originalRequest, Org.Apache.Kafka.Common.Message.AlterConfigsRequestData data)
        {
            return IExecute<Org.Apache.Kafka.Common.Message.AlterConfigsResponseData>("processLegacyAlterConfigsRequest", originalRequest, data);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/server/KafkaApis.html#processIncrementalAlterConfigsRequest(kafka.network.RequestChannel.Request,org.apache.kafka.common.message.IncrementalAlterConfigsRequestData)"/>
        /// </summary>
        /// <param name="originalRequest"><see cref="Kafka.Network.RequestChannel.Request"/></param>
        /// <param name="data"><see cref="Org.Apache.Kafka.Common.Message.IncrementalAlterConfigsRequestData"/></param>
        /// <returns><see cref="Org.Apache.Kafka.Common.Message.IncrementalAlterConfigsResponseData"/></returns>
        public Org.Apache.Kafka.Common.Message.IncrementalAlterConfigsResponseData ProcessIncrementalAlterConfigsRequest(Kafka.Network.RequestChannel.Request originalRequest, Org.Apache.Kafka.Common.Message.IncrementalAlterConfigsRequestData data)
        {
            return IExecute<Org.Apache.Kafka.Common.Message.IncrementalAlterConfigsResponseData>("processIncrementalAlterConfigsRequest", originalRequest, data);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/server/KafkaApis.html#close()"/>
        /// </summary>
        public void Close()
        {
            IExecute("close");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/server/KafkaApis.html#ensureInterBrokerVersion(org.apache.kafka.server.common.MetadataVersion)"/>
        /// </summary>
        /// <param name="version"><see cref="Org.Apache.Kafka.Server.Common.MetadataVersion"/></param>
        public void EnsureInterBrokerVersion(Org.Apache.Kafka.Server.Common.MetadataVersion version)
        {
            IExecute("ensureInterBrokerVersion", version);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/server/KafkaApis.html#handle(kafka.network.RequestChannel.Request,kafka.server.RequestLocal)"/>
        /// </summary>
        /// <param name="request"><see cref="Kafka.Network.RequestChannel.Request"/></param>
        /// <param name="requestLocal"><see cref="Kafka.Server.RequestLocal"/></param>
        public void Handle(Kafka.Network.RequestChannel.Request request, Kafka.Server.RequestLocal requestLocal)
        {
            IExecute("handle", request, requestLocal);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/server/KafkaApis.html#handleAddOffsetsToTxnRequest(kafka.network.RequestChannel.Request,kafka.server.RequestLocal)"/>
        /// </summary>
        /// <param name="request"><see cref="Kafka.Network.RequestChannel.Request"/></param>
        /// <param name="requestLocal"><see cref="Kafka.Server.RequestLocal"/></param>
        public void HandleAddOffsetsToTxnRequest(Kafka.Network.RequestChannel.Request request, Kafka.Server.RequestLocal requestLocal)
        {
            IExecute("handleAddOffsetsToTxnRequest", request, requestLocal);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/server/KafkaApis.html#handleAddPartitionToTxnRequest(kafka.network.RequestChannel.Request,kafka.server.RequestLocal)"/>
        /// </summary>
        /// <param name="request"><see cref="Kafka.Network.RequestChannel.Request"/></param>
        /// <param name="requestLocal"><see cref="Kafka.Server.RequestLocal"/></param>
        public void HandleAddPartitionToTxnRequest(Kafka.Network.RequestChannel.Request request, Kafka.Server.RequestLocal requestLocal)
        {
            IExecute("handleAddPartitionToTxnRequest", request, requestLocal);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/server/KafkaApis.html#handleAllocateProducerIdsRequest(kafka.network.RequestChannel.Request)"/>
        /// </summary>
        /// <param name="request"><see cref="Kafka.Network.RequestChannel.Request"/></param>
        public void HandleAllocateProducerIdsRequest(Kafka.Network.RequestChannel.Request request)
        {
            IExecute("handleAllocateProducerIdsRequest", request);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/server/KafkaApis.html#handleAlterClientQuotasRequest(kafka.network.RequestChannel.Request)"/>
        /// </summary>
        /// <param name="request"><see cref="Kafka.Network.RequestChannel.Request"/></param>
        public void HandleAlterClientQuotasRequest(Kafka.Network.RequestChannel.Request request)
        {
            IExecute("handleAlterClientQuotasRequest", request);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/server/KafkaApis.html#handleAlterConfigsRequest(kafka.network.RequestChannel.Request)"/>
        /// </summary>
        /// <param name="request"><see cref="Kafka.Network.RequestChannel.Request"/></param>
        public void HandleAlterConfigsRequest(Kafka.Network.RequestChannel.Request request)
        {
            IExecute("handleAlterConfigsRequest", request);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/server/KafkaApis.html#handleAlterPartitionReassignmentsRequest(kafka.network.RequestChannel.Request)"/>
        /// </summary>
        /// <param name="request"><see cref="Kafka.Network.RequestChannel.Request"/></param>
        public void HandleAlterPartitionReassignmentsRequest(Kafka.Network.RequestChannel.Request request)
        {
            IExecute("handleAlterPartitionReassignmentsRequest", request);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/server/KafkaApis.html#handleAlterPartitionRequest(kafka.network.RequestChannel.Request)"/>
        /// </summary>
        /// <param name="request"><see cref="Kafka.Network.RequestChannel.Request"/></param>
        public void HandleAlterPartitionRequest(Kafka.Network.RequestChannel.Request request)
        {
            IExecute("handleAlterPartitionRequest", request);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/server/KafkaApis.html#handleAlterReplicaLogDirsRequest(kafka.network.RequestChannel.Request)"/>
        /// </summary>
        /// <param name="request"><see cref="Kafka.Network.RequestChannel.Request"/></param>
        public void HandleAlterReplicaLogDirsRequest(Kafka.Network.RequestChannel.Request request)
        {
            IExecute("handleAlterReplicaLogDirsRequest", request);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/server/KafkaApis.html#handleAlterUserScramCredentialsRequest(kafka.network.RequestChannel.Request)"/>
        /// </summary>
        /// <param name="request"><see cref="Kafka.Network.RequestChannel.Request"/></param>
        public void HandleAlterUserScramCredentialsRequest(Kafka.Network.RequestChannel.Request request)
        {
            IExecute("handleAlterUserScramCredentialsRequest", request);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/server/KafkaApis.html#handleApiVersionsRequest(kafka.network.RequestChannel.Request)"/>
        /// </summary>
        /// <param name="request"><see cref="Kafka.Network.RequestChannel.Request"/></param>
        public void HandleApiVersionsRequest(Kafka.Network.RequestChannel.Request request)
        {
            IExecute("handleApiVersionsRequest", request);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/server/KafkaApis.html#handleControlledShutdownRequest(kafka.network.RequestChannel.Request)"/>
        /// </summary>
        /// <param name="request"><see cref="Kafka.Network.RequestChannel.Request"/></param>
        public void HandleControlledShutdownRequest(Kafka.Network.RequestChannel.Request request)
        {
            IExecute("handleControlledShutdownRequest", request);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/server/KafkaApis.html#handleCreateAcls(kafka.network.RequestChannel.Request)"/>
        /// </summary>
        /// <param name="request"><see cref="Kafka.Network.RequestChannel.Request"/></param>
        public void HandleCreateAcls(Kafka.Network.RequestChannel.Request request)
        {
            IExecute("handleCreateAcls", request);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/server/KafkaApis.html#handleCreatePartitionsRequest(kafka.network.RequestChannel.Request)"/>
        /// </summary>
        /// <param name="request"><see cref="Kafka.Network.RequestChannel.Request"/></param>
        public void HandleCreatePartitionsRequest(Kafka.Network.RequestChannel.Request request)
        {
            IExecute("handleCreatePartitionsRequest", request);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/server/KafkaApis.html#handleCreateTokenRequest(kafka.network.RequestChannel.Request)"/>
        /// </summary>
        /// <param name="request"><see cref="Kafka.Network.RequestChannel.Request"/></param>
        public void HandleCreateTokenRequest(Kafka.Network.RequestChannel.Request request)
        {
            IExecute("handleCreateTokenRequest", request);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/server/KafkaApis.html#handleCreateTopicsRequest(kafka.network.RequestChannel.Request)"/>
        /// </summary>
        /// <param name="request"><see cref="Kafka.Network.RequestChannel.Request"/></param>
        public void HandleCreateTopicsRequest(Kafka.Network.RequestChannel.Request request)
        {
            IExecute("handleCreateTopicsRequest", request);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/server/KafkaApis.html#handleDeleteAcls(kafka.network.RequestChannel.Request)"/>
        /// </summary>
        /// <param name="request"><see cref="Kafka.Network.RequestChannel.Request"/></param>
        public void HandleDeleteAcls(Kafka.Network.RequestChannel.Request request)
        {
            IExecute("handleDeleteAcls", request);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/server/KafkaApis.html#handleDeleteGroupsRequest(kafka.network.RequestChannel.Request,kafka.server.RequestLocal)"/>
        /// </summary>
        /// <param name="request"><see cref="Kafka.Network.RequestChannel.Request"/></param>
        /// <param name="requestLocal"><see cref="Kafka.Server.RequestLocal"/></param>
        public void HandleDeleteGroupsRequest(Kafka.Network.RequestChannel.Request request, Kafka.Server.RequestLocal requestLocal)
        {
            IExecute("handleDeleteGroupsRequest", request, requestLocal);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/server/KafkaApis.html#handleDeleteRecordsRequest(kafka.network.RequestChannel.Request)"/>
        /// </summary>
        /// <param name="request"><see cref="Kafka.Network.RequestChannel.Request"/></param>
        public void HandleDeleteRecordsRequest(Kafka.Network.RequestChannel.Request request)
        {
            IExecute("handleDeleteRecordsRequest", request);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/server/KafkaApis.html#handleDeleteTopicsRequest(kafka.network.RequestChannel.Request)"/>
        /// </summary>
        /// <param name="request"><see cref="Kafka.Network.RequestChannel.Request"/></param>
        public void HandleDeleteTopicsRequest(Kafka.Network.RequestChannel.Request request)
        {
            IExecute("handleDeleteTopicsRequest", request);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/server/KafkaApis.html#handleDescribeAcls(kafka.network.RequestChannel.Request)"/>
        /// </summary>
        /// <param name="request"><see cref="Kafka.Network.RequestChannel.Request"/></param>
        public void HandleDescribeAcls(Kafka.Network.RequestChannel.Request request)
        {
            IExecute("handleDescribeAcls", request);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/server/KafkaApis.html#handleDescribeClientQuotasRequest(kafka.network.RequestChannel.Request)"/>
        /// </summary>
        /// <param name="request"><see cref="Kafka.Network.RequestChannel.Request"/></param>
        public void HandleDescribeClientQuotasRequest(Kafka.Network.RequestChannel.Request request)
        {
            IExecute("handleDescribeClientQuotasRequest", request);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/server/KafkaApis.html#handleDescribeCluster(kafka.network.RequestChannel.Request)"/>
        /// </summary>
        /// <param name="request"><see cref="Kafka.Network.RequestChannel.Request"/></param>
        public void HandleDescribeCluster(Kafka.Network.RequestChannel.Request request)
        {
            IExecute("handleDescribeCluster", request);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/server/KafkaApis.html#handleDescribeConfigsRequest(kafka.network.RequestChannel.Request)"/>
        /// </summary>
        /// <param name="request"><see cref="Kafka.Network.RequestChannel.Request"/></param>
        public void HandleDescribeConfigsRequest(Kafka.Network.RequestChannel.Request request)
        {
            IExecute("handleDescribeConfigsRequest", request);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/server/KafkaApis.html#handleDescribeGroupRequest(kafka.network.RequestChannel.Request)"/>
        /// </summary>
        /// <param name="request"><see cref="Kafka.Network.RequestChannel.Request"/></param>
        public void HandleDescribeGroupRequest(Kafka.Network.RequestChannel.Request request)
        {
            IExecute("handleDescribeGroupRequest", request);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/server/KafkaApis.html#handleDescribeLogDirsRequest(kafka.network.RequestChannel.Request)"/>
        /// </summary>
        /// <param name="request"><see cref="Kafka.Network.RequestChannel.Request"/></param>
        public void HandleDescribeLogDirsRequest(Kafka.Network.RequestChannel.Request request)
        {
            IExecute("handleDescribeLogDirsRequest", request);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/server/KafkaApis.html#handleDescribeProducersRequest(kafka.network.RequestChannel.Request)"/>
        /// </summary>
        /// <param name="request"><see cref="Kafka.Network.RequestChannel.Request"/></param>
        public void HandleDescribeProducersRequest(Kafka.Network.RequestChannel.Request request)
        {
            IExecute("handleDescribeProducersRequest", request);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/server/KafkaApis.html#handleDescribeTokensRequest(kafka.network.RequestChannel.Request)"/>
        /// </summary>
        /// <param name="request"><see cref="Kafka.Network.RequestChannel.Request"/></param>
        public void HandleDescribeTokensRequest(Kafka.Network.RequestChannel.Request request)
        {
            IExecute("handleDescribeTokensRequest", request);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/server/KafkaApis.html#handleDescribeTransactionsRequest(kafka.network.RequestChannel.Request)"/>
        /// </summary>
        /// <param name="request"><see cref="Kafka.Network.RequestChannel.Request"/></param>
        public void HandleDescribeTransactionsRequest(Kafka.Network.RequestChannel.Request request)
        {
            IExecute("handleDescribeTransactionsRequest", request);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/server/KafkaApis.html#handleDescribeUserScramCredentialsRequest(kafka.network.RequestChannel.Request)"/>
        /// </summary>
        /// <param name="request"><see cref="Kafka.Network.RequestChannel.Request"/></param>
        public void HandleDescribeUserScramCredentialsRequest(Kafka.Network.RequestChannel.Request request)
        {
            IExecute("handleDescribeUserScramCredentialsRequest", request);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/server/KafkaApis.html#handleElectLeaders(kafka.network.RequestChannel.Request)"/>
        /// </summary>
        /// <param name="request"><see cref="Kafka.Network.RequestChannel.Request"/></param>
        public void HandleElectLeaders(Kafka.Network.RequestChannel.Request request)
        {
            IExecute("handleElectLeaders", request);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/server/KafkaApis.html#handleEndTxnRequest(kafka.network.RequestChannel.Request,kafka.server.RequestLocal)"/>
        /// </summary>
        /// <param name="request"><see cref="Kafka.Network.RequestChannel.Request"/></param>
        /// <param name="requestLocal"><see cref="Kafka.Server.RequestLocal"/></param>
        public void HandleEndTxnRequest(Kafka.Network.RequestChannel.Request request, Kafka.Server.RequestLocal requestLocal)
        {
            IExecute("handleEndTxnRequest", request, requestLocal);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/server/KafkaApis.html#handleEnvelope(kafka.network.RequestChannel.Request,kafka.server.RequestLocal)"/>
        /// </summary>
        /// <param name="request"><see cref="Kafka.Network.RequestChannel.Request"/></param>
        /// <param name="requestLocal"><see cref="Kafka.Server.RequestLocal"/></param>
        public void HandleEnvelope(Kafka.Network.RequestChannel.Request request, Kafka.Server.RequestLocal requestLocal)
        {
            IExecute("handleEnvelope", request, requestLocal);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/server/KafkaApis.html#handleExpireTokenRequest(kafka.network.RequestChannel.Request)"/>
        /// </summary>
        /// <param name="request"><see cref="Kafka.Network.RequestChannel.Request"/></param>
        public void HandleExpireTokenRequest(Kafka.Network.RequestChannel.Request request)
        {
            IExecute("handleExpireTokenRequest", request);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/server/KafkaApis.html#handleFetchRequest(kafka.network.RequestChannel.Request)"/>
        /// </summary>
        /// <param name="request"><see cref="Kafka.Network.RequestChannel.Request"/></param>
        public void HandleFetchRequest(Kafka.Network.RequestChannel.Request request)
        {
            IExecute("handleFetchRequest", request);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/server/KafkaApis.html#handleFindCoordinatorRequest(kafka.network.RequestChannel.Request)"/>
        /// </summary>
        /// <param name="request"><see cref="Kafka.Network.RequestChannel.Request"/></param>
        public void HandleFindCoordinatorRequest(Kafka.Network.RequestChannel.Request request)
        {
            IExecute("handleFindCoordinatorRequest", request);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/server/KafkaApis.html#handleIncrementalAlterConfigsRequest(kafka.network.RequestChannel.Request)"/>
        /// </summary>
        /// <param name="request"><see cref="Kafka.Network.RequestChannel.Request"/></param>
        public void HandleIncrementalAlterConfigsRequest(Kafka.Network.RequestChannel.Request request)
        {
            IExecute("handleIncrementalAlterConfigsRequest", request);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/server/KafkaApis.html#handleInitProducerIdRequest(kafka.network.RequestChannel.Request,kafka.server.RequestLocal)"/>
        /// </summary>
        /// <param name="request"><see cref="Kafka.Network.RequestChannel.Request"/></param>
        /// <param name="requestLocal"><see cref="Kafka.Server.RequestLocal"/></param>
        public void HandleInitProducerIdRequest(Kafka.Network.RequestChannel.Request request, Kafka.Server.RequestLocal requestLocal)
        {
            IExecute("handleInitProducerIdRequest", request, requestLocal);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/server/KafkaApis.html#handleLeaderAndIsrRequest(kafka.network.RequestChannel.Request)"/>
        /// </summary>
        /// <param name="request"><see cref="Kafka.Network.RequestChannel.Request"/></param>
        public void HandleLeaderAndIsrRequest(Kafka.Network.RequestChannel.Request request)
        {
            IExecute("handleLeaderAndIsrRequest", request);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/server/KafkaApis.html#handleListGroupsRequest(kafka.network.RequestChannel.Request)"/>
        /// </summary>
        /// <param name="request"><see cref="Kafka.Network.RequestChannel.Request"/></param>
        public void HandleListGroupsRequest(Kafka.Network.RequestChannel.Request request)
        {
            IExecute("handleListGroupsRequest", request);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/server/KafkaApis.html#handleListOffsetRequest(kafka.network.RequestChannel.Request)"/>
        /// </summary>
        /// <param name="request"><see cref="Kafka.Network.RequestChannel.Request"/></param>
        public void HandleListOffsetRequest(Kafka.Network.RequestChannel.Request request)
        {
            IExecute("handleListOffsetRequest", request);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/server/KafkaApis.html#handleListPartitionReassignmentsRequest(kafka.network.RequestChannel.Request)"/>
        /// </summary>
        /// <param name="request"><see cref="Kafka.Network.RequestChannel.Request"/></param>
        public void HandleListPartitionReassignmentsRequest(Kafka.Network.RequestChannel.Request request)
        {
            IExecute("handleListPartitionReassignmentsRequest", request);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/server/KafkaApis.html#handleListTransactionsRequest(kafka.network.RequestChannel.Request)"/>
        /// </summary>
        /// <param name="request"><see cref="Kafka.Network.RequestChannel.Request"/></param>
        public void HandleListTransactionsRequest(Kafka.Network.RequestChannel.Request request)
        {
            IExecute("handleListTransactionsRequest", request);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/server/KafkaApis.html#handleOffsetCommitRequest(kafka.network.RequestChannel.Request,kafka.server.RequestLocal)"/>
        /// </summary>
        /// <param name="request"><see cref="Kafka.Network.RequestChannel.Request"/></param>
        /// <param name="requestLocal"><see cref="Kafka.Server.RequestLocal"/></param>
        public void HandleOffsetCommitRequest(Kafka.Network.RequestChannel.Request request, Kafka.Server.RequestLocal requestLocal)
        {
            IExecute("handleOffsetCommitRequest", request, requestLocal);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/server/KafkaApis.html#handleOffsetDeleteRequest(kafka.network.RequestChannel.Request,kafka.server.RequestLocal)"/>
        /// </summary>
        /// <param name="request"><see cref="Kafka.Network.RequestChannel.Request"/></param>
        /// <param name="requestLocal"><see cref="Kafka.Server.RequestLocal"/></param>
        public void HandleOffsetDeleteRequest(Kafka.Network.RequestChannel.Request request, Kafka.Server.RequestLocal requestLocal)
        {
            IExecute("handleOffsetDeleteRequest", request, requestLocal);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/server/KafkaApis.html#handleOffsetFetchRequest(kafka.network.RequestChannel.Request)"/>
        /// </summary>
        /// <param name="request"><see cref="Kafka.Network.RequestChannel.Request"/></param>
        public void HandleOffsetFetchRequest(Kafka.Network.RequestChannel.Request request)
        {
            IExecute("handleOffsetFetchRequest", request);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/server/KafkaApis.html#handleOffsetForLeaderEpochRequest(kafka.network.RequestChannel.Request)"/>
        /// </summary>
        /// <param name="request"><see cref="Kafka.Network.RequestChannel.Request"/></param>
        public void HandleOffsetForLeaderEpochRequest(Kafka.Network.RequestChannel.Request request)
        {
            IExecute("handleOffsetForLeaderEpochRequest", request);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/server/KafkaApis.html#handleProduceRequest(kafka.network.RequestChannel.Request,kafka.server.RequestLocal)"/>
        /// </summary>
        /// <param name="request"><see cref="Kafka.Network.RequestChannel.Request"/></param>
        /// <param name="requestLocal"><see cref="Kafka.Server.RequestLocal"/></param>
        public void HandleProduceRequest(Kafka.Network.RequestChannel.Request request, Kafka.Server.RequestLocal requestLocal)
        {
            IExecute("handleProduceRequest", request, requestLocal);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/server/KafkaApis.html#handleRenewTokenRequest(kafka.network.RequestChannel.Request)"/>
        /// </summary>
        /// <param name="request"><see cref="Kafka.Network.RequestChannel.Request"/></param>
        public void HandleRenewTokenRequest(Kafka.Network.RequestChannel.Request request)
        {
            IExecute("handleRenewTokenRequest", request);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/server/KafkaApis.html#handleSaslAuthenticateRequest(kafka.network.RequestChannel.Request)"/>
        /// </summary>
        /// <param name="request"><see cref="Kafka.Network.RequestChannel.Request"/></param>
        public void HandleSaslAuthenticateRequest(Kafka.Network.RequestChannel.Request request)
        {
            IExecute("handleSaslAuthenticateRequest", request);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/server/KafkaApis.html#handleSaslHandshakeRequest(kafka.network.RequestChannel.Request)"/>
        /// </summary>
        /// <param name="request"><see cref="Kafka.Network.RequestChannel.Request"/></param>
        public void HandleSaslHandshakeRequest(Kafka.Network.RequestChannel.Request request)
        {
            IExecute("handleSaslHandshakeRequest", request);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/server/KafkaApis.html#handleStopReplicaRequest(kafka.network.RequestChannel.Request)"/>
        /// </summary>
        /// <param name="request"><see cref="Kafka.Network.RequestChannel.Request"/></param>
        public void HandleStopReplicaRequest(Kafka.Network.RequestChannel.Request request)
        {
            IExecute("handleStopReplicaRequest", request);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/server/KafkaApis.html#handleTopicMetadataRequest(kafka.network.RequestChannel.Request)"/>
        /// </summary>
        /// <param name="request"><see cref="Kafka.Network.RequestChannel.Request"/></param>
        public void HandleTopicMetadataRequest(Kafka.Network.RequestChannel.Request request)
        {
            IExecute("handleTopicMetadataRequest", request);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/server/KafkaApis.html#handleTxnOffsetCommitRequest(kafka.network.RequestChannel.Request,kafka.server.RequestLocal)"/>
        /// </summary>
        /// <param name="request"><see cref="Kafka.Network.RequestChannel.Request"/></param>
        /// <param name="requestLocal"><see cref="Kafka.Server.RequestLocal"/></param>
        public void HandleTxnOffsetCommitRequest(Kafka.Network.RequestChannel.Request request, Kafka.Server.RequestLocal requestLocal)
        {
            IExecute("handleTxnOffsetCommitRequest", request, requestLocal);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/server/KafkaApis.html#handleUpdateFeatures(kafka.network.RequestChannel.Request)"/>
        /// </summary>
        /// <param name="request"><see cref="Kafka.Network.RequestChannel.Request"/></param>
        public void HandleUpdateFeatures(Kafka.Network.RequestChannel.Request request)
        {
            IExecute("handleUpdateFeatures", request);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/server/KafkaApis.html#handleUpdateMetadataRequest(kafka.network.RequestChannel.Request,kafka.server.RequestLocal)"/>
        /// </summary>
        /// <param name="request"><see cref="Kafka.Network.RequestChannel.Request"/></param>
        /// <param name="requestLocal"><see cref="Kafka.Server.RequestLocal"/></param>
        public void HandleUpdateMetadataRequest(Kafka.Network.RequestChannel.Request request, Kafka.Server.RequestLocal requestLocal)
        {
            IExecute("handleUpdateMetadataRequest", request, requestLocal);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/server/KafkaApis.html#handleWriteTxnMarkersRequest(kafka.network.RequestChannel.Request,kafka.server.RequestLocal)"/>
        /// </summary>
        /// <param name="request"><see cref="Kafka.Network.RequestChannel.Request"/></param>
        /// <param name="requestLocal"><see cref="Kafka.Server.RequestLocal"/></param>
        public void HandleWriteTxnMarkersRequest(Kafka.Network.RequestChannel.Request request, Kafka.Server.RequestLocal requestLocal)
        {
            IExecute("handleWriteTxnMarkersRequest", request, requestLocal);
        }

        #endregion

        #region Nested classes

        #endregion

        // TODO: complete the class
    }
    #endregion
}