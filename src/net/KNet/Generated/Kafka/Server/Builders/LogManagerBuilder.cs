/*
*  Copyright 2023 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 1.5.5.0)
*  using kafka_2.13-3.4.0.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Kafka.Server.Builders
{
    #region LogManagerBuilder
    public partial class LogManagerBuilder
    {
        #region Constructors

        #endregion

        #region Class/Interface conversion operators

        #endregion

        #region Fields

        #endregion

        #region Static methods

        #endregion

        #region Instance methods
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/server/builders/LogManagerBuilder.html#build()"/> 
        /// </summary>
        public Kafka.Log.LogManager Build
        {
            get { return IExecute<Kafka.Log.LogManager>("build"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/server/builders/LogManagerBuilder.html#setBrokerTopicStats(kafka.server.BrokerTopicStats)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Kafka.Server.BrokerTopicStats"/></param>
        /// <returns><see cref="Kafka.Server.Builders.LogManagerBuilder"/></returns>
        public Kafka.Server.Builders.LogManagerBuilder SetBrokerTopicStats(Kafka.Server.BrokerTopicStats arg0)
        {
            return IExecute<Kafka.Server.Builders.LogManagerBuilder>("setBrokerTopicStats", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/server/builders/LogManagerBuilder.html#setCleanerConfig(kafka.log.CleanerConfig)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Kafka.Log.CleanerConfig"/></param>
        /// <returns><see cref="Kafka.Server.Builders.LogManagerBuilder"/></returns>
        public Kafka.Server.Builders.LogManagerBuilder SetCleanerConfig(Kafka.Log.CleanerConfig arg0)
        {
            return IExecute<Kafka.Server.Builders.LogManagerBuilder>("setCleanerConfig", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/server/builders/LogManagerBuilder.html#setConfigRepository(kafka.server.metadata.ConfigRepository)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Kafka.Server.Metadata.ConfigRepository"/></param>
        /// <returns><see cref="Kafka.Server.Builders.LogManagerBuilder"/></returns>
        public Kafka.Server.Builders.LogManagerBuilder SetConfigRepository(Kafka.Server.Metadata.ConfigRepository arg0)
        {
            return IExecute<Kafka.Server.Builders.LogManagerBuilder>("setConfigRepository", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/server/builders/LogManagerBuilder.html#setFlushCheckMs(long)"/>
        /// </summary>
        /// <param name="arg0"><see cref="long"/></param>
        /// <returns><see cref="Kafka.Server.Builders.LogManagerBuilder"/></returns>
        public Kafka.Server.Builders.LogManagerBuilder SetFlushCheckMs(long arg0)
        {
            return IExecute<Kafka.Server.Builders.LogManagerBuilder>("setFlushCheckMs", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/server/builders/LogManagerBuilder.html#setFlushRecoveryOffsetCheckpointMs(long)"/>
        /// </summary>
        /// <param name="arg0"><see cref="long"/></param>
        /// <returns><see cref="Kafka.Server.Builders.LogManagerBuilder"/></returns>
        public Kafka.Server.Builders.LogManagerBuilder SetFlushRecoveryOffsetCheckpointMs(long arg0)
        {
            return IExecute<Kafka.Server.Builders.LogManagerBuilder>("setFlushRecoveryOffsetCheckpointMs", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/server/builders/LogManagerBuilder.html#setFlushStartOffsetCheckpointMs(long)"/>
        /// </summary>
        /// <param name="arg0"><see cref="long"/></param>
        /// <returns><see cref="Kafka.Server.Builders.LogManagerBuilder"/></returns>
        public Kafka.Server.Builders.LogManagerBuilder SetFlushStartOffsetCheckpointMs(long arg0)
        {
            return IExecute<Kafka.Server.Builders.LogManagerBuilder>("setFlushStartOffsetCheckpointMs", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/server/builders/LogManagerBuilder.html#setInitialDefaultConfig(kafka.log.LogConfig)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Kafka.Log.LogConfig"/></param>
        /// <returns><see cref="Kafka.Server.Builders.LogManagerBuilder"/></returns>
        public Kafka.Server.Builders.LogManagerBuilder SetInitialDefaultConfig(Kafka.Log.LogConfig arg0)
        {
            return IExecute<Kafka.Server.Builders.LogManagerBuilder>("setInitialDefaultConfig", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/server/builders/LogManagerBuilder.html#setInitialOfflineDirs(java.util.List)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Util.List"/></param>
        /// <returns><see cref="Kafka.Server.Builders.LogManagerBuilder"/></returns>
        public Kafka.Server.Builders.LogManagerBuilder SetInitialOfflineDirs(Java.Util.List<Java.Io.File> arg0)
        {
            return IExecute<Kafka.Server.Builders.LogManagerBuilder>("setInitialOfflineDirs", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/server/builders/LogManagerBuilder.html#setInterBrokerProtocolVersion(org.apache.kafka.server.common.MetadataVersion)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Server.Common.MetadataVersion"/></param>
        /// <returns><see cref="Kafka.Server.Builders.LogManagerBuilder"/></returns>
        public Kafka.Server.Builders.LogManagerBuilder SetInterBrokerProtocolVersion(Org.Apache.Kafka.Server.Common.MetadataVersion arg0)
        {
            return IExecute<Kafka.Server.Builders.LogManagerBuilder>("setInterBrokerProtocolVersion", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/server/builders/LogManagerBuilder.html#setKeepPartitionMetadataFile(boolean)"/>
        /// </summary>
        /// <param name="arg0"><see cref="bool"/></param>
        /// <returns><see cref="Kafka.Server.Builders.LogManagerBuilder"/></returns>
        public Kafka.Server.Builders.LogManagerBuilder SetKeepPartitionMetadataFile(bool arg0)
        {
            return IExecute<Kafka.Server.Builders.LogManagerBuilder>("setKeepPartitionMetadataFile", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/server/builders/LogManagerBuilder.html#setLogDirFailureChannel(kafka.server.LogDirFailureChannel)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Kafka.Server.LogDirFailureChannel"/></param>
        /// <returns><see cref="Kafka.Server.Builders.LogManagerBuilder"/></returns>
        public Kafka.Server.Builders.LogManagerBuilder SetLogDirFailureChannel(Kafka.Server.LogDirFailureChannel arg0)
        {
            return IExecute<Kafka.Server.Builders.LogManagerBuilder>("setLogDirFailureChannel", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/server/builders/LogManagerBuilder.html#setLogDirs(java.util.List)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Java.Util.List"/></param>
        /// <returns><see cref="Kafka.Server.Builders.LogManagerBuilder"/></returns>
        public Kafka.Server.Builders.LogManagerBuilder SetLogDirs(Java.Util.List<Java.Io.File> arg0)
        {
            return IExecute<Kafka.Server.Builders.LogManagerBuilder>("setLogDirs", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/server/builders/LogManagerBuilder.html#setMaxProducerIdExpirationMs(int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <returns><see cref="Kafka.Server.Builders.LogManagerBuilder"/></returns>
        public Kafka.Server.Builders.LogManagerBuilder SetMaxProducerIdExpirationMs(int arg0)
        {
            return IExecute<Kafka.Server.Builders.LogManagerBuilder>("setMaxProducerIdExpirationMs", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/server/builders/LogManagerBuilder.html#setMaxTransactionTimeoutMs(int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <returns><see cref="Kafka.Server.Builders.LogManagerBuilder"/></returns>
        public Kafka.Server.Builders.LogManagerBuilder SetMaxTransactionTimeoutMs(int arg0)
        {
            return IExecute<Kafka.Server.Builders.LogManagerBuilder>("setMaxTransactionTimeoutMs", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/server/builders/LogManagerBuilder.html#setRecoveryThreadsPerDataDir(int)"/>
        /// </summary>
        /// <param name="arg0"><see cref="int"/></param>
        /// <returns><see cref="Kafka.Server.Builders.LogManagerBuilder"/></returns>
        public Kafka.Server.Builders.LogManagerBuilder SetRecoveryThreadsPerDataDir(int arg0)
        {
            return IExecute<Kafka.Server.Builders.LogManagerBuilder>("setRecoveryThreadsPerDataDir", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/server/builders/LogManagerBuilder.html#setRetentionCheckMs(long)"/>
        /// </summary>
        /// <param name="arg0"><see cref="long"/></param>
        /// <returns><see cref="Kafka.Server.Builders.LogManagerBuilder"/></returns>
        public Kafka.Server.Builders.LogManagerBuilder SetRetentionCheckMs(long arg0)
        {
            return IExecute<Kafka.Server.Builders.LogManagerBuilder>("setRetentionCheckMs", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/server/builders/LogManagerBuilder.html#setScheduler(kafka.utils.Scheduler)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Kafka.Utils.Scheduler"/></param>
        /// <returns><see cref="Kafka.Server.Builders.LogManagerBuilder"/></returns>
        public Kafka.Server.Builders.LogManagerBuilder SetScheduler(Kafka.Utils.Scheduler arg0)
        {
            return IExecute<Kafka.Server.Builders.LogManagerBuilder>("setScheduler", arg0);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/server/builders/LogManagerBuilder.html#setTime(org.apache.kafka.common.utils.Time)"/>
        /// </summary>
        /// <param name="arg0"><see cref="Org.Apache.Kafka.Common.Utils.Time"/></param>
        /// <returns><see cref="Kafka.Server.Builders.LogManagerBuilder"/></returns>
        public Kafka.Server.Builders.LogManagerBuilder SetTime(Org.Apache.Kafka.Common.Utils.Time arg0)
        {
            return IExecute<Kafka.Server.Builders.LogManagerBuilder>("setTime", arg0);
        }

        #endregion

        #region Nested classes

        #endregion

        // TODO: complete the class
    }
    #endregion
}