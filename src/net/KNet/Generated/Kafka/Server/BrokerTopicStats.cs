/*
*  Copyright 2023 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 1.5.5.0)
*  using kafka_2.13-3.4.0.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Kafka.Server
{
    #region BrokerTopicStats
    public partial class BrokerTopicStats
    {
        #region Constructors

        #endregion

        #region Class/Interface conversion operators
        /// <summary>
        /// Converter from <see cref="Kafka.Server.BrokerTopicStats"/> to <see cref="Kafka.Utils.Logging"/>
        /// </summary>
        public static implicit operator Kafka.Utils.Logging(Kafka.Server.BrokerTopicStats t) => t.Cast<Kafka.Utils.Logging>();

        #endregion

        #region Fields

        #endregion

        #region Static methods
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/server/BrokerTopicStats.html#BytesInPerSec()"/> 
        /// </summary>
        public static string BytesInPerSec
        {
            get { return SExecute<string>(LocalBridgeClazz, "BytesInPerSec"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/server/BrokerTopicStats.html#BytesOutPerSec()"/> 
        /// </summary>
        public static string BytesOutPerSec
        {
            get { return SExecute<string>(LocalBridgeClazz, "BytesOutPerSec"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/server/BrokerTopicStats.html#BytesRejectedPerSec()"/> 
        /// </summary>
        public static string BytesRejectedPerSec
        {
            get { return SExecute<string>(LocalBridgeClazz, "BytesRejectedPerSec"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/server/BrokerTopicStats.html#FailedFetchRequestsPerSec()"/> 
        /// </summary>
        public static string FailedFetchRequestsPerSec
        {
            get { return SExecute<string>(LocalBridgeClazz, "FailedFetchRequestsPerSec"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/server/BrokerTopicStats.html#FailedProduceRequestsPerSec()"/> 
        /// </summary>
        public static string FailedProduceRequestsPerSec
        {
            get { return SExecute<string>(LocalBridgeClazz, "FailedProduceRequestsPerSec"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/server/BrokerTopicStats.html#FetchMessageConversionsPerSec()"/> 
        /// </summary>
        public static string FetchMessageConversionsPerSec
        {
            get { return SExecute<string>(LocalBridgeClazz, "FetchMessageConversionsPerSec"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/server/BrokerTopicStats.html#InvalidMagicNumberRecordsPerSec()"/> 
        /// </summary>
        public static string InvalidMagicNumberRecordsPerSec
        {
            get { return SExecute<string>(LocalBridgeClazz, "InvalidMagicNumberRecordsPerSec"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/server/BrokerTopicStats.html#InvalidMessageCrcRecordsPerSec()"/> 
        /// </summary>
        public static string InvalidMessageCrcRecordsPerSec
        {
            get { return SExecute<string>(LocalBridgeClazz, "InvalidMessageCrcRecordsPerSec"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/server/BrokerTopicStats.html#InvalidOffsetOrSequenceRecordsPerSec()"/> 
        /// </summary>
        public static string InvalidOffsetOrSequenceRecordsPerSec
        {
            get { return SExecute<string>(LocalBridgeClazz, "InvalidOffsetOrSequenceRecordsPerSec"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/server/BrokerTopicStats.html#MessagesInPerSec()"/> 
        /// </summary>
        public static string MessagesInPerSec
        {
            get { return SExecute<string>(LocalBridgeClazz, "MessagesInPerSec"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/server/BrokerTopicStats.html#NoKeyCompactedTopicRecordsPerSec()"/> 
        /// </summary>
        public static string NoKeyCompactedTopicRecordsPerSec
        {
            get { return SExecute<string>(LocalBridgeClazz, "NoKeyCompactedTopicRecordsPerSec"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/server/BrokerTopicStats.html#ProduceMessageConversionsPerSec()"/> 
        /// </summary>
        public static string ProduceMessageConversionsPerSec
        {
            get { return SExecute<string>(LocalBridgeClazz, "ProduceMessageConversionsPerSec"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/server/BrokerTopicStats.html#ReassignmentBytesInPerSec()"/> 
        /// </summary>
        public static string ReassignmentBytesInPerSec
        {
            get { return SExecute<string>(LocalBridgeClazz, "ReassignmentBytesInPerSec"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/server/BrokerTopicStats.html#ReassignmentBytesOutPerSec()"/> 
        /// </summary>
        public static string ReassignmentBytesOutPerSec
        {
            get { return SExecute<string>(LocalBridgeClazz, "ReassignmentBytesOutPerSec"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/server/BrokerTopicStats.html#ReplicationBytesInPerSec()"/> 
        /// </summary>
        public static string ReplicationBytesInPerSec
        {
            get { return SExecute<string>(LocalBridgeClazz, "ReplicationBytesInPerSec"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/server/BrokerTopicStats.html#ReplicationBytesOutPerSec()"/> 
        /// </summary>
        public static string ReplicationBytesOutPerSec
        {
            get { return SExecute<string>(LocalBridgeClazz, "ReplicationBytesOutPerSec"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/server/BrokerTopicStats.html#TotalFetchRequestsPerSec()"/> 
        /// </summary>
        public static string TotalFetchRequestsPerSec
        {
            get { return SExecute<string>(LocalBridgeClazz, "TotalFetchRequestsPerSec"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/server/BrokerTopicStats.html#TotalProduceRequestsPerSec()"/> 
        /// </summary>
        public static string TotalProduceRequestsPerSec
        {
            get { return SExecute<string>(LocalBridgeClazz, "TotalProduceRequestsPerSec"); }
        }

        #endregion

        #region Instance methods
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/server/BrokerTopicStats.html#allTopicsStats()"/> 
        /// </summary>
        public Kafka.Server.BrokerTopicMetrics AllTopicsStats
        {
            get { return IExecute<Kafka.Server.BrokerTopicMetrics>("allTopicsStats"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/server/BrokerTopicStats.html#isDebugEnabled()"/> 
        /// </summary>
        public bool IsDebugEnabled
        {
            get { return IExecute<bool>("isDebugEnabled"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/server/BrokerTopicStats.html#isTraceEnabled()"/> 
        /// </summary>
        public bool IsTraceEnabled
        {
            get { return IExecute<bool>("isTraceEnabled"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/server/BrokerTopicStats.html#logger()"/> 
        /// </summary>
        public Com.Typesafe.Scalalogging.Logger Logger
        {
            get { return IExecute<Com.Typesafe.Scalalogging.Logger>("logger"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/server/BrokerTopicStats.html#loggerName()"/> 
        /// </summary>
        public string LoggerName
        {
            get { return IExecute<string>("loggerName"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/server/BrokerTopicStats.html#logIdent()"/> 
        /// </summary>
        public string LogIdent
        {
            get { return IExecute<string>("logIdent"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/server/BrokerTopicStats.html#msgWithLogIdent(java.lang.String)"/>
        /// </summary>
        /// <param name="msg"><see cref="string"/></param>
        /// <returns><see cref="string"/></returns>
        public string MsgWithLogIdent(string msg)
        {
            return IExecute<string>("msgWithLogIdent", msg);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/server/BrokerTopicStats.html#topicStats(java.lang.String)"/>
        /// </summary>
        /// <param name="topic"><see cref="string"/></param>
        /// <returns><see cref="Kafka.Server.BrokerTopicMetrics"/></returns>
        public Kafka.Server.BrokerTopicMetrics TopicStats(string topic)
        {
            return IExecute<Kafka.Server.BrokerTopicMetrics>("topicStats", topic);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/server/BrokerTopicStats.html#close()"/>
        /// </summary>
        public void Close()
        {
            IExecute("close");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/server/BrokerTopicStats.html#removeMetrics(java.lang.String)"/>
        /// </summary>
        /// <param name="topic"><see cref="string"/></param>
        public void RemoveMetrics(string topic)
        {
            IExecute("removeMetrics", topic);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/server/BrokerTopicStats.html#removeOldFollowerMetrics(java.lang.String)"/>
        /// </summary>
        /// <param name="topic"><see cref="string"/></param>
        public void RemoveOldFollowerMetrics(string topic)
        {
            IExecute("removeOldFollowerMetrics", topic);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/server/BrokerTopicStats.html#removeOldLeaderMetrics(java.lang.String)"/>
        /// </summary>
        /// <param name="topic"><see cref="string"/></param>
        public void RemoveOldLeaderMetrics(string topic)
        {
            IExecute("removeOldLeaderMetrics", topic);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/server/BrokerTopicStats.html#updateBytesOut(java.lang.String,boolean,boolean,long)"/>
        /// </summary>
        /// <param name="topic"><see cref="string"/></param>
        /// <param name="isFollower"><see cref="bool"/></param>
        /// <param name="isReassignment"><see cref="bool"/></param>
        /// <param name="value"><see cref="long"/></param>
        public void UpdateBytesOut(string topic, bool isFollower, bool isReassignment, long value)
        {
            IExecute("updateBytesOut", topic, isFollower, isReassignment, value);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/server/BrokerTopicStats.html#updateReassignmentBytesIn(long)"/>
        /// </summary>
        /// <param name="value"><see cref="long"/></param>
        public void UpdateReassignmentBytesIn(long value)
        {
            IExecute("updateReassignmentBytesIn", value);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/server/BrokerTopicStats.html#updateReassignmentBytesOut(long)"/>
        /// </summary>
        /// <param name="value"><see cref="long"/></param>
        public void UpdateReassignmentBytesOut(long value)
        {
            IExecute("updateReassignmentBytesOut", value);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/server/BrokerTopicStats.html#updateReplicationBytesIn(long)"/>
        /// </summary>
        /// <param name="value"><see cref="long"/></param>
        public void UpdateReplicationBytesIn(long value)
        {
            IExecute("updateReplicationBytesIn", value);
        }

        #endregion

        #region Nested classes

        #endregion

        // TODO: complete the class
    }
    #endregion
}