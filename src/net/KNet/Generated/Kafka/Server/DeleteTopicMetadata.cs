/*
*  Copyright 2023 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 1.5.5.0)
*  using kafka_2.13-3.4.0.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Kafka.Server
{
    #region DeleteTopicMetadata
    public partial class DeleteTopicMetadata
    {
        #region Constructors
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/server/DeleteTopicMetadata.html#%3Cinit%3E(java.lang.String,org.apache.kafka.common.protocol.Errors)"/>
        /// </summary>
        /// <param name="topic"><see cref="string"/></param>
        /// <param name="error"><see cref="Org.Apache.Kafka.Common.Protocol.Errors"/></param>
        public DeleteTopicMetadata(string topic, Org.Apache.Kafka.Common.Protocol.Errors error)
            : base(topic, error)
        {
        }

        #endregion

        #region Class/Interface conversion operators
        /// <summary>
        /// Converter from <see cref="Kafka.Server.DeleteTopicMetadata"/> to <see cref="Java.Io.Serializable"/>
        /// </summary>
        public static implicit operator Java.Io.Serializable(Kafka.Server.DeleteTopicMetadata t) => t.Cast<Java.Io.Serializable>();

        #endregion

        #region Fields

        #endregion

        #region Static methods
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/server/DeleteTopicMetadata.html#apply(java.lang.String,java.lang.Throwable)"/>
        /// </summary>
        /// <param name="topic"><see cref="string"/></param>
        /// <param name="throwable"><see cref="Java.Lang.Throwable"/></param>
        /// <returns><see cref="Kafka.Server.DeleteTopicMetadata"/></returns>
        public static Kafka.Server.DeleteTopicMetadata Apply(string topic, Java.Lang.Throwable throwable)
        {
            return SExecute<Kafka.Server.DeleteTopicMetadata>(LocalBridgeClazz, "apply", topic, throwable);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/server/DeleteTopicMetadata.html#apply(java.lang.String,org.apache.kafka.common.protocol.Errors)"/>
        /// </summary>
        /// <param name="topic"><see cref="string"/></param>
        /// <param name="error"><see cref="Org.Apache.Kafka.Common.Protocol.Errors"/></param>
        /// <returns><see cref="Kafka.Server.DeleteTopicMetadata"/></returns>
        public static Kafka.Server.DeleteTopicMetadata Apply(string topic, Org.Apache.Kafka.Common.Protocol.Errors error)
        {
            return SExecute<Kafka.Server.DeleteTopicMetadata>(LocalBridgeClazz, "apply", topic, error);
        }

        #endregion

        #region Instance methods
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/server/DeleteTopicMetadata.html#error()"/> 
        /// </summary>
        public Org.Apache.Kafka.Common.Protocol.Errors Error
        {
            get { return IExecute<Org.Apache.Kafka.Common.Protocol.Errors>("error"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/server/DeleteTopicMetadata.html#productArity()"/> 
        /// </summary>
        public int ProductArity
        {
            get { return IExecute<int>("productArity"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/server/DeleteTopicMetadata.html#productPrefix()"/> 
        /// </summary>
        public string ProductPrefix
        {
            get { return IExecute<string>("productPrefix"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/server/DeleteTopicMetadata.html#topic()"/> 
        /// </summary>
        public string Topic
        {
            get { return IExecute<string>("topic"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/server/DeleteTopicMetadata.html#canEqual(java.lang.Object)"/>
        /// </summary>
        /// <param name="x$1"><see cref="object"/></param>
        /// <returns><see cref="bool"/></returns>
        public bool CanEqual(object x_1)
        {
            return IExecute<bool>("canEqual", x_1);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/server/DeleteTopicMetadata.html#productElement(int)"/>
        /// </summary>
        /// <param name="x$1"><see cref="int"/></param>
        /// <returns><see cref="object"/></returns>
        public object ProductElement(int x_1)
        {
            return IExecute("productElement", x_1);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/server/DeleteTopicMetadata.html#productElementName(int)"/>
        /// </summary>
        /// <param name="x$1"><see cref="int"/></param>
        /// <returns><see cref="string"/></returns>
        public string ProductElementName(int x_1)
        {
            return IExecute<string>("productElementName", x_1);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/server/DeleteTopicMetadata.html#copy(java.lang.String,org.apache.kafka.common.protocol.Errors)"/>
        /// </summary>
        /// <param name="topic"><see cref="string"/></param>
        /// <param name="error"><see cref="Org.Apache.Kafka.Common.Protocol.Errors"/></param>
        /// <returns><see cref="Kafka.Server.DeleteTopicMetadata"/></returns>
        public Kafka.Server.DeleteTopicMetadata Copy(string topic, Org.Apache.Kafka.Common.Protocol.Errors error)
        {
            return IExecute<Kafka.Server.DeleteTopicMetadata>("copy", topic, error);
        }

        #endregion

        #region Nested classes

        #endregion

        // TODO: complete the class
    }
    #endregion
}