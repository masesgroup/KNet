/*
*  Copyright 2023 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 1.5.5.0)
*  using kafka_2.13-3.4.0.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Kafka.Server
{
    #region ControllerApis
    public partial class ControllerApis
    {
        #region Constructors

        #endregion

        #region Class/Interface conversion operators
        /// <summary>
        /// Converter from <see cref="Kafka.Server.ControllerApis"/> to <see cref="Kafka.Server.ApiRequestHandler"/>
        /// </summary>
        public static implicit operator Kafka.Server.ApiRequestHandler(Kafka.Server.ControllerApis t) => t.Cast<Kafka.Server.ApiRequestHandler>();
        /// <summary>
        /// Converter from <see cref="Kafka.Server.ControllerApis"/> to <see cref="Kafka.Utils.Logging"/>
        /// </summary>
        public static implicit operator Kafka.Utils.Logging(Kafka.Server.ControllerApis t) => t.Cast<Kafka.Utils.Logging>();

        #endregion

        #region Fields

        #endregion

        #region Static methods

        #endregion

        #region Instance methods
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/server/ControllerApis.html#apiVersionManager()"/> 
        /// </summary>
        public Kafka.Server.ApiVersionManager ApiVersionManager
        {
            get { return IExecute<Kafka.Server.ApiVersionManager>("apiVersionManager"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/server/ControllerApis.html#authHelper()"/> 
        /// </summary>
        public Kafka.Server.AuthHelper AuthHelper
        {
            get { return IExecute<Kafka.Server.AuthHelper>("authHelper"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/server/ControllerApis.html#config()"/> 
        /// </summary>
        public Kafka.Server.KafkaConfig Config
        {
            get { return IExecute<Kafka.Server.KafkaConfig>("config"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/server/ControllerApis.html#controller()"/> 
        /// </summary>
        public Org.Apache.Kafka.Controller.Controller Controller
        {
            get { return IExecute<Org.Apache.Kafka.Controller.Controller>("controller"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/server/ControllerApis.html#isClosed()"/> 
        /// </summary>
        public bool IsClosed
        {
            get { return IExecute<bool>("isClosed"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/server/ControllerApis.html#isDebugEnabled()"/> 
        /// </summary>
        public bool IsDebugEnabled
        {
            get { return IExecute<bool>("isDebugEnabled"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/server/ControllerApis.html#isTraceEnabled()"/> 
        /// </summary>
        public bool IsTraceEnabled
        {
            get { return IExecute<bool>("isTraceEnabled"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/server/ControllerApis.html#logger()"/> 
        /// </summary>
        public Com.Typesafe.Scalalogging.Logger Logger
        {
            get { return IExecute<Com.Typesafe.Scalalogging.Logger>("logger"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/server/ControllerApis.html#loggerName()"/> 
        /// </summary>
        public string LoggerName
        {
            get { return IExecute<string>("loggerName"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/server/ControllerApis.html#logIdent()"/> 
        /// </summary>
        public string LogIdent
        {
            get { return IExecute<string>("logIdent"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/server/ControllerApis.html#metaProperties()"/> 
        /// </summary>
        public Kafka.Server.MetaProperties MetaProperties
        {
            get { return IExecute<Kafka.Server.MetaProperties>("metaProperties"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/server/ControllerApis.html#quotas()"/> 
        /// </summary>
        public Kafka.Server.QuotaFactory.QuotaManagers Quotas
        {
            get { return IExecute<Kafka.Server.QuotaFactory.QuotaManagers>("quotas"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/server/ControllerApis.html#raftManager()"/> 
        /// </summary>
        public Kafka.Raft.RaftManager<Org.Apache.Kafka.Server.Common.ApiMessageAndVersion> RaftManager
        {
            get { return IExecute<Kafka.Raft.RaftManager<Org.Apache.Kafka.Server.Common.ApiMessageAndVersion>>("raftManager"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/server/ControllerApis.html#requestChannel()"/> 
        /// </summary>
        public Kafka.Network.RequestChannel RequestChannel
        {
            get { return IExecute<Kafka.Network.RequestChannel>("requestChannel"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/server/ControllerApis.html#requestHelper()"/> 
        /// </summary>
        public Kafka.Server.RequestHandlerHelper RequestHelper
        {
            get { return IExecute<Kafka.Server.RequestHandlerHelper>("requestHelper"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/server/ControllerApis.html#time()"/> 
        /// </summary>
        public Org.Apache.Kafka.Common.Utils.Time Time
        {
            get { return IExecute<Org.Apache.Kafka.Common.Utils.Time>("time"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/server/ControllerApis.html#msgWithLogIdent(java.lang.String)"/>
        /// </summary>
        /// <param name="msg"><see cref="string"/></param>
        /// <returns><see cref="string"/></returns>
        public string MsgWithLogIdent(string msg)
        {
            return IExecute<string>("msgWithLogIdent", msg);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/server/ControllerApis.html#handleAllocateProducerIdsRequest(kafka.network.RequestChannel.Request)"/>
        /// </summary>
        /// <param name="request"><see cref="Kafka.Network.RequestChannel.Request"/></param>
        /// <returns><see cref="Java.Util.Concurrent.CompletableFuture"/></returns>
        public Java.Util.Concurrent.CompletableFuture<Scala.Runtime.BoxedUnit> HandleAllocateProducerIdsRequest(Kafka.Network.RequestChannel.Request request)
        {
            return IExecute<Java.Util.Concurrent.CompletableFuture<Scala.Runtime.BoxedUnit>>("handleAllocateProducerIdsRequest", request);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/server/ControllerApis.html#handleAlterClientQuotas(kafka.network.RequestChannel.Request)"/>
        /// </summary>
        /// <param name="request"><see cref="Kafka.Network.RequestChannel.Request"/></param>
        /// <returns><see cref="Java.Util.Concurrent.CompletableFuture"/></returns>
        public Java.Util.Concurrent.CompletableFuture<Scala.Runtime.BoxedUnit> HandleAlterClientQuotas(Kafka.Network.RequestChannel.Request request)
        {
            return IExecute<Java.Util.Concurrent.CompletableFuture<Scala.Runtime.BoxedUnit>>("handleAlterClientQuotas", request);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/server/ControllerApis.html#handleAlterPartitionReassignments(kafka.network.RequestChannel.Request)"/>
        /// </summary>
        /// <param name="request"><see cref="Kafka.Network.RequestChannel.Request"/></param>
        /// <returns><see cref="Java.Util.Concurrent.CompletableFuture"/></returns>
        public Java.Util.Concurrent.CompletableFuture<Scala.Runtime.BoxedUnit> HandleAlterPartitionReassignments(Kafka.Network.RequestChannel.Request request)
        {
            return IExecute<Java.Util.Concurrent.CompletableFuture<Scala.Runtime.BoxedUnit>>("handleAlterPartitionReassignments", request);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/server/ControllerApis.html#handleAlterPartitionRequest(kafka.network.RequestChannel.Request)"/>
        /// </summary>
        /// <param name="request"><see cref="Kafka.Network.RequestChannel.Request"/></param>
        /// <returns><see cref="Java.Util.Concurrent.CompletableFuture"/></returns>
        public Java.Util.Concurrent.CompletableFuture<Scala.Runtime.BoxedUnit> HandleAlterPartitionRequest(Kafka.Network.RequestChannel.Request request)
        {
            return IExecute<Java.Util.Concurrent.CompletableFuture<Scala.Runtime.BoxedUnit>>("handleAlterPartitionRequest", request);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/server/ControllerApis.html#handleApiVersionsRequest(kafka.network.RequestChannel.Request)"/>
        /// </summary>
        /// <param name="request"><see cref="Kafka.Network.RequestChannel.Request"/></param>
        /// <returns><see cref="Java.Util.Concurrent.CompletableFuture"/></returns>
        public Java.Util.Concurrent.CompletableFuture<Scala.Runtime.BoxedUnit> HandleApiVersionsRequest(Kafka.Network.RequestChannel.Request request)
        {
            return IExecute<Java.Util.Concurrent.CompletableFuture<Scala.Runtime.BoxedUnit>>("handleApiVersionsRequest", request);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/server/ControllerApis.html#handleBeginQuorumEpoch(kafka.network.RequestChannel.Request)"/>
        /// </summary>
        /// <param name="request"><see cref="Kafka.Network.RequestChannel.Request"/></param>
        /// <returns><see cref="Java.Util.Concurrent.CompletableFuture"/></returns>
        public Java.Util.Concurrent.CompletableFuture<Scala.Runtime.BoxedUnit> HandleBeginQuorumEpoch(Kafka.Network.RequestChannel.Request request)
        {
            return IExecute<Java.Util.Concurrent.CompletableFuture<Scala.Runtime.BoxedUnit>>("handleBeginQuorumEpoch", request);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/server/ControllerApis.html#handleBrokerHeartBeatRequest(kafka.network.RequestChannel.Request)"/>
        /// </summary>
        /// <param name="request"><see cref="Kafka.Network.RequestChannel.Request"/></param>
        /// <returns><see cref="Java.Util.Concurrent.CompletableFuture"/></returns>
        public Java.Util.Concurrent.CompletableFuture<Scala.Runtime.BoxedUnit> HandleBrokerHeartBeatRequest(Kafka.Network.RequestChannel.Request request)
        {
            return IExecute<Java.Util.Concurrent.CompletableFuture<Scala.Runtime.BoxedUnit>>("handleBrokerHeartBeatRequest", request);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/server/ControllerApis.html#handleBrokerRegistration(kafka.network.RequestChannel.Request)"/>
        /// </summary>
        /// <param name="request"><see cref="Kafka.Network.RequestChannel.Request"/></param>
        /// <returns><see cref="Java.Util.Concurrent.CompletableFuture"/></returns>
        public Java.Util.Concurrent.CompletableFuture<Scala.Runtime.BoxedUnit> HandleBrokerRegistration(Kafka.Network.RequestChannel.Request request)
        {
            return IExecute<Java.Util.Concurrent.CompletableFuture<Scala.Runtime.BoxedUnit>>("handleBrokerRegistration", request);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/server/ControllerApis.html#handleCreatePartitions(kafka.network.RequestChannel.Request)"/>
        /// </summary>
        /// <param name="request"><see cref="Kafka.Network.RequestChannel.Request"/></param>
        /// <returns><see cref="Java.Util.Concurrent.CompletableFuture"/></returns>
        public Java.Util.Concurrent.CompletableFuture<Scala.Runtime.BoxedUnit> HandleCreatePartitions(Kafka.Network.RequestChannel.Request request)
        {
            return IExecute<Java.Util.Concurrent.CompletableFuture<Scala.Runtime.BoxedUnit>>("handleCreatePartitions", request);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/server/ControllerApis.html#handleCreateTopics(kafka.network.RequestChannel.Request)"/>
        /// </summary>
        /// <param name="request"><see cref="Kafka.Network.RequestChannel.Request"/></param>
        /// <returns><see cref="Java.Util.Concurrent.CompletableFuture"/></returns>
        public Java.Util.Concurrent.CompletableFuture<Scala.Runtime.BoxedUnit> HandleCreateTopics(Kafka.Network.RequestChannel.Request request)
        {
            return IExecute<Java.Util.Concurrent.CompletableFuture<Scala.Runtime.BoxedUnit>>("handleCreateTopics", request);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/server/ControllerApis.html#handleDeleteTopics(kafka.network.RequestChannel.Request)"/>
        /// </summary>
        /// <param name="request"><see cref="Kafka.Network.RequestChannel.Request"/></param>
        /// <returns><see cref="Java.Util.Concurrent.CompletableFuture"/></returns>
        public Java.Util.Concurrent.CompletableFuture<Scala.Runtime.BoxedUnit> HandleDeleteTopics(Kafka.Network.RequestChannel.Request request)
        {
            return IExecute<Java.Util.Concurrent.CompletableFuture<Scala.Runtime.BoxedUnit>>("handleDeleteTopics", request);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/server/ControllerApis.html#handleDescribeQuorum(kafka.network.RequestChannel.Request)"/>
        /// </summary>
        /// <param name="request"><see cref="Kafka.Network.RequestChannel.Request"/></param>
        /// <returns><see cref="Java.Util.Concurrent.CompletableFuture"/></returns>
        public Java.Util.Concurrent.CompletableFuture<Scala.Runtime.BoxedUnit> HandleDescribeQuorum(Kafka.Network.RequestChannel.Request request)
        {
            return IExecute<Java.Util.Concurrent.CompletableFuture<Scala.Runtime.BoxedUnit>>("handleDescribeQuorum", request);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/server/ControllerApis.html#handleElectLeaders(kafka.network.RequestChannel.Request)"/>
        /// </summary>
        /// <param name="request"><see cref="Kafka.Network.RequestChannel.Request"/></param>
        /// <returns><see cref="Java.Util.Concurrent.CompletableFuture"/></returns>
        public Java.Util.Concurrent.CompletableFuture<Scala.Runtime.BoxedUnit> HandleElectLeaders(Kafka.Network.RequestChannel.Request request)
        {
            return IExecute<Java.Util.Concurrent.CompletableFuture<Scala.Runtime.BoxedUnit>>("handleElectLeaders", request);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/server/ControllerApis.html#handleEndQuorumEpoch(kafka.network.RequestChannel.Request)"/>
        /// </summary>
        /// <param name="request"><see cref="Kafka.Network.RequestChannel.Request"/></param>
        /// <returns><see cref="Java.Util.Concurrent.CompletableFuture"/></returns>
        public Java.Util.Concurrent.CompletableFuture<Scala.Runtime.BoxedUnit> HandleEndQuorumEpoch(Kafka.Network.RequestChannel.Request request)
        {
            return IExecute<Java.Util.Concurrent.CompletableFuture<Scala.Runtime.BoxedUnit>>("handleEndQuorumEpoch", request);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/server/ControllerApis.html#handleEnvelopeRequest(kafka.network.RequestChannel.Request,kafka.server.RequestLocal)"/>
        /// </summary>
        /// <param name="request"><see cref="Kafka.Network.RequestChannel.Request"/></param>
        /// <param name="requestLocal"><see cref="Kafka.Server.RequestLocal"/></param>
        /// <returns><see cref="Java.Util.Concurrent.CompletableFuture"/></returns>
        public Java.Util.Concurrent.CompletableFuture<Scala.Runtime.BoxedUnit> HandleEnvelopeRequest(Kafka.Network.RequestChannel.Request request, Kafka.Server.RequestLocal requestLocal)
        {
            return IExecute<Java.Util.Concurrent.CompletableFuture<Scala.Runtime.BoxedUnit>>("handleEnvelopeRequest", request, requestLocal);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/server/ControllerApis.html#handleFetch(kafka.network.RequestChannel.Request)"/>
        /// </summary>
        /// <param name="request"><see cref="Kafka.Network.RequestChannel.Request"/></param>
        /// <returns><see cref="Java.Util.Concurrent.CompletableFuture"/></returns>
        public Java.Util.Concurrent.CompletableFuture<Scala.Runtime.BoxedUnit> HandleFetch(Kafka.Network.RequestChannel.Request request)
        {
            return IExecute<Java.Util.Concurrent.CompletableFuture<Scala.Runtime.BoxedUnit>>("handleFetch", request);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/server/ControllerApis.html#handleFetchSnapshot(kafka.network.RequestChannel.Request)"/>
        /// </summary>
        /// <param name="request"><see cref="Kafka.Network.RequestChannel.Request"/></param>
        /// <returns><see cref="Java.Util.Concurrent.CompletableFuture"/></returns>
        public Java.Util.Concurrent.CompletableFuture<Scala.Runtime.BoxedUnit> HandleFetchSnapshot(Kafka.Network.RequestChannel.Request request)
        {
            return IExecute<Java.Util.Concurrent.CompletableFuture<Scala.Runtime.BoxedUnit>>("handleFetchSnapshot", request);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/server/ControllerApis.html#handleIncrementalAlterConfigs(kafka.network.RequestChannel.Request)"/>
        /// </summary>
        /// <param name="request"><see cref="Kafka.Network.RequestChannel.Request"/></param>
        /// <returns><see cref="Java.Util.Concurrent.CompletableFuture"/></returns>
        public Java.Util.Concurrent.CompletableFuture<Scala.Runtime.BoxedUnit> HandleIncrementalAlterConfigs(Kafka.Network.RequestChannel.Request request)
        {
            return IExecute<Java.Util.Concurrent.CompletableFuture<Scala.Runtime.BoxedUnit>>("handleIncrementalAlterConfigs", request);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/server/ControllerApis.html#handleLegacyAlterConfigs(kafka.network.RequestChannel.Request)"/>
        /// </summary>
        /// <param name="request"><see cref="Kafka.Network.RequestChannel.Request"/></param>
        /// <returns><see cref="Java.Util.Concurrent.CompletableFuture"/></returns>
        public Java.Util.Concurrent.CompletableFuture<Scala.Runtime.BoxedUnit> HandleLegacyAlterConfigs(Kafka.Network.RequestChannel.Request request)
        {
            return IExecute<Java.Util.Concurrent.CompletableFuture<Scala.Runtime.BoxedUnit>>("handleLegacyAlterConfigs", request);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/server/ControllerApis.html#handleListPartitionReassignments(kafka.network.RequestChannel.Request)"/>
        /// </summary>
        /// <param name="request"><see cref="Kafka.Network.RequestChannel.Request"/></param>
        /// <returns><see cref="Java.Util.Concurrent.CompletableFuture"/></returns>
        public Java.Util.Concurrent.CompletableFuture<Scala.Runtime.BoxedUnit> HandleListPartitionReassignments(Kafka.Network.RequestChannel.Request request)
        {
            return IExecute<Java.Util.Concurrent.CompletableFuture<Scala.Runtime.BoxedUnit>>("handleListPartitionReassignments", request);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/server/ControllerApis.html#handleSaslAuthenticateRequest(kafka.network.RequestChannel.Request)"/>
        /// </summary>
        /// <param name="request"><see cref="Kafka.Network.RequestChannel.Request"/></param>
        /// <returns><see cref="Java.Util.Concurrent.CompletableFuture"/></returns>
        public Java.Util.Concurrent.CompletableFuture<Scala.Runtime.BoxedUnit> HandleSaslAuthenticateRequest(Kafka.Network.RequestChannel.Request request)
        {
            return IExecute<Java.Util.Concurrent.CompletableFuture<Scala.Runtime.BoxedUnit>>("handleSaslAuthenticateRequest", request);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/server/ControllerApis.html#handleSaslHandshakeRequest(kafka.network.RequestChannel.Request)"/>
        /// </summary>
        /// <param name="request"><see cref="Kafka.Network.RequestChannel.Request"/></param>
        /// <returns><see cref="Java.Util.Concurrent.CompletableFuture"/></returns>
        public Java.Util.Concurrent.CompletableFuture<Scala.Runtime.BoxedUnit> HandleSaslHandshakeRequest(Kafka.Network.RequestChannel.Request request)
        {
            return IExecute<Java.Util.Concurrent.CompletableFuture<Scala.Runtime.BoxedUnit>>("handleSaslHandshakeRequest", request);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/server/ControllerApis.html#handleUnregisterBroker(kafka.network.RequestChannel.Request)"/>
        /// </summary>
        /// <param name="request"><see cref="Kafka.Network.RequestChannel.Request"/></param>
        /// <returns><see cref="Java.Util.Concurrent.CompletableFuture"/></returns>
        public Java.Util.Concurrent.CompletableFuture<Scala.Runtime.BoxedUnit> HandleUnregisterBroker(Kafka.Network.RequestChannel.Request request)
        {
            return IExecute<Java.Util.Concurrent.CompletableFuture<Scala.Runtime.BoxedUnit>>("handleUnregisterBroker", request);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/server/ControllerApis.html#handleUpdateFeatures(kafka.network.RequestChannel.Request)"/>
        /// </summary>
        /// <param name="request"><see cref="Kafka.Network.RequestChannel.Request"/></param>
        /// <returns><see cref="Java.Util.Concurrent.CompletableFuture"/></returns>
        public Java.Util.Concurrent.CompletableFuture<Scala.Runtime.BoxedUnit> HandleUpdateFeatures(Kafka.Network.RequestChannel.Request request)
        {
            return IExecute<Java.Util.Concurrent.CompletableFuture<Scala.Runtime.BoxedUnit>>("handleUpdateFeatures", request);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/server/ControllerApis.html#handleVote(kafka.network.RequestChannel.Request)"/>
        /// </summary>
        /// <param name="request"><see cref="Kafka.Network.RequestChannel.Request"/></param>
        /// <returns><see cref="Java.Util.Concurrent.CompletableFuture"/></returns>
        public Java.Util.Concurrent.CompletableFuture<Scala.Runtime.BoxedUnit> HandleVote(Kafka.Network.RequestChannel.Request request)
        {
            return IExecute<Java.Util.Concurrent.CompletableFuture<Scala.Runtime.BoxedUnit>>("handleVote", request);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/server/ControllerApis.html#authorizeAlterResource(org.apache.kafka.common.requests.RequestContext,org.apache.kafka.common.config.ConfigResource)"/>
        /// </summary>
        /// <param name="requestContext"><see cref="Org.Apache.Kafka.Common.Requests.RequestContext"/></param>
        /// <param name="resource"><see cref="Org.Apache.Kafka.Common.Config.ConfigResource"/></param>
        /// <returns><see cref="Org.Apache.Kafka.Common.Requests.ApiError"/></returns>
        public Org.Apache.Kafka.Common.Requests.ApiError AuthorizeAlterResource(Org.Apache.Kafka.Common.Requests.RequestContext requestContext, Org.Apache.Kafka.Common.Config.ConfigResource resource)
        {
            return IExecute<Org.Apache.Kafka.Common.Requests.ApiError>("authorizeAlterResource", requestContext, resource);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/server/ControllerApis.html#close()"/>
        /// </summary>
        public void Close()
        {
            IExecute("close");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/server/ControllerApis.html#handle(kafka.network.RequestChannel.Request,kafka.server.RequestLocal)"/>
        /// </summary>
        /// <param name="request"><see cref="Kafka.Network.RequestChannel.Request"/></param>
        /// <param name="requestLocal"><see cref="Kafka.Server.RequestLocal"/></param>
        public void Handle(Kafka.Network.RequestChannel.Request request, Kafka.Server.RequestLocal requestLocal)
        {
            IExecute("handle", request, requestLocal);
        }

        #endregion

        #region Nested classes

        #endregion

        // TODO: complete the class
    }
    #endregion
}