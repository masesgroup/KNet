/*
*  Copyright 2023 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 1.5.5.0)
*  using kafka_2.13-3.4.0.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Kafka.Server
{
    #region Server
    public partial class Server
    {
        #region Constructors

        #endregion

        #region Class/Interface conversion operators

        #endregion

        #region Fields

        #endregion

        #region Static methods
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/server/Server.html#BrokerIdLabel()"/> 
        /// </summary>
        public static string BrokerIdLabel
        {
            get { return SExecute<string>(LocalBridgeClazz, "BrokerIdLabel"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/server/Server.html#ClusterIdLabel()"/> 
        /// </summary>
        public static string ClusterIdLabel
        {
            get { return SExecute<string>(LocalBridgeClazz, "ClusterIdLabel"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/server/Server.html#MetricsPrefix()"/> 
        /// </summary>
        public static string MetricsPrefix
        {
            get { return SExecute<string>(LocalBridgeClazz, "MetricsPrefix"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/server/Server.html#NodeIdLabel()"/> 
        /// </summary>
        public static string NodeIdLabel
        {
            get { return SExecute<string>(LocalBridgeClazz, "NodeIdLabel"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/server/Server.html#buildMetricsConfig(kafka.server.KafkaConfig)"/>
        /// </summary>
        /// <param name="kafkaConfig"><see cref="Kafka.Server.KafkaConfig"/></param>
        /// <returns><see cref="Org.Apache.Kafka.Common.Metrics.MetricConfig"/></returns>
        public static Org.Apache.Kafka.Common.Metrics.MetricConfig BuildMetricsConfig(Kafka.Server.KafkaConfig kafkaConfig)
        {
            return SExecute<Org.Apache.Kafka.Common.Metrics.MetricConfig>(LocalBridgeClazz, "buildMetricsConfig", kafkaConfig);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/server/Server.html#initializeMetrics(kafka.server.KafkaConfig,org.apache.kafka.common.utils.Time,java.lang.String)"/>
        /// </summary>
        /// <param name="config"><see cref="Kafka.Server.KafkaConfig"/></param>
        /// <param name="time"><see cref="Org.Apache.Kafka.Common.Utils.Time"/></param>
        /// <param name="clusterId"><see cref="string"/></param>
        /// <returns><see cref="Org.Apache.Kafka.Common.Metrics.Metrics"/></returns>
        public static Org.Apache.Kafka.Common.Metrics.Metrics InitializeMetrics(Kafka.Server.KafkaConfig config, Org.Apache.Kafka.Common.Utils.Time time, string clusterId)
        {
            return SExecute<Org.Apache.Kafka.Common.Metrics.Metrics>(LocalBridgeClazz, "initializeMetrics", config, time, clusterId);
        }

        #endregion

        #region Instance methods
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/server/Server.html#awaitShutdown()"/>
        /// </summary>
        public void AwaitShutdown()
        {
            IExecute("awaitShutdown");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/server/Server.html#shutdown()"/>
        /// </summary>
        public void Shutdown()
        {
            IExecute("shutdown");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/server/Server.html#startup()"/>
        /// </summary>
        public void Startup()
        {
            IExecute("startup");
        }

        #endregion

        #region Nested classes
        #region ProcessStatus
        public partial class ProcessStatus
        {
            #region Constructors

            #endregion

            #region Class/Interface conversion operators

            #endregion

            #region Fields

            #endregion

            #region Static methods

            #endregion

            #region Instance methods

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

    
        #endregion

        // TODO: complete the class
    }
    #endregion
}