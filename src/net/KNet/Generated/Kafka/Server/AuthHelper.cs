/*
*  Copyright 2023 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 1.5.5.0)
*  using kafka_2.13-3.4.0.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Kafka.Server
{
    #region AuthHelper
    public partial class AuthHelper
    {
        #region Constructors

        #endregion

        #region Class/Interface conversion operators

        #endregion

        #region Fields

        #endregion

        #region Static methods

        #endregion

        #region Instance methods
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/server/AuthHelper.html#authorize(org.apache.kafka.common.requests.RequestContext,org.apache.kafka.common.acl.AclOperation,org.apache.kafka.common.resource.ResourceType,java.lang.String,boolean,boolean,int)"/>
        /// </summary>
        /// <param name="requestContext"><see cref="Org.Apache.Kafka.Common.Requests.RequestContext"/></param>
        /// <param name="operation"><see cref="Org.Apache.Kafka.Common.Acl.AclOperation"/></param>
        /// <param name="resourceType"><see cref="Org.Apache.Kafka.Common.Resource.ResourceType"/></param>
        /// <param name="resourceName"><see cref="string"/></param>
        /// <param name="logIfAllowed"><see cref="bool"/></param>
        /// <param name="logIfDenied"><see cref="bool"/></param>
        /// <param name="refCount"><see cref="int"/></param>
        /// <returns><see cref="bool"/></returns>
        public bool Authorize(Org.Apache.Kafka.Common.Requests.RequestContext requestContext, Org.Apache.Kafka.Common.Acl.AclOperation operation, Org.Apache.Kafka.Common.Resource.ResourceType resourceType, string resourceName, bool logIfAllowed, bool logIfDenied, int refCount)
        {
            return IExecute<bool>("authorize", requestContext, operation, resourceType, resourceName, logIfAllowed, logIfDenied, refCount);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/server/AuthHelper.html#authorizeByResourceType(org.apache.kafka.common.requests.RequestContext,org.apache.kafka.common.acl.AclOperation,org.apache.kafka.common.resource.ResourceType)"/>
        /// </summary>
        /// <param name="requestContext"><see cref="Org.Apache.Kafka.Common.Requests.RequestContext"/></param>
        /// <param name="operation"><see cref="Org.Apache.Kafka.Common.Acl.AclOperation"/></param>
        /// <param name="resourceType"><see cref="Org.Apache.Kafka.Common.Resource.ResourceType"/></param>
        /// <returns><see cref="bool"/></returns>
        public bool AuthorizeByResourceType(Org.Apache.Kafka.Common.Requests.RequestContext requestContext, Org.Apache.Kafka.Common.Acl.AclOperation operation, Org.Apache.Kafka.Common.Resource.ResourceType resourceType)
        {
            return IExecute<bool>("authorizeByResourceType", requestContext, operation, resourceType);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/server/AuthHelper.html#authorizedOperations(kafka.network.RequestChannel.Request,org.apache.kafka.common.resource.Resource)"/>
        /// </summary>
        /// <param name="request"><see cref="Kafka.Network.RequestChannel.Request"/></param>
        /// <param name="resource"><see cref="Org.Apache.Kafka.Common.Resource.Resource"/></param>
        /// <returns><see cref="int"/></returns>
        public int AuthorizedOperations(Kafka.Network.RequestChannel.Request request, Org.Apache.Kafka.Common.Resource.Resource resource)
        {
            return IExecute<int>("authorizedOperations", request, resource);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/server/AuthHelper.html#authorizeClusterOperation(kafka.network.RequestChannel.Request,org.apache.kafka.common.acl.AclOperation)"/>
        /// </summary>
        /// <param name="request"><see cref="Kafka.Network.RequestChannel.Request"/></param>
        /// <param name="operation"><see cref="Org.Apache.Kafka.Common.Acl.AclOperation"/></param>
        public void AuthorizeClusterOperation(Kafka.Network.RequestChannel.Request request, Org.Apache.Kafka.Common.Acl.AclOperation operation)
        {
            IExecute("authorizeClusterOperation", request, operation);
        }

        #endregion

        #region Nested classes

        #endregion

        // TODO: complete the class
    }
    #endregion
}