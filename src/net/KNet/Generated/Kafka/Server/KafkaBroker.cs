/*
*  Copyright 2023 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 1.5.5.0)
*  using kafka_2.13-3.4.0.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Kafka.Server
{
    #region KafkaBroker
    public partial class KafkaBroker
    {
        #region Constructors

        #endregion

        #region Class/Interface conversion operators

        #endregion

        #region Fields

        #endregion

        #region Static methods
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/server/KafkaBroker.html#MetricsTypeName()"/> 
        /// </summary>
        public static string MetricsTypeName
        {
            get { return SExecute<string>(LocalBridgeClazz, "MetricsTypeName"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/server/KafkaBroker.html#STARTED_MESSAGE()"/> 
        /// </summary>
        public static string STARTED_MESSAGE
        {
            get { return SExecute<string>(LocalBridgeClazz, "STARTED_MESSAGE"); }
        }

        #endregion

        #region Instance methods
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/server/KafkaBroker.html#brokerState()"/> 
        /// </summary>
        public Org.Apache.Kafka.Metadata.BrokerState BrokerState
        {
            get { return IExecute<Org.Apache.Kafka.Metadata.BrokerState>("brokerState"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/server/KafkaBroker.html#brokerTopicStats()"/> 
        /// </summary>
        public Kafka.Server.BrokerTopicStats BrokerTopicStats
        {
            get { return IExecute<Kafka.Server.BrokerTopicStats>("brokerTopicStats"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/server/KafkaBroker.html#clientToControllerChannelManager()"/> 
        /// </summary>
        public Kafka.Server.BrokerToControllerChannelManager ClientToControllerChannelManager
        {
            get { return IExecute<Kafka.Server.BrokerToControllerChannelManager>("clientToControllerChannelManager"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/server/KafkaBroker.html#clusterId()"/> 
        /// </summary>
        public string ClusterId
        {
            get { return IExecute<string>("clusterId"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/server/KafkaBroker.html#config()"/> 
        /// </summary>
        public Kafka.Server.KafkaConfig Config
        {
            get { return IExecute<Kafka.Server.KafkaConfig>("config"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/server/KafkaBroker.html#credentialProvider()"/> 
        /// </summary>
        public Kafka.Security.CredentialProvider CredentialProvider
        {
            get { return IExecute<Kafka.Security.CredentialProvider>("credentialProvider"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/server/KafkaBroker.html#dataPlaneRequestHandlerPool()"/> 
        /// </summary>
        public Kafka.Server.KafkaRequestHandlerPool DataPlaneRequestHandlerPool
        {
            get { return IExecute<Kafka.Server.KafkaRequestHandlerPool>("dataPlaneRequestHandlerPool"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/server/KafkaBroker.html#dataPlaneRequestProcessor()"/> 
        /// </summary>
        public Kafka.Server.KafkaApis DataPlaneRequestProcessor
        {
            get { return IExecute<Kafka.Server.KafkaApis>("dataPlaneRequestProcessor"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/server/KafkaBroker.html#groupCoordinator()"/> 
        /// </summary>
        public Kafka.Coordinator.Group.GroupCoordinator GroupCoordinator
        {
            get { return IExecute<Kafka.Coordinator.Group.GroupCoordinator>("groupCoordinator"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/server/KafkaBroker.html#kafkaScheduler()"/> 
        /// </summary>
        public Kafka.Utils.KafkaScheduler KafkaScheduler
        {
            get { return IExecute<Kafka.Utils.KafkaScheduler>("kafkaScheduler"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/server/KafkaBroker.html#kafkaYammerMetrics()"/> 
        /// </summary>
        public Org.Apache.Kafka.Server.Metrics.KafkaYammerMetrics KafkaYammerMetrics
        {
            get { return IExecute<Org.Apache.Kafka.Server.Metrics.KafkaYammerMetrics>("kafkaYammerMetrics"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/server/KafkaBroker.html#logManager()"/> 
        /// </summary>
        public Kafka.Log.LogManager LogManager
        {
            get { return IExecute<Kafka.Log.LogManager>("logManager"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/server/KafkaBroker.html#metadataCache()"/> 
        /// </summary>
        public Kafka.Server.MetadataCache MetadataCache
        {
            get { return IExecute<Kafka.Server.MetadataCache>("metadataCache"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/server/KafkaBroker.html#metrics()"/> 
        /// </summary>
        public Org.Apache.Kafka.Common.Metrics.Metrics Metrics
        {
            get { return IExecute<Org.Apache.Kafka.Common.Metrics.Metrics>("metrics"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/server/KafkaBroker.html#quotaManagers()"/> 
        /// </summary>
        public Kafka.Server.QuotaFactory.QuotaManagers QuotaManagers
        {
            get { return IExecute<Kafka.Server.QuotaFactory.QuotaManagers>("quotaManagers"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/server/KafkaBroker.html#replicaManager()"/> 
        /// </summary>
        public Kafka.Server.ReplicaManager ReplicaManager
        {
            get { return IExecute<Kafka.Server.ReplicaManager>("replicaManager"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/server/KafkaBroker.html#socketServer()"/> 
        /// </summary>
        public Kafka.Network.SocketServer SocketServer
        {
            get { return IExecute<Kafka.Network.SocketServer>("socketServer"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/server/KafkaBroker.html#boundPort(org.apache.kafka.common.network.ListenerName)"/>
        /// </summary>
        /// <param name="listenerName"><see cref="Org.Apache.Kafka.Common.Network.ListenerName"/></param>
        /// <returns><see cref="int"/></returns>
        public int BoundPort(Org.Apache.Kafka.Common.Network.ListenerName listenerName)
        {
            return IExecute<int>("boundPort", listenerName);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/server/KafkaBroker.html#awaitShutdown()"/>
        /// </summary>
        public void AwaitShutdown()
        {
            IExecute("awaitShutdown");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/server/KafkaBroker.html#shutdown()"/>
        /// </summary>
        public void Shutdown()
        {
            IExecute("shutdown");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/server/KafkaBroker.html#startup()"/>
        /// </summary>
        public void Startup()
        {
            IExecute("startup");
        }

        #endregion

        #region Nested classes

        #endregion

        // TODO: complete the class
    }
    #endregion
}