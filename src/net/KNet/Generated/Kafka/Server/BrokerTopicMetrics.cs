/*
*  Copyright 2023 MASES s.r.l.
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
*
*  Refer to LICENSE for more information.
*/

/*
*  This file is generated by MASES.JNetReflector (ver. 1.5.5.0)
*  using kafka_2.13-3.4.0.jar as reference
*/

using MASES.JCOBridge.C2JBridge;

namespace Kafka.Server
{
    #region BrokerTopicMetrics
    public partial class BrokerTopicMetrics
    {
        #region Constructors

        #endregion

        #region Class/Interface conversion operators
        /// <summary>
        /// Converter from <see cref="Kafka.Server.BrokerTopicMetrics"/> to <see cref="Kafka.Metrics.KafkaMetricsGroup"/>
        /// </summary>
        public static implicit operator Kafka.Metrics.KafkaMetricsGroup(Kafka.Server.BrokerTopicMetrics t) => t.Cast<Kafka.Metrics.KafkaMetricsGroup>();

        #endregion

        #region Fields

        #endregion

        #region Static methods

        #endregion

        #region Instance methods
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/server/BrokerTopicMetrics.html#bytesInRate()"/> 
        /// </summary>
        public Com.Yammer.Metrics.Core.Meter BytesInRate
        {
            get { return IExecute<Com.Yammer.Metrics.Core.Meter>("bytesInRate"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/server/BrokerTopicMetrics.html#bytesOutRate()"/> 
        /// </summary>
        public Com.Yammer.Metrics.Core.Meter BytesOutRate
        {
            get { return IExecute<Com.Yammer.Metrics.Core.Meter>("bytesOutRate"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/server/BrokerTopicMetrics.html#bytesRejectedRate()"/> 
        /// </summary>
        public Com.Yammer.Metrics.Core.Meter BytesRejectedRate
        {
            get { return IExecute<Com.Yammer.Metrics.Core.Meter>("bytesRejectedRate"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/server/BrokerTopicMetrics.html#failedFetchRequestRate()"/> 
        /// </summary>
        public Com.Yammer.Metrics.Core.Meter FailedFetchRequestRate
        {
            get { return IExecute<Com.Yammer.Metrics.Core.Meter>("failedFetchRequestRate"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/server/BrokerTopicMetrics.html#failedProduceRequestRate()"/> 
        /// </summary>
        public Com.Yammer.Metrics.Core.Meter FailedProduceRequestRate
        {
            get { return IExecute<Com.Yammer.Metrics.Core.Meter>("failedProduceRequestRate"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/server/BrokerTopicMetrics.html#fetchMessageConversionsRate()"/> 
        /// </summary>
        public Com.Yammer.Metrics.Core.Meter FetchMessageConversionsRate
        {
            get { return IExecute<Com.Yammer.Metrics.Core.Meter>("fetchMessageConversionsRate"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/server/BrokerTopicMetrics.html#invalidMagicNumberRecordsPerSec()"/> 
        /// </summary>
        public Com.Yammer.Metrics.Core.Meter InvalidMagicNumberRecordsPerSec
        {
            get { return IExecute<Com.Yammer.Metrics.Core.Meter>("invalidMagicNumberRecordsPerSec"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/server/BrokerTopicMetrics.html#invalidMessageCrcRecordsPerSec()"/> 
        /// </summary>
        public Com.Yammer.Metrics.Core.Meter InvalidMessageCrcRecordsPerSec
        {
            get { return IExecute<Com.Yammer.Metrics.Core.Meter>("invalidMessageCrcRecordsPerSec"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/server/BrokerTopicMetrics.html#invalidOffsetOrSequenceRecordsPerSec()"/> 
        /// </summary>
        public Com.Yammer.Metrics.Core.Meter InvalidOffsetOrSequenceRecordsPerSec
        {
            get { return IExecute<Com.Yammer.Metrics.Core.Meter>("invalidOffsetOrSequenceRecordsPerSec"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/server/BrokerTopicMetrics.html#isDebugEnabled()"/> 
        /// </summary>
        public bool IsDebugEnabled
        {
            get { return IExecute<bool>("isDebugEnabled"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/server/BrokerTopicMetrics.html#isTraceEnabled()"/> 
        /// </summary>
        public bool IsTraceEnabled
        {
            get { return IExecute<bool>("isTraceEnabled"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/server/BrokerTopicMetrics.html#logger()"/> 
        /// </summary>
        public Com.Typesafe.Scalalogging.Logger Logger
        {
            get { return IExecute<Com.Typesafe.Scalalogging.Logger>("logger"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/server/BrokerTopicMetrics.html#loggerName()"/> 
        /// </summary>
        public string LoggerName
        {
            get { return IExecute<string>("loggerName"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/server/BrokerTopicMetrics.html#logIdent()"/> 
        /// </summary>
        public string LogIdent
        {
            get { return IExecute<string>("logIdent"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/server/BrokerTopicMetrics.html#messagesInRate()"/> 
        /// </summary>
        public Com.Yammer.Metrics.Core.Meter MessagesInRate
        {
            get { return IExecute<Com.Yammer.Metrics.Core.Meter>("messagesInRate"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/server/BrokerTopicMetrics.html#noKeyCompactedTopicRecordsPerSec()"/> 
        /// </summary>
        public Com.Yammer.Metrics.Core.Meter NoKeyCompactedTopicRecordsPerSec
        {
            get { return IExecute<Com.Yammer.Metrics.Core.Meter>("noKeyCompactedTopicRecordsPerSec"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/server/BrokerTopicMetrics.html#produceMessageConversionsRate()"/> 
        /// </summary>
        public Com.Yammer.Metrics.Core.Meter ProduceMessageConversionsRate
        {
            get { return IExecute<Com.Yammer.Metrics.Core.Meter>("produceMessageConversionsRate"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/server/BrokerTopicMetrics.html#totalFetchRequestRate()"/> 
        /// </summary>
        public Com.Yammer.Metrics.Core.Meter TotalFetchRequestRate
        {
            get { return IExecute<Com.Yammer.Metrics.Core.Meter>("totalFetchRequestRate"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/server/BrokerTopicMetrics.html#totalProduceRequestRate()"/> 
        /// </summary>
        public Com.Yammer.Metrics.Core.Meter TotalProduceRequestRate
        {
            get { return IExecute<Com.Yammer.Metrics.Core.Meter>("totalProduceRequestRate"); }
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/server/BrokerTopicMetrics.html#newMeter(com.yammer.metrics.core.MetricName,java.lang.String,java.util.concurrent.TimeUnit)"/>
        /// </summary>
        /// <param name="metricName"><see cref="Com.Yammer.Metrics.Core.MetricName"/></param>
        /// <param name="eventType"><see cref="string"/></param>
        /// <param name="timeUnit"><see cref="Java.Util.Concurrent.TimeUnit"/></param>
        /// <returns><see cref="Com.Yammer.Metrics.Core.Meter"/></returns>
        public Com.Yammer.Metrics.Core.Meter NewMeter(Com.Yammer.Metrics.Core.MetricName metricName, string eventType, Java.Util.Concurrent.TimeUnit timeUnit)
        {
            return IExecute<Com.Yammer.Metrics.Core.Meter>("newMeter", metricName, eventType, timeUnit);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/server/BrokerTopicMetrics.html#msgWithLogIdent(java.lang.String)"/>
        /// </summary>
        /// <param name="msg"><see cref="string"/></param>
        /// <returns><see cref="string"/></returns>
        public string MsgWithLogIdent(string msg)
        {
            return IExecute<string>("msgWithLogIdent", msg);
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/server/BrokerTopicMetrics.html#MeterWrapper()"/>
        /// </summary>

        /// <returns><see cref="Kafka.Server.BrokerTopicMetrics.MeterWrapper."/></returns>
        public Kafka.Server.BrokerTopicMetrics.MeterWrapper. MeterWrapperMethod()
        {
            return IExecute<Kafka.Server.BrokerTopicMetrics.MeterWrapper.>("MeterWrapper");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/server/BrokerTopicMetrics.html#close()"/>
        /// </summary>
        public void Close()
        {
            IExecute("close");
        }
        /// <summary>
        /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/server/BrokerTopicMetrics.html#closeMetric(java.lang.String)"/>
        /// </summary>
        /// <param name="metricType"><see cref="string"/></param>
        public void CloseMetric(string metricType)
        {
            IExecute("closeMetric", metricType);
        }

        #endregion

        #region Nested classes
        #region MeterWrapper
        public partial class MeterWrapper
        {
            #region Constructors
            /// <summary>
            /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/server/BrokerTopicMetrics.MeterWrapper.html#%3Cinit%3E(kafka.server.BrokerTopicMetrics,java.lang.String,java.lang.String)"/>
            /// </summary>
            /// <param name="$outer"><see cref="Kafka.Server.BrokerTopicMetrics"/></param>
            /// <param name="metricType"><see cref="string"/></param>
            /// <param name="eventType"><see cref="string"/></param>
            public MeterWrapper(Kafka.Server.BrokerTopicMetrics _outer, string metricType, string eventType)
                : base(_outer, metricType, eventType)
            {
            }

            #endregion

            #region Class/Interface conversion operators
            /// <summary>
            /// Converter from <see cref="Kafka.Server.BrokerTopicMetrics.MeterWrapper"/> to <see cref="Java.Io.Serializable"/>
            /// </summary>
            public static implicit operator Java.Io.Serializable(Kafka.Server.BrokerTopicMetrics.MeterWrapper t) => t.Cast<Java.Io.Serializable>();

            #endregion

            #region Fields
            /// <summary>
            /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/server/BrokerTopicMetrics.MeterWrapper.html#$outer"/>
            /// </summary>
            public Kafka.Server.BrokerTopicMetrics $outer { get { return IGetField<Kafka.Server.BrokerTopicMetrics>("$outer"); } }

            #endregion

            #region Static methods

            #endregion

            #region Instance methods
            /// <summary>
            /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/server/BrokerTopicMetrics.MeterWrapper.html#eventType()"/> 
            /// </summary>
            public string EventType
            {
                get { return IExecute<string>("eventType"); }
            }
            /// <summary>
            /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/server/BrokerTopicMetrics.MeterWrapper.html#meter()"/> 
            /// </summary>
            public Com.Yammer.Metrics.Core.Meter Meter
            {
                get { return IExecute<Com.Yammer.Metrics.Core.Meter>("meter"); }
            }
            /// <summary>
            /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/server/BrokerTopicMetrics.MeterWrapper.html#metricType()"/> 
            /// </summary>
            public string MetricType
            {
                get { return IExecute<string>("metricType"); }
            }
            /// <summary>
            /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/server/BrokerTopicMetrics.MeterWrapper.html#productArity()"/> 
            /// </summary>
            public int ProductArity
            {
                get { return IExecute<int>("productArity"); }
            }
            /// <summary>
            /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/server/BrokerTopicMetrics.MeterWrapper.html#productPrefix()"/> 
            /// </summary>
            public string ProductPrefix
            {
                get { return IExecute<string>("productPrefix"); }
            }
            /// <summary>
            /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/server/BrokerTopicMetrics.MeterWrapper.html#canEqual(java.lang.Object)"/>
            /// </summary>
            /// <param name="x$1"><see cref="object"/></param>
            /// <returns><see cref="bool"/></returns>
            public bool CanEqual(object x_1)
            {
                return IExecute<bool>("canEqual", x_1);
            }
            /// <summary>
            /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/server/BrokerTopicMetrics.MeterWrapper.html#productElement(int)"/>
            /// </summary>
            /// <param name="x$1"><see cref="int"/></param>
            /// <returns><see cref="object"/></returns>
            public object ProductElement(int x_1)
            {
                return IExecute("productElement", x_1);
            }
            /// <summary>
            /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/server/BrokerTopicMetrics.MeterWrapper.html#productElementName(int)"/>
            /// </summary>
            /// <param name="x$1"><see cref="int"/></param>
            /// <returns><see cref="string"/></returns>
            public string ProductElementName(int x_1)
            {
                return IExecute<string>("productElementName", x_1);
            }
            /// <summary>
            /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/server/BrokerTopicMetrics.MeterWrapper.html#copy(java.lang.String,java.lang.String)"/>
            /// </summary>
            /// <param name="metricType"><see cref="string"/></param>
            /// <param name="eventType"><see cref="string"/></param>
            /// <returns><see cref="Kafka.Server.BrokerTopicMetrics.MeterWrapper"/></returns>
            public Kafka.Server.BrokerTopicMetrics.MeterWrapper Copy(string metricType, string eventType)
            {
                return IExecute<Kafka.Server.BrokerTopicMetrics.MeterWrapper>("copy", metricType, eventType);
            }
            /// <summary>
            /// <see href="https://www.javadoc.io/static/org.apache.kafka/kafka_2.13/3.4.0/kafka/server/BrokerTopicMetrics.MeterWrapper.html#close()"/>
            /// </summary>
            public void Close()
            {
                IExecute("close");
            }

            #endregion

            #region Nested classes

            #endregion

            // TODO: complete the class
        }
        #endregion

    
        #endregion

        // TODO: complete the class
    }
    #endregion
}