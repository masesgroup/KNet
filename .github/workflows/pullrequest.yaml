# This is a basic workflow to help you get started with Actions

name: CI_PULLREQUEST

# Controls when the action will run. Triggers the workflow on pull request
# events but only for the master branch
on:
  pull_request:
    branches: [ master ]

jobs:
  # This workflow contains a single job called "build_release"
  build_pullrequest:
    # The type of runner that the job will run on
    runs-on: windows-2022
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Runs a set of commands using the runners shell
      # Support longpaths
      - name: Support long paths
        run: git config --system core.longpaths true
      
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it                                                                                  
      - uses: actions/checkout@v2
        with:
          submodules: 'true'

      - name: Pre compile
        run: dotnet build --no-incremental --configuration Release /p:Platform="Any CPU" src\net\KafkaBridge.sln

      - name: Set up Apache Maven Central
        uses: actions/setup-java@v1
        with: # running setup-java again overwrites the settings.xml
          java-version: 11
          server-id: ossrh # Value of the distributionManagement/repository/id field of the pom.xml
          server-username: MAVEN_USERNAME # env variable for username in deploy
          server-password: MAVEN_CENTRAL_TOKEN # env variable for token in deploy
          gpg-private-key: ${{ secrets.MAVEN_GPG_PRIVATE_KEY }} # Value of the GPG private key to import
          gpg-passphrase: MAVEN_GPG_PASSPHRASE # env variable for GPG private key passphrase

      - name: Install local file to be used within Javadoc plugin of generated POM
        run: mvn install:install-file -Dfile=./bin/net5.0/JCOBridge.jar -DgroupId=JCOBridge -DartifactId=JCOBridge -Dversion=2.4.3 -Dpackaging=jar -DgeneratePom=true

      - name: Create Jars
        run: mvn --file ./src/java/kafkabridge/pom.xml --no-transfer-progress --batch-mode -Dgpg.passphrase=${{ secrets.MAVEN_GPG_PASSPHRASE }} package
        env:
          MAVEN_USERNAME: ${{ secrets.MAVEN_USERNAME }}
          MAVEN_CENTRAL_TOKEN: ${{ secrets.MAVEN_CENTRAL_TOKEN }}
          MAVEN_GPG_PASSPHRASE: ${{ secrets.MAVEN_GPG_PASSPHRASE }}

      - name: Recompile to create nuget packages
        run: dotnet build --no-incremental --configuration Release /p:Platform="Any CPU" src\net\KafkaBridge.sln

      - name: Clear documentation folder 
        run: Remove-Item .\docs\* -Recurse -Force -Exclude _config.yml

      - name: Build documentation
        run: |
          choco install docfx
          cd src\Documentation
          docfx
